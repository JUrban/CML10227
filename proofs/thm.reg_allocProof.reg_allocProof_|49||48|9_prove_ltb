Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.reg_allocProof
% (26436)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 158
% Passive clauses: 2561
% Generated clauses: 21736
% Final active clauses: 135
% Final passive clauses: 2077
% Input formulas: 31
% Initial clauses: 85
% 
% Duplicate literals: 893
% Trivial inequalities: 349
% Fw subsumption resolutions: 3402
% Fw demodulations: 3395
% Bw demodulations: 21
% 
% Simple tautologies: 465
% Equational tautologies: 43
% Forward subsumptions: 8884
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 954
% Factoring: 7
% Forward superposition: 6652
% Backward superposition: 5571
% Self superposition: 158
% Equality factoring: 105
% Equality resolution: 30
% 
% Split clauses: 432
% Split components: 887
% SAT solver clauses: 1066
% SAT solver unit clauses: 26
% SAT solver binary clauses: 252
% 
% Sat splits: 432
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1060
% TWLsolver calls for satisfiability: 218
% 
% Memory used [KB]: 9338
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.reg_allocProof
% (26469)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 151
% Passive clauses: 747
% Generated clauses: 16645
% Final active clauses: 119
% Final passive clauses: 465
% Input formulas: 31
% Initial clauses: 85
% 
% Duplicate literals: 507
% Trivial inequalities: 203
% Fw subsumption resolutions: 2491
% Fw demodulations: 2414
% Bw demodulations: 154
% Condensations: 1371
% Global subsumptions: 13
% 
% Simple tautologies: 292
% Equational tautologies: 36
% Forward subsumptions: 7364
% Bw demodulations to eq. taut.: 5
% 
% Binary resolution: 418
% Factoring: 5
% Forward superposition: 4123
% Backward superposition: 3820
% Self superposition: 153
% Equality factoring: 87
% Equality resolution: 36
% 
% Split clauses: 122
% Split components: 248
% SAT solver clauses: 1291
% SAT solver unit clauses: 100
% SAT solver binary clauses: 40
% SAT solver learnt clauses: 27
% SAT solver learnt literals: 4
% 
% Sat splits: 122
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 1238
% TWLsolver calls for satisfiability: 520
% 
% Memory used [KB]: 10618
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.reg_allocProof
% (26505)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 607
% Passive clauses: 3569
% Generated clauses: 176224
% Final active clauses: 112
% Final passive clauses: 322
% Input formulas: 31
% Initial clauses: 85
% 
% Duplicate literals: 7369
% Trivial inequalities: 949
% Fw subsumption resolutions: 17222
% Fw demodulations: 23981
% Bw demodulations: 2392
% Condensations: 18955
% Global subsumptions: 2121
% 
% Simple tautologies: 1327
% Equational tautologies: 2910
% Forward subsumptions: 94116
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 166
% 
% Unit resulting resolution: 11599
% Factoring: 11
% Forward superposition: 41551
% Backward superposition: 30619
% Self superposition: 834
% Equality factoring: 419
% Equality resolution: 96
% 
% Split clauses: 293
% Split components: 594
% SAT solver clauses: 8385
% SAT solver unit clauses: 77
% SAT solver binary clauses: 562
% 
% Sat splits: 293
% Sat splitting refutations: 2107
% 
% Memory used [KB]: 83026
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.reg_allocProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.reg_allocProof
% SZS output start Proof for thm.reg_allocProof
fof(f17083,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f220,f221,f222,f223,f224,f226,f254,f227,f239,f252,f264,f306,f265,f308,f266,f267,f268,f269,f270,f271,f272,f255,f316,f273,f275,f289,f315,f357,f351,f394,f395,f396,f433,f432,f437,f439,f443,f444,f445,f481,f480,f484,f485,f531,f523,f522,f563,f564,f565,f566,f567,f568,f569,f570,f1052,f1053,f1173,f1175,f1177,f1179,f1180,f310,f1181,f1439,f1441,f1442,f1443,f1446,f1458,f1481,f1490,f1492,f1493,f1495,f1497,f1511,f1549,f1551,f1552,f1553,f1556,f1568,f1599,f1601,f1602,f1603,f1606,f1618,f1645,f1647,f1648,f1650,f1652,f1666,f1698,f1700,f1701,f1702,f1705,f1717,f1742,f1744,f1745,f1747,f1749,f1763,f1795,f1797,f1798,f1799,f1802,f1814,f1840,f1842,f1843,f1845,f1847,f1861,f1934,f1893,f1895,f1896,f1897,f1900,f1912,f1943,f1945,f1946,f1948,f1950,f1964,f1885,f2207,f2209,f2210,f2212,f2214,f2228,f1531,f3284,f3286,f3287,f3289,f3291,f3305,f3326,f3340,f3342,f3343,f3344,f3347,f3359,f3377,f3589,f3591,f3592,f3593,f3596,f3608,f3629,f3635,f3637,f3638,f3639,f3642,f3654,f3672,f3679,f3681,f3682,f3683,f3686,f3698,f3713,f3743,f3745,f3746,f3748,f3750,f3764,f3784,f3994,f3996,f3997,f3999,f4001,f4015,f4036,f4228,f4230,f4231,f4233,f4235,f4249,f4271,f4500,f4502,f4503,f4505,f4507,f4521,f4541,f4568,f4570,f4571,f4572,f4575,f4587,f4619,f4621,f4622,f4623,f4626,f4638,f4685,f4687,f4688,f4690,f4692,f4706,f4725,f4799,f4802,f4806,f4807,f4824,f4826,f4827,f4828,f4831,f4843,f4670,f5133,f5135,f5136,f5138,f5140,f5154,f5171,f5186,f5188,f5189,f5191,f5193,f5207,f5246,f5248,f5249,f5251,f5253,f5267,f1686,f5293,f5589,f5590,f5591,f5593,f5892,f5893,f5894,f5895,f5897,f5912,f5914,f5915,f5916,f5919,f5931,f5958,f5960,f5961,f5963,f5965,f5979,f6017,f6019,f6020,f6022,f6024,f6038,f6064,f6311,f6312,f6313,f6314,f6315,f6317,f6330,f6332,f6333,f6335,f6337,f6351,f6371,f6387,f6388,f6395,f6397,f6398,f6399,f6402,f6414,f6444,f6446,f6447,f6448,f6451,f6463,f1587,f6544,f6543,f6549,f6552,f6548,f6564,f6566,f6603,f6604,f6606,f7056,f7055,f7108,f7109,f7110,f7111,f7112,f7113,f7114,f7115,f7116,f7156,f7155,f7208,f7209,f7210,f7211,f7212,f7213,f7214,f7215,f7216,f7258,f7260,f7261,f7264,f7550,f7552,f7553,f7554,f7557,f7569,f7588,f7642,f7644,f7645,f7647,f7649,f7663,f7700,f7702,f7703,f7704,f7707,f7719,f7738,f5651,f5650,f5656,f4794,f4793,f4810,f4809,f4808,f304,f7747,f7749,f7750,f7752,f7754,f7768,f1783,f8013,f8014,f8015,f8017,f8134,f8133,f8137,f8139,f4798,f8142,f4812,f8395,f8397,f8398,f8399,f8402,f8414,f4606,f8481,f7255,f7252,f7251,f7263,f7262,f8516,f8518,f8519,f8520,f8523,f8535,f1637,f8596,f8595,f8601,f8604,f8600,f8616,f8618,f8861,f8860,f8864,f8867,f4811,f8869,f8870,f8871,f8872,f303,f8873,f4797,f8875,f8877,f8878,f8879,f8882,f8894,f8967,f9267,f9269,f9270,f9272,f9274,f9288,f9360,f9424,f9423,f9429,f9432,f9428,f9440,f9443,f9444,f9445,f9442,f9446,f9448,f9524,f9526,f9527,f9528,f9531,f9543,f9568,f9767,f9769,f9770,f9771,f9774,f9786,f9808,f9824,f9826,f9827,f9829,f9831,f9845,f5227,f9885,f9887,f9888,f9889,f9892,f9904,f9924,f10166,f10168,f10169,f10171,f10173,f10187,f5999,f10228,f10230,f10231,f10232,f10235,f10247,f10268,f10285,f10287,f10288,f10289,f10292,f10304,f10325,f10344,f10346,f10347,f10349,f10351,f10365,f10393,f10416,f10418,f10419,f10421,f10423,f10437,f10465,f10488,f10490,f10491,f10493,f10495,f10509,f10530,f10546,f10548,f10549,f10551,f10553,f10567,f10588,f10625,f10627,f10628,f10630,f10632,f10646,f10674,f10697,f10699,f10700,f10702,f10704,f10718,f10746,f10797,f10796,f10802,f10805,f6553,f10801,f10807,f10810,f10811,f10812,f10809,f10813,f10815,f10820,f10822,f10824,f10825,f10826,f10829,f10841,f10869,f10906,f10868,f10908,f10910,f10911,f10912,f10915,f10927,f10953,f11213,f11234,f11237,f11236,f11241,f11243,f11244,f11245,f11248,f11260,f11278,f11480,f11482,f11483,f11485,f11487,f11501,f11517,f11577,f11579,f11580,f11582,f11584,f11598,f11624,f11636,f11638,f11639,f11641,f11643,f11657,f11673,f11712,f11714,f11715,f11717,f11719,f11733,f11765,f11798,f11800,f11801,f11803,f11805,f11819,f11835,f11886,f11888,f11889,f11891,f11893,f11907,f11930,f11982,f11981,f11987,f4800,f11989,f11986,f4803,f11992,f11995,f11996,f11997,f438,f11994,f11998,f12000,f12006,f12009,f12011,f12012,f12013,f12016,f12028,f12056,f12070,f12072,f12073,f12074,f12077,f12089,f12225,f12091,f12093,f12094,f12095,f12098,f12110,f12227,f12284,f12287,f12289,f12290,f12291,f12294,f12306,f12332,f12373,f12376,f12378,f12379,f12380,f12383,f12395,f12423,f12500,f12503,f12505,f12506,f12507,f12510,f12522,f12548,f12555,f12557,f12558,f12560,f12562,f12576,f12657,f12734,f12736,f12737,f12738,f12741,f12753,f12782,f12799,f12801,f12802,f12803,f12806,f12818,f12847,f12857,f10866,f12860,f12862,f12863,f12864,f12867,f12879,f12908,f12998,f10952,f13001,f13003,f13004,f13005,f13008,f13020,f13047,f13251,f13253,f13271,f13273,f13277,f13278,f13279,f13281,f13284,f13285,f13287,f13288,f13291,f13292,f13301,f13302,f13305,f436,f13306,f446,f13311,f13252,f13312,f13582,f13584,f13585,f13587,f13589,f13603,f13631,f13655,f13657,f13658,f13660,f13662,f13676,f13693,f13711,f13713,f13714,f13716,f13718,f13732,f13764,f13789,f13791,f13792,f13794,f13796,f13810,f13274,f13844,f13846,f13847,f13849,f13851,f13865,f13903,f9194,f9040,f314,f312,f13908,f13910,f13911,f13912,f13915,f13927,f1935,f13961,f13963,f13964,f13966,f13968,f13982,f14008,f14489,f14488,f14565,f14566,f14567,f14568,f14569,f14570,f14571,f14572,f14573,f14574,f14576,f14590,f14592,f14593,f14595,f14597,f14611,f14636,f14659,f14661,f14662,f14663,f14666,f14678,f14708,f14750,f14752,f14753,f14755,f14757,f14771,f14797,f14815,f14817,f14818,f14819,f14822,f14834,f14857,f14889,f12906,f14890,f12421,f14891,f14940,f12054,f14895,f14897,f14898,f14900,f14902,f14916,f14943,f15176,f15178,f15179,f15181,f15183,f15197,f15243,f15246,f15245,f15466,f15468,f15469,f15471,f15473,f15487,f15219,f15542,f15544,f15545,f15546,f15549,f15561,f15583,f15592,f15594,f15595,f15596,f15599,f15611,f15643,f15645,f15646,f15647,f15650,f15662,f15690,f15692,f15693,f15695,f15697,f15711,f15742,f15744,f15745,f15746,f15749,f15761,f15899,f15986,f15988,f15989,f15990,f15993,f16005,f15632,f16275,f16277,f16278,f16280,f16282,f16296,f16340,f16889,f16891,f16892,f16894,f16896,f16910,f16947,f16969,f16971,f16972,f16974,f16976,f16990,f15731,f17021,f17023,f17024,f253,f17026,f257,f17028,f256,f17042,f13883,f258,f17079])).
fof(f17079,plain,(
  $false | ($spl14 | $spl21 | $spl25 | $spl38)),
  inference(subsumption_resolution,[],[f17078,f214])).
fof(f214,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.TRUTH')).
fof(f17078,plain,(
  ~p(s(bool,'T_0')) | ($spl14 | $spl21 | $spl25 | $spl38)),
  inference(forward_demodulation,[],[f17077,f8528])).
fof(f8528,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl14),
  inference(resolution,[],[f4660,f152])).
fof(f152,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.EQ_CLAUSES|split|0')).
fof(f4660,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl14),
  inference(forward_demodulation,[],[f4659,f131])).
fof(f131,plain,(
  ( ! [X3] : (s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) = s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) & ! [X3] : s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) = s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) & ~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f70])).
fof(f70,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) & ! [X3] : s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))))) = s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X2))))) & ~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))),
  inference(flattening,[],[f69])).
fof(f69,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) & ! [X3] : s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))))) = s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X2)))))) & ~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))),
  inference(ennf_transformation,[],[f33])).
fof(f33,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) & ! [X3] : s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))))) = s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X2)))))) => p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X6),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X7)))) & ! [X9] : s(bool,'const.bool.IN_2'(s('type.num.num',X9),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X6))))) = s(bool,'const.bool.IN_2'(s('type.num.num',X9),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X8)))))) => p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X8),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X6),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X7)))) & ! [X9] : s(bool,'const.bool.IN_2'(s('type.num.num',X9),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X6))))) = s(bool,'const.bool.IN_2'(s('type.num.num',X9),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X8)))))) => p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X8),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X7)))))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb')).
fof(f4659,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | $spl14),
  inference(subsumption_resolution,[],[f4658,f207])).
fof(f207,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : (~p(s(bool,'F_0')) | p(s(bool,X0)))),
  inference(ennf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0] : (p(s(bool,'F_0')) => p(s(bool,X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X12] : (p(s(bool,'F_0')) => p(s(bool,X12)))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.FALSITY')).
fof(f4658,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | $spl14),
  inference(forward_demodulation,[],[f4613,f278])).
fof(f278,plain,(
  s(bool,'F_0') = s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))),
  inference(resolution,[],[f132,f148])).
fof(f148,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.EQ_CLAUSES|split|2')).
fof(f132,plain,(
  ~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))),
  inference(cnf_transformation,[],[f87])).
fof(f4613,plain,(
  p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | $spl14),
  inference(resolution,[],[f303,f159])).
fof(f159,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X1,X0)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) & ! [X4,X5] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | s('type.num.num',X4) = s('type.num.num',X5) | (p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X4),s('type.num.num',X5),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) & p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X5),s('type.num.num',X4),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))))) & (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) | (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X1,X0)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) & p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(X1,X0)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) & s('type.num.num',sK3(X1,X0)) != s('type.num.num',sK4(X1,X0)) & (~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(X1,X0)),s('type.num.num',sK4(X1,X0)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(X1,X0)),s('type.num.num',sK3(X1,X0)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) | p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4])],[f97])).
fof(f97,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) & ! [X4,X5] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | s('type.num.num',X4) = s('type.num.num',X5) | (p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X4),s('type.num.num',X5),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) & p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X5),s('type.num.num',X4),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))))) & (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) | ? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) & p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) & s('type.num.num',X2) != s('type.num.num',X3) & (~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X2),s('type.num.num',X3),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X3),s('type.num.num',X2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) | p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))))),
  inference(rectify,[],[f96])).
fof(f96,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) & ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | s('type.num.num',X2) = s('type.num.num',X3) | (p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X2),s('type.num.num',X3),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) & p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X3),s('type.num.num',X2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))))) & (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) | ? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) & p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) & s('type.num.num',X2) != s('type.num.num',X3) & (~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X2),s('type.num.num',X3),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X3),s('type.num.num',X2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) | p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))))),
  inference(flattening,[],[f95])).
fof(f95,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) & ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | s('type.num.num',X2) = s('type.num.num',X3) | (p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X2),s('type.num.num',X3),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) & p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X3),s('type.num.num',X2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))))) & ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) | ? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) & p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) & s('type.num.num',X2) != s('type.num.num',X3) & (~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X2),s('type.num.num',X3),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X3),s('type.num.num',X2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))))) | p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))))),
  inference(nnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) <=> (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) & ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | s('type.num.num',X2) = s('type.num.num',X3) | (p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X2),s('type.num.num',X3),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) & p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X3),s('type.num.num',X2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))))))),
  inference(flattening,[],[f75])).
fof(f75,plain,(
  ! [X0,X1] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) <=> (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) & ! [X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | s('type.num.num',X2) = s('type.num.num',X3)) | (p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X2),s('type.num.num',X3),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) & p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X3),s('type.num.num',X2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))))))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) <=> (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) & ! [X2,X3] : ((p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) & p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) & s('type.num.num',X2) != s('type.num.num',X3)) => (p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X2),s('type.num.num',X3),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) & p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X3),s('type.num.num',X2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))))))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) <=> (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) & ! [X2,X3] : ((p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) & p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) & ~s('type.num.num',X2) = s('type.num.num',X3)) => (p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X2),s('type.num.num',X3),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) & p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X3),s('type.num.num',X2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X6,X19] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X6),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X19)))) <=> (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X6))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X19)))))) & ! [X9,X14] : ((p(s(bool,'const.bool.IN_2'(s('type.num.num',X9),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X6)))))) & p(s(bool,'const.bool.IN_2'(s('type.num.num',X14),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X6)))))) & ~s('type.num.num',X9) = s('type.num.num',X14)) => (p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X9),s('type.num.num',X14),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X19)))) & p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X14),s('type.num.num',X9),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X19))))))))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.reg_allocProof.sp_g_is_clique_def')).
fof(f17077,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ($spl21 | $spl25 | $spl38)),
  inference(subsumption_resolution,[],[f17076,f184])).
fof(f184,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f112])).
fof(f112,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0] : ((p(s(bool,'F_0')) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X12] : ((p(s(bool,'F_0')) => p(s(bool,X12))) <=> p(s(bool,'T_0')))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.IMP_CLAUSES|split|2')).
fof(f17076,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ($spl21 | $spl25 | $spl38)),
  inference(forward_demodulation,[],[f17075,f6456])).
fof(f6456,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl38),
  inference(resolution,[],[f1179,f152])).
fof(f17075,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ($spl21 | $spl25)),
  inference(subsumption_resolution,[],[f17046,f181])).
fof(f181,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X0))))),
  inference(flattening,[],[f110])).
fof(f110,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,X0)) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X12] : ((p(s(bool,X12)) => p(s(bool,X12))) <=> p(s(bool,'T_0')))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.IMP_CLAUSES|split|3')).
fof(f17046,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ($spl21 | $spl25)),
  inference(superposition,[],[f14006,f232])).
fof(f232,plain,(
  s(bool,'T_0') = s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))),
  inference(resolution,[],[f130,f152])).
fof(f130,plain,(
  p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))),
  inference(cnf_transformation,[],[f87])).
fof(f14006,plain,(
  ( ! [X0] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))))))) ) | ($spl21 | $spl25)),
  inference(subsumption_resolution,[],[f13959,f310])).
fof(f13959,plain,(
  ( ! [X0] : (s('type.num.num',sK3(sK1,sK2)) = s('type.num.num',sK4(sK1,sK2)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) ) | $spl25),
  inference(resolution,[],[f314,f157])).
fof(f157,plain,(
  ( ! [X4,X0,X5,X1] : (p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X4),s('type.num.num',X5),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | s('type.num.num',X4) = s('type.num.num',X5) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f258,plain,(
  ( ! [X16] : (p(s(bool,X16))) ) | $spl12),
  inference(cnf_transformation,[],[f258_D])).
fof(f258_D,plain,(
  ( ! [X16] : (p(s(bool,X16))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f13883,plain,(
  ( ! [X6,X4] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X4)))))) | ~p(s(bool,X6)) | s(bool,X6) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X4),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X4))))))) ) | $spl220),
  inference(cnf_transformation,[],[f13883_D])).
fof(f13883_D,plain,(
  ( ! [X6,X4] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X4)))))) | ~p(s(bool,X6)) | s(bool,X6) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X4),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X4))))))) ) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f17042,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X51)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X51)))))) | p(s(bool,X52)) | ~p(s(bool,X53)) | s(bool,X53) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X51),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | ($spl21 | $spl25)),
  inference(resolution,[],[f14006,f215])).
fof(f215,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f137])).
fof(f137,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f88])).
fof(f88,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X9,X16,X14,X17] : ((s(bool,X9) = s(bool,X16) & (p(s(bool,X16)) => s(bool,X14) = s(bool,X17))) => ((p(s(bool,X9)) => p(s(bool,X14))) <=> (p(s(bool,X16)) => p(s(bool,X17)))))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.IMP_CONG')).
fof(f256,plain,(
  ( ! [X12,X11] : (s(bool,X11) != s(bool,X12) | ~p(s(bool,X11))) ) | $spl8),
  inference(cnf_transformation,[],[f256_D])).
fof(f256_D,plain,(
  ( ! [X12,X11] : (s(bool,X11) != s(bool,X12) | ~p(s(bool,X11))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f17028,plain,(
  ( ! [X35,X33,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X32)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X32)))))) | ~p(s(bool,X33)) | ~p(s(bool,X34)) | s(bool,X34) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X32),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X33) != s(bool,X35)) ) | ($spl21 | $spl25)),
  inference(resolution,[],[f14006,f140])).
fof(f140,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f89])).
fof(f257,plain,(
  ( ! [X17] : (~p(s(bool,X17))) ) | $spl10),
  inference(cnf_transformation,[],[f257_D])).
fof(f257_D,plain,(
  ( ! [X17] : (~p(s(bool,X17))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f17026,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X24)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X24)))))) | p(s(bool,X25)) | ~p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X24),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | ($spl21 | $spl25)),
  inference(resolution,[],[f14006,f139])).
fof(f139,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f89])).
fof(f253,plain,(
  ( ! [X6,X4] : (s(bool,X4) != s(bool,X6) | p(s(bool,X4))) ) | $spl2),
  inference(cnf_transformation,[],[f253_D])).
fof(f253_D,plain,(
  ( ! [X6,X4] : (s(bool,X4) != s(bool,X6) | p(s(bool,X4))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f17024,plain,(
  ( ! [X19,X17,X18,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X16)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X16)))))) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X16),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | ($spl21 | $spl25)),
  inference(resolution,[],[f14006,f138])).
fof(f138,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f89])).
fof(f17023,plain,(
  ( ! [X14,X12,X15,X13] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X12)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X12)))))) | ~p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X14) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X13) != s(bool,X15)) ) | ($spl21 | $spl25)),
  inference(resolution,[],[f14006,f136])).
fof(f136,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f89])).
fof(f17021,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X4)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X4)))))) | p(s(bool,X5)) | ~p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | s(bool,X6) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X4),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | ($spl21 | $spl25)),
  inference(resolution,[],[f14006,f134])).
fof(f134,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f89])).
fof(f15731,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl244),
  inference(cnf_transformation,[],[f15731_D])).
fof(f15731_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f16990,plain,(
  ( ! [X26,X27] : (p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X27) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl239),
  inference(resolution,[],[f15244,f215])).
fof(f15244,plain,(
  ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl239),
  inference(cnf_transformation,[],[f15244_D])).
fof(f15244_D,plain,(
  ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) <=> ~$spl239),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl239])])).
fof(f16976,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X21) != s(bool,X23)) ) | $spl239),
  inference(resolution,[],[f15244,f140])).
fof(f16974,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl239),
  inference(resolution,[],[f15244,f139])).
fof(f16972,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl239),
  inference(resolution,[],[f15244,f138])).
fof(f16971,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X6) != s(bool,X8)) ) | $spl239),
  inference(resolution,[],[f15244,f136])).
fof(f16969,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl239),
  inference(resolution,[],[f15244,f134])).
fof(f16947,plain,(
  ( ! [X6,X4] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X6)) | s(bool,X6) != s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl248),
  inference(cnf_transformation,[],[f16947_D])).
fof(f16947_D,plain,(
  ( ! [X6,X4] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X6)) | s(bool,X6) != s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f16910,plain,(
  ( ! [X52,X53,X51] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X51),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X52)) | ~p(s(bool,X53)) | s(bool,X53) != s(bool,'const.bool.IN_2'(s('type.num.num',X51),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl238),
  inference(resolution,[],[f15741,f215])).
fof(f15741,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl238),
  inference(resolution,[],[f15245,f163])).
fof(f163,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))))) & ((p(s(bool,'const.bool.IN_2'(s(X0,sK5(X2,X1,X0)),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,sK5(X2,X1,X0)),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5])],[f100])).
fof(f100,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) => p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) => p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X13] : ! [X18,X12] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X13,bool),X18),s(fun(X13,bool),X12)))) <=> ! [X9] : (p(s(bool,'const.bool.IN_2'(s(X13,X9),s(fun(X13,bool),X18)))) => p(s(bool,'const.bool.IN_2'(s(X13,X9),s(fun(X13,bool),X12))))))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.pred_set.SUBSET_DEF')).
fof(f16896,plain,(
  ( ! [X35,X33,X34,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X32),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X33)) | ~p(s(bool,X34)) | s(bool,X34) != s(bool,'const.bool.IN_2'(s('type.num.num',X32),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X33) != s(bool,X35)) ) | $spl238),
  inference(resolution,[],[f15741,f140])).
fof(f16894,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X24),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X25)) | ~p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.bool.IN_2'(s('type.num.num',X24),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl238),
  inference(resolution,[],[f15741,f139])).
fof(f16892,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X16),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',X16),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl238),
  inference(resolution,[],[f15741,f138])).
fof(f16891,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X14) != s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X13) != s(bool,X15)) ) | $spl238),
  inference(resolution,[],[f15741,f136])).
fof(f16889,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X5)) | ~p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | s(bool,X6) != s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl238),
  inference(resolution,[],[f15741,f134])).
fof(f16340,plain,(
  ( ! [X28,X26,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X25),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',X25),s(fun('type.num.num',bool),X26))) | ~p(s(bool,X28)) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X26),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) ) | $spl246),
  inference(cnf_transformation,[],[f16340_D])).
fof(f16340_D,plain,(
  ( ! [X28,X26,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X25),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',X25),s(fun('type.num.num',bool),X26))) | ~p(s(bool,X28)) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X26),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) ) <=> ~$spl246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl246])])).
fof(f16296,plain,(
  ( ! [X94,X95,X93,X96] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X93),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X94),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | p(s(bool,X95)) | ~p(s(bool,X96)) | s(bool,X96) != s(bool,'const.bool.IN_2'(s('type.num.num',X93),s(fun('type.num.num',bool),X94)))) )),
  inference(resolution,[],[f4004,f215])).
fof(f4004,plain,(
  ( ! [X52,X51] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X51),s(fun('type.num.num',bool),X52)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X51),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X52),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f655,f148])).
fof(f655,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X19),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),X19)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) )),
  inference(superposition,[],[f163,f131])).
fof(f16282,plain,(
  ( ! [X61,X64,X62,X60,X63] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X60),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X61),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | ~p(s(bool,X62)) | ~p(s(bool,X63)) | s(bool,X63) != s(bool,'const.bool.IN_2'(s('type.num.num',X60),s(fun('type.num.num',bool),X61))) | s(bool,X62) != s(bool,X64)) )),
  inference(resolution,[],[f4004,f140])).
fof(f16280,plain,(
  ( ! [X54,X52,X50,X53,X51] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X50),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X51),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | p(s(bool,X52)) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X53) != s(bool,'const.bool.IN_2'(s('type.num.num',X50),s(fun('type.num.num',bool),X51)))) )),
  inference(resolution,[],[f4004,f139])).
fof(f16278,plain,(
  ( ! [X43,X41,X44,X42,X40] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X40),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X41),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | p(s(bool,X42)) | ~p(s(bool,X43)) | s(bool,X42) != s(bool,X44) | s(bool,X43) != s(bool,'const.bool.IN_2'(s('type.num.num',X40),s(fun('type.num.num',bool),X41)))) )),
  inference(resolution,[],[f4004,f138])).
fof(f16277,plain,(
  ( ! [X39,X37,X35,X38,X36] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X35),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X36),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X38) != s(bool,'const.bool.IN_2'(s('type.num.num',X35),s(fun('type.num.num',bool),X36))) | s(bool,X37) != s(bool,X39)) )),
  inference(resolution,[],[f4004,f136])).
fof(f16275,plain,(
  ( ! [X28,X26,X29,X27,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X25),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X26),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X27) != s(bool,X29) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',X25),s(fun('type.num.num',bool),X26)))) )),
  inference(resolution,[],[f4004,f134])).
fof(f15632,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl242),
  inference(cnf_transformation,[],[f15632_D])).
fof(f15632_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl242),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl242])])).
fof(f16005,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | p(s(bool,X28)) | s(bool,X28) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl191),
  inference(resolution,[],[f15241,f215])).
fof(f15241,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl191),
  inference(trivial_inequality_removal,[],[f15235])).
fof(f15235,plain,(
  s(bool,'F_0') != s(bool,'F_0') | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl191),
  inference(superposition,[],[f12420,f150])).
fof(f150,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.EQ_CLAUSES|split|3')).
fof(f12420,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl191),
  inference(cnf_transformation,[],[f12420_D])).
fof(f12420_D,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) <=> ~$spl191),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl191])])).
fof(f15993,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X23) != s(bool,X24)) ) | $spl191),
  inference(resolution,[],[f15241,f140])).
fof(f15990,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl191),
  inference(resolution,[],[f15241,f139])).
fof(f15989,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl191),
  inference(resolution,[],[f15241,f138])).
fof(f15988,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X8) != s(bool,X9)) ) | $spl191),
  inference(resolution,[],[f15241,f136])).
fof(f15986,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl191),
  inference(resolution,[],[f15241,f134])).
fof(f15899,plain,(
  $false | ($spl190 | $spl238)),
  inference(subsumption_resolution,[],[f15787,f208])).
fof(f208,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb',aHL_FALSITY)).
fof(f15787,plain,(
  p(s(bool,'F_0')) | ($spl190 | $spl238)),
  inference(backward_demodulation,[],[f12421,f15245])).
fof(f15761,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | p(s(bool,X28)) | s(bool,X28) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl238),
  inference(resolution,[],[f15245,f215])).
fof(f15749,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X23) != s(bool,X24)) ) | $spl238),
  inference(resolution,[],[f15245,f140])).
fof(f15746,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl238),
  inference(resolution,[],[f15245,f139])).
fof(f15745,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl238),
  inference(resolution,[],[f15245,f138])).
fof(f15744,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X8) != s(bool,X9)) ) | $spl238),
  inference(resolution,[],[f15245,f136])).
fof(f15742,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl238),
  inference(resolution,[],[f15245,f134])).
fof(f15711,plain,(
  ( ! [X26,X27] : (p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X27) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl239),
  inference(resolution,[],[f15244,f215])).
fof(f15697,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X21) != s(bool,X23)) ) | $spl239),
  inference(resolution,[],[f15244,f140])).
fof(f15695,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl239),
  inference(resolution,[],[f15244,f139])).
fof(f15693,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl239),
  inference(resolution,[],[f15244,f138])).
fof(f15692,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X6) != s(bool,X8)) ) | $spl239),
  inference(resolution,[],[f15244,f136])).
fof(f15690,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl239),
  inference(resolution,[],[f15244,f134])).
fof(f15662,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | p(s(bool,X28)) | s(bool,X28) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl238),
  inference(resolution,[],[f15245,f215])).
fof(f15650,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X23) != s(bool,X24)) ) | $spl238),
  inference(resolution,[],[f15245,f140])).
fof(f15647,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl238),
  inference(resolution,[],[f15245,f139])).
fof(f15646,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl238),
  inference(resolution,[],[f15245,f138])).
fof(f15645,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X8) != s(bool,X9)) ) | $spl238),
  inference(resolution,[],[f15245,f136])).
fof(f15643,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl238),
  inference(resolution,[],[f15245,f134])).
fof(f15611,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | p(s(bool,X28)) | s(bool,X28) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl191),
  inference(resolution,[],[f15241,f215])).
fof(f15599,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X23) != s(bool,X24)) ) | $spl191),
  inference(resolution,[],[f15241,f140])).
fof(f15596,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl191),
  inference(resolution,[],[f15241,f139])).
fof(f15595,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl191),
  inference(resolution,[],[f15241,f138])).
fof(f15594,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X8) != s(bool,X9)) ) | $spl191),
  inference(resolution,[],[f15241,f136])).
fof(f15592,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl191),
  inference(resolution,[],[f15241,f134])).
fof(f15583,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl240),
  inference(cnf_transformation,[],[f15583_D])).
fof(f15583_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) <=> ~$spl240),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl240])])).
fof(f15561,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | p(s(bool,X28)) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl190),
  inference(resolution,[],[f15369,f215])).
fof(f15369,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl190),
  inference(subsumption_resolution,[],[f15264,f207])).
fof(f15264,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl190),
  inference(superposition,[],[f164,f12421])).
fof(f164,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK5(X2,X1,X0)),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f101])).
fof(f15549,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X23) != s(bool,X24)) ) | $spl190),
  inference(resolution,[],[f15369,f140])).
fof(f15546,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl190),
  inference(resolution,[],[f15369,f139])).
fof(f15545,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl190),
  inference(resolution,[],[f15369,f138])).
fof(f15544,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X8) != s(bool,X9)) ) | $spl190),
  inference(resolution,[],[f15369,f136])).
fof(f15542,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl190),
  inference(resolution,[],[f15369,f134])).
fof(f15219,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl236),
  inference(cnf_transformation,[],[f15219_D])).
fof(f15219_D,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl236),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl236])])).
fof(f15487,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl190),
  inference(resolution,[],[f15370,f215])).
fof(f15370,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl190),
  inference(subsumption_resolution,[],[f15265,f178])).
fof(f178,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | ~p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f108])).
fof(f108,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | (~p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(ennf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X12] : ((p(s(bool,X12)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X12)))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.IMP_CLAUSES|split|4')).
fof(f15265,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl190),
  inference(superposition,[],[f165,f12421])).
fof(f165,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,sK5(X2,X1,X0)),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f101])).
fof(f15473,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X22) != s(bool,X24)) ) | $spl190),
  inference(resolution,[],[f15370,f140])).
fof(f15471,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl190),
  inference(resolution,[],[f15370,f139])).
fof(f15469,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl190),
  inference(resolution,[],[f15370,f138])).
fof(f15468,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X7) != s(bool,X9)) ) | $spl190),
  inference(resolution,[],[f15370,f136])).
fof(f15466,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl190),
  inference(resolution,[],[f15370,f134])).
fof(f15245,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl238),
  inference(cnf_transformation,[],[f15245_D])).
fof(f15245_D,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) <=> ~$spl238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl238])])).
fof(f15246,plain,(
  ( ! [X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X1))) ) | $spl191),
  inference(subsumption_resolution,[],[f15231,f148])).
fof(f15231,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,X1) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X1))) ) | $spl191),
  inference(superposition,[],[f12420,f141])).
fof(f141,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f73])).
fof(f73,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X10,X11] : ((p(s(bool,X10)) => p(s(bool,X11))) => ((p(s(bool,X11)) => p(s(bool,X10))) => s(bool,X10) = s(bool,X11)))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.IMP_ANTISYM_AX')).
fof(f15243,plain,(
  ( ! [X0] : (p(s(bool,X0)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl191),
  inference(subsumption_resolution,[],[f15230,f148])).
fof(f15230,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | p(s(bool,X0)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl191),
  inference(superposition,[],[f12420,f141])).
fof(f15197,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl190),
  inference(resolution,[],[f15080,f215])).
fof(f15080,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl190),
  inference(subsumption_resolution,[],[f14975,f178])).
fof(f14975,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl190),
  inference(superposition,[],[f165,f12421])).
fof(f15183,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X22) != s(bool,X24)) ) | $spl190),
  inference(resolution,[],[f15080,f140])).
fof(f15181,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl190),
  inference(resolution,[],[f15080,f139])).
fof(f15179,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl190),
  inference(resolution,[],[f15080,f138])).
fof(f15178,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X7) != s(bool,X9)) ) | $spl190),
  inference(resolution,[],[f15080,f136])).
fof(f15176,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl190),
  inference(resolution,[],[f15080,f134])).
fof(f14943,plain,(
  ( ! [X24,X27,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X24),s(fun('type.num.num',bool),X25)))) | ~p(s(bool,X27)) | s(bool,X27) != s(bool,'const.bool.IN_2'(s('type.num.num',X24),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X25)))) ) | $spl234),
  inference(cnf_transformation,[],[f14943_D])).
fof(f14943_D,plain,(
  ( ! [X24,X27,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X24),s(fun('type.num.num',bool),X25)))) | ~p(s(bool,X27)) | s(bool,X27) != s(bool,'const.bool.IN_2'(s('type.num.num',X24),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X25)))) ) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f14916,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X92),s(fun('type.num.num',bool),X93)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X93))) | p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X95) != s(bool,'const.bool.IN_2'(s('type.num.num',X92),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f3753,f215])).
fof(f3753,plain,(
  ( ! [X54,X55] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X54),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X54),s(fun('type.num.num',bool),X55)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X55)))) )),
  inference(resolution,[],[f654,f148])).
fof(f654,plain,(
  ( ! [X17,X16] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X17)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X16),s(fun('type.num.num',bool),X17)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X16),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) )),
  inference(superposition,[],[f163,f131])).
fof(f14902,plain,(
  ( ! [X61,X59,X62,X60,X63] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X59),s(fun('type.num.num',bool),X60)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X60))) | ~p(s(bool,X61)) | ~p(s(bool,X62)) | s(bool,X62) != s(bool,'const.bool.IN_2'(s('type.num.num',X59),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X61) != s(bool,X63)) )),
  inference(resolution,[],[f3753,f140])).
fof(f14900,plain,(
  ( ! [X52,X50,X53,X51,X49] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X49),s(fun('type.num.num',bool),X50)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X50))) | p(s(bool,X51)) | ~p(s(bool,X52)) | ~p(s(bool,X53)) | s(bool,X52) != s(bool,'const.bool.IN_2'(s('type.num.num',X49),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f3753,f139])).
fof(f14898,plain,(
  ( ! [X39,X43,X41,X42,X40] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X39),s(fun('type.num.num',bool),X40)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X40))) | p(s(bool,X41)) | ~p(s(bool,X42)) | s(bool,X41) != s(bool,X43) | s(bool,X42) != s(bool,'const.bool.IN_2'(s('type.num.num',X39),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f3753,f138])).
fof(f14897,plain,(
  ( ! [X37,X35,X38,X36,X34] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X34),s(fun('type.num.num',bool),X35)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X35))) | ~p(s(bool,X36)) | ~p(s(bool,X37)) | s(bool,X37) != s(bool,'const.bool.IN_2'(s('type.num.num',X34),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X36) != s(bool,X38)) )),
  inference(resolution,[],[f3753,f136])).
fof(f14895,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X24),s(fun('type.num.num',bool),X25)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X25))) | p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,X28) | s(bool,X27) != s(bool,'const.bool.IN_2'(s('type.num.num',X24),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f3753,f134])).
fof(f12054,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl180),
  inference(cnf_transformation,[],[f12054_D])).
fof(f12054_D,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f14940,plain,(
  ( ! [X15] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X15)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X15)))) ) | $spl232),
  inference(cnf_transformation,[],[f14940_D])).
fof(f14940_D,plain,(
  ( ! [X15] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X15)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X15)))) ) <=> ~$spl232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl232])])).
fof(f14891,plain,(
  ( ! [X17] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X17)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X17))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl14),
  inference(resolution,[],[f3753,f10426])).
fof(f10426,plain,(
  ( ! [X38] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X38)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X38,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X38)))) ) | $spl14),
  inference(resolution,[],[f10165,f148])).
fof(f10165,plain,(
  ( ! [X2] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X2)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X2))))) ) | $spl14),
  inference(resolution,[],[f8515,f165])).
fof(f8515,plain,(
  ( ! [X9] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X9)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X9))))) ) | $spl14),
  inference(resolution,[],[f4660,f163])).
fof(f12421,plain,(
  s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl190),
  inference(cnf_transformation,[],[f12421_D])).
fof(f12421_D,plain,(
  s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f14890,plain,(
  ( ! [X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X16)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X16))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl104),
  inference(resolution,[],[f3753,f10556])).
fof(f10556,plain,(
  ( ! [X38] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X38)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X38)))) ) | $spl104),
  inference(resolution,[],[f9449,f148])).
fof(f9449,plain,(
  ( ! [X0] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X0)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X0))))) ) | $spl104),
  inference(resolution,[],[f9422,f163])).
fof(f9422,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl104),
  inference(equality_resolution,[],[f7738])).
fof(f12906,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl202),
  inference(cnf_transformation,[],[f12906_D])).
fof(f12906_D,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f14889,plain,(
  ( ! [X15] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X15)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X15))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl104),
  inference(resolution,[],[f3753,f10707])).
fof(f10707,plain,(
  ( ! [X38] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X38)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X38,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X38)))) ) | $spl104),
  inference(resolution,[],[f10545,f148])).
fof(f10545,plain,(
  ( ! [X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X1,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X1)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X1))))) ) | $spl104),
  inference(resolution,[],[f9449,f165])).
fof(f14857,plain,(
  ( ! [X5,X3] : (s(bool,'F_0') = s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3))) | p(s(bool,X5)) | s(bool,X5) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3)))))) ) | $spl230),
  inference(cnf_transformation,[],[f14857_D])).
fof(f14857_D,plain,(
  ( ! [X5,X3] : (s(bool,'F_0') = s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3))) | p(s(bool,X5)) | s(bool,X5) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3)))))) ) <=> ~$spl230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl230])])).
fof(f14834,plain,(
  ( ! [X50,X48,X49] : (s(bool,'F_0') = s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X48))) | p(s(bool,X49)) | p(s(bool,X50)) | s(bool,X50) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X48)))))) ) | $spl38),
  inference(resolution,[],[f13665,f215])).
fof(f13665,plain,(
  ( ! [X40] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X40)))))) | s(bool,'F_0') = s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X40)))) ) | $spl38),
  inference(resolution,[],[f13576,f148])).
fof(f13576,plain,(
  ( ! [X0] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X0)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X0))))))) ) | $spl38),
  inference(resolution,[],[f13466,f156])).
fof(f156,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) | ~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f13466,plain,(
  ( ! [X8] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X8)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X8))))) ) | $spl38),
  inference(subsumption_resolution,[],[f13344,f181])).
fof(f13344,plain,(
  ( ! [X8] : (~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X8)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X8))))) ) | $spl38),
  inference(superposition,[],[f163,f13250])).
fof(f13250,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | $spl38),
  inference(subsumption_resolution,[],[f13130,f837])).
fof(f837,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(subsumption_resolution,[],[f828,f130])).
fof(f828,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))),
  inference(superposition,[],[f230,f152])).
fof(f230,plain,(
  s(bool,'F_0') != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))),
  inference(resolution,[],[f130,f147])).
fof(f147,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f91])).
fof(f13130,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | $spl38),
  inference(superposition,[],[f10834,f3352])).
fof(f3352,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))),
  inference(resolution,[],[f3325,f152])).
fof(f3325,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))))),
  inference(duplicate_literal_removal,[],[f3282])).
fof(f3282,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))))),
  inference(resolution,[],[f652,f164])).
fof(f652,plain,(
  ( ! [X14] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X14,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X14),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))))) )),
  inference(superposition,[],[f165,f131])).
fof(f10834,plain,(
  ( ! [X53] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X53))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X53)))) ) | $spl38),
  inference(resolution,[],[f9834,f152])).
fof(f9834,plain,(
  ( ! [X39] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X39)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X39)))) ) | $spl38),
  inference(resolution,[],[f6443,f148])).
fof(f6443,plain,(
  ( ! [X9] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X9)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X9))))) ) | $spl38),
  inference(resolution,[],[f1179,f163])).
fof(f14822,plain,(
  ( ! [X33,X31,X34,X32] : (s(bool,'F_0') = s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X31))) | p(s(bool,X32)) | ~p(s(bool,X33)) | s(bool,X32) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X31))))) | s(bool,X33) != s(bool,X34)) ) | $spl38),
  inference(resolution,[],[f13665,f140])).
fof(f14819,plain,(
  ( ! [X21,X19,X22,X20] : (s(bool,'F_0') = s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X19))) | p(s(bool,X20)) | ~p(s(bool,X21)) | p(s(bool,X22)) | s(bool,X22) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X19)))))) ) | $spl38),
  inference(resolution,[],[f13665,f139])).
fof(f14818,plain,(
  ( ! [X17,X15,X18,X16] : (s(bool,'F_0') = s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X15))) | p(s(bool,X16)) | p(s(bool,X17)) | s(bool,X16) != s(bool,X18) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X15)))))) ) | $spl38),
  inference(resolution,[],[f13665,f138])).
fof(f14817,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,'F_0') = s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X11))) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X12) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X11))))) | s(bool,X13) != s(bool,X14)) ) | $spl38),
  inference(resolution,[],[f13665,f136])).
fof(f14815,plain,(
  ( ! [X6,X4,X5,X3] : (s(bool,'F_0') = s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3))) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X5) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3)))))) ) | $spl38),
  inference(resolution,[],[f13665,f134])).
fof(f14797,plain,(
  ( ! [X14,X12,X11] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X11),s(fun('type.num.num',bool),X12)))) | ~p(s(bool,X14)) | s(bool,X14) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X12))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X11),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl228),
  inference(cnf_transformation,[],[f14797_D])).
fof(f14797_D,plain,(
  ( ! [X14,X12,X11] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X11),s(fun('type.num.num',bool),X12)))) | ~p(s(bool,X14)) | s(bool,X14) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X12))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X11),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f14771,plain,(
  ( ! [X80,X81,X79,X82] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X79),s(fun('type.num.num',bool),X80)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X79),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X81)) | ~p(s(bool,X82)) | s(bool,X82) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X80)))) )),
  inference(resolution,[],[f2971,f215])).
fof(f2971,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X19)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),X19)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(subsumption_resolution,[],[f2859,f181])).
fof(f2859,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),X19)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X19)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(superposition,[],[f163,f645])).
fof(f645,plain,(
  ( ! [X14] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X14),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X14),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(superposition,[],[f131,f155])).
fof(f155,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb',aHL_BOOL_CASES)).
fof(f14757,plain,(
  ( ! [X47,X50,X48,X46,X49] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X46),s(fun('type.num.num',bool),X47)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X46),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | ~p(s(bool,X48)) | ~p(s(bool,X49)) | s(bool,X49) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X47))) | s(bool,X48) != s(bool,X50)) )),
  inference(resolution,[],[f2971,f140])).
fof(f14755,plain,(
  ( ! [X39,X37,X38,X36,X40] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X36),s(fun('type.num.num',bool),X37)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X36),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X38)) | ~p(s(bool,X39)) | ~p(s(bool,X40)) | s(bool,X39) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X37)))) )),
  inference(resolution,[],[f2971,f139])).
fof(f14753,plain,(
  ( ! [X30,X28,X26,X29,X27] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X26),s(fun('type.num.num',bool),X27)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X26),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X28) != s(bool,X30) | s(bool,X29) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X27)))) )),
  inference(resolution,[],[f2971,f138])).
fof(f14752,plain,(
  ( ! [X24,X23,X21,X25,X22] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),X22)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | ~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X22))) | s(bool,X23) != s(bool,X25)) )),
  inference(resolution,[],[f2971,f136])).
fof(f14750,plain,(
  ( ! [X14,X12,X15,X13,X11] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X11),s(fun('type.num.num',bool),X12)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X11),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X14) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X12)))) )),
  inference(resolution,[],[f2971,f134])).
fof(f14708,plain,(
  ( ! [X18,X16] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X16))) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) | $spl226),
  inference(cnf_transformation,[],[f14708_D])).
fof(f14708_D,plain,(
  ( ! [X18,X16] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X16))) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f14678,plain,(
  ( ! [X61,X62,X63] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X61))) | p(s(bool,X62)) | p(s(bool,X63)) | s(bool,X63) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X61)))) ) | $spl38),
  inference(resolution,[],[f13592,f215])).
fof(f13592,plain,(
  ( ! [X41] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X41)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X41)))) ) | $spl38),
  inference(resolution,[],[f13466,f148])).
fof(f14666,plain,(
  ( ! [X47,X45,X46,X44] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X44))) | p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X45) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X44))) | s(bool,X46) != s(bool,X47)) ) | $spl38),
  inference(resolution,[],[f13592,f140])).
fof(f14663,plain,(
  ( ! [X35,X33,X34,X32] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X32))) | p(s(bool,X33)) | ~p(s(bool,X34)) | p(s(bool,X35)) | s(bool,X35) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X32)))) ) | $spl38),
  inference(resolution,[],[f13592,f139])).
fof(f14662,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X28))) | p(s(bool,X29)) | p(s(bool,X30)) | s(bool,X29) != s(bool,X31) | s(bool,X30) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X28)))) ) | $spl38),
  inference(resolution,[],[f13592,f138])).
fof(f14661,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X24))) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X24))) | s(bool,X26) != s(bool,X27)) ) | $spl38),
  inference(resolution,[],[f13592,f136])).
fof(f14659,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X16))) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) | $spl38),
  inference(resolution,[],[f13592,f134])).
fof(f14636,plain,(
  ( ! [X10,X13,X11] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X10),s(fun('type.num.num',bool),X11)))) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X11),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X10),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl224),
  inference(cnf_transformation,[],[f14636_D])).
fof(f14636_D,plain,(
  ( ! [X10,X13,X11] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X10),s(fun('type.num.num',bool),X11)))) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X11),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X10),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f14611,plain,(
  ( ! [X80,X78,X81,X79] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X78),s(fun('type.num.num',bool),X79)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X78),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X80)) | ~p(s(bool,X81)) | s(bool,X81) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X79),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f2592,f215])).
fof(f2592,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X19),s(fun('type.num.num',bool),X20)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X19),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(subsumption_resolution,[],[f2488,f178])).
fof(f2488,plain,(
  ( ! [X19,X20] : (p(s(bool,'F_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X19),s(fun('type.num.num',bool),X20)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X19),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(superposition,[],[f163,f644])).
fof(f644,plain,(
  ( ! [X13] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X13),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X13),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(superposition,[],[f131,f155])).
fof(f14597,plain,(
  ( ! [X47,X45,X48,X46,X49] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X45),s(fun('type.num.num',bool),X46)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X45),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | ~p(s(bool,X47)) | ~p(s(bool,X48)) | s(bool,X48) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X46),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,X47) != s(bool,X49)) )),
  inference(resolution,[],[f2592,f140])).
fof(f14595,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X35),s(fun('type.num.num',bool),X36)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X35),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X37)) | ~p(s(bool,X38)) | ~p(s(bool,X39)) | s(bool,X38) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X36),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f2592,f139])).
fof(f14593,plain,(
  ( ! [X28,X26,X29,X27,X25] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X25),s(fun('type.num.num',bool),X26)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X25),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X27) != s(bool,X29) | s(bool,X28) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X26),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f2592,f138])).
fof(f14592,plain,(
  ( ! [X24,X23,X21,X22,X20] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),X21)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,X22) != s(bool,X24)) )),
  inference(resolution,[],[f2592,f136])).
fof(f14590,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X10),s(fun('type.num.num',bool),X11)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X10),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X13) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X11),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f2592,f134])).
fof(f14576,plain,(
  $false | ($spl22 | $spl52)),
  inference(subsumption_resolution,[],[f14519,f14452])).
fof(f14452,plain,(
  ( ! [X3] : (~p(s(bool,X3))) ) | ($spl22 | $spl52)),
  inference(subsumption_resolution,[],[f14451,f154])).
fof(f154,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.EQ_CLAUSES|split|1')).
fof(f14451,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,X3) | ~p(s(bool,X3))) ) | ($spl22 | $spl52)),
  inference(forward_demodulation,[],[f1885,f13920])).
fof(f13920,plain,(
  s(bool,'T_0') = s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | $spl22),
  inference(resolution,[],[f311,f152])).
fof(f311,plain,(
  p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | $spl22),
  inference(cnf_transformation,[],[f311_D])).
fof(f311_D,plain,(
  p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f14519,plain,(
  ( ! [X94,X95,X96] : (p(s(bool,'const.bool.IN_2'(s(X94,sK5(X95,X96,X94)),s(fun(X94,bool),X96))))) ) | ($spl22 | $spl52)),
  inference(resolution,[],[f14452,f164])).
fof(f14574,plain,(
  $false | ($spl22 | $spl52)),
  inference(subsumption_resolution,[],[f14513,f14452])).
fof(f14513,plain,(
  ( ! [X83,X81,X82] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X81,bool),X82),s(fun(X81,bool),X83))))) ) | ($spl22 | $spl52)),
  inference(resolution,[],[f14452,f164])).
fof(f14573,plain,(
  $false | ($spl22 | $spl38 | $spl52)),
  inference(subsumption_resolution,[],[f14501,f14452])).
fof(f14501,plain,(
  ( ! [X69] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X69))))) ) | ($spl22 | $spl38 | $spl52)),
  inference(resolution,[],[f14452,f9822])).
fof(f9822,plain,(
  ( ! [X1] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X1,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X1))))) ) | $spl38),
  inference(resolution,[],[f6443,f164])).
fof(f14572,plain,(
  $false | ($spl14 | $spl22 | $spl52)),
  inference(subsumption_resolution,[],[f14500,f14452])).
fof(f14500,plain,(
  ( ! [X68] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X68))))) ) | ($spl14 | $spl22 | $spl52)),
  inference(resolution,[],[f14452,f10164])).
fof(f10164,plain,(
  ( ! [X1] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X1,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X1))))) ) | $spl14),
  inference(resolution,[],[f8515,f164])).
fof(f14571,plain,(
  $false | ($spl22 | $spl52)),
  inference(subsumption_resolution,[],[f14499,f14452])).
fof(f14499,plain,(
  ( ! [X67] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X67))))) ) | ($spl22 | $spl52)),
  inference(resolution,[],[f14452,f653])).
fof(f653,plain,(
  ( ! [X15] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X15,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X15))))) )),
  inference(superposition,[],[f164,f131])).
fof(f14570,plain,(
  $false | ($spl22 | $spl52)),
  inference(subsumption_resolution,[],[f14487,f14452])).
fof(f14487,plain,(
  p(s(bool,'F_0')) | ($spl22 | $spl52)),
  inference(resolution,[],[f14452,f211])).
fof(f211,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f129])).
fof(f129,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f68])).
fof(f68,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f23])).
fof(f23,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.NOT_CLAUSES|split|2')).
fof(f14569,plain,(
  $false | ($spl22 | $spl52)),
  inference(subsumption_resolution,[],[f14486,f14452])).
fof(f14486,plain,(
  p(s(bool,'F_0')) | ($spl22 | $spl52)),
  inference(resolution,[],[f14452,f209])).
fof(f209,plain,(
  p(s(bool,'F_0')) | p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f128])).
fof(f128,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f67])).
fof(f67,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f22])).
fof(f22,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.NOT_CLAUSES|split|1')).
fof(f14568,plain,(
  $false | ($spl22 | $spl52)),
  inference(subsumption_resolution,[],[f14483,f14452])).
fof(f14483,plain,(
  ( ! [X52] : (p(s(bool,X52))) ) | ($spl22 | $spl52)),
  inference(resolution,[],[f14452,f189])).
fof(f189,plain,(
  ( ! [X0] : (p(s(bool,X0)) | p(s(bool,'T_0'))) )),
  inference(cnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0] : (((p(s(bool,'T_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,'T_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f116])).
fof(f116,plain,(
  ! [X0] : (((p(s(bool,'T_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (~p(s(bool,'T_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0] : ((~p(s(bool,'T_0')) | p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(ennf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0] : ((p(s(bool,'T_0')) => p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X12] : ((p(s(bool,'T_0')) => p(s(bool,X12))) <=> p(s(bool,X12)))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.IMP_CLAUSES|split|0')).
fof(f14567,plain,(
  $false | ($spl22 | $spl52)),
  inference(subsumption_resolution,[],[f14482,f14452])).
fof(f14482,plain,(
  ( ! [X51] : (p(s(bool,X51))) ) | ($spl22 | $spl52)),
  inference(resolution,[],[f14452,f186])).
fof(f186,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,'T_0'))))),
  inference(flattening,[],[f114])).
fof(f114,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,X0)) | p(s(bool,'T_0')))))),
  inference(nnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X12] : ((p(s(bool,X12)) => p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.IMP_CLAUSES|split|1')).
fof(f14566,plain,(
  $false | ($spl22 | $spl52)),
  inference(subsumption_resolution,[],[f14480,f14452])).
fof(f14480,plain,(
  p(s(bool,'F_0')) | ($spl22 | $spl52)),
  inference(resolution,[],[f14452,f183])).
fof(f183,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f113])).
fof(f14565,plain,(
  $false | ($spl22 | $spl52)),
  inference(subsumption_resolution,[],[f14478,f14452])).
fof(f14478,plain,(
  ( ! [X48] : (p(s(bool,X48))) ) | ($spl22 | $spl52)),
  inference(resolution,[],[f14452,f180])).
fof(f180,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f111])).
fof(f14488,plain,(
  $false | ($spl22 | $spl52)),
  inference(resolution,[],[f14452,f213])).
fof(f213,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb',aHL_TRUTH)).
fof(f14489,plain,(
  $false | ($spl22 | $spl52)),
  inference(resolution,[],[f14452,f214])).
fof(f14008,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl222),
  inference(cnf_transformation,[],[f14008_D])).
fof(f14008_D,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f13982,plain,(
  ( ! [X28,X29] : (p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X29) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl25),
  inference(resolution,[],[f314,f215])).
fof(f13968,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X23) != s(bool,X25)) ) | $spl25),
  inference(resolution,[],[f314,f140])).
fof(f13966,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl25),
  inference(resolution,[],[f314,f139])).
fof(f13964,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl25),
  inference(resolution,[],[f314,f138])).
fof(f13963,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X8) != s(bool,X10)) ) | $spl25),
  inference(resolution,[],[f314,f136])).
fof(f13961,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl25),
  inference(resolution,[],[f314,f134])).
fof(f1935,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl54),
  inference(cnf_transformation,[],[f1935_D])).
fof(f1935_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f13927,plain,(
  ( ! [X26,X27] : (p(s(bool,X26)) | p(s(bool,X27)) | s(bool,X27) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl22),
  inference(resolution,[],[f311,f215])).
fof(f13915,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X22) != s(bool,X23)) ) | $spl22),
  inference(resolution,[],[f311,f140])).
fof(f13912,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl22),
  inference(resolution,[],[f311,f139])).
fof(f13911,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl22),
  inference(resolution,[],[f311,f138])).
fof(f13910,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X7) != s(bool,X8)) ) | $spl22),
  inference(resolution,[],[f311,f136])).
fof(f13908,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl22),
  inference(resolution,[],[f311,f134])).
fof(f312,plain,(
  ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | $spl23),
  inference(cnf_transformation,[],[f312_D])).
fof(f312_D,plain,(
  ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f314,plain,(
  ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | $spl25),
  inference(cnf_transformation,[],[f314_D])).
fof(f314_D,plain,(
  ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f9040,plain,(
  ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | $spl76),
  inference(subsumption_resolution,[],[f9039,f178])).
fof(f9039,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | $spl76),
  inference(forward_demodulation,[],[f8986,f278])).
fof(f8986,plain,(
  p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | $spl76),
  inference(resolution,[],[f7250,f162])).
fof(f162,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(X1,X0)),s('type.num.num',sK3(X1,X0)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(X1,X0)),s('type.num.num',sK4(X1,X0)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f7250,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl76),
  inference(equality_resolution,[],[f4670])).
fof(f9194,plain,(
  ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | $spl80),
  inference(subsumption_resolution,[],[f9193,f178])).
fof(f9193,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | $spl80),
  inference(forward_demodulation,[],[f9192,f278])).
fof(f9192,plain,(
  p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | $spl80),
  inference(subsumption_resolution,[],[f9069,f181])).
fof(f9069,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | $spl80),
  inference(superposition,[],[f162,f4797])).
fof(f13903,plain,(
  $false | ($spl14 | $spl21 | $spl23 | $spl38)),
  inference(subsumption_resolution,[],[f13902,f214])).
fof(f13902,plain,(
  ~p(s(bool,'T_0')) | ($spl14 | $spl21 | $spl23 | $spl38)),
  inference(forward_demodulation,[],[f13901,f6456])).
fof(f13901,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ($spl14 | $spl21 | $spl23)),
  inference(subsumption_resolution,[],[f13900,f184])).
fof(f13900,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ($spl14 | $spl21 | $spl23)),
  inference(forward_demodulation,[],[f13899,f8528])).
fof(f13899,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ($spl21 | $spl23)),
  inference(subsumption_resolution,[],[f13869,f181])).
fof(f13869,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ($spl21 | $spl23)),
  inference(superposition,[],[f1986,f232])).
fof(f1986,plain,(
  ( ! [X0] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))))))) ) | ($spl21 | $spl23)),
  inference(subsumption_resolution,[],[f1941,f310])).
fof(f1941,plain,(
  ( ! [X0] : (s('type.num.num',sK3(sK1,sK2)) = s('type.num.num',sK4(sK1,sK2)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) ) | $spl23),
  inference(resolution,[],[f312,f157])).
fof(f13865,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X51)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X51)))))) | p(s(bool,X52)) | ~p(s(bool,X53)) | s(bool,X53) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X51),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | ($spl21 | $spl23)),
  inference(resolution,[],[f1986,f215])).
fof(f13851,plain,(
  ( ! [X35,X33,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X32)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X32)))))) | ~p(s(bool,X33)) | ~p(s(bool,X34)) | s(bool,X34) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X32),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X33) != s(bool,X35)) ) | ($spl21 | $spl23)),
  inference(resolution,[],[f1986,f140])).
fof(f13849,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X24)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X24)))))) | p(s(bool,X25)) | ~p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X24),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | ($spl21 | $spl23)),
  inference(resolution,[],[f1986,f139])).
fof(f13847,plain,(
  ( ! [X19,X17,X18,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X16)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X16)))))) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X16),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | ($spl21 | $spl23)),
  inference(resolution,[],[f1986,f138])).
fof(f13846,plain,(
  ( ! [X14,X12,X15,X13] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X12)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X12)))))) | ~p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X14) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X13) != s(bool,X15)) ) | ($spl21 | $spl23)),
  inference(resolution,[],[f1986,f136])).
fof(f13844,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X4)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X4)))))) | p(s(bool,X5)) | ~p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | s(bool,X6) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X4),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | ($spl21 | $spl23)),
  inference(resolution,[],[f1986,f134])).
fof(f13274,plain,(
  ( ! [X33,X31] : (~p(s(bool,X33)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X31))) | s(bool,X33) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X31)))) ) | $spl210),
  inference(cnf_transformation,[],[f13274_D])).
fof(f13274_D,plain,(
  ( ! [X33,X31] : (~p(s(bool,X33)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X31))) | s(bool,X33) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X31)))) ) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f13810,plain,(
  ( ! [X52,X53,X51] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X51))) | p(s(bool,X52)) | ~p(s(bool,X53)) | s(bool,X53) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X51)))) ) | $spl38),
  inference(resolution,[],[f13248,f215])).
fof(f13248,plain,(
  ( ! [X171] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X171)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X171)))) ) | $spl38),
  inference(trivial_inequality_removal,[],[f13202])).
fof(f13202,plain,(
  ( ! [X171] : (s(bool,'F_0') != s(bool,'F_0') | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X171)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X171)))) ) | $spl38),
  inference(superposition,[],[f149,f10834])).
fof(f149,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f92])).
fof(f13796,plain,(
  ( ! [X35,X33,X34,X32] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X32))) | ~p(s(bool,X33)) | ~p(s(bool,X34)) | s(bool,X34) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X32))) | s(bool,X33) != s(bool,X35)) ) | $spl38),
  inference(resolution,[],[f13248,f140])).
fof(f13794,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X24))) | p(s(bool,X25)) | ~p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X24)))) ) | $spl38),
  inference(resolution,[],[f13248,f139])).
fof(f13792,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X16))) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X16)))) ) | $spl38),
  inference(resolution,[],[f13248,f138])).
fof(f13791,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X12))) | ~p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X14) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X12))) | s(bool,X13) != s(bool,X15)) ) | $spl38),
  inference(resolution,[],[f13248,f136])).
fof(f13789,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X4))) | p(s(bool,X5)) | ~p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | s(bool,X6) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X4)))) ) | $spl38),
  inference(resolution,[],[f13248,f134])).
fof(f13764,plain,(
  ( ! [X4,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X2))) | ~p(s(bool,X4))) ) | $spl218),
  inference(cnf_transformation,[],[f13764_D])).
fof(f13764_D,plain,(
  ( ! [X4,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X2))) | ~p(s(bool,X4))) ) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f13732,plain,(
  ( ! [X50,X51,X49] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X49)))) | p(s(bool,X50)) | ~p(s(bool,X51)) | s(bool,X51) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X49,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X49)))) ) | $spl38),
  inference(resolution,[],[f13581,f215])).
fof(f13581,plain,(
  ( ! [X4] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X4,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X4)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X4))))) ) | $spl38),
  inference(resolution,[],[f13466,f165])).
fof(f13718,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X30)))) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X32) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X30,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X30))) | s(bool,X31) != s(bool,X33)) ) | $spl38),
  inference(resolution,[],[f13581,f140])).
fof(f13716,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X22)))) | p(s(bool,X23)) | ~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X22,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X22)))) ) | $spl38),
  inference(resolution,[],[f13581,f139])).
fof(f13714,plain,(
  ( ! [X14,X17,X15,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X14)))) | p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X14,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X14)))) ) | $spl38),
  inference(resolution,[],[f13581,f138])).
fof(f13713,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X10)))) | ~p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X12) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X10,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X10))) | s(bool,X11) != s(bool,X13)) ) | $spl38),
  inference(resolution,[],[f13581,f136])).
fof(f13711,plain,(
  ( ! [X4,X2,X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X2)))) ) | $spl38),
  inference(resolution,[],[f13581,f134])).
fof(f13693,plain,(
  ( ! [X6,X4] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4)))))) | ~p(s(bool,X6)) | s(bool,X6) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4)))) ) | $spl216),
  inference(cnf_transformation,[],[f13693_D])).
fof(f13693_D,plain,(
  ( ! [X6,X4] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4)))))) | ~p(s(bool,X6)) | s(bool,X6) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4)))) ) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f13676,plain,(
  ( ! [X52,X53,X51] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X51)))))) | p(s(bool,X52)) | ~p(s(bool,X53)) | s(bool,X53) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X51)))) ) | $spl38),
  inference(resolution,[],[f13576,f215])).
fof(f13662,plain,(
  ( ! [X35,X33,X34,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X32)))))) | ~p(s(bool,X33)) | ~p(s(bool,X34)) | s(bool,X34) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X32))) | s(bool,X33) != s(bool,X35)) ) | $spl38),
  inference(resolution,[],[f13576,f140])).
fof(f13660,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X24)))))) | p(s(bool,X25)) | ~p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X24)))) ) | $spl38),
  inference(resolution,[],[f13576,f139])).
fof(f13658,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X16)))))) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X16)))) ) | $spl38),
  inference(resolution,[],[f13576,f138])).
fof(f13657,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X12)))))) | ~p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X14) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X12))) | s(bool,X13) != s(bool,X15)) ) | $spl38),
  inference(resolution,[],[f13576,f136])).
fof(f13655,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4)))))) | p(s(bool,X5)) | ~p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | s(bool,X6) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4)))) ) | $spl38),
  inference(resolution,[],[f13576,f134])).
fof(f13631,plain,(
  ( ! [X7,X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X5)))) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X5)))) ) | $spl214),
  inference(cnf_transformation,[],[f13631_D])).
fof(f13631_D,plain,(
  ( ! [X7,X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X5)))) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X5)))) ) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f13603,plain,(
  ( ! [X54,X52,X53] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X52)))) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X54) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X52)))) ) | $spl38),
  inference(resolution,[],[f13466,f215])).
fof(f13589,plain,(
  ( ! [X35,X33,X36,X34] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X33)))) | ~p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X35) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X33))) | s(bool,X34) != s(bool,X36)) ) | $spl38),
  inference(resolution,[],[f13466,f140])).
fof(f13587,plain,(
  ( ! [X28,X26,X27,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X25)))) | p(s(bool,X26)) | ~p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X27) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X25)))) ) | $spl38),
  inference(resolution,[],[f13466,f139])).
fof(f13585,plain,(
  ( ! [X19,X17,X20,X18] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X17)))) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X17)))) ) | $spl38),
  inference(resolution,[],[f13466,f138])).
fof(f13584,plain,(
  ( ! [X14,X15,X13,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X13)))) | ~p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,X15) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X13))) | s(bool,X14) != s(bool,X16)) ) | $spl38),
  inference(resolution,[],[f13466,f136])).
fof(f13582,plain,(
  ( ! [X6,X8,X7,X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X5)))) | p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,X8) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X5)))) ) | $spl38),
  inference(resolution,[],[f13466,f134])).
fof(f13312,plain,(
  ( ! [X235] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X235),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))))) ) | $spl212),
  inference(cnf_transformation,[],[f13312_D])).
fof(f13312_D,plain,(
  ( ! [X235] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X235),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))))) ) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f13252,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X5))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X5))))) ) | $spl208),
  inference(cnf_transformation,[],[f13252_D])).
fof(f13252_D,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X5))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X5))))) ) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f13311,plain,(
  ( ! [X235,X234] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X234)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X235),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X234)))) ) | ($spl38 | $spl56)),
  inference(subsumption_resolution,[],[f13242,f2970])).
fof(f2970,plain,(
  ( ! [X16] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X16),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X16,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(subsumption_resolution,[],[f2857,f180])).
fof(f2857,plain,(
  ( ! [X16] : (~p(s(bool,'T_0')) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X16),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X16,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(superposition,[],[f165,f645])).
fof(f13242,plain,(
  ( ! [X235,X234] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X235,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X234)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X235),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X234)))) ) | ($spl38 | $spl56)),
  inference(superposition,[],[f3326,f10834])).
fof(f446,plain,(
  ( ! [X22] : (s(bool,'T_0') = s(bool,X22)) ) | $spl34),
  inference(cnf_transformation,[],[f446_D])).
fof(f446_D,plain,(
  ( ! [X22] : (s(bool,'T_0') = s(bool,X22)) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f13306,plain,(
  ( ! [X218,X219] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X218)))) | s(bool,'T_0') = s(bool,X219) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X218)))) ) | ($spl6 | $spl38)),
  inference(subsumption_resolution,[],[f13234,f155])).
fof(f13234,plain,(
  ( ! [X218,X219] : (s(bool,'F_0') != s(bool,X219) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X218)))) | s(bool,'T_0') = s(bool,X219) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X218)))) ) | ($spl6 | $spl38)),
  inference(superposition,[],[f615,f10834])).
fof(f615,plain,(
  ( ! [X24,X25] : (s(bool,X24) != s(bool,X25) | ~p(s(bool,X25)) | s(bool,'T_0') = s(bool,X24)) ) | $spl6),
  inference(subsumption_resolution,[],[f583,f178])).
fof(f583,plain,(
  ( ! [X24,X25] : (s(bool,X24) != s(bool,X25) | p(s(bool,'F_0')) | ~p(s(bool,X25)) | s(bool,'T_0') = s(bool,X24)) ) | $spl6),
  inference(superposition,[],[f255,f155])).
fof(f436,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13)) ) | $spl30),
  inference(cnf_transformation,[],[f436_D])).
fof(f436_D,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13)) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f13305,plain,(
  ( ! [X215,X214] : (s(bool,'F_0') != s(bool,X215) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X214)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X214)))) ) | ($spl6 | $spl38)),
  inference(subsumption_resolution,[],[f13232,f147])).
fof(f13232,plain,(
  ( ! [X215,X214] : (s(bool,'F_0') != s(bool,X215) | p(s(bool,X215)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X214)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X214)))) ) | ($spl6 | $spl38)),
  inference(superposition,[],[f255,f10834])).
fof(f13302,plain,(
  ( ! [X204,X205,X203] : (p(s(bool,X204)) | ~p(s(bool,X205)) | s(bool,X205) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X203))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X203)))) ) | $spl38),
  inference(subsumption_resolution,[],[f13228,f196])).
fof(f196,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0] : ((~p(s(bool,X0)) | ~p(s(bool,'F_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,X0)) & p(s(bool,'F_0')))))),
  inference(flattening,[],[f120])).
fof(f120,plain,(
  ! [X0] : (((~p(s(bool,X0)) | ~p(s(bool,'F_0'))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,X0)) & p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : ((p(s(bool,X0)) & p(s(bool,'F_0'))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X12] : ((p(s(bool,X12)) & p(s(bool,'F_0'))) <=> p(s(bool,'F_0')))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|9_prove_ltb','thm.bool.AND_CLAUSES|split|3')).
fof(f13228,plain,(
  ( ! [X204,X205,X203] : (p(s(bool,'F_0')) | p(s(bool,X204)) | ~p(s(bool,X205)) | s(bool,X205) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X203))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X203)))) ) | $spl38),
  inference(superposition,[],[f215,f10834])).
fof(f13301,plain,(
  ( ! [X198,X199,X197] : (s(bool,'F_0') != s(bool,X198) | p(s(bool,X199)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X197)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X197)))) ) | $spl38),
  inference(subsumption_resolution,[],[f13226,f147])).
fof(f13226,plain,(
  ( ! [X198,X199,X197] : (s(bool,'F_0') != s(bool,X198) | p(s(bool,X199)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X197)))) | p(s(bool,X198)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X197)))) ) | $spl38),
  inference(superposition,[],[f215,f10834])).
fof(f13292,plain,(
  ( ! [X161,X162] : (~p(s(bool,X162)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X161)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X161)))) ) | $spl38),
  inference(subsumption_resolution,[],[f13196,f147])).
fof(f13196,plain,(
  ( ! [X161,X162] : (s(bool,'F_0') = s(bool,X162) | ~p(s(bool,X162)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X161)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X161)))) ) | $spl38),
  inference(superposition,[],[f144,f10834])).
fof(f144,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f74])).
fof(f13291,plain,(
  ( ! [X159,X160] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X159)))) | ~p(s(bool,X160)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X159)))) ) | $spl38),
  inference(subsumption_resolution,[],[f13195,f147])).
fof(f13195,plain,(
  ( ! [X159,X160] : (s(bool,'F_0') = s(bool,X160) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X159)))) | ~p(s(bool,X160)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X159)))) ) | $spl38),
  inference(superposition,[],[f144,f10834])).
fof(f13288,plain,(
  ( ! [X142,X140,X141,X139] : (~p(s(bool,X140)) | ~p(s(bool,X141)) | s(bool,X141) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X139))) | s(bool,X140) != s(bool,X142) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X139)))) ) | $spl38),
  inference(subsumption_resolution,[],[f13188,f178])).
fof(f13188,plain,(
  ( ! [X142,X140,X141,X139] : (p(s(bool,'F_0')) | ~p(s(bool,X140)) | ~p(s(bool,X141)) | s(bool,X141) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X139))) | s(bool,X140) != s(bool,X142) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X139)))) ) | $spl38),
  inference(superposition,[],[f140,f10834])).
fof(f13287,plain,(
  ( ! [X138,X136,X135,X137] : (s(bool,'F_0') != s(bool,X136) | ~p(s(bool,X137)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X135)))) | s(bool,X137) != s(bool,X138) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X135)))) ) | $spl38),
  inference(subsumption_resolution,[],[f13187,f147])).
fof(f13187,plain,(
  ( ! [X138,X136,X135,X137] : (s(bool,'F_0') != s(bool,X136) | p(s(bool,X136)) | ~p(s(bool,X137)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X135)))) | s(bool,X137) != s(bool,X138) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X135)))) ) | $spl38),
  inference(superposition,[],[f140,f10834])).
fof(f13285,plain,(
  ( ! [X109,X107,X110,X108] : (p(s(bool,X108)) | ~p(s(bool,X109)) | ~p(s(bool,X110)) | s(bool,X109) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X107))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X107)))) ) | $spl38),
  inference(subsumption_resolution,[],[f13180,f196])).
fof(f13180,plain,(
  ( ! [X109,X107,X110,X108] : (p(s(bool,'F_0')) | p(s(bool,X108)) | ~p(s(bool,X109)) | ~p(s(bool,X110)) | s(bool,X109) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X107))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X107)))) ) | $spl38),
  inference(superposition,[],[f139,f10834])).
fof(f13284,plain,(
  ( ! [X101,X99,X102,X100] : (s(bool,'F_0') != s(bool,X100) | p(s(bool,X101)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X99)))) | ~p(s(bool,X102)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X99)))) ) | $spl38),
  inference(subsumption_resolution,[],[f13178,f147])).
fof(f13178,plain,(
  ( ! [X101,X99,X102,X100] : (s(bool,'F_0') != s(bool,X100) | p(s(bool,X101)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X99)))) | ~p(s(bool,X102)) | p(s(bool,X100)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X99)))) ) | $spl38),
  inference(superposition,[],[f139,f10834])).
fof(f13281,plain,(
  ( ! [X90,X88,X87,X89] : (p(s(bool,X88)) | ~p(s(bool,X89)) | s(bool,X88) != s(bool,X90) | s(bool,X89) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X87))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X87)))) ) | $spl38),
  inference(subsumption_resolution,[],[f13175,f196])).
fof(f13175,plain,(
  ( ! [X90,X88,X87,X89] : (p(s(bool,'F_0')) | p(s(bool,X88)) | ~p(s(bool,X89)) | s(bool,X88) != s(bool,X90) | s(bool,X89) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X87))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X87)))) ) | $spl38),
  inference(superposition,[],[f138,f10834])).
fof(f13279,plain,(
  ( ! [X74,X72,X71,X73] : (s(bool,'F_0') != s(bool,X72) | p(s(bool,X73)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X71)))) | s(bool,X73) != s(bool,X74) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X71)))) ) | $spl38),
  inference(subsumption_resolution,[],[f13171,f147])).
fof(f13171,plain,(
  ( ! [X74,X72,X71,X73] : (s(bool,'F_0') != s(bool,X72) | p(s(bool,X73)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X71)))) | p(s(bool,X72)) | s(bool,X73) != s(bool,X74) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X71)))) ) | $spl38),
  inference(superposition,[],[f138,f10834])).
fof(f13278,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,X60)) | ~p(s(bool,X61)) | s(bool,X61) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X59))) | s(bool,X60) != s(bool,X62) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X59)))) ) | $spl38),
  inference(subsumption_resolution,[],[f13168,f178])).
fof(f13168,plain,(
  ( ! [X61,X59,X62,X60] : (p(s(bool,'F_0')) | ~p(s(bool,X60)) | ~p(s(bool,X61)) | s(bool,X61) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X59))) | s(bool,X60) != s(bool,X62) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X59)))) ) | $spl38),
  inference(superposition,[],[f136,f10834])).
fof(f13277,plain,(
  ( ! [X54,X52,X53,X51] : (s(bool,'F_0') != s(bool,X52) | ~p(s(bool,X53)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X51)))) | s(bool,X53) != s(bool,X54) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X51)))) ) | $spl38),
  inference(subsumption_resolution,[],[f13166,f147])).
fof(f13166,plain,(
  ( ! [X54,X52,X53,X51] : (s(bool,'F_0') != s(bool,X52) | p(s(bool,X52)) | ~p(s(bool,X53)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X51)))) | s(bool,X53) != s(bool,X54) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X51)))) ) | $spl38),
  inference(superposition,[],[f136,f10834])).
fof(f13273,plain,(
  ( ! [X33,X31,X34,X32] : (p(s(bool,X32)) | ~p(s(bool,X33)) | s(bool,X32) != s(bool,X34) | s(bool,X33) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X31))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X31)))) ) | $spl38),
  inference(subsumption_resolution,[],[f13161,f196])).
fof(f13161,plain,(
  ( ! [X33,X31,X34,X32] : (p(s(bool,'F_0')) | p(s(bool,X32)) | ~p(s(bool,X33)) | s(bool,X32) != s(bool,X34) | s(bool,X33) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X31))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X31)))) ) | $spl38),
  inference(superposition,[],[f134,f10834])).
fof(f13271,plain,(
  ( ! [X21,X19,X22,X20] : (s(bool,'F_0') != s(bool,X20) | p(s(bool,X21)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X19)))) | s(bool,X21) != s(bool,X22) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X19)))) ) | $spl38),
  inference(subsumption_resolution,[],[f13158,f147])).
fof(f13158,plain,(
  ( ! [X21,X19,X22,X20] : (s(bool,'F_0') != s(bool,X20) | p(s(bool,X21)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X19)))) | p(s(bool,X20)) | s(bool,X21) != s(bool,X22) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X19)))) ) | $spl38),
  inference(superposition,[],[f134,f10834])).
fof(f13253,plain,(
  ( ! [X8,X7] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X7))) | ~p(s(bool,X8)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X7))))) ) | $spl38),
  inference(subsumption_resolution,[],[f13135,f147])).
fof(f13135,plain,(
  ( ! [X8,X7] : (s(bool,'F_0') = s(bool,X8) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X7))) | ~p(s(bool,X8)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X7))))) ) | $spl38),
  inference(superposition,[],[f10834,f144])).
fof(f13251,plain,(
  ( ! [X6,X5] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X5))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X5)))) | ~p(s(bool,X6))) ) | $spl38),
  inference(subsumption_resolution,[],[f13134,f147])).
fof(f13134,plain,(
  ( ! [X6,X5] : (s(bool,'F_0') = s(bool,X6) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X5))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X5)))) | ~p(s(bool,X6))) ) | $spl38),
  inference(superposition,[],[f10834,f144])).
fof(f13047,plain,(
  ( ! [X18,X16] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X16,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X16))) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) | $spl206),
  inference(cnf_transformation,[],[f13047_D])).
fof(f13047_D,plain,(
  ( ! [X18,X16] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X16,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X16))) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f13020,plain,(
  ( ! [X61,X62,X63] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X61,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X61))) | p(s(bool,X62)) | p(s(bool,X63)) | s(bool,X63) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X61)))) ) | $spl104),
  inference(resolution,[],[f10707,f215])).
fof(f13008,plain,(
  ( ! [X47,X45,X46,X44] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X44,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X44))) | p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X45) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X44))) | s(bool,X46) != s(bool,X47)) ) | $spl104),
  inference(resolution,[],[f10707,f140])).
fof(f13005,plain,(
  ( ! [X35,X33,X34,X32] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X32,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X32))) | p(s(bool,X33)) | ~p(s(bool,X34)) | p(s(bool,X35)) | s(bool,X35) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X32)))) ) | $spl104),
  inference(resolution,[],[f10707,f139])).
fof(f13004,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X28,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X28))) | p(s(bool,X29)) | p(s(bool,X30)) | s(bool,X29) != s(bool,X31) | s(bool,X30) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X28)))) ) | $spl104),
  inference(resolution,[],[f10707,f138])).
fof(f13003,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X24,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X24))) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X24))) | s(bool,X26) != s(bool,X27)) ) | $spl104),
  inference(resolution,[],[f10707,f136])).
fof(f13001,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X16,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X16))) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) | $spl104),
  inference(resolution,[],[f10707,f134])).
fof(f10952,plain,(
  ( ! [X12] : (s('type.num.num',X12) = s('type.num.num',sK3(sK1,sK2)) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl154),
  inference(cnf_transformation,[],[f10952_D])).
fof(f10952_D,plain,(
  ( ! [X12] : (s('type.num.num',X12) = s('type.num.num',sK3(sK1,sK2)) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f12998,plain,(
  ( ! [X12] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s('type.num.num',X12) = s('type.num.num',sK3(sK1,sK2)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) ) | $spl104),
  inference(resolution,[],[f10707,f218])).
fof(f218,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s('type.num.num',X0) = s('type.num.num',X1) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) )),
  inference(resolution,[],[f130,f157])).
fof(f12908,plain,(
  ( ! [X18,X16] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X16,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X16))) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) | $spl204),
  inference(cnf_transformation,[],[f12908_D])).
fof(f12908_D,plain,(
  ( ! [X18,X16] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X16,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X16))) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f12879,plain,(
  ( ! [X61,X62,X63] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X61,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X61))) | p(s(bool,X62)) | p(s(bool,X63)) | s(bool,X63) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X61)))) ) | $spl38),
  inference(resolution,[],[f10635,f215])).
fof(f10635,plain,(
  ( ! [X38] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X38)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X38,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X38)))) ) | $spl38),
  inference(resolution,[],[f10487,f148])).
fof(f10487,plain,(
  ( ! [X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X1,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X1)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X1))))) ) | $spl38),
  inference(resolution,[],[f9884,f165])).
fof(f9884,plain,(
  ( ! [X0] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X0)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X0))))) ) | $spl38),
  inference(resolution,[],[f9872,f163])).
fof(f9872,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl38),
  inference(subsumption_resolution,[],[f9852,f180])).
fof(f9852,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl38),
  inference(superposition,[],[f6443,f1451])).
fof(f1451,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))),
  inference(resolution,[],[f217,f152])).
fof(f217,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))),
  inference(resolution,[],[f130,f156])).
fof(f12867,plain,(
  ( ! [X47,X45,X46,X44] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X44,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X44))) | p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X45) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X44))) | s(bool,X46) != s(bool,X47)) ) | $spl38),
  inference(resolution,[],[f10635,f140])).
fof(f12864,plain,(
  ( ! [X35,X33,X34,X32] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X32,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X32))) | p(s(bool,X33)) | ~p(s(bool,X34)) | p(s(bool,X35)) | s(bool,X35) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X32)))) ) | $spl38),
  inference(resolution,[],[f10635,f139])).
fof(f12863,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X28,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X28))) | p(s(bool,X29)) | p(s(bool,X30)) | s(bool,X29) != s(bool,X31) | s(bool,X30) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X28)))) ) | $spl38),
  inference(resolution,[],[f10635,f138])).
fof(f12862,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X24,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X24))) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X24))) | s(bool,X26) != s(bool,X27)) ) | $spl38),
  inference(resolution,[],[f10635,f136])).
fof(f12860,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X16,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X16))) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) | $spl38),
  inference(resolution,[],[f10635,f134])).
fof(f10866,plain,(
  ( ! [X12] : (s('type.num.num',X12) = s('type.num.num',sK4(sK1,sK2)) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl148),
  inference(cnf_transformation,[],[f10866_D])).
fof(f10866_D,plain,(
  ( ! [X12] : (s('type.num.num',X12) = s('type.num.num',sK4(sK1,sK2)) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f12857,plain,(
  ( ! [X12] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s('type.num.num',X12) = s('type.num.num',sK4(sK1,sK2)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) ) | $spl38),
  inference(resolution,[],[f10635,f218])).
fof(f12847,plain,(
  ( ! [X20,X18] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X18)))) | p(s(bool,X20)) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X18,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl200),
  inference(cnf_transformation,[],[f12847_D])).
fof(f12847_D,plain,(
  ( ! [X20,X18] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X18)))) | p(s(bool,X20)) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X18,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f12818,plain,(
  ( ! [X64,X65,X63] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X63)))) | p(s(bool,X64)) | p(s(bool,X65)) | s(bool,X65) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X63,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl14),
  inference(resolution,[],[f10164,f215])).
fof(f12806,plain,(
  ( ! [X47,X48,X46,X49] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X46)))) | p(s(bool,X47)) | ~p(s(bool,X48)) | s(bool,X47) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X46,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X48) != s(bool,X49)) ) | $spl14),
  inference(resolution,[],[f10164,f140])).
fof(f12803,plain,(
  ( ! [X37,X35,X36,X34] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X34)))) | p(s(bool,X35)) | ~p(s(bool,X36)) | p(s(bool,X37)) | s(bool,X37) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X34,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl14),
  inference(resolution,[],[f10164,f139])).
fof(f12802,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X30)))) | p(s(bool,X31)) | p(s(bool,X32)) | s(bool,X31) != s(bool,X33) | s(bool,X32) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X30,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl14),
  inference(resolution,[],[f10164,f138])).
fof(f12801,plain,(
  ( ! [X28,X26,X29,X27] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X26)))) | p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X27) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X26,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X28) != s(bool,X29)) ) | $spl14),
  inference(resolution,[],[f10164,f136])).
fof(f12799,plain,(
  ( ! [X21,X19,X20,X18] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X18)))) | p(s(bool,X19)) | p(s(bool,X20)) | s(bool,X19) != s(bool,X21) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X18,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl14),
  inference(resolution,[],[f10164,f134])).
fof(f12782,plain,(
  ( ! [X20,X18] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X18)))) | p(s(bool,X20)) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X18,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl198),
  inference(cnf_transformation,[],[f12782_D])).
fof(f12782_D,plain,(
  ( ! [X20,X18] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X18)))) | p(s(bool,X20)) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X18,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f12753,plain,(
  ( ! [X64,X65,X63] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X63)))) | p(s(bool,X64)) | p(s(bool,X65)) | s(bool,X65) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X63,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl38),
  inference(resolution,[],[f9822,f215])).
fof(f12741,plain,(
  ( ! [X47,X48,X46,X49] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X46)))) | p(s(bool,X47)) | ~p(s(bool,X48)) | s(bool,X47) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X46,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X48) != s(bool,X49)) ) | $spl38),
  inference(resolution,[],[f9822,f140])).
fof(f12738,plain,(
  ( ! [X37,X35,X36,X34] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X34)))) | p(s(bool,X35)) | ~p(s(bool,X36)) | p(s(bool,X37)) | s(bool,X37) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X34,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl38),
  inference(resolution,[],[f9822,f139])).
fof(f12737,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X30)))) | p(s(bool,X31)) | p(s(bool,X32)) | s(bool,X31) != s(bool,X33) | s(bool,X32) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X30,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl38),
  inference(resolution,[],[f9822,f138])).
fof(f12736,plain,(
  ( ! [X28,X26,X29,X27] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X26)))) | p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X27) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X26,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X28) != s(bool,X29)) ) | $spl38),
  inference(resolution,[],[f9822,f136])).
fof(f12734,plain,(
  ( ! [X21,X19,X20,X18] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X18)))) | p(s(bool,X19)) | p(s(bool,X20)) | s(bool,X19) != s(bool,X21) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X18,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl38),
  inference(resolution,[],[f9822,f134])).
fof(f12657,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X1,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X0) != s(bool,X3) | ~p(s(bool,X3)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X1))))) ) | $spl196),
  inference(cnf_transformation,[],[f12657_D])).
fof(f12657_D,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X1,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X0) != s(bool,X3) | ~p(s(bool,X3)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X1))))) ) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f12576,plain,(
  ( ! [X70,X68,X71,X69] : (s(bool,X68) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X69,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X69)))) | p(s(bool,X70)) | ~p(s(bool,X71)) | s(bool,X68) != s(bool,X71)) )),
  inference(resolution,[],[f3597,f215])).
fof(f3597,plain,(
  ( ! [X47,X46] : (~p(s(bool,X47)) | s(bool,X47) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X46,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X46))))) )),
  inference(resolution,[],[f653,f144])).
fof(f12562,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X35) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X36,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X36)))) | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X35) != s(bool,X38) | s(bool,X37) != s(bool,X39)) )),
  inference(resolution,[],[f3597,f140])).
fof(f12560,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,X25) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X26,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X26)))) | p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X25) != s(bool,X28)) )),
  inference(resolution,[],[f3597,f139])).
fof(f12558,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,X15) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X16,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X16)))) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X15) != s(bool,X18)) )),
  inference(resolution,[],[f3597,f138])).
fof(f12557,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,X10) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X11,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X11)))) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X10) != s(bool,X13) | s(bool,X12) != s(bool,X14)) )),
  inference(resolution,[],[f3597,f136])).
fof(f12555,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X1,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X1)))) | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X0) != s(bool,X3)) )),
  inference(resolution,[],[f3597,f134])).
fof(f12548,plain,(
  ( ! [X18,X16] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X16))) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) | $spl194),
  inference(cnf_transformation,[],[f12548_D])).
fof(f12548_D,plain,(
  ( ! [X18,X16] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X16))) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f12522,plain,(
  ( ! [X61,X62,X63] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X61))) | p(s(bool,X62)) | p(s(bool,X63)) | s(bool,X63) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X61)))) ) | $spl104),
  inference(resolution,[],[f10556,f215])).
fof(f12510,plain,(
  ( ! [X47,X45,X46,X44] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X44))) | p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X45) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X44))) | s(bool,X46) != s(bool,X47)) ) | $spl104),
  inference(resolution,[],[f10556,f140])).
fof(f12507,plain,(
  ( ! [X35,X33,X34,X32] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X32))) | p(s(bool,X33)) | ~p(s(bool,X34)) | p(s(bool,X35)) | s(bool,X35) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X32)))) ) | $spl104),
  inference(resolution,[],[f10556,f139])).
fof(f12506,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X28))) | p(s(bool,X29)) | p(s(bool,X30)) | s(bool,X29) != s(bool,X31) | s(bool,X30) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X28)))) ) | $spl104),
  inference(resolution,[],[f10556,f138])).
fof(f12505,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X24))) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X24))) | s(bool,X26) != s(bool,X27)) ) | $spl104),
  inference(resolution,[],[f10556,f136])).
fof(f12503,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X16))) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) | $spl104),
  inference(resolution,[],[f10556,f134])).
fof(f12500,plain,(
  ( ! [X12] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s('type.num.num',X12) = s('type.num.num',sK3(sK1,sK2)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) ) | $spl104),
  inference(resolution,[],[f10556,f218])).
fof(f12423,plain,(
  ( ! [X18,X16] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X16))) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) | $spl192),
  inference(cnf_transformation,[],[f12423_D])).
fof(f12423_D,plain,(
  ( ! [X18,X16] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X16))) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f12395,plain,(
  ( ! [X61,X62,X63] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X61))) | p(s(bool,X62)) | p(s(bool,X63)) | s(bool,X63) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X61)))) ) | $spl38),
  inference(resolution,[],[f10498,f215])).
fof(f10498,plain,(
  ( ! [X38] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X38)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X38)))) ) | $spl38),
  inference(resolution,[],[f9884,f148])).
fof(f12383,plain,(
  ( ! [X47,X45,X46,X44] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X44))) | p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X45) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X44))) | s(bool,X46) != s(bool,X47)) ) | $spl38),
  inference(resolution,[],[f10498,f140])).
fof(f12380,plain,(
  ( ! [X35,X33,X34,X32] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X32))) | p(s(bool,X33)) | ~p(s(bool,X34)) | p(s(bool,X35)) | s(bool,X35) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X32)))) ) | $spl38),
  inference(resolution,[],[f10498,f139])).
fof(f12379,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X28))) | p(s(bool,X29)) | p(s(bool,X30)) | s(bool,X29) != s(bool,X31) | s(bool,X30) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X28)))) ) | $spl38),
  inference(resolution,[],[f10498,f138])).
fof(f12378,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X24))) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X24))) | s(bool,X26) != s(bool,X27)) ) | $spl38),
  inference(resolution,[],[f10498,f136])).
fof(f12376,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X16))) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) | $spl38),
  inference(resolution,[],[f10498,f134])).
fof(f12373,plain,(
  ( ! [X12] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s('type.num.num',X12) = s('type.num.num',sK4(sK1,sK2)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) ) | $spl38),
  inference(resolution,[],[f10498,f218])).
fof(f12332,plain,(
  ( ! [X18,X16] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X16,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X16))) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) | $spl188),
  inference(cnf_transformation,[],[f12332_D])).
fof(f12332_D,plain,(
  ( ! [X18,X16] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X16,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X16))) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f12306,plain,(
  ( ! [X61,X62,X63] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X61,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X61))) | p(s(bool,X62)) | p(s(bool,X63)) | s(bool,X63) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X61)))) ) | $spl14),
  inference(resolution,[],[f10426,f215])).
fof(f12294,plain,(
  ( ! [X47,X45,X46,X44] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X44,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X44))) | p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X45) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X44))) | s(bool,X46) != s(bool,X47)) ) | $spl14),
  inference(resolution,[],[f10426,f140])).
fof(f12291,plain,(
  ( ! [X35,X33,X34,X32] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X32,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X32))) | p(s(bool,X33)) | ~p(s(bool,X34)) | p(s(bool,X35)) | s(bool,X35) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X32)))) ) | $spl14),
  inference(resolution,[],[f10426,f139])).
fof(f12290,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X28,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X28))) | p(s(bool,X29)) | p(s(bool,X30)) | s(bool,X29) != s(bool,X31) | s(bool,X30) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X28)))) ) | $spl14),
  inference(resolution,[],[f10426,f138])).
fof(f12289,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X24,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X24))) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X24))) | s(bool,X26) != s(bool,X27)) ) | $spl14),
  inference(resolution,[],[f10426,f136])).
fof(f12287,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X16,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X16))) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) | $spl14),
  inference(resolution,[],[f10426,f134])).
fof(f12284,plain,(
  ( ! [X12] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s('type.num.num',X12) = s('type.num.num',sK3(sK1,sK2)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) ) | $spl14),
  inference(resolution,[],[f10426,f218])).
fof(f12227,plain,(
  ( ! [X0,X3,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | s(bool,X1) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X0,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl186),
  inference(cnf_transformation,[],[f12227_D])).
fof(f12227_D,plain,(
  ( ! [X0,X3,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | s(bool,X1) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X0,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f12110,plain,(
  ( ! [X66,X64,X67,X65] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X64),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,X65) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X64,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X66)) | p(s(bool,X67)) | s(bool,X65) != s(bool,X67)) )),
  inference(resolution,[],[f3292,f215])).
fof(f3292,plain,(
  ( ! [X35,X34] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X34),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | p(s(bool,X35)) | s(bool,X35) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X34,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f652,f141])).
fof(f12098,plain,(
  ( ! [X39,X37,X35,X38,X36] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X35),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,X36) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X35,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X37) | s(bool,X38) != s(bool,X39)) )),
  inference(resolution,[],[f3292,f140])).
fof(f12095,plain,(
  ( ! [X24,X23,X21,X22,X20] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,X21) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X20,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X21) != s(bool,X24)) )),
  inference(resolution,[],[f3292,f139])).
fof(f12094,plain,(
  ( ! [X19,X17,X15,X18,X16] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X15),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,X16) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X15,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) )),
  inference(resolution,[],[f3292,f138])).
fof(f12093,plain,(
  ( ! [X14,X12,X10,X13,X11] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X10),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,X11) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X10,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X12) | s(bool,X13) != s(bool,X14)) )),
  inference(resolution,[],[f3292,f136])).
fof(f12091,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,X1) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X0,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) )),
  inference(resolution,[],[f3292,f134])).
fof(f12225,plain,(
  ( ! [X12,X15,X13] : (p(s(bool,X12)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X13),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,X12) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X13,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl184),
  inference(cnf_transformation,[],[f12225_D])).
fof(f12225_D,plain,(
  ( ! [X12,X15,X13] : (p(s(bool,X12)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X13),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,X12) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X13,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f12089,plain,(
  ( ! [X78,X76,X79,X77] : (p(s(bool,X76)) | s(bool,X76) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X77,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X78)) | p(s(bool,X79)) | s(bool,X79) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X77),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f3292,f215])).
fof(f12077,plain,(
  ( ! [X47,X50,X48,X51,X49] : (p(s(bool,X47)) | s(bool,X47) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X48,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X49)) | ~p(s(bool,X50)) | s(bool,X49) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X48),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,X50) != s(bool,X51)) )),
  inference(resolution,[],[f3292,f140])).
fof(f12074,plain,(
  ( ! [X35,X33,X36,X34,X32] : (p(s(bool,X32)) | s(bool,X32) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X33,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X34)) | ~p(s(bool,X35)) | p(s(bool,X36)) | s(bool,X36) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X33),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f3292,f139])).
fof(f12073,plain,(
  ( ! [X30,X28,X31,X29,X27] : (p(s(bool,X27)) | s(bool,X27) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X28,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X29)) | p(s(bool,X30)) | s(bool,X29) != s(bool,X31) | s(bool,X30) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X28),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f3292,f138])).
fof(f12072,plain,(
  ( ! [X26,X24,X23,X25,X22] : (p(s(bool,X22)) | s(bool,X22) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X23,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X23),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,X25) != s(bool,X26)) )),
  inference(resolution,[],[f3292,f136])).
fof(f12070,plain,(
  ( ! [X14,X12,X15,X13,X16] : (p(s(bool,X12)) | s(bool,X12) = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X13,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X14) != s(bool,X16) | s(bool,X15) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X13),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f3292,f134])).
fof(f12056,plain,(
  ( ! [X18,X16] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X16,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X16))) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) | $spl182),
  inference(cnf_transformation,[],[f12056_D])).
fof(f12056_D,plain,(
  ( ! [X18,X16] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X16,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X16))) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f12028,plain,(
  ( ! [X61,X62,X63] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X61,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X61))) | p(s(bool,X62)) | p(s(bool,X63)) | s(bool,X63) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X61)))) ) | $spl38),
  inference(resolution,[],[f10354,f215])).
fof(f10354,plain,(
  ( ! [X38] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X38)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X38,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X38)))) ) | $spl38),
  inference(resolution,[],[f9823,f148])).
fof(f9823,plain,(
  ( ! [X2] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X2)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X2))))) ) | $spl38),
  inference(resolution,[],[f6443,f165])).
fof(f12016,plain,(
  ( ! [X47,X45,X46,X44] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X44,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X44))) | p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X45) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X44))) | s(bool,X46) != s(bool,X47)) ) | $spl38),
  inference(resolution,[],[f10354,f140])).
fof(f12013,plain,(
  ( ! [X35,X33,X34,X32] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X32,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X32))) | p(s(bool,X33)) | ~p(s(bool,X34)) | p(s(bool,X35)) | s(bool,X35) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X32)))) ) | $spl38),
  inference(resolution,[],[f10354,f139])).
fof(f12012,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X28,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X28))) | p(s(bool,X29)) | p(s(bool,X30)) | s(bool,X29) != s(bool,X31) | s(bool,X30) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X28)))) ) | $spl38),
  inference(resolution,[],[f10354,f138])).
fof(f12011,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X24,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X24))) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X24))) | s(bool,X26) != s(bool,X27)) ) | $spl38),
  inference(resolution,[],[f10354,f136])).
fof(f12009,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X16,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X16))) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X16)))) ) | $spl38),
  inference(resolution,[],[f10354,f134])).
fof(f12006,plain,(
  ( ! [X12] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s('type.num.num',X12) = s('type.num.num',sK4(sK1,sK2)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) ) | $spl38),
  inference(resolution,[],[f10354,f218])).
fof(f12000,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | $spl178),
  inference(cnf_transformation,[],[f12000_D])).
fof(f12000_D,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f11998,plain,(
  ( ! [X12] : (~p(s(bool,X12)) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl94),
  inference(subsumption_resolution,[],[f11978,f152])).
fof(f11978,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,X12) | ~p(s(bool,X12)) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl94),
  inference(superposition,[],[f6371,f155])).
fof(f11994,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl177),
  inference(cnf_transformation,[],[f11994_D])).
fof(f11994_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) <=> ~$spl177),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl177])])).
fof(f438,plain,(
  ( ! [X21] : (s(bool,'T_0') != s(bool,X21)) ) | $spl32),
  inference(cnf_transformation,[],[f438_D])).
fof(f438_D,plain,(
  ( ! [X21] : (s(bool,'T_0') != s(bool,X21)) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f11997,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,X11) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl94),
  inference(subsumption_resolution,[],[f11977,f151])).
fof(f151,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f93])).
fof(f11977,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,X11) | ~p(s(bool,X11)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl94),
  inference(superposition,[],[f6371,f154])).
fof(f11996,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,X10) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl94),
  inference(subsumption_resolution,[],[f11976,f151])).
fof(f11976,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,X10) | ~p(s(bool,X10)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl94),
  inference(superposition,[],[f6371,f152])).
fof(f11995,plain,(
  ( ! [X6,X7] : (s(bool,X6) != s(bool,X7) | ~p(s(bool,X6)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | ($spl6 | $spl94)),
  inference(subsumption_resolution,[],[f11973,f255])).
fof(f11973,plain,(
  ( ! [X6,X7] : (s(bool,X6) != s(bool,X7) | ~p(s(bool,X7)) | ~p(s(bool,X6)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl94),
  inference(superposition,[],[f6371,f144])).
fof(f11992,plain,(
  ( ! [X4,X5] : (s(bool,X4) != s(bool,X5) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | ~p(s(bool,X4))) ) | ($spl6 | $spl94)),
  inference(subsumption_resolution,[],[f11972,f255])).
fof(f11972,plain,(
  ( ! [X4,X5] : (s(bool,X4) != s(bool,X5) | ~p(s(bool,X5)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | ~p(s(bool,X4))) ) | $spl94),
  inference(superposition,[],[f6371,f144])).
fof(f4803,plain,(
  ( ! [X20] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl84),
  inference(cnf_transformation,[],[f4803_D])).
fof(f4803_D,plain,(
  ( ! [X20] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f11986,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | $spl175),
  inference(cnf_transformation,[],[f11986_D])).
fof(f11986_D,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) <=> ~$spl175),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl175])])).
fof(f11989,plain,(
  ( ! [X20] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl94),
  inference(subsumption_resolution,[],[f11988,f148])).
fof(f11988,plain,(
  ( ! [X20] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'T_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl94),
  inference(forward_demodulation,[],[f11961,f131])).
fof(f11961,plain,(
  ( ! [X20] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl94),
  inference(superposition,[],[f6371,f645])).
fof(f4800,plain,(
  ( ! [X12] : (s(bool,'F_0') = s(bool,X12)) ) | $spl82),
  inference(cnf_transformation,[],[f4800_D])).
fof(f4800_D,plain,(
  ( ! [X12] : (s(bool,'F_0') = s(bool,X12)) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f11987,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,'F_0') = s(bool,X12)) ) | $spl94),
  inference(subsumption_resolution,[],[f11959,f148])).
fof(f11959,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X12)) | s(bool,'F_0') = s(bool,X12)) ) | $spl94),
  inference(superposition,[],[f6371,f155])).
fof(f11981,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X11))) ) | $spl94),
  inference(duplicate_literal_removal,[],[f11958])).
fof(f11958,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X11)) | ~p(s(bool,X11))) ) | $spl94),
  inference(superposition,[],[f6371,f154])).
fof(f11982,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X10))) ) | $spl94),
  inference(duplicate_literal_removal,[],[f11957])).
fof(f11957,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X10)) | ~p(s(bool,X10))) ) | $spl94),
  inference(superposition,[],[f6371,f152])).
fof(f11930,plain,(
  ( ! [X6,X8] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl172),
  inference(cnf_transformation,[],[f11930_D])).
fof(f11930_D,plain,(
  ( ! [X6,X8] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f11907,plain,(
  ( ! [X54,X55,X53] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X53),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X54)) | ~p(s(bool,X55)) | s(bool,X55) != s(bool,'const.bool.IN_2'(s('type.num.num',X53),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f7562,f215])).
fof(f7562,plain,(
  ( ! [X41] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X41),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X41),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) )),
  inference(resolution,[],[f1438,f152])).
fof(f1438,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) )),
  inference(resolution,[],[f217,f163])).
fof(f11893,plain,(
  ( ! [X37,X35,X36,X34] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X34),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X35)) | ~p(s(bool,X36)) | s(bool,X36) != s(bool,'const.bool.IN_2'(s('type.num.num',X34),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X35) != s(bool,X37)) )),
  inference(resolution,[],[f7562,f140])).
fof(f11891,plain,(
  ( ! [X28,X26,X29,X27] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X26),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',X26),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f7562,f139])).
fof(f11889,plain,(
  ( ! [X21,X19,X20,X18] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X19)) | ~p(s(bool,X20)) | s(bool,X19) != s(bool,X21) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f7562,f138])).
fof(f11888,plain,(
  ( ! [X14,X17,X15,X16] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X14),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',X14),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X15) != s(bool,X17)) )),
  inference(resolution,[],[f7562,f136])).
fof(f11886,plain,(
  ( ! [X6,X8,X7,X9] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,X9) | s(bool,X8) != s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f7562,f134])).
fof(f11835,plain,(
  ( ! [X6,X4] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4))))) | ~p(s(bool,X6)) | s(bool,X6) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4)))) ) | $spl170),
  inference(cnf_transformation,[],[f11835_D])).
fof(f11835_D,plain,(
  ( ! [X6,X4] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4))))) | ~p(s(bool,X6)) | s(bool,X6) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4)))) ) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f11819,plain,(
  ( ! [X52,X53,X51] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X51))))) | p(s(bool,X52)) | ~p(s(bool,X53)) | s(bool,X53) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X51)))) ) | $spl14),
  inference(resolution,[],[f10297,f215])).
fof(f10297,plain,(
  ( ! [X40] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X40)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X40)))))) ) | $spl14),
  inference(resolution,[],[f10162,f152])).
fof(f10162,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X0)))))) | ~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X0))))) ) | $spl14),
  inference(resolution,[],[f8515,f156])).
fof(f11805,plain,(
  ( ! [X35,X33,X34,X32] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X32))))) | ~p(s(bool,X33)) | ~p(s(bool,X34)) | s(bool,X34) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X32))) | s(bool,X33) != s(bool,X35)) ) | $spl14),
  inference(resolution,[],[f10297,f140])).
fof(f11803,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X24))))) | p(s(bool,X25)) | ~p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X24)))) ) | $spl14),
  inference(resolution,[],[f10297,f139])).
fof(f11801,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X16))))) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X16)))) ) | $spl14),
  inference(resolution,[],[f10297,f138])).
fof(f11800,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X12))))) | ~p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X14) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X12))) | s(bool,X13) != s(bool,X15)) ) | $spl14),
  inference(resolution,[],[f10297,f136])).
fof(f11798,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4))))) | p(s(bool,X5)) | ~p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | s(bool,X6) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4)))) ) | $spl14),
  inference(resolution,[],[f10297,f134])).
fof(f11765,plain,(
  ( ! [X15,X18,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),X16))) | ~p(s(bool,X18)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X16,'type.num.num')),s(fun('type.num.num',bool),X16))))) ) | $spl168),
  inference(cnf_transformation,[],[f11765_D])).
fof(f11765_D,plain,(
  ( ! [X15,X18,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),X16))) | ~p(s(bool,X18)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X16,'type.num.num')),s(fun('type.num.num',bool),X16))))) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f11733,plain,(
  ( ! [X85,X83,X86,X84] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X83),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X84,'type.num.num')),s(fun('type.num.num',bool),X84)))) | p(s(bool,X85)) | ~p(s(bool,X86)) | s(bool,X86) != s(bool,'const.bool.IN_2'(s('type.num.num',X83),s(fun('type.num.num',bool),X84)))) )),
  inference(resolution,[],[f3992,f215])).
fof(f3992,plain,(
  ( ! [X2,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),X2)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X2,'type.num.num')),s(fun('type.num.num',bool),X2))))) )),
  inference(resolution,[],[f655,f164])).
fof(f11719,plain,(
  ( ! [X54,X52,X50,X53,X51] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X50),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X51,'type.num.num')),s(fun('type.num.num',bool),X51)))) | ~p(s(bool,X52)) | ~p(s(bool,X53)) | s(bool,X53) != s(bool,'const.bool.IN_2'(s('type.num.num',X50),s(fun('type.num.num',bool),X51))) | s(bool,X52) != s(bool,X54)) )),
  inference(resolution,[],[f3992,f140])).
fof(f11717,plain,(
  ( ! [X43,X41,X44,X42,X40] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X40),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X41,'type.num.num')),s(fun('type.num.num',bool),X41)))) | p(s(bool,X42)) | ~p(s(bool,X43)) | ~p(s(bool,X44)) | s(bool,X43) != s(bool,'const.bool.IN_2'(s('type.num.num',X40),s(fun('type.num.num',bool),X41)))) )),
  inference(resolution,[],[f3992,f139])).
fof(f11715,plain,(
  ( ! [X30,X33,X31,X34,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X30),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X31,'type.num.num')),s(fun('type.num.num',bool),X31)))) | p(s(bool,X32)) | ~p(s(bool,X33)) | s(bool,X32) != s(bool,X34) | s(bool,X33) != s(bool,'const.bool.IN_2'(s('type.num.num',X30),s(fun('type.num.num',bool),X31)))) )),
  inference(resolution,[],[f3992,f138])).
fof(f11714,plain,(
  ( ! [X28,X26,X29,X27,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X25),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X26,'type.num.num')),s(fun('type.num.num',bool),X26)))) | ~p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',X25),s(fun('type.num.num',bool),X26))) | s(bool,X27) != s(bool,X29)) )),
  inference(resolution,[],[f3992,f136])).
fof(f11712,plain,(
  ( ! [X19,X17,X15,X18,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X16,'type.num.num')),s(fun('type.num.num',bool),X16)))) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),X16)))) )),
  inference(resolution,[],[f3992,f134])).
fof(f11673,plain,(
  ( ! [X6,X4] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4))))) | ~p(s(bool,X6)) | s(bool,X6) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4)))) ) | $spl166),
  inference(cnf_transformation,[],[f11673_D])).
fof(f11673_D,plain,(
  ( ! [X6,X4] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4))))) | ~p(s(bool,X6)) | s(bool,X6) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4)))) ) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f11657,plain,(
  ( ! [X52,X53,X51] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X51))))) | p(s(bool,X52)) | ~p(s(bool,X53)) | s(bool,X53) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X51)))) ) | $spl38),
  inference(resolution,[],[f10240,f215])).
fof(f10240,plain,(
  ( ! [X40] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X40)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X40)))))) ) | $spl38),
  inference(resolution,[],[f9820,f152])).
fof(f9820,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X0)))))) | ~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X0))))) ) | $spl38),
  inference(resolution,[],[f6443,f156])).
fof(f11643,plain,(
  ( ! [X35,X33,X34,X32] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X32))))) | ~p(s(bool,X33)) | ~p(s(bool,X34)) | s(bool,X34) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X32))) | s(bool,X33) != s(bool,X35)) ) | $spl38),
  inference(resolution,[],[f10240,f140])).
fof(f11641,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X24))))) | p(s(bool,X25)) | ~p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X24)))) ) | $spl38),
  inference(resolution,[],[f10240,f139])).
fof(f11639,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X16))))) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X16)))) ) | $spl38),
  inference(resolution,[],[f10240,f138])).
fof(f11638,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X12))))) | ~p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X14) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X12))) | s(bool,X13) != s(bool,X15)) ) | $spl38),
  inference(resolution,[],[f10240,f136])).
fof(f11636,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4))))) | p(s(bool,X5)) | ~p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | s(bool,X6) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4)))) ) | $spl38),
  inference(resolution,[],[f10240,f134])).
fof(f11624,plain,(
  ( ! [X6,X7,X9] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,X9) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X7,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X7))) | ~p(s(bool,X9)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),X7))))) ) | $spl164),
  inference(cnf_transformation,[],[f11624_D])).
fof(f11624_D,plain,(
  ( ! [X6,X7,X9] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,X9) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X7,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X7))) | ~p(s(bool,X9)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),X7))))) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f11598,plain,(
  ( ! [X76,X74,X77,X75] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X74),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X74),s(fun('type.num.num',bool),X75)))) | p(s(bool,X76)) | ~p(s(bool,X77)) | s(bool,X77) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X75,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X75)))) )),
  inference(resolution,[],[f3742,f215])).
fof(f3742,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X7,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X7)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),X7))))) )),
  inference(resolution,[],[f654,f165])).
fof(f11584,plain,(
  ( ! [X45,X43,X41,X44,X42] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X41),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X41),s(fun('type.num.num',bool),X42)))) | ~p(s(bool,X43)) | ~p(s(bool,X44)) | s(bool,X44) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X42,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X42))) | s(bool,X43) != s(bool,X45)) )),
  inference(resolution,[],[f3742,f140])).
fof(f11582,plain,(
  ( ! [X35,X33,X31,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X31),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X31),s(fun('type.num.num',bool),X32)))) | p(s(bool,X33)) | ~p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X34) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X32,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X32)))) )),
  inference(resolution,[],[f3742,f139])).
fof(f11580,plain,(
  ( ! [X24,X23,X21,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),X22)))) | p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,X25) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X22,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X22)))) )),
  inference(resolution,[],[f3742,f138])).
fof(f11579,plain,(
  ( ! [X19,X17,X20,X18,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X16),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X16),s(fun('type.num.num',bool),X17)))) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X19) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X17,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X17))) | s(bool,X18) != s(bool,X20)) )),
  inference(resolution,[],[f3742,f136])).
fof(f11577,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),X7)))) | p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,X9) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X7,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),X7)))) )),
  inference(resolution,[],[f3742,f134])).
fof(f11517,plain,(
  ( ! [X8,X11,X9] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X11)) | s(bool,X11) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X9))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X9))))))) ) | $spl162),
  inference(cnf_transformation,[],[f11517_D])).
fof(f11517_D,plain,(
  ( ! [X8,X11,X9] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X11)) | s(bool,X11) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X9))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X9))))))) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f11501,plain,(
  ( ! [X78,X76,X79,X77] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X76),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X76),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X77)))))) | p(s(bool,X78)) | ~p(s(bool,X79)) | s(bool,X79) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X77)))) )),
  inference(resolution,[],[f3738,f215])).
fof(f3738,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))))) )),
  inference(resolution,[],[f654,f156])).
fof(f11487,plain,(
  ( ! [X47,X45,X43,X46,X44] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X43),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X43),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X44)))))) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X46) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X44))) | s(bool,X45) != s(bool,X47)) )),
  inference(resolution,[],[f3738,f140])).
fof(f11485,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X33),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X33),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X34)))))) | p(s(bool,X35)) | ~p(s(bool,X36)) | ~p(s(bool,X37)) | s(bool,X36) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X34)))) )),
  inference(resolution,[],[f3738,f139])).
fof(f11483,plain,(
  ( ! [X26,X24,X23,X27,X25] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X23),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X23),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X24)))))) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X26) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X24)))) )),
  inference(resolution,[],[f3738,f138])).
fof(f11482,plain,(
  ( ! [X21,X19,X22,X20,X18] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X19)))))) | ~p(s(bool,X20)) | ~p(s(bool,X21)) | s(bool,X21) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X19))) | s(bool,X20) != s(bool,X22)) )),
  inference(resolution,[],[f3738,f136])).
fof(f11480,plain,(
  ( ! [X12,X10,X8,X11,X9] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X9)))))) | p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X9)))) )),
  inference(resolution,[],[f3738,f134])).
fof(f11278,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl160),
  inference(cnf_transformation,[],[f11278_D])).
fof(f11278_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f11260,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | p(s(bool,X28)) | s(bool,X28) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl151),
  inference(resolution,[],[f11232,f215])).
fof(f11232,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl151),
  inference(trivial_inequality_removal,[],[f11226])).
fof(f11226,plain,(
  s(bool,'F_0') != s(bool,'F_0') | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl151),
  inference(superposition,[],[f10867,f150])).
fof(f10867,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl151),
  inference(cnf_transformation,[],[f10867_D])).
fof(f10867_D,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) <=> ~$spl151),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl151])])).
fof(f11248,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X23) != s(bool,X24)) ) | $spl151),
  inference(resolution,[],[f11232,f140])).
fof(f11245,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl151),
  inference(resolution,[],[f11232,f139])).
fof(f11244,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl151),
  inference(resolution,[],[f11232,f138])).
fof(f11243,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X8) != s(bool,X9)) ) | $spl151),
  inference(resolution,[],[f11232,f136])).
fof(f11241,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl151),
  inference(resolution,[],[f11232,f134])).
fof(f11236,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl158),
  inference(cnf_transformation,[],[f11236_D])).
fof(f11236_D,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f11237,plain,(
  ( ! [X1] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X1))) ) | $spl151),
  inference(subsumption_resolution,[],[f11222,f148])).
fof(f11222,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,X1) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X1))) ) | $spl151),
  inference(superposition,[],[f10867,f141])).
fof(f11234,plain,(
  ( ! [X0] : (p(s(bool,X0)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl151),
  inference(subsumption_resolution,[],[f11221,f148])).
fof(f11221,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | p(s(bool,X0)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl151),
  inference(superposition,[],[f10867,f141])).
fof(f11213,plain,(
  $false | $spl150),
  inference(subsumption_resolution,[],[f11212,f208])).
fof(f11212,plain,(
  p(s(bool,'F_0')) | $spl150),
  inference(forward_demodulation,[],[f11169,f10868])).
fof(f11169,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl150),
  inference(resolution,[],[f11074,f165])).
fof(f11074,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl150),
  inference(subsumption_resolution,[],[f10973,f207])).
fof(f10973,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl150),
  inference(superposition,[],[f164,f10868])).
fof(f10953,plain,(
  ( ! [X17,X15] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X15))) | p(s(bool,X17)) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X15)))) ) | $spl156),
  inference(cnf_transformation,[],[f10953_D])).
fof(f10953_D,plain,(
  ( ! [X17,X15] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X15))) | p(s(bool,X17)) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X15)))) ) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f10927,plain,(
  ( ! [X61,X62,X60] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X60))) | p(s(bool,X61)) | p(s(bool,X62)) | s(bool,X62) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X60)))) ) | $spl14),
  inference(resolution,[],[f10176,f215])).
fof(f10176,plain,(
  ( ! [X39] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X39)))) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X39)))) ) | $spl14),
  inference(resolution,[],[f8515,f148])).
fof(f10915,plain,(
  ( ! [X45,X43,X46,X44] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X43))) | p(s(bool,X44)) | ~p(s(bool,X45)) | s(bool,X44) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X43))) | s(bool,X45) != s(bool,X46)) ) | $spl14),
  inference(resolution,[],[f10176,f140])).
fof(f10912,plain,(
  ( ! [X33,X31,X34,X32] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X31))) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X34) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X31)))) ) | $spl14),
  inference(resolution,[],[f10176,f139])).
fof(f10911,plain,(
  ( ! [X30,X28,X29,X27] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X27))) | p(s(bool,X28)) | p(s(bool,X29)) | s(bool,X28) != s(bool,X30) | s(bool,X29) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X27)))) ) | $spl14),
  inference(resolution,[],[f10176,f138])).
fof(f10910,plain,(
  ( ! [X26,X24,X23,X25] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X23))) | p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X23))) | s(bool,X25) != s(bool,X26)) ) | $spl14),
  inference(resolution,[],[f10176,f136])).
fof(f10908,plain,(
  ( ! [X17,X15,X18,X16] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X15))) | p(s(bool,X16)) | p(s(bool,X17)) | s(bool,X16) != s(bool,X18) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X15)))) ) | $spl14),
  inference(resolution,[],[f10176,f134])).
fof(f10868,plain,(
  s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl150),
  inference(cnf_transformation,[],[f10868_D])).
fof(f10868_D,plain,(
  s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f10906,plain,(
  ( ! [X12] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s('type.num.num',X12) = s('type.num.num',sK3(sK1,sK2)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) ) | $spl14),
  inference(resolution,[],[f10176,f218])).
fof(f10869,plain,(
  ( ! [X17,X15] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X15))) | p(s(bool,X17)) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X15)))) ) | $spl152),
  inference(cnf_transformation,[],[f10869_D])).
fof(f10869_D,plain,(
  ( ! [X17,X15] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X15))) | p(s(bool,X17)) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X15)))) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f10841,plain,(
  ( ! [X61,X62,X60] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X60))) | p(s(bool,X61)) | p(s(bool,X62)) | s(bool,X62) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X60)))) ) | $spl38),
  inference(resolution,[],[f9834,f215])).
fof(f10829,plain,(
  ( ! [X45,X43,X46,X44] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X43))) | p(s(bool,X44)) | ~p(s(bool,X45)) | s(bool,X44) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X43))) | s(bool,X45) != s(bool,X46)) ) | $spl38),
  inference(resolution,[],[f9834,f140])).
fof(f10826,plain,(
  ( ! [X33,X31,X34,X32] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X31))) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X34) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X31)))) ) | $spl38),
  inference(resolution,[],[f9834,f139])).
fof(f10825,plain,(
  ( ! [X30,X28,X29,X27] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X27))) | p(s(bool,X28)) | p(s(bool,X29)) | s(bool,X28) != s(bool,X30) | s(bool,X29) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X27)))) ) | $spl38),
  inference(resolution,[],[f9834,f138])).
fof(f10824,plain,(
  ( ! [X26,X24,X23,X25] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X23))) | p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X23))) | s(bool,X25) != s(bool,X26)) ) | $spl38),
  inference(resolution,[],[f9834,f136])).
fof(f10822,plain,(
  ( ! [X17,X15,X18,X16] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X15))) | p(s(bool,X16)) | p(s(bool,X17)) | s(bool,X16) != s(bool,X18) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X15)))) ) | $spl38),
  inference(resolution,[],[f9834,f134])).
fof(f10820,plain,(
  ( ! [X12] : (s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s('type.num.num',X12) = s('type.num.num',sK4(sK1,sK2)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) ) | $spl38),
  inference(resolution,[],[f9834,f218])).
fof(f10815,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl146),
  inference(cnf_transformation,[],[f10815_D])).
fof(f10815_D,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f10813,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl74),
  inference(subsumption_resolution,[],[f10794,f147])).
fof(f10794,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl74),
  inference(superposition,[],[f4606,f155])).
fof(f10809,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl144),
  inference(cnf_transformation,[],[f10809_D])).
fof(f10809_D,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f10812,plain,(
  ( ! [X9] : (p(s(bool,X9)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl74),
  inference(subsumption_resolution,[],[f10790,f148])).
fof(f10790,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,X9) | p(s(bool,X9)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl74),
  inference(superposition,[],[f4606,f150])).
fof(f10811,plain,(
  ( ! [X8] : (p(s(bool,X8)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl74),
  inference(subsumption_resolution,[],[f10789,f148])).
fof(f10789,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,X8) | p(s(bool,X8)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl74),
  inference(superposition,[],[f4606,f148])).
fof(f10810,plain,(
  ( ! [X2,X3] : (s(bool,X2) != s(bool,X3) | p(s(bool,X3)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl74),
  inference(subsumption_resolution,[],[f10786,f215])).
fof(f10786,plain,(
  ( ! [X2,X3] : (s(bool,X2) != s(bool,X3) | p(s(bool,X3)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X2))) ) | $spl74),
  inference(superposition,[],[f4606,f141])).
fof(f10807,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | p(s(bool,X1)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl74),
  inference(subsumption_resolution,[],[f10785,f215])).
fof(f10785,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl74),
  inference(superposition,[],[f4606,f141])).
fof(f10801,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl143),
  inference(cnf_transformation,[],[f10801_D])).
fof(f10801_D,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) <=> ~$spl143),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl143])])).
fof(f6553,plain,(
  ( ! [X21] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl98),
  inference(cnf_transformation,[],[f6553_D])).
fof(f6553_D,plain,(
  ( ! [X21] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f10805,plain,(
  ( ! [X21] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl74),
  inference(subsumption_resolution,[],[f10804,f151])).
fof(f10804,plain,(
  ( ! [X21] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl74),
  inference(forward_demodulation,[],[f10777,f131])).
fof(f10777,plain,(
  ( ! [X21] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl74),
  inference(superposition,[],[f4606,f644])).
fof(f10802,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X13))) ) | $spl74),
  inference(subsumption_resolution,[],[f10775,f151])).
fof(f10775,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,X13)) ) | $spl74),
  inference(superposition,[],[f4606,f155])).
fof(f10796,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X9))) ) | $spl74),
  inference(duplicate_literal_removal,[],[f10771])).
fof(f10771,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X9)) | p(s(bool,X9))) ) | $spl74),
  inference(superposition,[],[f4606,f150])).
fof(f10797,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X8))) ) | $spl74),
  inference(duplicate_literal_removal,[],[f10770])).
fof(f10770,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X8)) | p(s(bool,X8))) ) | $spl74),
  inference(superposition,[],[f4606,f148])).
fof(f10746,plain,(
  ( ! [X4,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X2))) | ~p(s(bool,X4))) ) | $spl140),
  inference(cnf_transformation,[],[f10746_D])).
fof(f10746_D,plain,(
  ( ! [X4,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X2))) | ~p(s(bool,X4))) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f10718,plain,(
  ( ! [X50,X51,X49] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X49)))) | p(s(bool,X50)) | ~p(s(bool,X51)) | s(bool,X51) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X49,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X49)))) ) | $spl104),
  inference(resolution,[],[f10545,f215])).
fof(f10704,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X30)))) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X32) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X30,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X30))) | s(bool,X31) != s(bool,X33)) ) | $spl104),
  inference(resolution,[],[f10545,f140])).
fof(f10702,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X22)))) | p(s(bool,X23)) | ~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X22,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X22)))) ) | $spl104),
  inference(resolution,[],[f10545,f139])).
fof(f10700,plain,(
  ( ! [X14,X17,X15,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X14)))) | p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X14,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X14)))) ) | $spl104),
  inference(resolution,[],[f10545,f138])).
fof(f10699,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X10)))) | ~p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X12) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X10,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X10))) | s(bool,X11) != s(bool,X13)) ) | $spl104),
  inference(resolution,[],[f10545,f136])).
fof(f10697,plain,(
  ( ! [X4,X2,X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X2)))) ) | $spl104),
  inference(resolution,[],[f10545,f134])).
fof(f10674,plain,(
  ( ! [X4,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X2))) | ~p(s(bool,X4))) ) | $spl138),
  inference(cnf_transformation,[],[f10674_D])).
fof(f10674_D,plain,(
  ( ! [X4,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X2))) | ~p(s(bool,X4))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f10646,plain,(
  ( ! [X50,X51,X49] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X49)))) | p(s(bool,X50)) | ~p(s(bool,X51)) | s(bool,X51) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X49,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X49)))) ) | $spl38),
  inference(resolution,[],[f10487,f215])).
fof(f10632,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X30)))) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X32) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X30,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X30))) | s(bool,X31) != s(bool,X33)) ) | $spl38),
  inference(resolution,[],[f10487,f140])).
fof(f10630,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X22)))) | p(s(bool,X23)) | ~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X22,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X22)))) ) | $spl38),
  inference(resolution,[],[f10487,f139])).
fof(f10628,plain,(
  ( ! [X14,X17,X15,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X14)))) | p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X14,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X14)))) ) | $spl38),
  inference(resolution,[],[f10487,f138])).
fof(f10627,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X10)))) | ~p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X12) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X10,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X10))) | s(bool,X11) != s(bool,X13)) ) | $spl38),
  inference(resolution,[],[f10487,f136])).
fof(f10625,plain,(
  ( ! [X4,X2,X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'type.num.num')),s(fun('type.num.num',bool),X2)))) ) | $spl38),
  inference(resolution,[],[f10487,f134])).
fof(f10588,plain,(
  ( ! [X4,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | ~p(s(bool,X4)) | s(bool,X4) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X2)))) ) | $spl136),
  inference(cnf_transformation,[],[f10588_D])).
fof(f10588_D,plain,(
  ( ! [X4,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | ~p(s(bool,X4)) | s(bool,X4) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X2)))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f10567,plain,(
  ( ! [X50,X51,X49] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X49)))) | p(s(bool,X50)) | ~p(s(bool,X51)) | s(bool,X51) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X49)))) ) | $spl104),
  inference(resolution,[],[f9449,f215])).
fof(f10553,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X30)))) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X32) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X30))) | s(bool,X31) != s(bool,X33)) ) | $spl104),
  inference(resolution,[],[f9449,f140])).
fof(f10551,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X22)))) | p(s(bool,X23)) | ~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X22)))) ) | $spl104),
  inference(resolution,[],[f9449,f139])).
fof(f10549,plain,(
  ( ! [X14,X17,X15,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X14)))) | p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X14)))) ) | $spl104),
  inference(resolution,[],[f9449,f138])).
fof(f10548,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X10)))) | ~p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X12) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X10))) | s(bool,X11) != s(bool,X13)) ) | $spl104),
  inference(resolution,[],[f9449,f136])).
fof(f10546,plain,(
  ( ! [X4,X2,X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X2)))) ) | $spl104),
  inference(resolution,[],[f9449,f134])).
fof(f10530,plain,(
  ( ! [X4,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | ~p(s(bool,X4)) | s(bool,X4) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X2)))) ) | $spl134),
  inference(cnf_transformation,[],[f10530_D])).
fof(f10530_D,plain,(
  ( ! [X4,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | ~p(s(bool,X4)) | s(bool,X4) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X2)))) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f10509,plain,(
  ( ! [X50,X51,X49] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X49)))) | p(s(bool,X50)) | ~p(s(bool,X51)) | s(bool,X51) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X49)))) ) | $spl38),
  inference(resolution,[],[f9884,f215])).
fof(f10495,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X30)))) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X32) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X30))) | s(bool,X31) != s(bool,X33)) ) | $spl38),
  inference(resolution,[],[f9884,f140])).
fof(f10493,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X22)))) | p(s(bool,X23)) | ~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X22)))) ) | $spl38),
  inference(resolution,[],[f9884,f139])).
fof(f10491,plain,(
  ( ! [X14,X17,X15,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X14)))) | p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X14)))) ) | $spl38),
  inference(resolution,[],[f9884,f138])).
fof(f10490,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X10)))) | ~p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X12) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X10))) | s(bool,X11) != s(bool,X13)) ) | $spl38),
  inference(resolution,[],[f9884,f136])).
fof(f10488,plain,(
  ( ! [X4,X2,X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))),s(fun('type.num.num',bool),X2)))) ) | $spl38),
  inference(resolution,[],[f9884,f134])).
fof(f10465,plain,(
  ( ! [X4,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X2))) | ~p(s(bool,X4))) ) | $spl132),
  inference(cnf_transformation,[],[f10465_D])).
fof(f10465_D,plain,(
  ( ! [X4,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X2))) | ~p(s(bool,X4))) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f10437,plain,(
  ( ! [X50,X51,X49] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X49)))) | p(s(bool,X50)) | ~p(s(bool,X51)) | s(bool,X51) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X49,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X49)))) ) | $spl14),
  inference(resolution,[],[f10165,f215])).
fof(f10423,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X30)))) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X32) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X30,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X30))) | s(bool,X31) != s(bool,X33)) ) | $spl14),
  inference(resolution,[],[f10165,f140])).
fof(f10421,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X22)))) | p(s(bool,X23)) | ~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X22,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X22)))) ) | $spl14),
  inference(resolution,[],[f10165,f139])).
fof(f10419,plain,(
  ( ! [X14,X17,X15,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X14)))) | p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X14,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X14)))) ) | $spl14),
  inference(resolution,[],[f10165,f138])).
fof(f10418,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X10)))) | ~p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X12) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X10,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X10))) | s(bool,X11) != s(bool,X13)) ) | $spl14),
  inference(resolution,[],[f10165,f136])).
fof(f10416,plain,(
  ( ! [X4,X2,X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X2)))) ) | $spl14),
  inference(resolution,[],[f10165,f134])).
fof(f10393,plain,(
  ( ! [X4,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X2))) | ~p(s(bool,X4))) ) | $spl130),
  inference(cnf_transformation,[],[f10393_D])).
fof(f10393_D,plain,(
  ( ! [X4,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X2))) | ~p(s(bool,X4))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f10365,plain,(
  ( ! [X50,X51,X49] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X49)))) | p(s(bool,X50)) | ~p(s(bool,X51)) | s(bool,X51) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X49,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X49)))) ) | $spl38),
  inference(resolution,[],[f9823,f215])).
fof(f10351,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X30)))) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X32) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X30,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X30))) | s(bool,X31) != s(bool,X33)) ) | $spl38),
  inference(resolution,[],[f9823,f140])).
fof(f10349,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X22)))) | p(s(bool,X23)) | ~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X22,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X22)))) ) | $spl38),
  inference(resolution,[],[f9823,f139])).
fof(f10347,plain,(
  ( ! [X14,X17,X15,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X14)))) | p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X14,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X14)))) ) | $spl38),
  inference(resolution,[],[f9823,f138])).
fof(f10346,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X10)))) | ~p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X12) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X10,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X10))) | s(bool,X11) != s(bool,X13)) ) | $spl38),
  inference(resolution,[],[f9823,f136])).
fof(f10344,plain,(
  ( ! [X4,X2,X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X2)))) | p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X2,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)),'type.num.num')),s(fun('type.num.num',bool),X2)))) ) | $spl38),
  inference(resolution,[],[f9823,f134])).
fof(f10325,plain,(
  ( ! [X4,X2] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))) | p(s(bool,X4)) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))))) ) | $spl128),
  inference(cnf_transformation,[],[f10325_D])).
fof(f10325_D,plain,(
  ( ! [X4,X2] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))) | p(s(bool,X4)) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f10304,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X47)))) | p(s(bool,X48)) | p(s(bool,X49)) | s(bool,X49) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X47)))))) ) | $spl14),
  inference(resolution,[],[f10162,f215])).
fof(f10292,plain,(
  ( ! [X30,X33,X31,X32] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X30)))) | p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X30))))) | s(bool,X32) != s(bool,X33)) ) | $spl14),
  inference(resolution,[],[f10162,f140])).
fof(f10289,plain,(
  ( ! [X21,X19,X20,X18] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X18)))) | p(s(bool,X19)) | ~p(s(bool,X20)) | p(s(bool,X21)) | s(bool,X21) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X18)))))) ) | $spl14),
  inference(resolution,[],[f10162,f139])).
fof(f10288,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X14)))) | p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X14)))))) ) | $spl14),
  inference(resolution,[],[f10162,f138])).
fof(f10287,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X10)))) | p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X10))))) | s(bool,X12) != s(bool,X13)) ) | $spl14),
  inference(resolution,[],[f10162,f136])).
fof(f10285,plain,(
  ( ! [X4,X2,X5,X3] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))) | p(s(bool,X3)) | p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))))) ) | $spl14),
  inference(resolution,[],[f10162,f134])).
fof(f10268,plain,(
  ( ! [X4,X2] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))) | p(s(bool,X4)) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))))) ) | $spl126),
  inference(cnf_transformation,[],[f10268_D])).
fof(f10268_D,plain,(
  ( ! [X4,X2] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))) | p(s(bool,X4)) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f10247,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X47)))) | p(s(bool,X48)) | p(s(bool,X49)) | s(bool,X49) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X47)))))) ) | $spl38),
  inference(resolution,[],[f9820,f215])).
fof(f10235,plain,(
  ( ! [X30,X33,X31,X32] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X30)))) | p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X30))))) | s(bool,X32) != s(bool,X33)) ) | $spl38),
  inference(resolution,[],[f9820,f140])).
fof(f10232,plain,(
  ( ! [X21,X19,X20,X18] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X18)))) | p(s(bool,X19)) | ~p(s(bool,X20)) | p(s(bool,X21)) | s(bool,X21) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X18)))))) ) | $spl38),
  inference(resolution,[],[f9820,f139])).
fof(f10231,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X14)))) | p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X14)))))) ) | $spl38),
  inference(resolution,[],[f9820,f138])).
fof(f10230,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X10)))) | p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X10))))) | s(bool,X12) != s(bool,X13)) ) | $spl38),
  inference(resolution,[],[f9820,f136])).
fof(f10228,plain,(
  ( ! [X4,X2,X5,X3] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))) | p(s(bool,X3)) | p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))))) ) | $spl38),
  inference(resolution,[],[f9820,f134])).
fof(f5999,plain,(
  ( ! [X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X3)))) | ~p(s(bool,X5)) | s(bool,X5) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X3)))) ) | $spl92),
  inference(cnf_transformation,[],[f5999_D])).
fof(f5999_D,plain,(
  ( ! [X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X3)))) | ~p(s(bool,X5)) | s(bool,X5) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X3)))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f10187,plain,(
  ( ! [X52,X50,X51] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X50)))) | p(s(bool,X51)) | ~p(s(bool,X52)) | s(bool,X52) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X50)))) ) | $spl14),
  inference(resolution,[],[f8515,f215])).
fof(f10173,plain,(
  ( ! [X33,X31,X34,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X31)))) | ~p(s(bool,X32)) | ~p(s(bool,X33)) | s(bool,X33) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X31))) | s(bool,X32) != s(bool,X34)) ) | $spl14),
  inference(resolution,[],[f8515,f140])).
fof(f10171,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X23)))) | p(s(bool,X24)) | ~p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X23)))) ) | $spl14),
  inference(resolution,[],[f8515,f139])).
fof(f10169,plain,(
  ( ! [X17,X15,X18,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X15)))) | p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,X18) | s(bool,X17) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X15)))) ) | $spl14),
  inference(resolution,[],[f8515,f138])).
fof(f10168,plain,(
  ( ! [X14,X12,X13,X11] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X11)))) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X11))) | s(bool,X12) != s(bool,X14)) ) | $spl14),
  inference(resolution,[],[f8515,f136])).
fof(f10166,plain,(
  ( ! [X6,X4,X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X3)))) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X5) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X3)))) ) | $spl14),
  inference(resolution,[],[f8515,f134])).
fof(f9924,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl124),
  inference(cnf_transformation,[],[f9924_D])).
fof(f9924_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f9904,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | p(s(bool,X28)) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl38),
  inference(resolution,[],[f9872,f215])).
fof(f9892,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X23) != s(bool,X24)) ) | $spl38),
  inference(resolution,[],[f9872,f140])).
fof(f9889,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl38),
  inference(resolution,[],[f9872,f139])).
fof(f9888,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl38),
  inference(resolution,[],[f9872,f138])).
fof(f9887,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X8) != s(bool,X9)) ) | $spl38),
  inference(resolution,[],[f9872,f136])).
fof(f9885,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl38),
  inference(resolution,[],[f9872,f134])).
fof(f5227,plain,(
  ( ! [X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X3)))) | ~p(s(bool,X5)) | s(bool,X5) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X3)))) ) | $spl90),
  inference(cnf_transformation,[],[f5227_D])).
fof(f5227_D,plain,(
  ( ! [X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X3)))) | ~p(s(bool,X5)) | s(bool,X5) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X3)))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f9845,plain,(
  ( ! [X52,X50,X51] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X50)))) | p(s(bool,X51)) | ~p(s(bool,X52)) | s(bool,X52) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X50)))) ) | $spl38),
  inference(resolution,[],[f6443,f215])).
fof(f9831,plain,(
  ( ! [X33,X31,X34,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X31)))) | ~p(s(bool,X32)) | ~p(s(bool,X33)) | s(bool,X33) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X31))) | s(bool,X32) != s(bool,X34)) ) | $spl38),
  inference(resolution,[],[f6443,f140])).
fof(f9829,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X23)))) | p(s(bool,X24)) | ~p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X23)))) ) | $spl38),
  inference(resolution,[],[f6443,f139])).
fof(f9827,plain,(
  ( ! [X17,X15,X18,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X15)))) | p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,X18) | s(bool,X17) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X15)))) ) | $spl38),
  inference(resolution,[],[f6443,f138])).
fof(f9826,plain,(
  ( ! [X14,X12,X13,X11] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X11)))) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X11))) | s(bool,X12) != s(bool,X14)) ) | $spl38),
  inference(resolution,[],[f6443,f136])).
fof(f9824,plain,(
  ( ! [X6,X4,X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X3)))) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X5) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X3)))) ) | $spl38),
  inference(resolution,[],[f6443,f134])).
fof(f9808,plain,(
  ( ! [X7,X5] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X5,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X7)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X5),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) ) | $spl122),
  inference(cnf_transformation,[],[f9808_D])).
fof(f9808_D,plain,(
  ( ! [X7,X5] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X5,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X7)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X5),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f9786,plain,(
  ( ! [X52,X50,X51] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X50,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X51)) | p(s(bool,X52)) | s(bool,X52) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X50),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f2970,f215])).
fof(f9774,plain,(
  ( ! [X35,X33,X36,X34] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X33,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X34) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X33),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,X35) != s(bool,X36)) )),
  inference(resolution,[],[f2970,f140])).
fof(f9771,plain,(
  ( ! [X24,X23,X21,X22] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X21,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X24) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f2970,f139])).
fof(f9770,plain,(
  ( ! [X19,X17,X20,X18] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X17,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X17),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f2970,f138])).
fof(f9769,plain,(
  ( ! [X14,X15,X13,X16] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X13,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,X14) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X13),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,X15) != s(bool,X16)) )),
  inference(resolution,[],[f2970,f136])).
fof(f9767,plain,(
  ( ! [X6,X8,X7,X5] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X5,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X6) != s(bool,X8) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X5),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f2970,f134])).
fof(f9568,plain,(
  ( ! [X13,X11] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X11,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X13)) | s(bool,X13) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X11)))) ) | $spl120),
  inference(cnf_transformation,[],[f9568_D])).
fof(f9568_D,plain,(
  ( ! [X13,X11] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X11,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X13)) | s(bool,X13) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X11)))) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f9543,plain,(
  ( ! [X57,X58,X56] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X56,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X57)) | p(s(bool,X58)) | s(bool,X58) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X56)))) )),
  inference(resolution,[],[f2591,f215])).
fof(f2591,plain,(
  ( ! [X16] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X16)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X16,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(subsumption_resolution,[],[f2486,f196])).
fof(f2486,plain,(
  ( ! [X16] : (p(s(bool,'F_0')) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X16)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X16,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(superposition,[],[f164,f644])).
fof(f9531,plain,(
  ( ! [X39,X41,X42,X40] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X39,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X40)) | ~p(s(bool,X41)) | s(bool,X40) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X39))) | s(bool,X41) != s(bool,X42)) )),
  inference(resolution,[],[f2591,f140])).
fof(f9528,plain,(
  ( ! [X30,X28,X29,X27] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X27,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X28)) | ~p(s(bool,X29)) | p(s(bool,X30)) | s(bool,X30) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X27)))) )),
  inference(resolution,[],[f2591,f139])).
fof(f9527,plain,(
  ( ! [X26,X24,X23,X25] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X23,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X24) != s(bool,X26) | s(bool,X25) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X23)))) )),
  inference(resolution,[],[f2591,f138])).
fof(f9526,plain,(
  ( ! [X21,X19,X22,X20] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X19,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X20)) | ~p(s(bool,X21)) | s(bool,X20) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X19))) | s(bool,X21) != s(bool,X22)) )),
  inference(resolution,[],[f2591,f136])).
fof(f9524,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X11,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X12)) | p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X13) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X11)))) )),
  inference(resolution,[],[f2591,f134])).
fof(f9448,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | $spl118),
  inference(cnf_transformation,[],[f9448_D])).
fof(f9448_D,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f9446,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl104),
  inference(subsumption_resolution,[],[f9421,f147])).
fof(f9421,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl104),
  inference(superposition,[],[f7738,f155])).
fof(f9442,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl116),
  inference(cnf_transformation,[],[f9442_D])).
fof(f9442_D,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f9445,plain,(
  ( ! [X9] : (p(s(bool,X9)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl104),
  inference(subsumption_resolution,[],[f9417,f148])).
fof(f9417,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,X9) | p(s(bool,X9)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl104),
  inference(superposition,[],[f7738,f150])).
fof(f9444,plain,(
  ( ! [X8] : (p(s(bool,X8)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl104),
  inference(subsumption_resolution,[],[f9416,f148])).
fof(f9416,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,X8) | p(s(bool,X8)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl104),
  inference(superposition,[],[f7738,f148])).
fof(f9443,plain,(
  ( ! [X2,X3] : (s(bool,X2) != s(bool,X3) | p(s(bool,X3)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl104),
  inference(subsumption_resolution,[],[f9413,f215])).
fof(f9413,plain,(
  ( ! [X2,X3] : (s(bool,X2) != s(bool,X3) | p(s(bool,X3)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | p(s(bool,X2))) ) | $spl104),
  inference(superposition,[],[f7738,f141])).
fof(f9440,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | p(s(bool,X1)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl104),
  inference(subsumption_resolution,[],[f9412,f215])).
fof(f9412,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl104),
  inference(superposition,[],[f7738,f141])).
fof(f9428,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | $spl115),
  inference(cnf_transformation,[],[f9428_D])).
fof(f9428_D,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) <=> ~$spl115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl115])])).
fof(f9432,plain,(
  ( ! [X21] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl104),
  inference(subsumption_resolution,[],[f9431,f151])).
fof(f9431,plain,(
  ( ! [X21] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl104),
  inference(forward_demodulation,[],[f9398,f131])).
fof(f9398,plain,(
  ( ! [X21] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl104),
  inference(superposition,[],[f7738,f644])).
fof(f9429,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X13))) ) | $spl104),
  inference(subsumption_resolution,[],[f9396,f151])).
fof(f9396,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,X13)) ) | $spl104),
  inference(superposition,[],[f7738,f155])).
fof(f9423,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X9))) ) | $spl104),
  inference(duplicate_literal_removal,[],[f9392])).
fof(f9392,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X9)) | p(s(bool,X9))) ) | $spl104),
  inference(superposition,[],[f7738,f150])).
fof(f9424,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X8))) ) | $spl104),
  inference(duplicate_literal_removal,[],[f9391])).
fof(f9391,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X8)) | p(s(bool,X8))) ) | $spl104),
  inference(superposition,[],[f7738,f148])).
fof(f9360,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) = s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X0) != s(bool,X3) | ~p(s(bool,X3)) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl112),
  inference(cnf_transformation,[],[f9360_D])).
fof(f9360_D,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) = s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X0) != s(bool,X3) | ~p(s(bool,X3)) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f9288,plain,(
  ( ! [X70,X68,X71,X69] : (s(bool,X68) = s(bool,'const.bool.IN_2'(s('type.num.num',X69),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X69),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X70)) | ~p(s(bool,X71)) | s(bool,X68) != s(bool,X71)) )),
  inference(resolution,[],[f3008,f215])).
fof(f3008,plain,(
  ( ! [X171,X170] : (~p(s(bool,X171)) | s(bool,X171) = s(bool,'const.bool.IN_2'(s('type.num.num',X170),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X170),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(forward_demodulation,[],[f3007,f131])).
fof(f3007,plain,(
  ( ! [X171,X170] : (s(bool,X171) = s(bool,'const.bool.IN_2'(s('type.num.num',X170),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | ~p(s(bool,X171)) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X170),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(subsumption_resolution,[],[f2901,f181])).
fof(f2901,plain,(
  ( ! [X171,X170] : (~p(s(bool,'T_0')) | s(bool,X171) = s(bool,'const.bool.IN_2'(s('type.num.num',X170),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | ~p(s(bool,X171)) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X170),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(superposition,[],[f144,f645])).
fof(f9274,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X35) = s(bool,'const.bool.IN_2'(s('type.num.num',X36),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X36),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X35) != s(bool,X38) | s(bool,X37) != s(bool,X39)) )),
  inference(resolution,[],[f3008,f140])).
fof(f9272,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,X25) = s(bool,'const.bool.IN_2'(s('type.num.num',X26),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X26),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X25) != s(bool,X28)) )),
  inference(resolution,[],[f3008,f139])).
fof(f9270,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,X15) = s(bool,'const.bool.IN_2'(s('type.num.num',X16),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X16),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X15) != s(bool,X18)) )),
  inference(resolution,[],[f3008,f138])).
fof(f9269,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,X10) = s(bool,'const.bool.IN_2'(s('type.num.num',X11),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X11),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X10) != s(bool,X13) | s(bool,X12) != s(bool,X14)) )),
  inference(resolution,[],[f3008,f136])).
fof(f9267,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X0) != s(bool,X3)) )),
  inference(resolution,[],[f3008,f134])).
fof(f8967,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) = s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X0) != s(bool,X3) | p(s(bool,X3)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl110),
  inference(cnf_transformation,[],[f8967_D])).
fof(f8967_D,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) = s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X0) != s(bool,X3) | p(s(bool,X3)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f8894,plain,(
  ( ! [X66,X64,X67,X65] : (s(bool,X64) = s(bool,'const.bool.IN_2'(s('type.num.num',X65),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X65),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X66)) | p(s(bool,X67)) | s(bool,X64) != s(bool,X67)) )),
  inference(resolution,[],[f2621,f215])).
fof(f2621,plain,(
  ( ! [X161,X162] : (p(s(bool,X162)) | s(bool,X162) = s(bool,'const.bool.IN_2'(s('type.num.num',X161),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X161),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(forward_demodulation,[],[f2620,f131])).
fof(f2620,plain,(
  ( ! [X161,X162] : (s(bool,X162) = s(bool,'const.bool.IN_2'(s('type.num.num',X161),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | p(s(bool,X162)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X161),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(subsumption_resolution,[],[f2525,f196])).
fof(f2525,plain,(
  ( ! [X161,X162] : (p(s(bool,'F_0')) | s(bool,X162) = s(bool,'const.bool.IN_2'(s('type.num.num',X161),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | p(s(bool,X162)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X161),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(superposition,[],[f141,f644])).
fof(f8882,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X35) = s(bool,'const.bool.IN_2'(s('type.num.num',X36),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X36),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X35) != s(bool,X37) | s(bool,X38) != s(bool,X39)) )),
  inference(resolution,[],[f2621,f140])).
fof(f8879,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s(bool,X20) = s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X20) != s(bool,X24)) )),
  inference(resolution,[],[f2621,f139])).
fof(f8878,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,X15) = s(bool,'const.bool.IN_2'(s('type.num.num',X16),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X16),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X15) != s(bool,X18)) )),
  inference(resolution,[],[f2621,f138])).
fof(f8877,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,X10) = s(bool,'const.bool.IN_2'(s('type.num.num',X11),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X11),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X10) != s(bool,X12) | s(bool,X13) != s(bool,X14)) )),
  inference(resolution,[],[f2621,f136])).
fof(f8875,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X1),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X0) != s(bool,X3)) )),
  inference(resolution,[],[f2621,f134])).
fof(f4797,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | $spl80),
  inference(cnf_transformation,[],[f4797_D])).
fof(f4797_D,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f8873,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13) | s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl76),
  inference(subsumption_resolution,[],[f8858,f147])).
fof(f8858,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl76),
  inference(superposition,[],[f4670,f155])).
fof(f303,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl14),
  inference(cnf_transformation,[],[f303_D])).
fof(f303_D,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f8872,plain,(
  ( ! [X9] : (p(s(bool,X9)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl76),
  inference(subsumption_resolution,[],[f8854,f148])).
fof(f8854,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,X9) | p(s(bool,X9)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl76),
  inference(superposition,[],[f4670,f150])).
fof(f8871,plain,(
  ( ! [X8] : (p(s(bool,X8)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl76),
  inference(subsumption_resolution,[],[f8853,f148])).
fof(f8853,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,X8) | p(s(bool,X8)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl76),
  inference(superposition,[],[f4670,f148])).
fof(f8870,plain,(
  ( ! [X2,X3] : (s(bool,X2) != s(bool,X3) | p(s(bool,X3)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl76),
  inference(subsumption_resolution,[],[f8850,f215])).
fof(f8850,plain,(
  ( ! [X2,X3] : (s(bool,X2) != s(bool,X3) | p(s(bool,X3)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | p(s(bool,X2))) ) | $spl76),
  inference(superposition,[],[f4670,f141])).
fof(f8869,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | p(s(bool,X1)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl76),
  inference(subsumption_resolution,[],[f8849,f215])).
fof(f8849,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl76),
  inference(superposition,[],[f4670,f141])).
fof(f4811,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | $spl87),
  inference(cnf_transformation,[],[f4811_D])).
fof(f4811_D,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) <=> ~$spl87),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl87])])).
fof(f8867,plain,(
  ( ! [X21] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl76),
  inference(subsumption_resolution,[],[f8866,f151])).
fof(f8866,plain,(
  ( ! [X21] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl76),
  inference(forward_demodulation,[],[f8843,f131])).
fof(f8843,plain,(
  ( ! [X21] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl76),
  inference(superposition,[],[f4670,f644])).
fof(f8864,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X13))) ) | $spl76),
  inference(subsumption_resolution,[],[f8841,f151])).
fof(f8841,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,X13)) ) | $spl76),
  inference(superposition,[],[f4670,f155])).
fof(f8860,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X9))) ) | $spl76),
  inference(duplicate_literal_removal,[],[f8837])).
fof(f8837,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X9)) | p(s(bool,X9))) ) | $spl76),
  inference(superposition,[],[f4670,f150])).
fof(f8861,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X8))) ) | $spl76),
  inference(duplicate_literal_removal,[],[f8836])).
fof(f8836,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X8)) | p(s(bool,X8))) ) | $spl76),
  inference(superposition,[],[f4670,f148])).
fof(f8618,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl108),
  inference(cnf_transformation,[],[f8618_D])).
fof(f8618_D,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f8616,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl46),
  inference(subsumption_resolution,[],[f8593,f147])).
fof(f8593,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl46),
  inference(superposition,[],[f1637,f155])).
fof(f8600,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl107),
  inference(cnf_transformation,[],[f8600_D])).
fof(f8600_D,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) <=> ~$spl107),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl107])])).
fof(f8604,plain,(
  ( ! [X21] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl46),
  inference(subsumption_resolution,[],[f8603,f151])).
fof(f8603,plain,(
  ( ! [X21] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl46),
  inference(forward_demodulation,[],[f8570,f131])).
fof(f8570,plain,(
  ( ! [X21] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl46),
  inference(superposition,[],[f1637,f644])).
fof(f8601,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X13))) ) | $spl46),
  inference(subsumption_resolution,[],[f8568,f151])).
fof(f8568,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,X13)) ) | $spl46),
  inference(superposition,[],[f1637,f155])).
fof(f8595,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X9))) ) | $spl46),
  inference(duplicate_literal_removal,[],[f8564])).
fof(f8564,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X9)) | p(s(bool,X9))) ) | $spl46),
  inference(superposition,[],[f1637,f150])).
fof(f8596,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X8))) ) | $spl46),
  inference(duplicate_literal_removal,[],[f8563])).
fof(f8563,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X8)) | p(s(bool,X8))) ) | $spl46),
  inference(superposition,[],[f1637,f148])).
fof(f1637,plain,(
  ( ! [X10] : (s(bool,X10) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X10))) ) | $spl46),
  inference(cnf_transformation,[],[f1637_D])).
fof(f1637_D,plain,(
  ( ! [X10] : (s(bool,X10) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X10))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f8535,plain,(
  ( ! [X37,X36] : (p(s(bool,X36)) | p(s(bool,X37)) | s(bool,X37) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl14),
  inference(resolution,[],[f4660,f215])).
fof(f8523,plain,(
  ( ! [X33,X31,X32] : (p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X32) != s(bool,X33)) ) | $spl14),
  inference(resolution,[],[f4660,f140])).
fof(f8520,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl14),
  inference(resolution,[],[f4660,f139])).
fof(f8519,plain,(
  ( ! [X21,X19,X20] : (p(s(bool,X19)) | p(s(bool,X20)) | s(bool,X19) != s(bool,X21) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl14),
  inference(resolution,[],[f4660,f138])).
fof(f8518,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X17) != s(bool,X18)) ) | $spl14),
  inference(resolution,[],[f4660,f136])).
fof(f8516,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl14),
  inference(resolution,[],[f4660,f134])).
fof(f7262,plain,(
  ( ! [X8] : (p(s(bool,X8)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl76),
  inference(subsumption_resolution,[],[f7244,f148])).
fof(f7244,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,X8) | p(s(bool,X8)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl76),
  inference(superposition,[],[f4670,f148])).
fof(f7263,plain,(
  ( ! [X9] : (p(s(bool,X9)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl76),
  inference(subsumption_resolution,[],[f7245,f148])).
fof(f7245,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,X9) | p(s(bool,X9)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl76),
  inference(superposition,[],[f4670,f150])).
fof(f7251,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X9))) ) | $spl76),
  inference(duplicate_literal_removal,[],[f7228])).
fof(f7228,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X9)) | p(s(bool,X9))) ) | $spl76),
  inference(superposition,[],[f4670,f150])).
fof(f7252,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X8))) ) | $spl76),
  inference(duplicate_literal_removal,[],[f7227])).
fof(f7227,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X8)) | p(s(bool,X8))) ) | $spl76),
  inference(superposition,[],[f4670,f148])).
fof(f7255,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X13))) ) | $spl76),
  inference(subsumption_resolution,[],[f7232,f151])).
fof(f7232,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,X13)) ) | $spl76),
  inference(superposition,[],[f4670,f155])).
fof(f8481,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f8438,f5542])).
fof(f5542,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl42),
  inference(forward_demodulation,[],[f5500,f131])).
fof(f5500,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | $spl42),
  inference(resolution,[],[f4792,f164])).
fof(f4792,plain,(
  ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl42),
  inference(equality_resolution,[],[f1531])).
fof(f8438,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl42),
  inference(resolution,[],[f5501,f1438])).
fof(f5501,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl42),
  inference(resolution,[],[f4792,f165])).
fof(f4606,plain,(
  ( ! [X11] : (s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X11))) ) | $spl74),
  inference(cnf_transformation,[],[f4606_D])).
fof(f4606_D,plain,(
  ( ! [X11] : (s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X11))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f8414,plain,(
  ( ! [X37,X36] : (p(s(bool,X36)) | p(s(bool,X37)) | s(bool,X37) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl42),
  inference(resolution,[],[f5542,f215])).
fof(f8402,plain,(
  ( ! [X33,X31,X32] : (p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X32) != s(bool,X33)) ) | $spl42),
  inference(resolution,[],[f5542,f140])).
fof(f8399,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl42),
  inference(resolution,[],[f5542,f139])).
fof(f8398,plain,(
  ( ! [X21,X19,X20] : (p(s(bool,X19)) | p(s(bool,X20)) | s(bool,X19) != s(bool,X21) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl42),
  inference(resolution,[],[f5542,f138])).
fof(f8397,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X17) != s(bool,X18)) ) | $spl42),
  inference(resolution,[],[f5542,f136])).
fof(f8395,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl42),
  inference(resolution,[],[f5542,f134])).
fof(f4812,plain,(
  s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | $spl86),
  inference(cnf_transformation,[],[f4812_D])).
fof(f4812_D,plain,(
  s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f8142,plain,(
  ( ! [X12] : (~p(s(bool,X12)) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl42),
  inference(subsumption_resolution,[],[f8130,f152])).
fof(f8130,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,X12) | ~p(s(bool,X12)) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl42),
  inference(superposition,[],[f1531,f155])).
fof(f4798,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | $spl81),
  inference(cnf_transformation,[],[f4798_D])).
fof(f4798_D,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) <=> ~$spl81),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl81])])).
fof(f8139,plain,(
  ( ! [X20] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl42),
  inference(subsumption_resolution,[],[f8138,f148])).
fof(f8138,plain,(
  ( ! [X20] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl42),
  inference(forward_demodulation,[],[f8115,f131])).
fof(f8115,plain,(
  ( ! [X20] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl42),
  inference(superposition,[],[f1531,f645])).
fof(f8137,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,'F_0') = s(bool,X12)) ) | $spl42),
  inference(subsumption_resolution,[],[f8113,f148])).
fof(f8113,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X12)) | s(bool,'F_0') = s(bool,X12)) ) | $spl42),
  inference(superposition,[],[f1531,f155])).
fof(f8133,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X11))) ) | $spl42),
  inference(duplicate_literal_removal,[],[f8112])).
fof(f8112,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X11)) | ~p(s(bool,X11))) ) | $spl42),
  inference(superposition,[],[f1531,f154])).
fof(f8134,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X10))) ) | $spl42),
  inference(duplicate_literal_removal,[],[f8111])).
fof(f8111,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X10)) | ~p(s(bool,X10))) ) | $spl42),
  inference(superposition,[],[f1531,f152])).
fof(f8017,plain,(
  $false | ($spl37 | $spl46)),
  inference(trivial_inequality_removal,[],[f8002])).
fof(f8002,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl37 | $spl46)),
  inference(superposition,[],[f7974,f278])).
fof(f7974,plain,(
  ( ! [X10] : (s(bool,'F_0') != s(bool,X10)) ) | ($spl37 | $spl46)),
  inference(subsumption_resolution,[],[f7973,f149])).
fof(f7973,plain,(
  ( ! [X10] : (s(bool,'F_0') != s(bool,X10) | p(s(bool,X10))) ) | ($spl37 | $spl46)),
  inference(forward_demodulation,[],[f1637,f7757])).
fof(f7757,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl37),
  inference(resolution,[],[f1174,f148])).
fof(f1174,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl37),
  inference(cnf_transformation,[],[f1174_D])).
fof(f1174_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f8015,plain,(
  $false | ($spl37 | $spl46)),
  inference(trivial_inequality_removal,[],[f8007])).
fof(f8007,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl37 | $spl46)),
  inference(superposition,[],[f7974,f7757])).
fof(f8014,plain,(
  $false | ($spl23 | $spl37 | $spl46)),
  inference(trivial_inequality_removal,[],[f8012])).
fof(f8012,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl23 | $spl37 | $spl46)),
  inference(superposition,[],[f7974,f1953])).
fof(f1953,plain,(
  s(bool,'F_0') = s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | $spl23),
  inference(resolution,[],[f312,f148])).
fof(f8013,plain,(
  $false | ($spl37 | $spl46)),
  inference(equality_resolution,[],[f7974])).
fof(f1783,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl50),
  inference(cnf_transformation,[],[f1783_D])).
fof(f1783_D,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f7768,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl37),
  inference(resolution,[],[f1174,f215])).
fof(f7754,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X22) != s(bool,X24)) ) | $spl37),
  inference(resolution,[],[f1174,f140])).
fof(f7752,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl37),
  inference(resolution,[],[f1174,f139])).
fof(f7750,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl37),
  inference(resolution,[],[f1174,f138])).
fof(f7749,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X7) != s(bool,X9)) ) | $spl37),
  inference(resolution,[],[f1174,f136])).
fof(f7747,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl37),
  inference(resolution,[],[f1174,f134])).
fof(f304,plain,(
  ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl15),
  inference(cnf_transformation,[],[f304_D])).
fof(f304_D,plain,(
  ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f4808,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,X10) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl42),
  inference(subsumption_resolution,[],[f4788,f151])).
fof(f4788,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,X10) | ~p(s(bool,X10)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl42),
  inference(superposition,[],[f1531,f152])).
fof(f4809,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,X11) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl42),
  inference(subsumption_resolution,[],[f4789,f151])).
fof(f4789,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,X11) | ~p(s(bool,X11)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl42),
  inference(superposition,[],[f1531,f154])).
fof(f4810,plain,(
  ( ! [X12] : (~p(s(bool,X12)) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl42),
  inference(subsumption_resolution,[],[f4790,f152])).
fof(f4790,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,X12) | ~p(s(bool,X12)) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl42),
  inference(superposition,[],[f1531,f155])).
fof(f4793,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X11))) ) | $spl42),
  inference(duplicate_literal_removal,[],[f4772])).
fof(f4772,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X11)) | ~p(s(bool,X11))) ) | $spl42),
  inference(superposition,[],[f1531,f154])).
fof(f4794,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X10))) ) | $spl42),
  inference(duplicate_literal_removal,[],[f4771])).
fof(f4771,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X10)) | ~p(s(bool,X10))) ) | $spl42),
  inference(superposition,[],[f1531,f152])).
fof(f5656,plain,(
  ( ! [X12] : (~p(s(bool,X12)) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl42),
  inference(subsumption_resolution,[],[f5647,f152])).
fof(f5647,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,X12) | ~p(s(bool,X12)) | s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl42),
  inference(superposition,[],[f1531,f155])).
fof(f5650,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X11))) ) | $spl42),
  inference(duplicate_literal_removal,[],[f5629])).
fof(f5629,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X11)) | ~p(s(bool,X11))) ) | $spl42),
  inference(superposition,[],[f1531,f154])).
fof(f5651,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X10))) ) | $spl42),
  inference(duplicate_literal_removal,[],[f5628])).
fof(f5628,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X10)) | ~p(s(bool,X10))) ) | $spl42),
  inference(superposition,[],[f1531,f152])).
fof(f7738,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X2))) ) | $spl104),
  inference(cnf_transformation,[],[f7738_D])).
fof(f7738_D,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X2))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f7719,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | p(s(bool,X28)) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl36),
  inference(resolution,[],[f7687,f215])).
fof(f7687,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl36),
  inference(subsumption_resolution,[],[f7669,f180])).
fof(f7669,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl36),
  inference(superposition,[],[f6394,f1451])).
fof(f6394,plain,(
  ( ! [X9] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X9)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X9))))) ) | $spl36),
  inference(resolution,[],[f1175,f163])).
fof(f7707,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X23) != s(bool,X24)) ) | $spl36),
  inference(resolution,[],[f7687,f140])).
fof(f7704,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl36),
  inference(resolution,[],[f7687,f139])).
fof(f7703,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl36),
  inference(resolution,[],[f7687,f138])).
fof(f7702,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X8) != s(bool,X9)) ) | $spl36),
  inference(resolution,[],[f7687,f136])).
fof(f7700,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl36),
  inference(resolution,[],[f7687,f134])).
fof(f7663,plain,(
  ( ! [X52,X50,X51] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X50)))) | p(s(bool,X51)) | ~p(s(bool,X52)) | s(bool,X52) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X50)))) ) | $spl36),
  inference(resolution,[],[f6394,f215])).
fof(f7649,plain,(
  ( ! [X33,X31,X34,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X31)))) | ~p(s(bool,X32)) | ~p(s(bool,X33)) | s(bool,X33) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X31))) | s(bool,X32) != s(bool,X34)) ) | $spl36),
  inference(resolution,[],[f6394,f140])).
fof(f7647,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X23)))) | p(s(bool,X24)) | ~p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X23)))) ) | $spl36),
  inference(resolution,[],[f6394,f139])).
fof(f7645,plain,(
  ( ! [X17,X15,X18,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X15)))) | p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,X18) | s(bool,X17) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X15)))) ) | $spl36),
  inference(resolution,[],[f6394,f138])).
fof(f7644,plain,(
  ( ! [X14,X12,X13,X11] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X11)))) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X11))) | s(bool,X12) != s(bool,X14)) ) | $spl36),
  inference(resolution,[],[f6394,f136])).
fof(f7642,plain,(
  ( ! [X6,X4,X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X3)))) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X5) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X3)))) ) | $spl36),
  inference(resolution,[],[f6394,f134])).
fof(f7588,plain,(
  ( ! [X5,X3] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X5)) | s(bool,X5) != s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl102),
  inference(cnf_transformation,[],[f7588_D])).
fof(f7588_D,plain,(
  ( ! [X5,X3] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X5)) | s(bool,X5) != s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f7569,plain,(
  ( ! [X50,X48,X49] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X48),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X49)) | p(s(bool,X50)) | s(bool,X50) != s(bool,'const.bool.IN_2'(s('type.num.num',X48),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) )),
  inference(resolution,[],[f1438,f215])).
fof(f7557,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X31),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X32)) | ~p(s(bool,X33)) | s(bool,X32) != s(bool,'const.bool.IN_2'(s('type.num.num',X31),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X33) != s(bool,X34)) )),
  inference(resolution,[],[f1438,f140])).
fof(f7554,plain,(
  ( ! [X21,X19,X22,X20] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X19),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X20)) | ~p(s(bool,X21)) | p(s(bool,X22)) | s(bool,X22) != s(bool,'const.bool.IN_2'(s('type.num.num',X19),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) )),
  inference(resolution,[],[f1438,f139])).
fof(f7553,plain,(
  ( ! [X17,X15,X18,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X16)) | p(s(bool,X17)) | s(bool,X16) != s(bool,X18) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) )),
  inference(resolution,[],[f1438,f138])).
fof(f7552,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X11),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X12) != s(bool,'const.bool.IN_2'(s('type.num.num',X11),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X13) != s(bool,X14)) )),
  inference(resolution,[],[f1438,f136])).
fof(f7550,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X5) != s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) )),
  inference(resolution,[],[f1438,f134])).
fof(f7264,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13) | s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl76),
  inference(subsumption_resolution,[],[f7249,f147])).
fof(f7249,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl76),
  inference(superposition,[],[f4670,f155])).
fof(f7261,plain,(
  ( ! [X2,X3] : (s(bool,X2) != s(bool,X3) | p(s(bool,X3)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl76),
  inference(subsumption_resolution,[],[f7241,f215])).
fof(f7241,plain,(
  ( ! [X2,X3] : (s(bool,X2) != s(bool,X3) | p(s(bool,X3)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | p(s(bool,X2))) ) | $spl76),
  inference(superposition,[],[f4670,f141])).
fof(f7260,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | p(s(bool,X1)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl76),
  inference(subsumption_resolution,[],[f7240,f215])).
fof(f7240,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl76),
  inference(superposition,[],[f4670,f141])).
fof(f7258,plain,(
  ( ! [X21] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl76),
  inference(subsumption_resolution,[],[f7257,f151])).
fof(f7257,plain,(
  ( ! [X21] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl76),
  inference(forward_demodulation,[],[f7234,f131])).
fof(f7234,plain,(
  ( ! [X21] : (s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl76),
  inference(superposition,[],[f4670,f644])).
fof(f7216,plain,(
  $false | ($spl36 | $spl50)),
  inference(subsumption_resolution,[],[f7170,f7121])).
fof(f7121,plain,(
  ( ! [X2] : (~p(s(bool,X2))) ) | ($spl36 | $spl50)),
  inference(subsumption_resolution,[],[f7120,f154])).
fof(f7120,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,X2) | ~p(s(bool,X2))) ) | ($spl36 | $spl50)),
  inference(forward_demodulation,[],[f1783,f6407])).
fof(f6407,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl36),
  inference(resolution,[],[f1175,f152])).
fof(f7170,plain,(
  ( ! [X74,X75,X73] : (p(s(bool,'const.bool.IN_2'(s(X73,sK5(X74,X75,X73)),s(fun(X73,bool),X75))))) ) | ($spl36 | $spl50)),
  inference(resolution,[],[f7121,f164])).
fof(f7215,plain,(
  $false | ($spl36 | $spl50)),
  inference(subsumption_resolution,[],[f7167,f7121])).
fof(f7167,plain,(
  ( ! [X66,X64,X65] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X64,bool),X65),s(fun(X64,bool),X66))))) ) | ($spl36 | $spl50)),
  inference(resolution,[],[f7121,f164])).
fof(f7214,plain,(
  $false | ($spl36 | $spl50)),
  inference(subsumption_resolution,[],[f7166,f7121])).
fof(f7166,plain,(
  ( ! [X63] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X63))))) ) | ($spl36 | $spl50)),
  inference(resolution,[],[f7121,f653])).
fof(f7213,plain,(
  $false | ($spl36 | $spl50)),
  inference(subsumption_resolution,[],[f7154,f7121])).
fof(f7154,plain,(
  p(s(bool,'F_0')) | ($spl36 | $spl50)),
  inference(resolution,[],[f7121,f211])).
fof(f7212,plain,(
  $false | ($spl36 | $spl50)),
  inference(subsumption_resolution,[],[f7153,f7121])).
fof(f7153,plain,(
  p(s(bool,'F_0')) | ($spl36 | $spl50)),
  inference(resolution,[],[f7121,f209])).
fof(f7211,plain,(
  $false | ($spl36 | $spl50)),
  inference(subsumption_resolution,[],[f7150,f7121])).
fof(f7150,plain,(
  ( ! [X48] : (p(s(bool,X48))) ) | ($spl36 | $spl50)),
  inference(resolution,[],[f7121,f189])).
fof(f7210,plain,(
  $false | ($spl36 | $spl50)),
  inference(subsumption_resolution,[],[f7149,f7121])).
fof(f7149,plain,(
  ( ! [X47] : (p(s(bool,X47))) ) | ($spl36 | $spl50)),
  inference(resolution,[],[f7121,f186])).
fof(f7209,plain,(
  $false | ($spl36 | $spl50)),
  inference(subsumption_resolution,[],[f7147,f7121])).
fof(f7147,plain,(
  p(s(bool,'F_0')) | ($spl36 | $spl50)),
  inference(resolution,[],[f7121,f183])).
fof(f7208,plain,(
  $false | ($spl36 | $spl50)),
  inference(subsumption_resolution,[],[f7145,f7121])).
fof(f7145,plain,(
  ( ! [X44] : (p(s(bool,X44))) ) | ($spl36 | $spl50)),
  inference(resolution,[],[f7121,f180])).
fof(f7155,plain,(
  $false | ($spl36 | $spl50)),
  inference(resolution,[],[f7121,f213])).
fof(f7156,plain,(
  $false | ($spl36 | $spl50)),
  inference(resolution,[],[f7121,f214])).
fof(f7116,plain,(
  $false | ($spl38 | $spl48)),
  inference(subsumption_resolution,[],[f7070,f7021])).
fof(f7021,plain,(
  ( ! [X2] : (~p(s(bool,X2))) ) | ($spl38 | $spl48)),
  inference(subsumption_resolution,[],[f7020,f154])).
fof(f7020,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,X2) | ~p(s(bool,X2))) ) | ($spl38 | $spl48)),
  inference(forward_demodulation,[],[f1686,f6456])).
fof(f7070,plain,(
  ( ! [X74,X75,X73] : (p(s(bool,'const.bool.IN_2'(s(X73,sK5(X74,X75,X73)),s(fun(X73,bool),X75))))) ) | ($spl38 | $spl48)),
  inference(resolution,[],[f7021,f164])).
fof(f7115,plain,(
  $false | ($spl38 | $spl48)),
  inference(subsumption_resolution,[],[f7067,f7021])).
fof(f7067,plain,(
  ( ! [X66,X64,X65] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X64,bool),X65),s(fun(X64,bool),X66))))) ) | ($spl38 | $spl48)),
  inference(resolution,[],[f7021,f164])).
fof(f7114,plain,(
  $false | ($spl38 | $spl48)),
  inference(subsumption_resolution,[],[f7066,f7021])).
fof(f7066,plain,(
  ( ! [X63] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X63))))) ) | ($spl38 | $spl48)),
  inference(resolution,[],[f7021,f653])).
fof(f7113,plain,(
  $false | ($spl38 | $spl48)),
  inference(subsumption_resolution,[],[f7054,f7021])).
fof(f7054,plain,(
  p(s(bool,'F_0')) | ($spl38 | $spl48)),
  inference(resolution,[],[f7021,f211])).
fof(f7112,plain,(
  $false | ($spl38 | $spl48)),
  inference(subsumption_resolution,[],[f7053,f7021])).
fof(f7053,plain,(
  p(s(bool,'F_0')) | ($spl38 | $spl48)),
  inference(resolution,[],[f7021,f209])).
fof(f7111,plain,(
  $false | ($spl38 | $spl48)),
  inference(subsumption_resolution,[],[f7050,f7021])).
fof(f7050,plain,(
  ( ! [X48] : (p(s(bool,X48))) ) | ($spl38 | $spl48)),
  inference(resolution,[],[f7021,f189])).
fof(f7110,plain,(
  $false | ($spl38 | $spl48)),
  inference(subsumption_resolution,[],[f7049,f7021])).
fof(f7049,plain,(
  ( ! [X47] : (p(s(bool,X47))) ) | ($spl38 | $spl48)),
  inference(resolution,[],[f7021,f186])).
fof(f7109,plain,(
  $false | ($spl38 | $spl48)),
  inference(subsumption_resolution,[],[f7047,f7021])).
fof(f7047,plain,(
  p(s(bool,'F_0')) | ($spl38 | $spl48)),
  inference(resolution,[],[f7021,f183])).
fof(f7108,plain,(
  $false | ($spl38 | $spl48)),
  inference(subsumption_resolution,[],[f7045,f7021])).
fof(f7045,plain,(
  ( ! [X44] : (p(s(bool,X44))) ) | ($spl38 | $spl48)),
  inference(resolution,[],[f7021,f180])).
fof(f7055,plain,(
  $false | ($spl38 | $spl48)),
  inference(resolution,[],[f7021,f213])).
fof(f7056,plain,(
  $false | ($spl38 | $spl48)),
  inference(resolution,[],[f7021,f214])).
fof(f6606,plain,(
  $false | $spl30),
  inference(trivial_inequality_removal,[],[f6594])).
fof(f6594,plain,(
  s(bool,'F_0') != s(bool,'F_0') | $spl30),
  inference(superposition,[],[f436,f278])).
fof(f6604,plain,(
  $false | ($spl23 | $spl30)),
  inference(trivial_inequality_removal,[],[f6602])).
fof(f6602,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl23 | $spl30)),
  inference(superposition,[],[f436,f1953])).
fof(f6603,plain,(
  $false | $spl30),
  inference(equality_resolution,[],[f436])).
fof(f6566,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl100),
  inference(cnf_transformation,[],[f6566_D])).
fof(f6566_D,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f6564,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl44),
  inference(subsumption_resolution,[],[f6541,f147])).
fof(f6541,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl44),
  inference(superposition,[],[f1587,f155])).
fof(f6548,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl97),
  inference(cnf_transformation,[],[f6548_D])).
fof(f6548_D,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) <=> ~$spl97),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl97])])).
fof(f6552,plain,(
  ( ! [X21] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl44),
  inference(subsumption_resolution,[],[f6551,f151])).
fof(f6551,plain,(
  ( ! [X21] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl44),
  inference(forward_demodulation,[],[f6519,f131])).
fof(f6519,plain,(
  ( ! [X21] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl44),
  inference(superposition,[],[f1587,f644])).
fof(f6549,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X13))) ) | $spl44),
  inference(subsumption_resolution,[],[f6517,f151])).
fof(f6517,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,X13)) ) | $spl44),
  inference(superposition,[],[f1587,f155])).
fof(f6543,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X9))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f6513])).
fof(f6513,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X9)) | p(s(bool,X9))) ) | $spl44),
  inference(superposition,[],[f1587,f150])).
fof(f6544,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X8))) ) | $spl44),
  inference(duplicate_literal_removal,[],[f6512])).
fof(f6512,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X8)) | p(s(bool,X8))) ) | $spl44),
  inference(superposition,[],[f1587,f148])).
fof(f1587,plain,(
  ( ! [X10] : (s(bool,X10) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X10))) ) | $spl44),
  inference(cnf_transformation,[],[f1587_D])).
fof(f1587_D,plain,(
  ( ! [X10] : (s(bool,X10) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X10))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f6463,plain,(
  ( ! [X37,X36] : (p(s(bool,X36)) | p(s(bool,X37)) | s(bool,X37) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl38),
  inference(resolution,[],[f1179,f215])).
fof(f6451,plain,(
  ( ! [X33,X31,X32] : (p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X32) != s(bool,X33)) ) | $spl38),
  inference(resolution,[],[f1179,f140])).
fof(f6448,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl38),
  inference(resolution,[],[f1179,f139])).
fof(f6447,plain,(
  ( ! [X21,X19,X20] : (p(s(bool,X19)) | p(s(bool,X20)) | s(bool,X19) != s(bool,X21) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl38),
  inference(resolution,[],[f1179,f138])).
fof(f6446,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X17) != s(bool,X18)) ) | $spl38),
  inference(resolution,[],[f1179,f136])).
fof(f6444,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl38),
  inference(resolution,[],[f1179,f134])).
fof(f6414,plain,(
  ( ! [X37,X36] : (p(s(bool,X36)) | p(s(bool,X37)) | s(bool,X37) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl36),
  inference(resolution,[],[f1175,f215])).
fof(f6402,plain,(
  ( ! [X33,X31,X32] : (p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X32) != s(bool,X33)) ) | $spl36),
  inference(resolution,[],[f1175,f140])).
fof(f6399,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl36),
  inference(resolution,[],[f1175,f139])).
fof(f6398,plain,(
  ( ! [X21,X19,X20] : (p(s(bool,X19)) | p(s(bool,X20)) | s(bool,X19) != s(bool,X21) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl36),
  inference(resolution,[],[f1175,f138])).
fof(f6397,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X17) != s(bool,X18)) ) | $spl36),
  inference(resolution,[],[f1175,f136])).
fof(f6395,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl36),
  inference(resolution,[],[f1175,f134])).
fof(f6388,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,X2) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl81),
  inference(subsumption_resolution,[],[f5611,f151])).
fof(f5611,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,X2) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | ~p(s(bool,X2))) ) | $spl81),
  inference(superposition,[],[f4798,f144])).
fof(f6387,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,X3) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl81),
  inference(subsumption_resolution,[],[f5612,f151])).
fof(f5612,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,X3) | ~p(s(bool,X3)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl81),
  inference(superposition,[],[f4798,f144])).
fof(f6371,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X2))) ) | $spl94),
  inference(cnf_transformation,[],[f6371_D])).
fof(f6371_D,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X2))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f6351,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl42),
  inference(resolution,[],[f5501,f215])).
fof(f6337,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X22) != s(bool,X24)) ) | $spl42),
  inference(resolution,[],[f5501,f140])).
fof(f6335,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl42),
  inference(resolution,[],[f5501,f139])).
fof(f6333,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl42),
  inference(resolution,[],[f5501,f138])).
fof(f6332,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X7) != s(bool,X9)) ) | $spl42),
  inference(resolution,[],[f5501,f136])).
fof(f6330,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl42),
  inference(resolution,[],[f5501,f134])).
fof(f6317,plain,(
  $false | ($spl17 | $spl46)),
  inference(trivial_inequality_removal,[],[f6299])).
fof(f6299,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl17 | $spl46)),
  inference(superposition,[],[f6271,f278])).
fof(f6271,plain,(
  ( ! [X10] : (s(bool,'F_0') != s(bool,X10)) ) | ($spl17 | $spl46)),
  inference(subsumption_resolution,[],[f6270,f149])).
fof(f6270,plain,(
  ( ! [X10] : (s(bool,'F_0') != s(bool,X10) | p(s(bool,X10))) ) | ($spl17 | $spl46)),
  inference(forward_demodulation,[],[f1637,f6027])).
fof(f6027,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl17),
  inference(resolution,[],[f1643,f148])).
fof(f1643,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl17),
  inference(forward_demodulation,[],[f305,f131])).
fof(f305,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | $spl17),
  inference(cnf_transformation,[],[f305_D])).
fof(f305_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f6315,plain,(
  $false | ($spl17 | $spl19 | $spl46)),
  inference(trivial_inequality_removal,[],[f6303])).
fof(f6303,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl17 | $spl19 | $spl46)),
  inference(superposition,[],[f6271,f5256])).
fof(f5256,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | $spl19),
  inference(resolution,[],[f1593,f148])).
fof(f1593,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl19),
  inference(forward_demodulation,[],[f307,f131])).
fof(f307,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | $spl19),
  inference(cnf_transformation,[],[f307_D])).
fof(f307_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f6314,plain,(
  $false | ($spl17 | $spl46)),
  inference(trivial_inequality_removal,[],[f6304])).
fof(f6304,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl17 | $spl46)),
  inference(superposition,[],[f6271,f6027])).
fof(f6313,plain,(
  $false | ($spl17 | $spl46 | $spl86)),
  inference(trivial_inequality_removal,[],[f6309])).
fof(f6309,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl17 | $spl46 | $spl86)),
  inference(superposition,[],[f6271,f4812])).
fof(f6312,plain,(
  $false | ($spl17 | $spl23 | $spl46)),
  inference(trivial_inequality_removal,[],[f6310])).
fof(f6310,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl17 | $spl23 | $spl46)),
  inference(superposition,[],[f6271,f1953])).
fof(f6311,plain,(
  $false | ($spl17 | $spl46)),
  inference(equality_resolution,[],[f6271])).
fof(f6064,plain,(
  $false | ($spl17 | $spl36)),
  inference(subsumption_resolution,[],[f1175,f1643])).
fof(f6038,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl17),
  inference(resolution,[],[f1643,f215])).
fof(f6024,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X22) != s(bool,X24)) ) | $spl17),
  inference(resolution,[],[f1643,f140])).
fof(f6022,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl17),
  inference(resolution,[],[f1643,f139])).
fof(f6020,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl17),
  inference(resolution,[],[f1643,f138])).
fof(f6019,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X7) != s(bool,X9)) ) | $spl17),
  inference(resolution,[],[f1643,f136])).
fof(f6017,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl17),
  inference(resolution,[],[f1643,f134])).
fof(f5979,plain,(
  ( ! [X52,X50,X51] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X50)))) | p(s(bool,X51)) | ~p(s(bool,X52)) | s(bool,X52) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X50)))) ) | $spl16),
  inference(resolution,[],[f1794,f215])).
fof(f1794,plain,(
  ( ! [X8] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X8)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X8))))) ) | $spl16),
  inference(resolution,[],[f1539,f163])).
fof(f1539,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl16),
  inference(forward_demodulation,[],[f306,f131])).
fof(f5965,plain,(
  ( ! [X33,X31,X34,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X31)))) | ~p(s(bool,X32)) | ~p(s(bool,X33)) | s(bool,X33) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X31))) | s(bool,X32) != s(bool,X34)) ) | $spl16),
  inference(resolution,[],[f1794,f140])).
fof(f5963,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X23)))) | p(s(bool,X24)) | ~p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X23)))) ) | $spl16),
  inference(resolution,[],[f1794,f139])).
fof(f5961,plain,(
  ( ! [X17,X15,X18,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X15)))) | p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,X18) | s(bool,X17) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X15)))) ) | $spl16),
  inference(resolution,[],[f1794,f138])).
fof(f5960,plain,(
  ( ! [X14,X12,X13,X11] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X11)))) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X11))) | s(bool,X12) != s(bool,X14)) ) | $spl16),
  inference(resolution,[],[f1794,f136])).
fof(f5958,plain,(
  ( ! [X6,X4,X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),X3)))) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X5) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X3)))) ) | $spl16),
  inference(resolution,[],[f1794,f134])).
fof(f5931,plain,(
  ( ! [X37,X36] : (p(s(bool,X36)) | p(s(bool,X37)) | s(bool,X37) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl42),
  inference(resolution,[],[f5542,f215])).
fof(f5919,plain,(
  ( ! [X33,X31,X32] : (p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X32) != s(bool,X33)) ) | $spl42),
  inference(resolution,[],[f5542,f140])).
fof(f5916,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl42),
  inference(resolution,[],[f5542,f139])).
fof(f5915,plain,(
  ( ! [X21,X19,X20] : (p(s(bool,X19)) | p(s(bool,X20)) | s(bool,X19) != s(bool,X21) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl42),
  inference(resolution,[],[f5542,f138])).
fof(f5914,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X17) != s(bool,X18)) ) | $spl42),
  inference(resolution,[],[f5542,f136])).
fof(f5912,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl42),
  inference(resolution,[],[f5542,f134])).
fof(f5897,plain,(
  $false | ($spl76 | $spl86)),
  inference(trivial_inequality_removal,[],[f5880])).
fof(f5880,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl76 | $spl86)),
  inference(superposition,[],[f5852,f278])).
fof(f5852,plain,(
  ( ! [X3] : (s(bool,'F_0') != s(bool,X3)) ) | ($spl76 | $spl86)),
  inference(subsumption_resolution,[],[f5851,f149])).
fof(f5851,plain,(
  ( ! [X3] : (s(bool,'F_0') != s(bool,X3) | p(s(bool,X3))) ) | ($spl76 | $spl86)),
  inference(forward_demodulation,[],[f4670,f4812])).
fof(f5895,plain,(
  $false | ($spl19 | $spl76 | $spl86)),
  inference(trivial_inequality_removal,[],[f5885])).
fof(f5885,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl19 | $spl76 | $spl86)),
  inference(superposition,[],[f5852,f5256])).
fof(f5894,plain,(
  $false | ($spl76 | $spl86)),
  inference(trivial_inequality_removal,[],[f5890])).
fof(f5890,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl76 | $spl86)),
  inference(superposition,[],[f5852,f4812])).
fof(f5893,plain,(
  $false | ($spl23 | $spl76 | $spl86)),
  inference(trivial_inequality_removal,[],[f5891])).
fof(f5891,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl23 | $spl76 | $spl86)),
  inference(superposition,[],[f5852,f1953])).
fof(f5892,plain,(
  $false | ($spl76 | $spl86)),
  inference(equality_resolution,[],[f5852])).
fof(f5593,plain,(
  $false | ($spl19 | $spl44)),
  inference(trivial_inequality_removal,[],[f5578])).
fof(f5578,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl19 | $spl44)),
  inference(superposition,[],[f5550,f278])).
fof(f5550,plain,(
  ( ! [X10] : (s(bool,'F_0') != s(bool,X10)) ) | ($spl19 | $spl44)),
  inference(subsumption_resolution,[],[f5549,f149])).
fof(f5549,plain,(
  ( ! [X10] : (s(bool,'F_0') != s(bool,X10) | p(s(bool,X10))) ) | ($spl19 | $spl44)),
  inference(forward_demodulation,[],[f1587,f5256])).
fof(f5591,plain,(
  $false | ($spl19 | $spl44)),
  inference(trivial_inequality_removal,[],[f5583])).
fof(f5583,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl19 | $spl44)),
  inference(superposition,[],[f5550,f5256])).
fof(f5590,plain,(
  $false | ($spl19 | $spl23 | $spl44)),
  inference(trivial_inequality_removal,[],[f5588])).
fof(f5588,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl19 | $spl23 | $spl44)),
  inference(superposition,[],[f5550,f1953])).
fof(f5589,plain,(
  $false | ($spl19 | $spl44)),
  inference(equality_resolution,[],[f5550])).
fof(f5293,plain,(
  $false | ($spl19 | $spl38)),
  inference(subsumption_resolution,[],[f1179,f1593])).
fof(f1686,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl48),
  inference(cnf_transformation,[],[f1686_D])).
fof(f1686_D,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f5267,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl19),
  inference(resolution,[],[f1593,f215])).
fof(f5253,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X22) != s(bool,X24)) ) | $spl19),
  inference(resolution,[],[f1593,f140])).
fof(f5251,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl19),
  inference(resolution,[],[f1593,f139])).
fof(f5249,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl19),
  inference(resolution,[],[f1593,f138])).
fof(f5248,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X7) != s(bool,X9)) ) | $spl19),
  inference(resolution,[],[f1593,f136])).
fof(f5246,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl19),
  inference(resolution,[],[f1593,f134])).
fof(f5207,plain,(
  ( ! [X52,X50,X51] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X50)))) | p(s(bool,X51)) | ~p(s(bool,X52)) | s(bool,X52) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X50)))) ) | $spl18),
  inference(resolution,[],[f1697,f215])).
fof(f1697,plain,(
  ( ! [X8] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X8)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X8))))) ) | $spl18),
  inference(resolution,[],[f1538,f163])).
fof(f1538,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl18),
  inference(forward_demodulation,[],[f308,f131])).
fof(f5193,plain,(
  ( ! [X33,X31,X34,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X31)))) | ~p(s(bool,X32)) | ~p(s(bool,X33)) | s(bool,X33) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X31))) | s(bool,X32) != s(bool,X34)) ) | $spl18),
  inference(resolution,[],[f1697,f140])).
fof(f5191,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X23)))) | p(s(bool,X24)) | ~p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X23)))) ) | $spl18),
  inference(resolution,[],[f1697,f139])).
fof(f5189,plain,(
  ( ! [X17,X15,X18,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X15)))) | p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,X18) | s(bool,X17) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X15)))) ) | $spl18),
  inference(resolution,[],[f1697,f138])).
fof(f5188,plain,(
  ( ! [X14,X12,X13,X11] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X11)))) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X11))) | s(bool,X12) != s(bool,X14)) ) | $spl18),
  inference(resolution,[],[f1697,f136])).
fof(f5186,plain,(
  ( ! [X6,X4,X5,X3] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),X3)))) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X5) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),X3)))) ) | $spl18),
  inference(resolution,[],[f1697,f134])).
fof(f5171,plain,(
  ( ! [X14,X12,X13,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X16)) | s(bool,X16) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X14))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X13),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s('type.num.num',X12) = s('type.num.num',X13) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X12),s('type.num.num',X13),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X14))))) ) | $spl88),
  inference(cnf_transformation,[],[f5171_D])).
fof(f5171_D,plain,(
  ( ! [X14,X12,X13,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X16)) | s(bool,X16) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X14))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X13),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s('type.num.num',X12) = s('type.num.num',X13) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X12),s('type.num.num',X13),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X14))))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f5154,plain,(
  ( ! [X103,X101,X105,X102,X104] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X101),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X101),s('type.num.num',X102),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X103)))) | s('type.num.num',X101) = s('type.num.num',X102) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X102),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X104)) | ~p(s(bool,X105)) | s(bool,X105) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X103)))) )),
  inference(resolution,[],[f745,f215])).
fof(f745,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X2),s('type.num.num',X3),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4)))) | s('type.num.num',X2) = s('type.num.num',X3) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) )),
  inference(forward_demodulation,[],[f648,f131])).
fof(f648,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X2),s('type.num.num',X3),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4)))) | s('type.num.num',X2) = s('type.num.num',X3) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X3),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | ~p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4))))) )),
  inference(superposition,[],[f157,f131])).
fof(f5140,plain,(
  ( ! [X59,X57,X54,X58,X56,X55] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X54),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X54),s('type.num.num',X55),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X56)))) | s('type.num.num',X54) = s('type.num.num',X55) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X55),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X57)) | ~p(s(bool,X58)) | s(bool,X58) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X56))) | s(bool,X57) != s(bool,X59)) )),
  inference(resolution,[],[f745,f140])).
fof(f5138,plain,(
  ( ! [X47,X45,X43,X46,X44,X42] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X42),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X42),s('type.num.num',X43),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X44)))) | s('type.num.num',X42) = s('type.num.num',X43) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X43),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X45)) | ~p(s(bool,X46)) | ~p(s(bool,X47)) | s(bool,X46) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X44)))) )),
  inference(resolution,[],[f745,f139])).
fof(f5136,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X30),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X30),s('type.num.num',X31),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X32)))) | s('type.num.num',X30) = s('type.num.num',X31) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X31),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X33)) | ~p(s(bool,X34)) | s(bool,X33) != s(bool,X35) | s(bool,X34) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X32)))) )),
  inference(resolution,[],[f745,f138])).
fof(f5135,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X24),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X24),s('type.num.num',X25),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X26)))) | s('type.num.num',X24) = s('type.num.num',X25) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X25),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X28) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X26))) | s(bool,X27) != s(bool,X29)) )),
  inference(resolution,[],[f745,f136])).
fof(f5133,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X12),s('type.num.num',X13),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X14)))) | s('type.num.num',X12) = s('type.num.num',X13) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X13),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X14)))) )),
  inference(resolution,[],[f745,f134])).
fof(f4670,plain,(
  ( ! [X3] : (s(bool,X3) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X3))) ) | $spl76),
  inference(cnf_transformation,[],[f4670_D])).
fof(f4670_D,plain,(
  ( ! [X3] : (s(bool,X3) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | p(s(bool,X3))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f4843,plain,(
  ( ! [X28,X29] : (p(s(bool,X28)) | p(s(bool,X29)) | s(bool,X29) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl14),
  inference(resolution,[],[f303,f215])).
fof(f4831,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X24) != s(bool,X25)) ) | $spl14),
  inference(resolution,[],[f303,f140])).
fof(f4828,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | ~p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X16) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl14),
  inference(resolution,[],[f303,f139])).
fof(f4827,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl14),
  inference(resolution,[],[f303,f138])).
fof(f4826,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X9) != s(bool,X10)) ) | $spl14),
  inference(resolution,[],[f303,f136])).
fof(f4824,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl14),
  inference(resolution,[],[f303,f134])).
fof(f4807,plain,(
  ( ! [X6,X7] : (s(bool,X6) != s(bool,X7) | ~p(s(bool,X6)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | ($spl6 | $spl42)),
  inference(subsumption_resolution,[],[f4785,f255])).
fof(f4785,plain,(
  ( ! [X6,X7] : (s(bool,X6) != s(bool,X7) | ~p(s(bool,X7)) | ~p(s(bool,X6)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))) ) | $spl42),
  inference(superposition,[],[f1531,f144])).
fof(f4806,plain,(
  ( ! [X4,X5] : (s(bool,X4) != s(bool,X5) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | ~p(s(bool,X4))) ) | ($spl6 | $spl42)),
  inference(subsumption_resolution,[],[f4784,f255])).
fof(f4784,plain,(
  ( ! [X4,X5] : (s(bool,X4) != s(bool,X5) | ~p(s(bool,X5)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | ~p(s(bool,X4))) ) | $spl42),
  inference(superposition,[],[f1531,f144])).
fof(f4802,plain,(
  ( ! [X20] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl42),
  inference(subsumption_resolution,[],[f4801,f148])).
fof(f4801,plain,(
  ( ! [X20] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl42),
  inference(forward_demodulation,[],[f4775,f131])).
fof(f4775,plain,(
  ( ! [X20] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl42),
  inference(superposition,[],[f1531,f645])).
fof(f4799,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,'F_0') = s(bool,X12)) ) | $spl42),
  inference(subsumption_resolution,[],[f4773,f148])).
fof(f4773,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X12)) | s(bool,'F_0') = s(bool,X12)) ) | $spl42),
  inference(superposition,[],[f1531,f155])).
fof(f4725,plain,(
  ( ! [X5,X3] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3)))) | ~p(s(bool,X5)) | s(bool,X5) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X3,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl78),
  inference(cnf_transformation,[],[f4725_D])).
fof(f4725_D,plain,(
  ( ! [X5,X3] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3)))) | ~p(s(bool,X5)) | s(bool,X5) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X3,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f4706,plain,(
  ( ! [X52,X50,X51] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X50)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X50,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X51)) | ~p(s(bool,X52)) | s(bool,X52) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X50)))))) )),
  inference(resolution,[],[f647,f215])).
fof(f647,plain,(
  ( ! [X1] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))))) | p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) )),
  inference(superposition,[],[f159,f131])).
fof(f4692,plain,(
  ( ! [X33,X31,X34,X32] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X31)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X31,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X32)) | ~p(s(bool,X33)) | s(bool,X33) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X31))))) | s(bool,X32) != s(bool,X34)) )),
  inference(resolution,[],[f647,f140])).
fof(f4690,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X23)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X23,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X24)) | ~p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X23)))))) )),
  inference(resolution,[],[f647,f139])).
fof(f4688,plain,(
  ( ! [X17,X15,X18,X16] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X15)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X15,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,X18) | s(bool,X17) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X15)))))) )),
  inference(resolution,[],[f647,f138])).
fof(f4687,plain,(
  ( ! [X14,X12,X13,X11] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X11)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X11,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X11))))) | s(bool,X12) != s(bool,X14)) )),
  inference(resolution,[],[f647,f136])).
fof(f4685,plain,(
  ( ! [X6,X4,X5,X3] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X3,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X5) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3)))))) )),
  inference(resolution,[],[f647,f134])).
fof(f4638,plain,(
  ( ! [X28,X29] : (p(s(bool,X28)) | p(s(bool,X29)) | s(bool,X29) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl14),
  inference(resolution,[],[f303,f215])).
fof(f4626,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X24) != s(bool,X25)) ) | $spl14),
  inference(resolution,[],[f303,f140])).
fof(f4623,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | ~p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X16) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl14),
  inference(resolution,[],[f303,f139])).
fof(f4622,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl14),
  inference(resolution,[],[f303,f138])).
fof(f4621,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X9) != s(bool,X10)) ) | $spl14),
  inference(resolution,[],[f303,f136])).
fof(f4619,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl14),
  inference(resolution,[],[f303,f134])).
fof(f4587,plain,(
  ( ! [X37,X36] : (p(s(bool,X36)) | p(s(bool,X37)) | s(bool,X37) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl15),
  inference(resolution,[],[f2247,f215])).
fof(f2247,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl15),
  inference(forward_demodulation,[],[f2205,f131])).
fof(f2205,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | $spl15),
  inference(resolution,[],[f304,f164])).
fof(f4575,plain,(
  ( ! [X33,X31,X32] : (p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X32) != s(bool,X33)) ) | $spl15),
  inference(resolution,[],[f2247,f140])).
fof(f4572,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl15),
  inference(resolution,[],[f2247,f139])).
fof(f4571,plain,(
  ( ! [X21,X19,X20] : (p(s(bool,X19)) | p(s(bool,X20)) | s(bool,X19) != s(bool,X21) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl15),
  inference(resolution,[],[f2247,f138])).
fof(f4570,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X17) != s(bool,X18)) ) | $spl15),
  inference(resolution,[],[f2247,f136])).
fof(f4568,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl15),
  inference(resolution,[],[f2247,f134])).
fof(f4541,plain,(
  ( ! [X5,X3] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3)))) | ~p(s(bool,X5)) | s(bool,X5) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(X3,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl72),
  inference(cnf_transformation,[],[f4541_D])).
fof(f4541_D,plain,(
  ( ! [X5,X3] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3)))) | ~p(s(bool,X5)) | s(bool,X5) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(X3,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f4521,plain,(
  ( ! [X52,X50,X51] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X50)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(X50,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X51)) | ~p(s(bool,X52)) | s(bool,X52) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X50)))))) )),
  inference(resolution,[],[f646,f215])).
fof(f646,plain,(
  ( ! [X0] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X0)))))) | p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X0)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(X0,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) )),
  inference(superposition,[],[f160,f131])).
fof(f160,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(X1,X0)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f4507,plain,(
  ( ! [X33,X31,X34,X32] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X31)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(X31,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X32)) | ~p(s(bool,X33)) | s(bool,X33) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X31))))) | s(bool,X32) != s(bool,X34)) )),
  inference(resolution,[],[f646,f140])).
fof(f4505,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X23)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(X23,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X24)) | ~p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X23)))))) )),
  inference(resolution,[],[f646,f139])).
fof(f4503,plain,(
  ( ! [X17,X15,X18,X16] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X15)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(X15,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,X18) | s(bool,X17) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X15)))))) )),
  inference(resolution,[],[f646,f138])).
fof(f4502,plain,(
  ( ! [X14,X12,X13,X11] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X11)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(X11,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X13) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X11))))) | s(bool,X12) != s(bool,X14)) )),
  inference(resolution,[],[f646,f136])).
fof(f4500,plain,(
  ( ! [X6,X4,X5,X3] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(X3,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X4)) | ~p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X5) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3)))))) )),
  inference(resolution,[],[f646,f134])).
fof(f4271,plain,(
  ( ! [X14,X12,X11] : (s('type.num.num',X11) = s('type.num.num',X12) | ~p(s(bool,X14)) | s(bool,X14) != s(bool,'const.bool.IN_2'(s('type.num.num',X11),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X11),s('type.num.num',X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl70),
  inference(cnf_transformation,[],[f4271_D])).
fof(f4271_D,plain,(
  ( ! [X14,X12,X11] : (s('type.num.num',X11) = s('type.num.num',X12) | ~p(s(bool,X14)) | s(bool,X14) != s(bool,'const.bool.IN_2'(s('type.num.num',X11),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X11),s('type.num.num',X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f4249,plain,(
  ( ! [X80,X81,X79,X82] : (s('type.num.num',X79) = s('type.num.num',X80) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X80),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X79),s('type.num.num',X80),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | p(s(bool,X81)) | ~p(s(bool,X82)) | s(bool,X82) != s(bool,'const.bool.IN_2'(s('type.num.num',X79),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f218,f215])).
fof(f4235,plain,(
  ( ! [X47,X50,X48,X46,X49] : (s('type.num.num',X46) = s('type.num.num',X47) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X47),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X46),s('type.num.num',X47),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,X48)) | ~p(s(bool,X49)) | s(bool,X49) != s(bool,'const.bool.IN_2'(s('type.num.num',X46),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X48) != s(bool,X50)) )),
  inference(resolution,[],[f218,f140])).
fof(f4233,plain,(
  ( ! [X39,X37,X38,X36,X40] : (s('type.num.num',X36) = s('type.num.num',X37) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X37),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X36),s('type.num.num',X37),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | p(s(bool,X38)) | ~p(s(bool,X39)) | ~p(s(bool,X40)) | s(bool,X39) != s(bool,'const.bool.IN_2'(s('type.num.num',X36),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f218,f139])).
fof(f4231,plain,(
  ( ! [X30,X28,X26,X29,X27] : (s('type.num.num',X26) = s('type.num.num',X27) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X27),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X26),s('type.num.num',X27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X28) != s(bool,X30) | s(bool,X29) != s(bool,'const.bool.IN_2'(s('type.num.num',X26),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f218,f138])).
fof(f4230,plain,(
  ( ! [X24,X23,X21,X25,X22] : (s('type.num.num',X21) = s('type.num.num',X22) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X22),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X21),s('type.num.num',X22),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X23) != s(bool,X25)) )),
  inference(resolution,[],[f218,f136])).
fof(f4228,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.num.num',X11) = s('type.num.num',X12) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',X11),s('type.num.num',X12),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X14) != s(bool,'const.bool.IN_2'(s('type.num.num',X11),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f218,f134])).
fof(f4036,plain,(
  ( ! [X6,X8,X5] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),X6)))) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X6),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl68),
  inference(cnf_transformation,[],[f4036_D])).
fof(f4036_D,plain,(
  ( ! [X6,X8,X5] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),X6)))) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X6),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f4015,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X73),s(fun('type.num.num',bool),X74)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X73),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X75)) | ~p(s(bool,X76)) | s(bool,X76) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X74),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f655,f215])).
fof(f4001,plain,(
  ( ! [X43,X41,X44,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X40),s(fun('type.num.num',bool),X41)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X40),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X42)) | ~p(s(bool,X43)) | s(bool,X43) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X41),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,X42) != s(bool,X44)) )),
  inference(resolution,[],[f655,f140])).
fof(f3999,plain,(
  ( ! [X30,X33,X31,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X30),s(fun('type.num.num',bool),X31)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X30),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X32)) | ~p(s(bool,X33)) | ~p(s(bool,X34)) | s(bool,X33) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X31),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f655,f139])).
fof(f3997,plain,(
  ( ! [X24,X23,X21,X22,X20] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),X21)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X20),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,X24) | s(bool,X23) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X21),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f655,f138])).
fof(f3996,plain,(
  ( ! [X19,X17,X15,X18,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),X16)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X18) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X16),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,X17) != s(bool,X19)) )),
  inference(resolution,[],[f655,f136])).
fof(f3994,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),X6)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,X9) | s(bool,X8) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X6),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f655,f134])).
fof(f3784,plain,(
  ( ! [X8,X11,X9] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X8),s(fun('type.num.num',bool),X9)))) | ~p(s(bool,X11)) | s(bool,X11) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X9))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) | $spl66),
  inference(cnf_transformation,[],[f3784_D])).
fof(f3784_D,plain,(
  ( ! [X8,X11,X9] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X8),s(fun('type.num.num',bool),X9)))) | ~p(s(bool,X11)) | s(bool,X11) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X9))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f3764,plain,(
  ( ! [X78,X76,X79,X77] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X76),s(fun('type.num.num',bool),X77)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X76),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X78)) | ~p(s(bool,X79)) | s(bool,X79) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X77)))) )),
  inference(resolution,[],[f654,f215])).
fof(f3750,plain,(
  ( ! [X47,X45,X43,X46,X44] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X43),s(fun('type.num.num',bool),X44)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X43),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X46) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X44))) | s(bool,X45) != s(bool,X47)) )),
  inference(resolution,[],[f654,f140])).
fof(f3748,plain,(
  ( ! [X37,X35,X33,X36,X34] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X33),s(fun('type.num.num',bool),X34)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X33),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X35)) | ~p(s(bool,X36)) | ~p(s(bool,X37)) | s(bool,X36) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X34)))) )),
  inference(resolution,[],[f654,f139])).
fof(f3746,plain,(
  ( ! [X26,X24,X23,X27,X25] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X23),s(fun('type.num.num',bool),X24)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X23),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X26) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X24)))) )),
  inference(resolution,[],[f654,f138])).
fof(f3745,plain,(
  ( ! [X21,X19,X22,X20,X18] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),X19)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,X20)) | ~p(s(bool,X21)) | s(bool,X21) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X19))) | s(bool,X20) != s(bool,X22)) )),
  inference(resolution,[],[f654,f136])).
fof(f3743,plain,(
  ( ! [X12,X10,X8,X11,X9] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X8),s(fun('type.num.num',bool),X9)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X9)))) )),
  inference(resolution,[],[f654,f134])).
fof(f3713,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) ) | $spl64),
  inference(cnf_transformation,[],[f3713_D])).
fof(f3713_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f3698,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | p(s(bool,X28)) | s(bool,X28) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f3628,f215])).
fof(f3628,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))))),
  inference(duplicate_literal_removal,[],[f3582])).
fof(f3582,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))))),
  inference(resolution,[],[f653,f652])).
fof(f3686,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,X23) != s(bool,X24)) )),
  inference(resolution,[],[f3628,f140])).
fof(f3683,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f3628,f139])).
fof(f3682,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f3628,f138])).
fof(f3681,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,X8) != s(bool,X9)) )),
  inference(resolution,[],[f3628,f136])).
fof(f3679,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f3628,f134])).
fof(f3672,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl62),
  inference(cnf_transformation,[],[f3672_D])).
fof(f3672_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f3654,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | p(s(bool,X28)) | s(bool,X28) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f3627,f215])).
fof(f3627,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))),
  inference(duplicate_literal_removal,[],[f3587])).
fof(f3587,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))))),
  inference(resolution,[],[f653,f165])).
fof(f3642,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X23) != s(bool,X24)) )),
  inference(resolution,[],[f3627,f140])).
fof(f3639,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f3627,f139])).
fof(f3638,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f3627,f138])).
fof(f3637,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X8) != s(bool,X9)) )),
  inference(resolution,[],[f3627,f136])).
fof(f3635,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f3627,f134])).
fof(f3629,plain,(
  ( ! [X14,X16] : (s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X14,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X16)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X14))))) ) | $spl60),
  inference(cnf_transformation,[],[f3629_D])).
fof(f3629_D,plain,(
  ( ! [X14,X16] : (s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X14,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | p(s(bool,X16)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X14))))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f3608,plain,(
  ( ! [X61,X59,X60] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X59)))) | p(s(bool,X60)) | p(s(bool,X61)) | s(bool,X61) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X59,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f653,f215])).
fof(f3596,plain,(
  ( ! [X45,X43,X44,X42] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X42)))) | p(s(bool,X43)) | ~p(s(bool,X44)) | s(bool,X43) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X42,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X44) != s(bool,X45)) )),
  inference(resolution,[],[f653,f140])).
fof(f3593,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X30)))) | p(s(bool,X31)) | ~p(s(bool,X32)) | p(s(bool,X33)) | s(bool,X33) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X30,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f653,f139])).
fof(f3592,plain,(
  ( ! [X28,X26,X29,X27] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X26)))) | p(s(bool,X27)) | p(s(bool,X28)) | s(bool,X27) != s(bool,X29) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X26,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f653,f138])).
fof(f3591,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X22)))) | p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X22,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X24) != s(bool,X25)) )),
  inference(resolution,[],[f653,f136])).
fof(f3589,plain,(
  ( ! [X14,X17,X15,X16] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),X14)))) | p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5(X14,'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f653,f134])).
fof(f3377,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) ) | $spl58),
  inference(cnf_transformation,[],[f3377_D])).
fof(f3377_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f3359,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | p(s(bool,X28)) | s(bool,X28) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f3325,f215])).
fof(f3347,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,X23) != s(bool,X24)) )),
  inference(resolution,[],[f3325,f140])).
fof(f3344,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f3325,f139])).
fof(f3343,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f3325,f138])).
fof(f3342,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))) | s(bool,X8) != s(bool,X9)) )),
  inference(resolution,[],[f3325,f136])).
fof(f3340,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) )),
  inference(resolution,[],[f3325,f134])).
fof(f3326,plain,(
  ( ! [X4,X2] : (s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X2,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | ~p(s(bool,X4)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X2),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))))) ) | $spl56),
  inference(cnf_transformation,[],[f3326_D])).
fof(f3326_D,plain,(
  ( ! [X4,X2] : (s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X2,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | ~p(s(bool,X4)) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X2),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))))))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f3305,plain,(
  ( ! [X50,X51,X49] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X49),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | p(s(bool,X50)) | ~p(s(bool,X51)) | s(bool,X51) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X49,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f652,f215])).
fof(f3291,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X30),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X32) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X30,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X31) != s(bool,X33)) )),
  inference(resolution,[],[f652,f140])).
fof(f3289,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X22),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | p(s(bool,X23)) | ~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X22,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f652,f139])).
fof(f3287,plain,(
  ( ! [X14,X17,X15,X16] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X14),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X14,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f652,f138])).
fof(f3286,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X10),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | ~p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X12) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X10,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X11) != s(bool,X13)) )),
  inference(resolution,[],[f652,f136])).
fof(f3284,plain,(
  ( ! [X4,X2,X5,X3] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),X2),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.bool.IN_2'(s('type.num.num',sK5('const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)),X2,'type.num.num')),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) )),
  inference(resolution,[],[f652,f134])).
fof(f1531,plain,(
  ( ! [X1] : (s(bool,X1) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X1))) ) | $spl42),
  inference(cnf_transformation,[],[f1531_D])).
fof(f1531_D,plain,(
  ( ! [X1] : (s(bool,X1) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | ~p(s(bool,X1))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f2228,plain,(
  ( ! [X26,X27] : (p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X27) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl15),
  inference(resolution,[],[f304,f215])).
fof(f2214,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X21) != s(bool,X23)) ) | $spl15),
  inference(resolution,[],[f304,f140])).
fof(f2212,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl15),
  inference(resolution,[],[f304,f139])).
fof(f2210,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl15),
  inference(resolution,[],[f304,f138])).
fof(f2209,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X6) != s(bool,X8)) ) | $spl15),
  inference(resolution,[],[f304,f136])).
fof(f2207,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl15),
  inference(resolution,[],[f304,f134])).
fof(f1885,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl52),
  inference(cnf_transformation,[],[f1885_D])).
fof(f1885_D,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f1964,plain,(
  ( ! [X28,X29] : (p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X29) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl23),
  inference(resolution,[],[f312,f215])).
fof(f1950,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X23) != s(bool,X25)) ) | $spl23),
  inference(resolution,[],[f312,f140])).
fof(f1948,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl23),
  inference(resolution,[],[f312,f139])).
fof(f1946,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl23),
  inference(resolution,[],[f312,f138])).
fof(f1945,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X8) != s(bool,X10)) ) | $spl23),
  inference(resolution,[],[f312,f136])).
fof(f1943,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl23),
  inference(resolution,[],[f312,f134])).
fof(f1912,plain,(
  ( ! [X26,X27] : (p(s(bool,X26)) | p(s(bool,X27)) | s(bool,X27) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl22),
  inference(resolution,[],[f311,f215])).
fof(f1900,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X22) != s(bool,X23)) ) | $spl22),
  inference(resolution,[],[f311,f140])).
fof(f1897,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl22),
  inference(resolution,[],[f311,f139])).
fof(f1896,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl22),
  inference(resolution,[],[f311,f138])).
fof(f1895,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X7) != s(bool,X8)) ) | $spl22),
  inference(resolution,[],[f311,f136])).
fof(f1893,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl22),
  inference(resolution,[],[f311,f134])).
fof(f1934,plain,(
  ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl22),
  inference(subsumption_resolution,[],[f1933,f178])).
fof(f1933,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl22),
  inference(forward_demodulation,[],[f1892,f278])).
fof(f1892,plain,(
  p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) | $spl22),
  inference(resolution,[],[f311,f162])).
fof(f1861,plain,(
  ( ! [X28,X29] : (p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X29) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl23),
  inference(resolution,[],[f312,f215])).
fof(f1847,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X23) != s(bool,X25)) ) | $spl23),
  inference(resolution,[],[f312,f140])).
fof(f1845,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl23),
  inference(resolution,[],[f312,f139])).
fof(f1843,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl23),
  inference(resolution,[],[f312,f138])).
fof(f1842,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X8) != s(bool,X10)) ) | $spl23),
  inference(resolution,[],[f312,f136])).
fof(f1840,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl23),
  inference(resolution,[],[f312,f134])).
fof(f1814,plain,(
  ( ! [X35,X36] : (p(s(bool,X35)) | p(s(bool,X36)) | s(bool,X36) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl16),
  inference(resolution,[],[f1539,f215])).
fof(f1802,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X30) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X31) != s(bool,X32)) ) | $spl16),
  inference(resolution,[],[f1539,f140])).
fof(f1799,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X23) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl16),
  inference(resolution,[],[f1539,f139])).
fof(f1798,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl16),
  inference(resolution,[],[f1539,f138])).
fof(f1797,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X16) != s(bool,X17)) ) | $spl16),
  inference(resolution,[],[f1539,f136])).
fof(f1795,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl16),
  inference(resolution,[],[f1539,f134])).
fof(f1763,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl17),
  inference(resolution,[],[f1643,f215])).
fof(f1749,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X22) != s(bool,X24)) ) | $spl17),
  inference(resolution,[],[f1643,f140])).
fof(f1747,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl17),
  inference(resolution,[],[f1643,f139])).
fof(f1745,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl17),
  inference(resolution,[],[f1643,f138])).
fof(f1744,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X7) != s(bool,X9)) ) | $spl17),
  inference(resolution,[],[f1643,f136])).
fof(f1742,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl17),
  inference(resolution,[],[f1643,f134])).
fof(f1717,plain,(
  ( ! [X35,X36] : (p(s(bool,X35)) | p(s(bool,X36)) | s(bool,X36) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl18),
  inference(resolution,[],[f1538,f215])).
fof(f1705,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X30) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X31) != s(bool,X32)) ) | $spl18),
  inference(resolution,[],[f1538,f140])).
fof(f1702,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X23) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl18),
  inference(resolution,[],[f1538,f139])).
fof(f1701,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl18),
  inference(resolution,[],[f1538,f138])).
fof(f1700,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X16) != s(bool,X17)) ) | $spl18),
  inference(resolution,[],[f1538,f136])).
fof(f1698,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl18),
  inference(resolution,[],[f1538,f134])).
fof(f1666,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X28) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl19),
  inference(resolution,[],[f1593,f215])).
fof(f1652,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X22) != s(bool,X24)) ) | $spl19),
  inference(resolution,[],[f1593,f140])).
fof(f1650,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl19),
  inference(resolution,[],[f1593,f139])).
fof(f1648,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl19),
  inference(resolution,[],[f1593,f138])).
fof(f1647,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X7) != s(bool,X9)) ) | $spl19),
  inference(resolution,[],[f1593,f136])).
fof(f1645,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl19),
  inference(resolution,[],[f1593,f134])).
fof(f1618,plain,(
  ( ! [X35,X36] : (p(s(bool,X35)) | p(s(bool,X36)) | s(bool,X36) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl16),
  inference(resolution,[],[f1539,f215])).
fof(f1606,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X30) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X31) != s(bool,X32)) ) | $spl16),
  inference(resolution,[],[f1539,f140])).
fof(f1603,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X23) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl16),
  inference(resolution,[],[f1539,f139])).
fof(f1602,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl16),
  inference(resolution,[],[f1539,f138])).
fof(f1601,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X16) != s(bool,X17)) ) | $spl16),
  inference(resolution,[],[f1539,f136])).
fof(f1599,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl16),
  inference(resolution,[],[f1539,f134])).
fof(f1568,plain,(
  ( ! [X35,X36] : (p(s(bool,X35)) | p(s(bool,X36)) | s(bool,X36) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl18),
  inference(resolution,[],[f1538,f215])).
fof(f1556,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X30) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X31) != s(bool,X32)) ) | $spl18),
  inference(resolution,[],[f1538,f140])).
fof(f1553,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X23) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl18),
  inference(resolution,[],[f1538,f139])).
fof(f1552,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl18),
  inference(resolution,[],[f1538,f138])).
fof(f1551,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))))) | s(bool,X16) != s(bool,X17)) ) | $spl18),
  inference(resolution,[],[f1538,f136])).
fof(f1549,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) ) | $spl18),
  inference(resolution,[],[f1538,f134])).
fof(f1511,plain,(
  ( ! [X26,X27] : (p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X27) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl15),
  inference(resolution,[],[f304,f215])).
fof(f1497,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X21) != s(bool,X23)) ) | $spl15),
  inference(resolution,[],[f304,f140])).
fof(f1495,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl15),
  inference(resolution,[],[f304,f139])).
fof(f1493,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl15),
  inference(resolution,[],[f304,f138])).
fof(f1492,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X6) != s(bool,X8)) ) | $spl15),
  inference(resolution,[],[f304,f136])).
fof(f1490,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl15),
  inference(resolution,[],[f304,f134])).
fof(f1481,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) | $spl40),
  inference(cnf_transformation,[],[f1481_D])).
fof(f1481_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f1458,plain,(
  ( ! [X28,X27] : (p(s(bool,X27)) | p(s(bool,X28)) | s(bool,X28) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) )),
  inference(resolution,[],[f217,f215])).
fof(f1446,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X23) != s(bool,X24)) )),
  inference(resolution,[],[f217,f140])).
fof(f1443,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) )),
  inference(resolution,[],[f217,f139])).
fof(f1442,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) )),
  inference(resolution,[],[f217,f138])).
fof(f1441,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))) | s(bool,X8) != s(bool,X9)) )),
  inference(resolution,[],[f217,f136])).
fof(f1439,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))))) )),
  inference(resolution,[],[f217,f134])).
fof(f1181,plain,(
  ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))),
  inference(subsumption_resolution,[],[f1081,f178])).
fof(f1081,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))),
  inference(superposition,[],[f162,f278])).
fof(f310,plain,(
  s('type.num.num',sK3(sK1,sK2)) != s('type.num.num',sK4(sK1,sK2)) | $spl21),
  inference(cnf_transformation,[],[f310_D])).
fof(f310_D,plain,(
  s('type.num.num',sK3(sK1,sK2)) != s('type.num.num',sK4(sK1,sK2)) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f1180,plain,(
  s('type.num.num',sK3(sK1,sK2)) != s('type.num.num',sK4(sK1,sK2)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))),
  inference(subsumption_resolution,[],[f1080,f178])).
fof(f1080,plain,(
  p(s(bool,'F_0')) | s('type.num.num',sK3(sK1,sK2)) != s('type.num.num',sK4(sK1,sK2)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))),
  inference(superposition,[],[f161,f278])).
fof(f161,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1)))) | s('type.num.num',sK3(X1,X0)) != s('type.num.num',sK4(X1,X0)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X0))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X1))))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f1179,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl38),
  inference(cnf_transformation,[],[f1179_D])).
fof(f1179_D,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f1177,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))),
  inference(forward_demodulation,[],[f1176,f131])).
fof(f1176,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))),
  inference(subsumption_resolution,[],[f1079,f196])).
fof(f1079,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))),
  inference(superposition,[],[f160,f278])).
fof(f1175,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | $spl36),
  inference(cnf_transformation,[],[f1175_D])).
fof(f1175_D,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f1173,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK0)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))),
  inference(forward_demodulation,[],[f1172,f131])).
fof(f1172,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))),
  inference(subsumption_resolution,[],[f1078,f196])).
fof(f1078,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))),
  inference(superposition,[],[f159,f278])).
fof(f1053,plain,(
  $false | $spl4),
  inference(trivial_inequality_removal,[],[f1039])).
fof(f1039,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl4),
  inference(superposition,[],[f254,f232])).
fof(f1052,plain,(
  $false | $spl4),
  inference(equality_resolution,[],[f254])).
fof(f570,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f537,f257])).
fof(f537,plain,(
  ( ! [X74,X72,X73] : (p(s(bool,'const.bool.IN_2'(s(X72,sK5(X73,X74,X72)),s(fun(X72,bool),X74))))) ) | $spl10),
  inference(resolution,[],[f257,f164])).
fof(f569,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f534,f257])).
fof(f534,plain,(
  ( ! [X64,X65,X63] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X63,bool),X64),s(fun(X63,bool),X65))))) ) | $spl10),
  inference(resolution,[],[f257,f164])).
fof(f568,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f521,f257])).
fof(f521,plain,(
  p(s(bool,'F_0')) | $spl10),
  inference(resolution,[],[f257,f211])).
fof(f567,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f520,f257])).
fof(f520,plain,(
  p(s(bool,'F_0')) | $spl10),
  inference(resolution,[],[f257,f209])).
fof(f566,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f517,f257])).
fof(f517,plain,(
  ( ! [X48] : (p(s(bool,X48))) ) | $spl10),
  inference(resolution,[],[f257,f189])).
fof(f565,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f516,f257])).
fof(f516,plain,(
  ( ! [X47] : (p(s(bool,X47))) ) | $spl10),
  inference(resolution,[],[f257,f186])).
fof(f564,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f514,f257])).
fof(f514,plain,(
  p(s(bool,'F_0')) | $spl10),
  inference(resolution,[],[f257,f183])).
fof(f563,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f512,f257])).
fof(f512,plain,(
  ( ! [X44] : (p(s(bool,X44))) ) | $spl10),
  inference(resolution,[],[f257,f180])).
fof(f522,plain,(
  $false | $spl10),
  inference(resolution,[],[f257,f213])).
fof(f523,plain,(
  $false | $spl10),
  inference(resolution,[],[f257,f214])).
fof(f531,plain,(
  $false | $spl10),
  inference(resolution,[],[f257,f130])).
fof(f485,plain,(
  ( ! [X23,X22] : (s(bool,'F_0') != s(bool,X23) | ~p(s(bool,X22))) ) | $spl8),
  inference(subsumption_resolution,[],[f456,f256])).
fof(f456,plain,(
  ( ! [X23,X22] : (s(bool,'F_0') != s(bool,X23) | ~p(s(bool,X22)) | s(bool,'T_0') = s(bool,X22)) ) | $spl8),
  inference(superposition,[],[f256,f155])).
fof(f484,plain,(
  ( ! [X21,X20] : (s(bool,'T_0') != s(bool,X21) | ~p(s(bool,X20))) ) | $spl8),
  inference(subsumption_resolution,[],[f455,f256])).
fof(f455,plain,(
  ( ! [X21,X20] : (s(bool,'T_0') != s(bool,X21) | ~p(s(bool,X20)) | s(bool,'F_0') = s(bool,X20)) ) | $spl8),
  inference(superposition,[],[f256,f155])).
fof(f480,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') != s(bool,X19) | ~p(s(bool,X18))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f454])).
fof(f454,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') != s(bool,X19) | ~p(s(bool,X18)) | ~p(s(bool,X18))) ) | $spl8),
  inference(superposition,[],[f256,f154])).
fof(f481,plain,(
  ( ! [X17,X16] : (s(bool,'T_0') != s(bool,X17) | ~p(s(bool,X16))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f453])).
fof(f453,plain,(
  ( ! [X17,X16] : (s(bool,'T_0') != s(bool,X17) | ~p(s(bool,X16)) | ~p(s(bool,X16))) ) | $spl8),
  inference(superposition,[],[f256,f152])).
fof(f445,plain,(
  ( ! [X23,X22] : (s(bool,'F_0') != s(bool,X23) | s(bool,'T_0') = s(bool,X22)) ) | $spl2),
  inference(subsumption_resolution,[],[f424,f147])).
fof(f424,plain,(
  ( ! [X23,X22] : (s(bool,'F_0') != s(bool,X23) | p(s(bool,X23)) | s(bool,'T_0') = s(bool,X22)) ) | $spl2),
  inference(superposition,[],[f253,f155])).
fof(f444,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') != s(bool,X15) | p(s(bool,X14))) ) | $spl2),
  inference(subsumption_resolution,[],[f420,f147])).
fof(f420,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') != s(bool,X15) | p(s(bool,X15)) | p(s(bool,X14))) ) | $spl2),
  inference(superposition,[],[f253,f150])).
fof(f443,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,X13) | p(s(bool,X12))) ) | $spl2),
  inference(subsumption_resolution,[],[f419,f147])).
fof(f419,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,X13) | p(s(bool,X13)) | p(s(bool,X12))) ) | $spl2),
  inference(superposition,[],[f253,f148])).
fof(f439,plain,(
  ( ! [X23,X22] : (s(bool,'F_0') != s(bool,X23) | p(s(bool,X22))) ) | $spl2),
  inference(subsumption_resolution,[],[f408,f253])).
fof(f408,plain,(
  ( ! [X23,X22] : (s(bool,'F_0') != s(bool,X23) | p(s(bool,X22)) | s(bool,'T_0') = s(bool,X22)) ) | $spl2),
  inference(superposition,[],[f253,f155])).
fof(f437,plain,(
  ( ! [X21,X20] : (s(bool,'T_0') != s(bool,X21) | p(s(bool,X20))) ) | $spl2),
  inference(subsumption_resolution,[],[f407,f253])).
fof(f407,plain,(
  ( ! [X21,X20] : (s(bool,'T_0') != s(bool,X21) | p(s(bool,X20)) | s(bool,'F_0') = s(bool,X20)) ) | $spl2),
  inference(superposition,[],[f253,f155])).
fof(f432,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') != s(bool,X15) | p(s(bool,X14))) ) | $spl2),
  inference(duplicate_literal_removal,[],[f404])).
fof(f404,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') != s(bool,X15) | p(s(bool,X14)) | p(s(bool,X14))) ) | $spl2),
  inference(superposition,[],[f253,f150])).
fof(f433,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,X13) | p(s(bool,X12))) ) | $spl2),
  inference(duplicate_literal_removal,[],[f403])).
fof(f403,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,X13) | p(s(bool,X12)) | p(s(bool,X12))) ) | $spl2),
  inference(superposition,[],[f253,f148])).
fof(f396,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f353,f258])).
fof(f353,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(resolution,[],[f258,f212])).
fof(f212,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f129])).
fof(f395,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f352,f258])).
fof(f352,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(resolution,[],[f258,f210])).
fof(f210,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f128])).
fof(f394,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f346,f258])).
fof(f346,plain,(
  ( ! [X43] : (~p(s(bool,X43))) ) | $spl12),
  inference(resolution,[],[f258,f178])).
fof(f351,plain,(
  $false | $spl12),
  inference(resolution,[],[f258,f208])).
fof(f357,plain,(
  $false | $spl12),
  inference(resolution,[],[f258,f132])).
fof(f315,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl26),
  inference(cnf_transformation,[],[f315_D])).
fof(f315_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f289,plain,(
  ( ! [X26,X27] : (p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X27) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) )),
  inference(resolution,[],[f132,f215])).
fof(f275,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X21) != s(bool,X23)) )),
  inference(resolution,[],[f132,f140])).
fof(f273,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) )),
  inference(resolution,[],[f132,f139])).
fof(f316,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl28),
  inference(cnf_transformation,[],[f316_D])).
fof(f316_D,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f255,plain,(
  ( ! [X8,X7] : (s(bool,X7) != s(bool,X8) | p(s(bool,X7)) | ~p(s(bool,X8))) ) | $spl6),
  inference(cnf_transformation,[],[f255_D])).
fof(f255_D,plain,(
  ( ! [X8,X7] : (s(bool,X7) != s(bool,X8) | p(s(bool,X7)) | ~p(s(bool,X8))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f272,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,X12)) | p(s(bool,X13)) | s(bool,X14) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X12) != s(bool,X13)) )),
  inference(resolution,[],[f132,f138])).
fof(f271,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) )),
  inference(resolution,[],[f132,f138])).
fof(f270,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X6) != s(bool,X8)) )),
  inference(resolution,[],[f132,f136])).
fof(f269,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,X3)) | p(s(bool,X4)) | s(bool,X5) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X3) != s(bool,X4)) )),
  inference(resolution,[],[f132,f134])).
fof(f268,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) )),
  inference(resolution,[],[f132,f134])).
fof(f267,plain,(
  ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK4(sK1,sK2)),s('type.num.num',sK3(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.reg_alloc.lookup_g_3'(s('type.num.num',sK3(sK1,sK2)),s('type.num.num',sK4(sK1,sK2)),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))),
  inference(resolution,[],[f132,f162])).
fof(f266,plain,(
  s('type.num.num',sK3(sK1,sK2)) != s('type.num.num',sK4(sK1,sK2)) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))),
  inference(resolution,[],[f132,f161])).
fof(f308,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | $spl18),
  inference(cnf_transformation,[],[f308_D])).
fof(f308_D,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f265,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK4(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))),
  inference(resolution,[],[f132,f160])).
fof(f306,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | $spl16),
  inference(cnf_transformation,[],[f306_D])).
fof(f306_D,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f264,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(sK1,sK2)),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK2))),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))))))),
  inference(resolution,[],[f132,f159])).
fof(f252,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,X5) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl0),
  inference(cnf_transformation,[],[f252_D])).
fof(f252_D,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,X5) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f239,plain,(
  ( ! [X30,X31] : (p(s(bool,X30)) | p(s(bool,X31)) | s(bool,X31) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) )),
  inference(resolution,[],[f130,f215])).
fof(f227,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X26) != s(bool,X27)) )),
  inference(resolution,[],[f130,f140])).
fof(f254,plain,(
  ( ! [X9] : (s(bool,X9) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) | $spl4),
  inference(cnf_transformation,[],[f254_D])).
fof(f254_D,plain,(
  ( ! [X9] : (s(bool,X9) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f226,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,X23) | s(bool,X24) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) )),
  inference(resolution,[],[f130,f140])).
fof(f224,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) )),
  inference(resolution,[],[f130,f139])).
fof(f223,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X14) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) )),
  inference(resolution,[],[f130,f138])).
fof(f222,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1))) | s(bool,X11) != s(bool,X12)) )),
  inference(resolution,[],[f130,f136])).
fof(f221,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,X8) | s(bool,X9) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) )),
  inference(resolution,[],[f130,f136])).
fof(f220,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X5) != s(bool,'const.reg_allocProof.sp_g_is_clique_2'(s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK1)))) )),
  inference(resolution,[],[f130,f134])).
% SZS output end Proof for thm.reg_allocProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 281
% Passive clauses: 2708
% Generated clauses: 17137
% Final active clauses: 160
% Final passive clauses: 1397
% Input formulas: 31
% Initial clauses: 85
% 
% Selected by SInE selection: 31
% SInE iterations: 1
% 
% Duplicate literals: 451
% Trivial inequalities: 304
% Fw subsumption resolutions: 3144
% Fw demodulations: 1803
% Bw demodulations: 51
% 
% Simple tautologies: 724
% Forward subsumptions: 7386
% 
% Binary resolution: 3315
% Factoring: 1
% Forward superposition: 4051
% Backward superposition: 3552
% Equality resolution: 24
% 
% Split clauses: 768
% Split components: 1649
% SAT solver clauses: 851
% SAT solver unit clauses: 22
% SAT solver binary clauses: 209
% 
% Sat splits: 768
% Sat splitting refutations: 82
% 
% Memory used [KB]: 5245
% Time elapsed: 0.331 s
% ------------------------------
% ------------------------------
% Success in time 12.07 s
