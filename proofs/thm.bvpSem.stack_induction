Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvpSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvpSem
% SZS output start Proof for thm.bvpSem
fof(f2096,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2095,f2054,f2053,f128,f177])).
fof(f177,plain,(
  ~p(s(bool,'F_0')) | $spl1),
  inference(cnf_transformation,[],[f177_D])).
fof(f177_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f128,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.bvpSem.stack_induction',aHL_FALSITY)).
fof(f2053,plain,(
  s('type.bvpSem.stack',sK1) = s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),sK2(sK1)))) | $spl26),
  inference(cnf_transformation,[],[f2053_D])).
fof(f2053_D,plain,(
  s('type.bvpSem.stack',sK1) = s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),sK2(sK1)))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f2054,plain,(
  s('type.bvpSem.stack',sK1) = s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),sK2(sK1)))) | $spl1),
  inference(subsumption_resolution,[],[f2029,f177])).
fof(f2029,plain,(
  p(s(bool,'F_0')) | s('type.bvpSem.stack',sK1) = s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),sK2(sK1))))),
  inference(superposition,[],[f1456,f187])).
fof(f187,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.bvpSem.stack',bool),sK0),s('type.bvpSem.stack',sK1)))),
  inference(resolution,[],[f121,f141])).
fof(f141,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.bvpSem.stack_induction','thm.bool.EQ_CLAUSES|split|2')).
fof(f121,plain,(
  ~p(s(bool,happ(s(fun('type.bvpSem.stack',bool),sK0),s('type.bvpSem.stack',sK1))))),
  inference(cnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X4] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),sK0),s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),X4)))))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),sK0),s('type.bvpSem.stack','const.bvpSem.Exc_2'(s('type.sptree.spt'('type.bvlSem.v'),X2),s('type.num.num',X3)))))) & ~p(s(bool,happ(s(fun('type.bvpSem.stack',bool),sK0),s('type.bvpSem.stack',sK1))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f102])).
fof(f102,plain,(
  ? [X0] : (! [X4] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X0),s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),X4)))))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X0),s('type.bvpSem.stack','const.bvpSem.Exc_2'(s('type.sptree.spt'('type.bvlSem.v'),X2),s('type.num.num',X3)))))) & ? [X1] : ~p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X0),s('type.bvpSem.stack',X1)))))),
  inference(rectify,[],[f94])).
fof(f94,plain,(
  ? [X0] : (! [X3] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X0),s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),X3)))))) & ! [X1,X2] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X0),s('type.bvpSem.stack','const.bvpSem.Exc_2'(s('type.sptree.spt'('type.bvlSem.v'),X1),s('type.num.num',X2)))))) & ? [X4] : ~p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X0),s('type.bvpSem.stack',X4)))))),
  inference(flattening,[],[f93])).
fof(f93,plain,(
  ? [X0] : ((! [X3] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X0),s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),X3)))))) & ! [X1,X2] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X0),s('type.bvpSem.stack','const.bvpSem.Exc_2'(s('type.sptree.spt'('type.bvlSem.v'),X1),s('type.num.num',X2))))))) & ? [X4] : ~p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X0),s('type.bvpSem.stack',X4)))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ((! [X3] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X0),s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),X3)))))) & ! [X1,X2] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X0),s('type.bvpSem.stack','const.bvpSem.Exc_2'(s('type.sptree.spt'('type.bvlSem.v'),X1),s('type.num.num',X2))))))) => ! [X4] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X0),s('type.bvpSem.stack',X4)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((! [X7] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X6),s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),X7)))))) & ! [X7,X8] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X6),s('type.bvpSem.stack','const.bvpSem.Exc_2'(s('type.sptree.spt'('type.bvlSem.v'),X7),s('type.num.num',X8))))))) => ! [X7] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X6),s('type.bvpSem.stack',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((! [X7] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X6),s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),X7)))))) & ! [X7,X8] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X6),s('type.bvpSem.stack','const.bvpSem.Exc_2'(s('type.sptree.spt'('type.bvlSem.v'),X7),s('type.num.num',X8))))))) => ! [X7] : p(s(bool,happ(s(fun('type.bvpSem.stack',bool),X6),s('type.bvpSem.stack',X7)))))),
  file('thm.bvpSem.stack_induction','thm.bvpSem.stack_induction')).
fof(f1456,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.bvpSem.stack',bool),sK0),s('type.bvpSem.stack',X0)))) | s('type.bvpSem.stack',X0) = s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),sK2(X0))))) )),
  inference(superposition,[],[f120,f133])).
fof(f133,plain,(
  ( ! [X0] : (s('type.bvpSem.stack',X0) = s('type.bvpSem.stack','const.bvpSem.Exc_2'(s('type.sptree.spt'('type.bvlSem.v'),sK3(X0)),s('type.num.num',sK4(X0)))) | s('type.bvpSem.stack',X0) = s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),sK2(X0))))) )),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0] : (s('type.bvpSem.stack',X0) = s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),sK2(X0)))) | s('type.bvpSem.stack',X0) = s('type.bvpSem.stack','const.bvpSem.Exc_2'(s('type.sptree.spt'('type.bvlSem.v'),sK3(X0)),s('type.num.num',sK4(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2,sK3,sK4])],[f46])).
fof(f46,plain,(
  ! [X0] : (? [X3] : s('type.bvpSem.stack',X0) = s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),X3))) | ? [X1,X2] : s('type.bvpSem.stack',X0) = s('type.bvpSem.stack','const.bvpSem.Exc_2'(s('type.sptree.spt'('type.bvlSem.v'),X1),s('type.num.num',X2))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X40] : (? [X7] : s('type.bvpSem.stack',X40) = s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),X7))) | ? [X7,X8] : s('type.bvpSem.stack',X40) = s('type.bvpSem.stack','const.bvpSem.Exc_2'(s('type.sptree.spt'('type.bvlSem.v'),X7),s('type.num.num',X8))))),
  file('thm.bvpSem.stack_induction','thm.bvpSem.stack_nchotomy')).
fof(f120,plain,(
  ( ! [X2,X3] : (p(s(bool,happ(s(fun('type.bvpSem.stack',bool),sK0),s('type.bvpSem.stack','const.bvpSem.Exc_2'(s('type.sptree.spt'('type.bvlSem.v'),X2),s('type.num.num',X3))))))) )),
  inference(cnf_transformation,[],[f103])).
fof(f2095,plain,(
  $false | $spl26),
  inference(subsumption_resolution,[],[f2086,f188])).
fof(f188,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.bvpSem.stack',bool),sK0),s('type.bvpSem.stack',sK1)))),
  inference(resolution,[],[f121,f136])).
fof(f136,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.bvpSem.stack_induction','thm.bool.EQ_CLAUSES|split|1')).
fof(f2086,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.bvpSem.stack',bool),sK0),s('type.bvpSem.stack',sK1))) | $spl26),
  inference(superposition,[],[f249,f2053])).
fof(f249,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,happ(s(fun('type.bvpSem.stack',bool),sK0),s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),X2)))))) )),
  inference(resolution,[],[f119,f137])).
fof(f137,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f107])).
fof(f119,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.bvpSem.stack',bool),sK0),s('type.bvpSem.stack','const.bvpSem.Env_1'(s('type.sptree.spt'('type.bvlSem.v'),X4))))))) )),
  inference(cnf_transformation,[],[f103])).
% SZS output end Proof for thm.bvpSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 47
% Passive clauses: 470
% Generated clauses: 1924
% Final active clauses: 44
% Final passive clauses: 393
% Input formulas: 37
% Initial clauses: 57
% 
% Duplicate literals: 120
% Trivial inequalities: 35
% Fw subsumption resolutions: 170
% Fw demodulations: 119
% Bw demodulations: 3
% 
% Simple tautologies: 75
% Equational tautologies: 30
% Forward subsumptions: 894
% 
% Binary resolution: 69
% Factoring: 1
% Forward superposition: 488
% Backward superposition: 735
% Self superposition: 55
% Equality factoring: 52
% Equality resolution: 8
% 
% Split clauses: 24
% Split components: 48
% SAT solver clauses: 42
% SAT solver unit clauses: 7
% SAT solver binary clauses: 30
% SAT solver learnt clauses: 1
% 
% Sat splits: 24
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 41
% TWLsolver calls for satisfiability: 15
% 
% Memory used [KB]: 1663
% Time elapsed: 0.049 s
% ------------------------------
% ------------------------------
% Success in time 0.053 s
