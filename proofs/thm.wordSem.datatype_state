Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordSem
% SZS output start Proof for thm.wordSem
fof(f522,plain,(
  $false),
  inference(subsumption_resolution,[],[f521,f21])).
fof(f21,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.wordSem.datatype_state','thm.bool.TRUTH')).
fof(f521,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f20,f25])).
fof(f25,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ! [X0,X1] : s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X0,X1)))),
  inference(flattening,[],[f12])).
fof(f12,plain,(
  ! [X0] : ! [X1] : s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X0,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X23] : s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X6,X23)))),
  file('thm.wordSem.datatype_state','thm.bool.DATATYPE_TAG_THM')).
fof(f20,plain,(
  ~p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.ffi.ffi_state'(sK1),bool),happ(s(fun(bool,fun('type.ffi.ffi_state'(sK1),bool)),happ(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool))),happ(s(fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool)))),happ(s(fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool))))),happ(s(fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool)))))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool))))))),happ(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool)))))))),happ(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool))))))))),happ(s(fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool)))))))))),happ(s(fun('type.list.list'('type.wordSem.stack_frame'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool))))))))))),happ(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),fun('type.list.list'('type.wordSem.stack_frame'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool)))))))))))),happ(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),fun('type.list.list'('type.wordSem.stack_frame'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool))))))))))))),happ(s(fun('type.min.ind',fun('type.sptree.spt'('type.wordSem.word_loc'(sK0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),fun('type.list.list'('type.wordSem.stack_frame'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool)))))))))))))),sK6),s('type.min.ind',sK4))),s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK10))),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3))),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK5))),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK8))),s(fun('type.fcp.cart'(bool,sK0),bool),sK9))),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7))),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK12))),s('type.num.num',sK11))),s('type.num.num',sK15))),s('type.num.num',sK2))),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK14))),s(bool,sK16))),s('type.ffi.ffi_state'(sK1),sK13))))))),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ~p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.ffi.ffi_state'(sK1),bool),happ(s(fun(bool,fun('type.ffi.ffi_state'(sK1),bool)),happ(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool))),happ(s(fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool)))),happ(s(fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool))))),happ(s(fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool)))))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool))))))),happ(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool)))))))),happ(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool))))))))),happ(s(fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool)))))))))),happ(s(fun('type.list.list'('type.wordSem.stack_frame'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool))))))))))),happ(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),fun('type.list.list'('type.wordSem.stack_frame'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool)))))))))))),happ(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),fun('type.list.list'('type.wordSem.stack_frame'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool))))))))))))),happ(s(fun('type.min.ind',fun('type.sptree.spt'('type.wordSem.word_loc'(sK0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),fun('type.list.list'('type.wordSem.stack_frame'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),fun(bool,fun('type.ffi.ffi_state'(sK1),bool)))))))))))))),sK6),s('type.min.ind',sK4))),s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),sK10))),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK3))),s('type.list.list'('type.wordSem.stack_frame'(sK0)),sK5))),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK8))),s(fun('type.fcp.cart'(bool,sK0),bool),sK9))),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7))),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK12))),s('type.num.num',sK11))),s('type.num.num',sK15))),s('type.num.num',sK2))),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),sK14))),s(bool,sK16))),s('type.ffi.ffi_state'(sK1),sK13))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16])],[f16])).
fof(f16,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : ~p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.ffi.ffi_state'(X1),bool),happ(s(fun(bool,fun('type.ffi.ffi_state'(X1),bool)),happ(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))),happ(s(fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))),happ(s(fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))))),happ(s(fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))))))),happ(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))))))),happ(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))))))))),happ(s(fun('type.list.list'('type.wordSem.stack_frame'(X0)),fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))))))))))),happ(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.stack_frame'(X0)),fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))))))))))),happ(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.stack_frame'(X0)),fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))))))))))))),happ(s(fun('type.min.ind',fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.stack_frame'(X0)),fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))))))))))))),X6),s('type.min.ind',X4))),s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X10))),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3))),s('type.list.list'('type.wordSem.stack_frame'(X0)),X5))),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8))),s(fun('type.fcp.cart'(bool,X0),bool),X9))),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7))),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X12))),s('type.num.num',X11))),s('type.num.num',X15))),s('type.num.num',X2))),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X14))),s(bool,X16))),s('type.ffi.ffi_state'(X1),X13))))))),
  inference(ennf_transformation,[],[f10])).
fof(f10,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.ffi.ffi_state'(X1),bool),happ(s(fun(bool,fun('type.ffi.ffi_state'(X1),bool)),happ(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))),happ(s(fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))),happ(s(fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))))),happ(s(fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))))))),happ(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))))))),happ(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))))))))),happ(s(fun('type.list.list'('type.wordSem.stack_frame'(X0)),fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))))))))))),happ(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.stack_frame'(X0)),fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))))))))))),happ(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.stack_frame'(X0)),fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))))))))))))),happ(s(fun('type.min.ind',fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.stack_frame'(X0)),fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))))))))))))),X6),s('type.min.ind',X4))),s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X10))),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3))),s('type.list.list'('type.wordSem.stack_frame'(X0)),X5))),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8))),s(fun('type.fcp.cart'(bool,X0),bool),X9))),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7))),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X12))),s('type.num.num',X11))),s('type.num.num',X15))),s('type.num.num',X2))),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X14))),s(bool,X16))),s('type.ffi.ffi_state'(X1),X13))))))),
  inference(flattening,[],[f9])).
fof(f9,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.ffi.ffi_state'(X1),bool),happ(s(fun(bool,fun('type.ffi.ffi_state'(X1),bool)),happ(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))),happ(s(fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))),happ(s(fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))))),happ(s(fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))))))),happ(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))))))),happ(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))))))))),happ(s(fun('type.list.list'('type.wordSem.stack_frame'(X0)),fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))))))))))),happ(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.stack_frame'(X0)),fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))))))))))),happ(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.stack_frame'(X0)),fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool))))))))))))),happ(s(fun('type.min.ind',fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.stack_frame'(X0)),fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),fun(bool,fun('type.ffi.ffi_state'(X1),bool)))))))))))))),X6),s('type.min.ind',X4))),s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X10))),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3))),s('type.list.list'('type.wordSem.stack_frame'(X0)),X5))),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8))),s(fun('type.fcp.cart'(bool,X0),bool),X9))),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7))),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X12))),s('type.num.num',X11))),s('type.num.num',X15))),s('type.num.num',X2))),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X14))),s(bool,X16))),s('type.ffi.ffi_state'(X1),X13))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.ffi.ffi_state'(X7),bool),happ(s(fun(bool,fun('type.ffi.ffi_state'(X7),bool)),happ(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool))),happ(s(fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool)))),happ(s(fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool))))),happ(s(fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool)))))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool))))))),happ(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool)))))))),happ(s(fun(fun('type.fcp.cart'(bool,X6),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool)))))))))),happ(s(fun('type.list.list'('type.wordSem.stack_frame'(X6)),fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool))))))))))),happ(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),fun('type.list.list'('type.wordSem.stack_frame'(X6)),fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool)))))))))))),happ(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X6)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),fun('type.list.list'('type.wordSem.stack_frame'(X6)),fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool))))))))))))),happ(s(fun('type.min.ind',fun('type.sptree.spt'('type.wordSem.word_loc'(X6)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),fun('type.list.list'('type.wordSem.stack_frame'(X6)),fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool)))))))))))))),X12),s('type.min.ind',X10))),s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X16))),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X9))),s('type.list.list'('type.wordSem.stack_frame'(X6)),X11))),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X14))),s(fun('type.fcp.cart'(bool,X6),bool),X15))),s(fun('type.num.num',fun('type.num.num','type.num.num')),X13))),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X18))),s('type.num.num',X17))),s('type.num.num',X21))),s('type.num.num',X8))),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X20))),s(bool,X22))),s('type.ffi.ffi_state'(X7),X19))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.ffi.ffi_state'(X7),bool),happ(s(fun(bool,fun('type.ffi.ffi_state'(X7),bool)),happ(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool))),happ(s(fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool)))),happ(s(fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool))))),happ(s(fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool)))))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool))))))),happ(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool)))))))),happ(s(fun(fun('type.fcp.cart'(bool,X6),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool)))))))))),happ(s(fun('type.list.list'('type.wordSem.stack_frame'(X6)),fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool))))))))))),happ(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),fun('type.list.list'('type.wordSem.stack_frame'(X6)),fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool)))))))))))),happ(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X6)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),fun('type.list.list'('type.wordSem.stack_frame'(X6)),fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool))))))))))))),happ(s(fun('type.min.ind',fun('type.sptree.spt'('type.wordSem.word_loc'(X6)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),fun('type.list.list'('type.wordSem.stack_frame'(X6)),fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun('type.num.num',fun('type.num.num',fun('type.num.num',fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),fun(bool,fun('type.ffi.ffi_state'(X7),bool)))))))))))))),X12),s('type.min.ind',X10))),s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X16))),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X9))),s('type.list.list'('type.wordSem.stack_frame'(X6)),X11))),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X14))),s(fun('type.fcp.cart'(bool,X6),bool),X15))),s(fun('type.num.num',fun('type.num.num','type.num.num')),X13))),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X18))),s('type.num.num',X17))),s('type.num.num',X21))),s('type.num.num',X8))),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X20))),s(bool,X22))),s('type.ffi.ffi_state'(X7),X19))))))),
  file('thm.wordSem.datatype_state','thm.wordSem.datatype_state')).
% SZS output end Proof for thm.wordSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 14
% Passive clauses: 57
% Generated clauses: 470
% Final active clauses: 12
% Final passive clauses: 36
% Input formulas: 7
% Initial clauses: 7
% 
% Duplicate literals: 84
% Trivial inequalities: 7
% Fw subsumption resolutions: 6
% Fw demodulations: 16
% 
% Simple tautologies: 25
% Equational tautologies: 16
% Forward subsumptions: 244
% 
% Binary resolution: 4
% Forward superposition: 123
% Backward superposition: 126
% Self superposition: 49
% Equality factoring: 40
% Equality resolution: 1
% 
% Split clauses: 12
% Split components: 24
% SAT solver clauses: 18
% SAT solver unit clauses: 4
% SAT solver binary clauses: 12
% 
% Sat splits: 12
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 18
% TWLsolver calls for satisfiability: 6
% 
% Memory used [KB]: 895
% Time elapsed: 0.013 s
% ------------------------------
% ------------------------------
% Success in time 0.006 s
