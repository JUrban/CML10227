Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bviSem
% (121842)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 111
% Passive clauses: 1791
% Generated clauses: 22594
% Final active clauses: 107
% Final passive clauses: 1604
% Input formulas: 37
% Initial clauses: 39
% 
% Duplicate literals: 1624
% Trivial inequalities: 25
% Fw subsumption resolutions: 2476
% Fw demodulations: 3821
% Bw demodulations: 2
% 
% Simple tautologies: 201
% Equational tautologies: 19
% Forward subsumptions: 11474
% 
% Binary resolution: 15
% Forward superposition: 8759
% Backward superposition: 5658
% Self superposition: 233
% Equality factoring: 34
% Equality resolution: 5
% 
% Split clauses: 658
% Split components: 1321
% SAT solver clauses: 1236
% SAT solver unit clauses: 3
% SAT solver binary clauses: 21
% 
% Sat splits: 658
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1236
% TWLsolver calls for satisfiability: 89
% 
% Memory used [KB]: 16119
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.bviSem
% (121867)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 88
% Passive clauses: 1201
% Generated clauses: 13239
% Final active clauses: 87
% Final passive clauses: 1082
% Input formulas: 37
% Initial clauses: 39
% 
% Duplicate literals: 735
% Trivial inequalities: 19
% Fw subsumption resolutions: 544
% Fw demodulations: 1267
% Bw demodulations: 31
% Condensations: 843
% 
% Simple tautologies: 121
% Equational tautologies: 18
% Forward subsumptions: 7070
% 
% Binary resolution: 11
% Forward superposition: 4912
% Backward superposition: 3437
% Self superposition: 226
% Equality factoring: 32
% Equality resolution: 4
% 
% Split clauses: 12
% Split components: 29
% SAT solver clauses: 1455
% SAT solver unit clauses: 68
% SAT solver binary clauses: 43
% 
% Sat splits: 12
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1455
% TWLsolver calls for satisfiability: 136
% 
% Memory used [KB]: 24818
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.bviSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bviSem
% SZS output start Proof for thm.bviSem
fof(f3728,plain,(
  $false),
  inference(subsumption_resolution,[],[f3727,f114])).
fof(f114,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.bviSem.state_fupdfupds_comp|split|3',aHL_TRUTH)).
fof(f3727,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f3725,f607])).
fof(f607,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X1)))) )),
  inference(equality_resolution,[],[f371])).
fof(f371,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) != s(X0,X2) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) )),
  inference(condensation,[],[f370])).
fof(f370,plain,(
  ( ! [X10,X8,X11,X9] : (s(X8,X9) != s(X8,X10) | s(bool,'T_0') = s(bool,happ(s(fun(X8,bool),happ(s(fun(X8,fun(X8,bool)),'=_0'),s(X8,X9))),s(X8,X10))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(subsumption_resolution,[],[f367,f156])).
fof(f156,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f115,f116])).
fof(f116,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.bviSem.state_fupdfupds_comp|split|3',aHL_BOOL_CASES)).
fof(f115,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.bviSem.state_fupdfupds_comp|split|3',aHL_FALSITY)).
fof(f367,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X11)) | s(X8,X9) != s(X8,X10) | s(bool,'T_0') = s(bool,happ(s(fun(X8,bool),happ(s(fun(X8,fun(X8,bool)),'=_0'),s(X8,X9))),s(X8,X10))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f133,f154])).
fof(f154,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f116,f116])).
fof(f133,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2))))))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X35,X36,X37] : (p(s(bool,happ(s(fun(X35,bool),happ(s(fun(X35,fun(X35,bool)),'=_0'),s(X35,X36))),s(X35,X37)))) <=> s(X35,X36) = s(X35,X37))),
  file('thm.bviSem.state_fupdfupds_comp|split|3',arity_0_HL_EQ)).
fof(f3725,plain,(
  ~p(s(bool,happ(s(fun(fun(sK0,'type.bviSem.state'(sK1)),bool),happ(s(fun(fun(sK0,'type.bviSem.state'(sK1)),fun(fun(sK0,'type.bviSem.state'(sK1)),bool)),'=_0'),s(fun(sK0,'type.bviSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bviSem.state'(sK1),'type.bviSem.state'(sK1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),sK4),s(fun('type.num.num','type.num.num'),sK3))))),s(fun(sK0,'type.bviSem.state'(sK1)),sK2))))),s(fun(sK0,'type.bviSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bviSem.state'(sK1),'type.bviSem.state'(sK1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),sK4),s(fun('type.num.num','type.num.num'),sK3))))),s(fun(sK0,'type.bviSem.state'(sK1)),sK2))))))),
  inference(backward_demodulation,[],[f3688,f1613])).
fof(f1613,plain,(
  ~p(s(bool,happ(s(fun(fun(sK0,'type.bviSem.state'(sK1)),bool),happ(s(fun(fun(sK0,'type.bviSem.state'(sK1)),fun(fun(sK0,'type.bviSem.state'(sK1)),bool)),'=_0'),s(fun(sK0,'type.bviSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bviSem.state'(sK1),'type.bviSem.state'(sK1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),sK4),s(fun('type.num.num','type.num.num'),sK3))))),s(fun(sK0,'type.bviSem.state'(sK1)),sK2))))),s(fun(sK0,'type.bviSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bviSem.state'(sK1),'type.bviSem.state'(sK1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),sK4))),s(fun(sK0,'type.bviSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bviSem.state'(sK1),'type.bviSem.state'(sK1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),sK3))),s(fun(sK0,'type.bviSem.state'(sK1)),sK2))))))))),
  inference(unit_resulting_resolution,[],[f113,f132])).
fof(f132,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f112])).
fof(f113,plain,(
  s(fun(sK0,'type.bviSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bviSem.state'(sK1),'type.bviSem.state'(sK1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),sK4),s(fun('type.num.num','type.num.num'),sK3))))),s(fun(sK0,'type.bviSem.state'(sK1)),sK2))) != s(fun(sK0,'type.bviSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bviSem.state'(sK1),'type.bviSem.state'(sK1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),sK4))),s(fun(sK0,'type.bviSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bviSem.state'(sK1),'type.bviSem.state'(sK1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),sK3))),s(fun(sK0,'type.bviSem.state'(sK1)),sK2)))))),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  s(fun(sK0,'type.bviSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bviSem.state'(sK1),'type.bviSem.state'(sK1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),sK4),s(fun('type.num.num','type.num.num'),sK3))))),s(fun(sK0,'type.bviSem.state'(sK1)),sK2))) != s(fun(sK0,'type.bviSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bviSem.state'(sK1),'type.bviSem.state'(sK1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),sK4))),s(fun(sK0,'type.bviSem.state'(sK1)),'const.combin.o_2'(s(fun('type.bviSem.state'(sK1),'type.bviSem.state'(sK1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),sK3))),s(fun(sK0,'type.bviSem.state'(sK1)),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f106])).
fof(f106,plain,(
  ? [X0,X1,X2,X3,X4] : s(fun(X0,'type.bviSem.state'(X1)),'const.combin.o_2'(s(fun('type.bviSem.state'(X1),'type.bviSem.state'(X1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),X4),s(fun('type.num.num','type.num.num'),X3))))),s(fun(X0,'type.bviSem.state'(X1)),X2))) != s(fun(X0,'type.bviSem.state'(X1)),'const.combin.o_2'(s(fun('type.bviSem.state'(X1),'type.bviSem.state'(X1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X4))),s(fun(X0,'type.bviSem.state'(X1)),'const.combin.o_2'(s(fun('type.bviSem.state'(X1),'type.bviSem.state'(X1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X3))),s(fun(X0,'type.bviSem.state'(X1)),X2)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1,X2,X3,X4] : s(fun(X0,'type.bviSem.state'(X1)),'const.combin.o_2'(s(fun('type.bviSem.state'(X1),'type.bviSem.state'(X1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),X4),s(fun('type.num.num','type.num.num'),X3))))),s(fun(X0,'type.bviSem.state'(X1)),X2))) = s(fun(X0,'type.bviSem.state'(X1)),'const.combin.o_2'(s(fun('type.bviSem.state'(X1),'type.bviSem.state'(X1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X4))),s(fun(X0,'type.bviSem.state'(X1)),'const.combin.o_2'(s(fun('type.bviSem.state'(X1),'type.bviSem.state'(X1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X3))),s(fun(X0,'type.bviSem.state'(X1)),X2)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : s(fun(X0,'type.bviSem.state'(X1)),'const.combin.o_2'(s(fun('type.bviSem.state'(X1),'type.bviSem.state'(X1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),X4),s(fun('type.num.num','type.num.num'),X3))))),s(fun(X0,'type.bviSem.state'(X1)),X2))) = s(fun(X0,'type.bviSem.state'(X1)),'const.combin.o_2'(s(fun('type.bviSem.state'(X1),'type.bviSem.state'(X1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X4))),s(fun(X0,'type.bviSem.state'(X1)),'const.combin.o_2'(s(fun('type.bviSem.state'(X1),'type.bviSem.state'(X1)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X3))),s(fun(X0,'type.bviSem.state'(X1)),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : s(fun(X6,'type.bviSem.state'(X7)),'const.combin.o_2'(s(fun('type.bviSem.state'(X7),'type.bviSem.state'(X7)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),X10),s(fun('type.num.num','type.num.num'),X9))))),s(fun(X6,'type.bviSem.state'(X7)),X8))) = s(fun(X6,'type.bviSem.state'(X7)),'const.combin.o_2'(s(fun('type.bviSem.state'(X7),'type.bviSem.state'(X7)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X10))),s(fun(X6,'type.bviSem.state'(X7)),'const.combin.o_2'(s(fun('type.bviSem.state'(X7),'type.bviSem.state'(X7)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X9))),s(fun(X6,'type.bviSem.state'(X7)),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : s(fun(X6,'type.bviSem.state'(X7)),'const.combin.o_2'(s(fun('type.bviSem.state'(X7),'type.bviSem.state'(X7)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),X10),s(fun('type.num.num','type.num.num'),X9))))),s(fun(X6,'type.bviSem.state'(X7)),X8))) = s(fun(X6,'type.bviSem.state'(X7)),'const.combin.o_2'(s(fun('type.bviSem.state'(X7),'type.bviSem.state'(X7)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X10))),s(fun(X6,'type.bviSem.state'(X7)),'const.combin.o_2'(s(fun('type.bviSem.state'(X7),'type.bviSem.state'(X7)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X9))),s(fun(X6,'type.bviSem.state'(X7)),X8)))))),
  file('thm.bviSem.state_fupdfupds_comp|split|3','thm.bviSem.state_fupdfupds_comp|split|3')).
fof(f3688,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X3,'type.bviSem.state'(X0)),'const.combin.o_2'(s(fun('type.bviSem.state'(X0),'type.bviSem.state'(X0)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),X1),s(fun('type.num.num','type.num.num'),X2))))),s(fun(X3,'type.bviSem.state'(X0)),X4))) = s(fun(X3,'type.bviSem.state'(X0)),'const.combin.o_2'(s(fun('type.bviSem.state'(X0),'type.bviSem.state'(X0)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X1))),s(fun(X3,'type.bviSem.state'(X0)),'const.combin.o_2'(s(fun('type.bviSem.state'(X0),'type.bviSem.state'(X0)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X2))),s(fun(X3,'type.bviSem.state'(X0)),X4)))))) )),
  inference(superposition,[],[f139,f119])).
fof(f119,plain,(
  ( ! [X2,X0,X1] : (s(fun('type.bviSem.state'(X0),'type.bviSem.state'(X0)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),X2),s(fun('type.num.num','type.num.num'),X1))))) = s(fun('type.bviSem.state'(X0),'type.bviSem.state'(X0)),'const.combin.o_2'(s(fun('type.bviSem.state'(X0),'type.bviSem.state'(X0)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X2))),s(fun('type.bviSem.state'(X0),'type.bviSem.state'(X0)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X1)))))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2] : s(fun('type.bviSem.state'(X0),'type.bviSem.state'(X0)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),X2),s(fun('type.num.num','type.num.num'),X1))))) = s(fun('type.bviSem.state'(X0),'type.bviSem.state'(X0)),'const.combin.o_2'(s(fun('type.bviSem.state'(X0),'type.bviSem.state'(X0)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X2))),s(fun('type.bviSem.state'(X0),'type.bviSem.state'(X0)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X1)))))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0] : ! [X1,X2] : s(fun('type.bviSem.state'(X0),'type.bviSem.state'(X0)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),X2),s(fun('type.num.num','type.num.num'),X1))))) = s(fun('type.bviSem.state'(X0),'type.bviSem.state'(X0)),'const.combin.o_2'(s(fun('type.bviSem.state'(X0),'type.bviSem.state'(X0)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X2))),s(fun('type.bviSem.state'(X0),'type.bviSem.state'(X0)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X1)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : ! [X9,X10] : s(fun('type.bviSem.state'(X7),'type.bviSem.state'(X7)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),'const.combin.o_2'(s(fun('type.num.num','type.num.num'),X10),s(fun('type.num.num','type.num.num'),X9))))) = s(fun('type.bviSem.state'(X7),'type.bviSem.state'(X7)),'const.combin.o_2'(s(fun('type.bviSem.state'(X7),'type.bviSem.state'(X7)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X10))),s(fun('type.bviSem.state'(X7),'type.bviSem.state'(X7)),'const.bviSem.state_clock_fupd_1'(s(fun('type.num.num','type.num.num'),X9)))))),
  file('thm.bviSem.state_fupdfupds_comp|split|3','thm.bviSem.state_fupdfupds_comp|split|2')).
fof(f139,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X13,X6,X14,X15] : ! [X10,X9,X8] : s(fun(X14,X13),'const.combin.o_2'(s(fun(X6,X13),X10),s(fun(X14,X6),'const.combin.o_2'(s(fun(X15,X6),X9),s(fun(X14,X15),X8))))) = s(fun(X14,X13),'const.combin.o_2'(s(fun(X15,X13),'const.combin.o_2'(s(fun(X6,X13),X10),s(fun(X15,X6),X9))),s(fun(X14,X15),X8)))),
  file('thm.bviSem.state_fupdfupds_comp|split|3','thm.combin.o_ASSOC')).
% SZS output end Proof for thm.bviSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 50
% Passive clauses: 430
% Generated clauses: 3535
% Final active clauses: 48
% Final passive clauses: 334
% Input formulas: 37
% Initial clauses: 39
% 
% Duplicate literals: 247
% Trivial inequalities: 17
% Fw subsumption resolutions: 35
% Fw demodulations: 484
% Bw demodulations: 48
% Condensations: 222
% 
% Simple tautologies: 59
% Equational tautologies: 54
% Forward subsumptions: 1942
% Fw demodulations to eq. taut.: 5
% 
% Unit resulting resolution: 219
% Forward superposition: 1123
% Backward superposition: 972
% Self superposition: 89
% Equality factoring: 34
% Equality resolution: 1
% 
% Split clauses: 8
% Split components: 21
% SAT solver clauses: 448
% SAT solver unit clauses: 119
% SAT solver binary clauses: 95
% 
% Sat splits: 8
% 
% Memory used [KB]: 6908
% Time elapsed: 0.159 s
% ------------------------------
% ------------------------------
% Success in time 1.5 s
