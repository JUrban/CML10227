Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.infer_eComplete
% (105873)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 153
% Passive clauses: 2845
% Generated clauses: 18780
% Final active clauses: 143
% Final passive clauses: 2452
% Input formulas: 31
% Initial clauses: 77
% 
% Duplicate literals: 540
% Trivial inequalities: 296
% Fw subsumption resolutions: 3248
% Fw demodulations: 2892
% Bw demodulations: 2
% 
% Simple tautologies: 332
% Equational tautologies: 63
% Forward subsumptions: 7518
% Fw demodulations to eq. taut.: 39
% 
% Binary resolution: 302
% Factoring: 1
% Forward superposition: 5646
% Backward superposition: 5281
% Self superposition: 244
% Equality factoring: 152
% Equality resolution: 52
% 
% Split clauses: 380
% Split components: 778
% SAT solver clauses: 1201
% SAT solver unit clauses: 7
% SAT solver binary clauses: 91
% 
% Sat splits: 380
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 1196
% TWLsolver calls for satisfiability: 168
% 
% Memory used [KB]: 10362
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.infer_eComplete
% (105888)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 170
% Passive clauses: 1075
% Generated clauses: 11540
% Final active clauses: 117
% Final passive clauses: 571
% Input formulas: 31
% Initial clauses: 77
% 
% Duplicate literals: 396
% Trivial inequalities: 107
% Fw subsumption resolutions: 905
% Fw demodulations: 1119
% Bw demodulations: 303
% Condensations: 525
% Global subsumptions: 6
% 
% Simple tautologies: 167
% Equational tautologies: 32
% Forward subsumptions: 5271
% Fw demodulations to eq. taut.: 15
% Bw demodulations to eq. taut.: 46
% 
% Binary resolution: 204
% Factoring: 1
% Forward superposition: 3192
% Backward superposition: 2964
% Self superposition: 143
% Equality factoring: 42
% Equality resolution: 29
% 
% Split clauses: 207
% Split components: 426
% SAT solver clauses: 1909
% SAT solver unit clauses: 77
% SAT solver binary clauses: 66
% SAT solver learnt clauses: 14
% SAT solver learnt literals: 7
% 
% Sat splits: 207
% Sat splitting refutations: 23
% 
% TWLsolver clauses: 1883
% TWLsolver calls for satisfiability: 558
% 
% Memory used [KB]: 11001
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.infer_eComplete
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.infer_eComplete
% SZS output start Proof for thm.infer_eComplete
fof(f4538,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f121,f216,f214,f212,f210,f120,f215,f119,f213,f118,f211,f209,f238,f241,f239,f254,f258,f256,f269,f622,f631,f623,f1035,f1038,f1036,f1145,f1146,f1140,f1134,f1158,f1147,f1160,f1161,f1366,f1368,f1367,f1370,f1037,f1371,f1374,f1380,f1383,f1390,f1392,f1396,f1398,f1400,f1494,f1495,f1496,f1498,f1499,f1500,f1501,f1502,f2538,f2539,f2555,f2540,f2541,f2556,f2542,f2557,f2652,f2655,f2613,f2658,f2659,f2656,f2634,f2654,f2653,f2691,f2693,f2697,f2789,f2790,f2791,f2792,f2806,f2804,f2807,f2802,f2803,f3062,f3143,f3144,f3145,f2554,f3527,f3529,f3530,f4062,f4070,f4068,f4181,f4183,f4189,f4190,f255,f4273,f4281,f4514,f4515])).
fof(f4515,plain,(
  $false | ($spl0 | $spl8)),
  inference(subsumption_resolution,[],[f4372,f124])).
fof(f124,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb',aHL_FALSITY)).
fof(f4372,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl8)),
  inference(backward_demodulation,[],[f239,f4015])).
fof(f4015,plain,(
  ( ! [X0] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',sK3,sK2,sK1,sK0)),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X0,sK3,sK2,sK1,sK0)))))) ) | $spl0),
  inference(forward_demodulation,[],[f3963,f3709])).
fof(f3709,plain,(
  s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',sK3,sK2,sK1,sK0)) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl0),
  inference(forward_demodulation,[],[f3677,f170])).
fof(f170,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X3) = s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),'const.infer.infer_st_subst_fupd_2'(s(fun(X0,X1),'const.combin.K_1'(s(X1,X3))),s('type.infer.infer_st'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2,X3] : s(X1,X3) = s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),'const.infer.infer_st_subst_fupd_2'(s(fun(X0,X1),'const.combin.K_1'(s(X1,X3))),s('type.infer.infer_st'(X0),X2)))))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X3) = s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),'const.infer.infer_st_subst_fupd_2'(s(fun(X0,X1),'const.combin.K_1'(s(X1,X3))),s('type.infer.infer_st'(X0),X2)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X27,X28] : ! [X8,X22] : s(X28,X22) = s(X28,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X28),'const.infer.infer_st_subst_fupd_2'(s(fun(X27,X28),'const.combin.K_1'(s(X28,X22))),s('type.infer.infer_st'(X27),X8)))))),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb','thm.inferProps.infer_st_rewrs|split|2')).
fof(f3677,plain,(
  s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',sK3,sK2,sK1,sK0)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | $spl0),
  inference(unit_resulting_resolution,[],[f3649,f151])).
fof(f151,plain,(
  ( ! [X2,X0,X1] : (s('type.infer.infer_st'(X0),X1) != s('type.infer.infer_st'(X0),X2) | s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))) = s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2)))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2] : ((s('type.infer.infer_st'(X0),X1) != s('type.infer.infer_st'(X0),X2) | (s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X1))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X2))) & s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))) = s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))) & (s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X1))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X2))) | s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))) != s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))) | s('type.infer.infer_st'(X0),X1) = s('type.infer.infer_st'(X0),X2)))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2] : ((s('type.infer.infer_st'(X0),X1) != s('type.infer.infer_st'(X0),X2) | (s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X1))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X2))) & s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))) = s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))) & ((s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X1))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X2))) | s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))) != s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2)))) | s('type.infer.infer_st'(X0),X1) = s('type.infer.infer_st'(X0),X2)))),
  inference(nnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1,X2] : (s('type.infer.infer_st'(X0),X1) = s('type.infer.infer_st'(X0),X2) <=> (s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X1))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X2))) & s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))) = s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2)))))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0] : ! [X1,X2] : (s('type.infer.infer_st'(X0),X1) = s('type.infer.infer_st'(X0),X2) <=> (s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X1))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X2))) & s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))) = s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X12] : ! [X19,X20] : (s('type.infer.infer_st'(X12),X19) = s('type.infer.infer_st'(X12),X20) <=> (s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X12),X19))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X12),X20))) & s(X12,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X12),X19))) = s(X12,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X12),X20)))))),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb','thm.infer.infer_st_component_equality')).
fof(f3649,plain,(
  s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',sK3,sK2,sK1,sK0)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) | $spl0),
  inference(unit_resulting_resolution,[],[f3531,f193])).
fof(f193,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X4,X3,X2,X1,X0)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) )),
  inference(cnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.one.one','const.one.one_0') = s('type.one.one',X4) & (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X4,X3,X2,X1,X0)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) & s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X4,X3,X2,X1,X0)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))))) & (s('type.one.one','const.one.one_0') != s('type.one.one',X4) | ! [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8])],[f116])).
fof(f116,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.one.one','const.one.one_0') = s('type.one.one',X4) & ? [X6] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) & s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))))) & (s('type.one.one','const.one.one_0') != s('type.one.one',X4) | ! [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))),
  inference(rectify,[],[f115])).
fof(f115,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.one.one','const.one.one_0') = s('type.one.one',X4) & ? [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) & s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))))) & (s('type.one.one','const.one.one_0') != s('type.one.one',X4) | ! [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))),
  inference(flattening,[],[f114])).
fof(f114,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.one.one','const.one.one_0') = s('type.one.one',X4) & ? [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) & s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))))) & ((s('type.one.one','const.one.one_0') != s('type.one.one',X4) | ! [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))),
  inference(nnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) <=> (s('type.one.one','const.one.one_0') = s('type.one.one',X4) & ? [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) & s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6,X7,X8,X9,X10] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X6),s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X10))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))) <=> (s('type.one.one','const.one.one_0') = s('type.one.one',X10) & ? [X22] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X22))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))),s('type.infer_t.infer_t',X6),s('type.infer_t.infer_t',X7))) & s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X22))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))))),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb','thm.inferProps.add_constraint_success')).
fof(f3531,plain,(
  s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl0),
  inference(forward_demodulation,[],[f209,f125])).
fof(f125,plain,(
  ( ! [X0] : (s('type.one.one','const.one.one_0') = s('type.one.one',X0)) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : s('type.one.one','const.one.one_0') = s('type.one.one',X0)),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X34] : s('type.one.one','const.one.one_0') = s('type.one.one',X34)),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb','thm.one.one')).
fof(f3963,plain,(
  ( ! [X0] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X0,sK3,sK2,sK1,sK0)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f3919,f169])).
fof(f169,plain,(
  ( ! [X0,X1] : (s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0) != s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1) | p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))))) )),
  inference(cnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)) & (s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0) != s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1) | p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))))))),
  inference(nnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) <=> s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X21,X22] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X22),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X21)))) <=> s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X21) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X22))),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb','thm.infer.pure_add_constraints_def|split|0')).
fof(f3919,plain,(
  ( ! [X31] : (s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X31,sK3,sK2,sK1,sK0)) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))) ) | $spl0),
  inference(superposition,[],[f170,f3880])).
fof(f3880,plain,(
  ( ! [X0] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X0,sK3,sK2,sK1,sK0)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f3652,f193])).
fof(f3652,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X0))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))) ) | $spl0),
  inference(superposition,[],[f3531,f125])).
fof(f4514,plain,(
  $false | ($spl0 | $spl8)),
  inference(subsumption_resolution,[],[f4371,f124])).
fof(f4371,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl8)),
  inference(backward_demodulation,[],[f239,f4073])).
fof(f4073,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X0,sK3,sK2,sK1,sK0)),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X1,sK3,sK2,sK1,sK0)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f3967,f169])).
fof(f3967,plain,(
  ( ! [X0,X1] : (s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X0,sK3,sK2,sK1,sK0)) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X1,sK3,sK2,sK1,sK0))) ) | $spl0),
  inference(superposition,[],[f3919,f3919])).
fof(f4281,plain,(
  $false | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f4280,f124])).
fof(f4280,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl5)),
  inference(backward_demodulation,[],[f4279,f4244])).
fof(f4244,plain,(
  p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',sK3,sK2,sK1,sK0))))) | $spl0),
  inference(unit_resulting_resolution,[],[f3648,f4013,f190])).
fof(f190,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3)))) | p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))))) )),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3)))) | (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK7(X4,X3,X2,X1,X0)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK7(X4,X3,X2,X1,X0)),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3)))))) & (! [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))))) | p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7])],[f112])).
fof(f112,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3)))) | ? [X6] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3)))))) & (! [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))))) | p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))))))),
  inference(rectify,[],[f111])).
fof(f111,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3)))) | ? [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3)))))) & (! [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))))) | p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))))))),
  inference(nnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3)))) <=> ? [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X7,X6,X23,X21,X24] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X23),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X6),s('type.infer_t.infer_t',X7))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X24))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X21)))) <=> ? [X25] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X25))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X23),s('type.infer_t.infer_t',X6),s('type.infer_t.infer_t',X7))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X25),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X24),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X21))))))),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb','thm.infer.pure_add_constraints_def|split|1')).
fof(f4013,plain,(
  ( ! [X0] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X0,sK3,sK2,sK1,sK0)),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',sK3,sK2,sK1,sK0)))))) ) | $spl0),
  inference(forward_demodulation,[],[f3965,f3709])).
fof(f3965,plain,(
  ( ! [X0] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X0,sK3,sK2,sK1,sK0)),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f3919,f169])).
fof(f3648,plain,(
  s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',sK3,sK2,sK1,sK0)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))) | $spl0),
  inference(unit_resulting_resolution,[],[f3531,f192])).
fof(f192,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X4,X3,X2,X1,X0)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1)))) )),
  inference(cnf_transformation,[],[f117])).
fof(f4279,plain,(
  s(bool,'F_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',sK3,sK2,sK1,sK0)))) | ($spl0 | $spl5)),
  inference(forward_demodulation,[],[f3553,f3709])).
fof(f3553,plain,(
  s(bool,'F_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) | $spl5),
  inference(unit_resulting_resolution,[],[f124,f214,f158])).
fof(f158,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f74])).
fof(f74,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : ((p(s(bool,X6)) => p(s(bool,X7))) => ((p(s(bool,X7)) => p(s(bool,X6))) => s(bool,X6) = s(bool,X7)))),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb','thm.bool.IMP_ANTISYM_AX')).
fof(f4273,plain,(
  $false | ($spl0 | $spl5 | $spl11 | $spl16 | $spl34 | $spl48)),
  inference(subsumption_resolution,[],[f4272,f124])).
fof(f4272,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl5 | $spl11 | $spl16 | $spl34 | $spl48)),
  inference(forward_demodulation,[],[f4244,f3713])).
fof(f3713,plain,(
  s(bool,'F_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',sK3,sK2,sK1,sK0)))) | ($spl0 | $spl5 | $spl11 | $spl16 | $spl34 | $spl48)),
  inference(backward_demodulation,[],[f3709,f3574])).
fof(f3574,plain,(
  s(bool,'F_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) | ($spl5 | $spl11 | $spl16 | $spl34 | $spl48)),
  inference(forward_demodulation,[],[f3561,f2968])).
fof(f2968,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,g(s('type.one.one',X0)))) ) | ($spl11 | $spl34 | $spl48)),
  inference(unit_resulting_resolution,[],[f241,f2856])).
fof(f2856,plain,(
  ( ! [X0,X3] : (s(bool,X3) = s(bool,g(s('type.one.one',X0))) | s(bool,'T_0') = s(bool,X3)) ) | ($spl11 | $spl34 | $spl48)),
  inference(trivial_inequality_removal,[],[f2848])).
fof(f2848,plain,(
  ( ! [X0,X3] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,'T_0') = s(bool,X3) | s(bool,X3) = s(bool,g(s('type.one.one',X0)))) ) | ($spl11 | $spl34 | $spl48)),
  inference(backward_demodulation,[],[f2827,f2555])).
fof(f2827,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,f(s('type.one.one',X0)))) ) | ($spl11 | $spl48)),
  inference(unit_resulting_resolution,[],[f122,f241,f2803,f624])).
fof(f624,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,X15)) | s(bool,X14) = s(bool,X15) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) )),
  inference(subsumption_resolution,[],[f475,f122])).
fof(f475,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X15)) | s(bool,X14) = s(bool,X15) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f161,f233])).
fof(f233,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f126,f126])).
fof(f126,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb',aHL_BOOL_CASES)).
fof(f161,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f75])).
fof(f122,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb','thm.bool.TRUTH')).
fof(f3561,plain,(
  ( ! [X0] : (s(bool,g(s('type.one.one',X0))) = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | ($spl5 | $spl11 | $spl16 | $spl34 | $spl48)),
  inference(unit_resulting_resolution,[],[f3230,f214,f257])).
fof(f257,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f251,f124])).
fof(f251,plain,(
  ( ! [X2,X3] : (p(s(bool,'F_0')) | p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f158,f126])).
fof(f3230,plain,(
  ( ! [X29] : (s(bool,'T_0') != s(bool,g(s('type.one.one',X29)))) ) | ($spl11 | $spl16 | $spl34 | $spl48)),
  inference(subsumption_resolution,[],[f3206,f124])).
fof(f3206,plain,(
  ( ! [X29] : (p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,g(s('type.one.one',X29)))) ) | ($spl11 | $spl16 | $spl34 | $spl48)),
  inference(superposition,[],[f623,f2968])).
fof(f255,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f255_D])).
fof(f255_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f4190,plain,(
  ( ! [X34] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X34,'type.num.num'))) ) | $spl64),
  inference(cnf_transformation,[],[f4190_D])).
fof(f4190_D,plain,(
  ( ! [X34] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X34,'type.num.num'))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f4189,plain,(
  ( ! [X35,X34] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))))) | s(bool,'T_0') = s(bool,X35) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X34,'type.num.num'))) ) | $spl24),
  inference(subsumption_resolution,[],[f4172,f126])).
fof(f4172,plain,(
  ( ! [X35,X34] : (s(bool,'F_0') != s(bool,X35) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))))) | s(bool,'T_0') = s(bool,X35) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X34,'type.num.num'))) ) | $spl24),
  inference(superposition,[],[f342,f1147])).
fof(f342,plain,(
  ( ! [X12,X11] : (s(bool,X11) != s(bool,X12) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X12))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f154,f126])).
fof(f154,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) != s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2] : ((s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))))),
  inference(nnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0] : ! [X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X12] : ! [X10,X13] : (s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X10))) = s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X13))) <=> s(X12,X10) = s(X12,X13))),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb','thm.option.SOME_|49||49|')).
fof(f4183,plain,(
  ( ! [X2,X1] : (s(bool,X2) != s(bool,g(s('type.one.one',X1))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X2)))) ) | $spl62),
  inference(cnf_transformation,[],[f4183_D])).
fof(f4183_D,plain,(
  ( ! [X2,X1] : (s(bool,X2) != s(bool,g(s('type.one.one',X1))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X2)))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f4181,plain,(
  ( ! [X2,X0,X1] : (s(bool,X2) != s(bool,g(s('type.one.one',X1))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X2))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl11 | $spl34 | $spl48)),
  inference(duplicate_literal_removal,[],[f4143])).
fof(f4143,plain,(
  ( ! [X2,X0,X1] : (s(bool,X2) != s(bool,g(s('type.one.one',X1))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X2))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | ($spl11 | $spl34 | $spl48)),
  inference(superposition,[],[f342,f2856])).
fof(f4068,plain,(
  s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3) | $spl58),
  inference(cnf_transformation,[],[f4068_D])).
fof(f4068_D,plain,(
  s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f4070,plain,(
  s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',sK3,sK2,sK1,sK0)) != s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) | $spl61),
  inference(cnf_transformation,[],[f4070_D])).
fof(f4070_D,plain,(
  s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',sK3,sK2,sK1,sK0)) != s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) <=> ~$spl61),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl61])])).
fof(f4062,plain,(
  s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',sK3,sK2,sK1,sK0)) != s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3) | ($spl0 | $spl6)),
  inference(equality_resolution,[],[f3710])).
fof(f3710,plain,(
  ( ! [X0] : (s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X0))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',sK3,sK2,sK1,sK0)) != s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X0))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X0)) ) | ($spl0 | $spl6)),
  inference(backward_demodulation,[],[f3709,f2711])).
fof(f2711,plain,(
  ( ! [X0] : (s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X0))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) != s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X0))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X0)) ) | $spl6),
  inference(superposition,[],[f152,f215])).
fof(f152,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X1))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X2))) | s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))) != s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))) | s('type.infer.infer_st'(X0),X1) = s('type.infer.infer_st'(X0),X2)) )),
  inference(cnf_transformation,[],[f98])).
fof(f3530,plain,(
  $false | $spl3),
  inference(subsumption_resolution,[],[f212,f125])).
fof(f3529,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f3528,f215])).
fof(f3528,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f3522,f171])).
fof(f171,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),'const.infer.infer_st_subst_fupd_2'(s(fun(X1,X0),'const.combin.K_1'(s(X0,X3))),s('type.infer.infer_st'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1,X2,X3] : s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),'const.infer.infer_st_subst_fupd_2'(s(fun(X1,X0),'const.combin.K_1'(s(X0,X3))),s('type.infer.infer_st'(X1),X2)))))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),'const.infer.infer_st_subst_fupd_2'(s(fun(X1,X0),'const.combin.K_1'(s(X0,X3))),s('type.infer.infer_st'(X1),X2)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X29,X30] : ! [X8,X22] : s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X30),X8))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X29),'const.infer.infer_st_subst_fupd_2'(s(fun(X30,X29),'const.combin.K_1'(s(X29,X22))),s('type.infer.infer_st'(X30),X8)))))),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb','thm.inferProps.infer_st_rewrs|split|3')).
fof(f3522,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f170,f3368,f152])).
fof(f3368,plain,(
  s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f2392,f2708,f217])).
fof(f217,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))) )),
  inference(subsumption_resolution,[],[f194,f125])).
fof(f194,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) | s('type.one.one','const.one.one_0') != s('type.one.one',X4)) )),
  inference(cnf_transformation,[],[f117])).
fof(f2708,plain,(
  s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl1),
  inference(forward_demodulation,[],[f210,f125])).
fof(f2392,plain,(
  s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))) | $spl4),
  inference(forward_demodulation,[],[f2391,f2307])).
fof(f2307,plain,(
  s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK7('const.list.NIL_0','const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)),sK0,sK1)) | $spl4),
  inference(unit_resulting_resolution,[],[f2305,f168])).
fof(f168,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)) )),
  inference(cnf_transformation,[],[f105])).
fof(f2305,plain,(
  p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK7('const.list.NIL_0','const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)),sK0,sK1)),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) | $spl4),
  inference(subsumption_resolution,[],[f2295,f122])).
fof(f2295,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK7('const.list.NIL_0','const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)),sK0,sK1)),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) | $spl4),
  inference(superposition,[],[f189,f781])).
fof(f781,plain,(
  s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) | $spl4),
  inference(unit_resulting_resolution,[],[f213,f235])).
fof(f235,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f124,f126])).
fof(f189,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3)))) | p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK7(X4,X3,X2,X1,X0)),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))))) )),
  inference(cnf_transformation,[],[f113])).
fof(f2391,plain,(
  s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK7('const.list.NIL_0','const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)),sK0,sK1)))) | $spl4),
  inference(subsumption_resolution,[],[f2378,f122])).
fof(f2378,plain,(
  ~p(s(bool,'T_0')) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK7('const.list.NIL_0','const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)),sK0,sK1)))) | $spl4),
  inference(superposition,[],[f188,f781])).
fof(f188,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X4))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3)))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK7(X4,X3,X2,X1,X0)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X0)))) )),
  inference(cnf_transformation,[],[f113])).
fof(f3527,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f3526,f215])).
fof(f3526,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f3524,f171])).
fof(f3524,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f170,f3368,f152])).
fof(f2554,plain,(
  ( ! [X2,X1] : (s(fun('type.one.one',bool),X1) = s(fun('type.one.one',bool),X2)) ) | $spl32),
  inference(cnf_transformation,[],[f2554_D])).
fof(f2554_D,plain,(
  ( ! [X2,X1] : (s(fun('type.one.one',bool),X1) = s(fun('type.one.one',bool),X2)) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f3145,plain,(
  ( ! [X69] : (s(bool,X69) != s(bool,f(s('type.one.one','const.one.one_0'))) | s(bool,'T_0') = s(bool,X69)) ) | $spl56),
  inference(cnf_transformation,[],[f3145_D])).
fof(f3145_D,plain,(
  ( ! [X69] : (s(bool,X69) != s(bool,f(s('type.one.one','const.one.one_0'))) | s(bool,'T_0') = s(bool,X69)) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f3144,plain,(
  ( ! [X68,X69,X67] : (s(bool,X69) != s(bool,f(s('type.one.one','const.one.one_0'))) | s(fun('type.one.one',bool),X67) = s(fun('type.one.one',bool),X68) | s(bool,'T_0') = s(bool,X69)) ) | ($spl11 | $spl34 | $spl48)),
  inference(forward_demodulation,[],[f3063,f125])).
fof(f3063,plain,(
  ( ! [X68,X69,X67] : (s(bool,X69) != s(bool,f(s('type.one.one',sK6(X67,X68,bool,'type.one.one')))) | s(fun('type.one.one',bool),X67) = s(fun('type.one.one',bool),X68) | s(bool,'T_0') = s(bool,X69)) ) | ($spl11 | $spl34 | $spl48)),
  inference(superposition,[],[f172,f2856])).
fof(f172,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK6(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK6(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK6(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK6(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6])],[f77])).
fof(f77,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb',aHL_EXT)).
fof(f3143,plain,(
  ( ! [X64,X63] : (s(bool,X64) != s(bool,f(s('type.one.one',X63))) | s(bool,'T_0') = s(bool,X64)) ) | $spl54),
  inference(cnf_transformation,[],[f3143_D])).
fof(f3143_D,plain,(
  ( ! [X64,X63] : (s(bool,X64) != s(bool,f(s('type.one.one',X63))) | s(bool,'T_0') = s(bool,X64)) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f3062,plain,(
  ( ! [X66,X64,X65,X63] : (s(bool,X64) != s(bool,f(s('type.one.one',X63))) | s(fun('type.one.one',bool),X65) = s(fun('type.one.one',bool),X66) | s(bool,'T_0') = s(bool,X64)) ) | ($spl11 | $spl34 | $spl48)),
  inference(superposition,[],[f2028,f2856])).
fof(f2028,plain,(
  ( ! [X21,X19,X22,X20] : (s(X21,f(s('type.one.one',X22))) != s(X21,g(s('type.one.one',X22))) | s(fun('type.one.one',X21),X19) = s(fun('type.one.one',X21),X20)) )),
  inference(superposition,[],[f172,f219])).
fof(f219,plain,(
  ( ! [X0,X1] : (s('type.one.one',X0) = s('type.one.one',X1)) )),
  inference(superposition,[],[f125,f125])).
fof(f2803,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X0)))) ) | $spl48),
  inference(cnf_transformation,[],[f2803_D])).
fof(f2803_D,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X0)))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f2802,plain,(
  s(bool,'T_0') = s(bool,g(s('type.one.one','const.one.one_0'))) | $spl46),
  inference(cnf_transformation,[],[f2802_D])).
fof(f2802_D,plain,(
  s(bool,'T_0') = s(bool,g(s('type.one.one','const.one.one_0'))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f2807,plain,(
  ( ! [X7] : (s(bool,'T_0') = s(bool,g(s('type.one.one','const.one.one_0'))) | s(bool,'F_0') != s(bool,f(s('type.one.one',X7)))) ) | $spl38),
  inference(forward_demodulation,[],[f2793,f125])).
fof(f2793,plain,(
  ( ! [X6,X8,X7] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X7))) | s(bool,'T_0') = s(bool,g(s('type.one.one','const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.one.one'),'const.infer.infer_st_subst_fupd_2'(s(fun(X6,'type.one.one'),'const.combin.K_1'(s('type.one.one',X7))),s('type.infer.infer_st'(X6),X8)))))))) ) | $spl38),
  inference(superposition,[],[f2557,f170])).
fof(f2804,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,g(s('type.one.one',X1)))) ) | $spl50),
  inference(cnf_transformation,[],[f2804_D])).
fof(f2804_D,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,g(s('type.one.one',X1)))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f2806,plain,(
  s(bool,'F_0') != s(bool,f(s('type.one.one','const.one.one_0'))) | $spl53),
  inference(cnf_transformation,[],[f2806_D])).
fof(f2806_D,plain,(
  s(bool,'F_0') != s(bool,f(s('type.one.one','const.one.one_0'))) <=> ~$spl53),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl53])])).
fof(f2792,plain,(
  ( ! [X5] : (s(bool,'F_0') != s(bool,f(s('type.one.one','const.one.one_0'))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X5)))) ) | $spl38),
  inference(superposition,[],[f2557,f125])).
fof(f2791,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X4))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X3)))) ) | $spl38),
  inference(superposition,[],[f2557,f219])).
fof(f2790,plain,(
  ( ! [X2,X1] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X2))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X1)))) ) | $spl38),
  inference(superposition,[],[f2557,f219])).
fof(f2789,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X0))) | s(bool,'T_0') = s(bool,g(s('type.one.one','const.one.one_0')))) ) | $spl38),
  inference(superposition,[],[f2557,f125])).
fof(f2697,plain,(
  $false | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f2668,f216])).
fof(f2668,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl0),
  inference(superposition,[],[f171,f2559])).
fof(f2559,plain,(
  ( ! [X0] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X0,sK3,sK2,sK1,sK0)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1175,f193])).
fof(f1175,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X0))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))) ) | $spl0),
  inference(superposition,[],[f1162,f125])).
fof(f1162,plain,(
  s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl0),
  inference(forward_demodulation,[],[f209,f125])).
fof(f2693,plain,(
  $false | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f2692,f216])).
fof(f2692,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl0),
  inference(forward_demodulation,[],[f2661,f171])).
fof(f2661,plain,(
  ( ! [X0] : (s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X0,sK3,sK2,sK1,sK0)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f2559,f150])).
fof(f150,plain,(
  ( ! [X2,X0,X1] : (s('type.infer.infer_st'(X0),X1) != s('type.infer.infer_st'(X0),X2) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X1))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X2)))) )),
  inference(cnf_transformation,[],[f98])).
fof(f2691,plain,(
  $false | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f2690,f216])).
fof(f2690,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl0),
  inference(forward_demodulation,[],[f2664,f171])).
fof(f2664,plain,(
  ( ! [X0] : (s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X0,sK3,sK2,sK1,sK0)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f2559,f150])).
fof(f2653,plain,(
  ( ! [X0,X3] : (p(s(bool,happ(s(fun('type.one.one',bool),X0),s('type.one.one',X3))))) ) | $spl40),
  inference(cnf_transformation,[],[f2653_D])).
fof(f2653_D,plain,(
  ( ! [X0,X3] : (p(s(bool,happ(s(fun('type.one.one',bool),X0),s('type.one.one',X3))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f2654,plain,(
  ( ! [X2,X1] : (~p(s(bool,happ(s(fun('type.one.one',bool),X1),s('type.one.one',X2))))) ) | $spl42),
  inference(cnf_transformation,[],[f2654_D])).
fof(f2654_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,happ(s(fun('type.one.one',bool),X1),s('type.one.one',X2))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f2634,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,happ(s(fun('type.one.one',bool),X11),s('type.one.one',X12)))) | p(s(bool,happ(s(fun('type.one.one',bool),X10),s('type.one.one',X13))))) ) | $spl32),
  inference(superposition,[],[f1025,f2554])).
fof(f1025,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,happ(s(fun('type.one.one',bool),X15),s('type.one.one',X14)))) | p(s(bool,happ(s(fun('type.one.one',bool),X15),s('type.one.one',X16))))) )),
  inference(superposition,[],[f157,f219])).
fof(f157,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK5(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | (s(X0,X2) = s(X0,sK5(X2,X1,X0)) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK5(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5])],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(rectify,[],[f100])).
fof(f100,plain,(
  ! [X0,X1,X2] : ((! [X3] : (s(X0,X2) != s(X0,X3) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f57])).
fof(f57,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X12] : ! [X17,X18] : (? [X10] : (s(X12,X10) = s(X12,X18) & p(s(bool,happ(s(fun(X12,bool),X17),s(X12,X10))))) <=> p(s(bool,happ(s(fun(X12,bool),X17),s(X12,X18)))))),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb','thm.bool.UNWIND_THM2')).
fof(f2656,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.one.one',bool),X5),s('type.one.one','const.one.one_0'))))) ) | $spl44),
  inference(cnf_transformation,[],[f2656_D])).
fof(f2656_D,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.one.one',bool),X5),s('type.one.one','const.one.one_0'))))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f2659,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,happ(s(fun('type.one.one',bool),X5),s('type.one.one','const.one.one_0')))) | ~p(s(bool,happ(s(fun('type.one.one',bool),X4),s('type.one.one',X6))))) ) | $spl32),
  inference(forward_demodulation,[],[f2632,f125])).
fof(f2632,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,happ(s(fun('type.one.one',bool),X5),s('type.one.one',sK5(X6,X4,'type.one.one'))))) | ~p(s(bool,happ(s(fun('type.one.one',bool),X4),s('type.one.one',X6))))) ) | $spl32),
  inference(superposition,[],[f157,f2554])).
fof(f2658,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun('type.one.one',bool),X1),s('type.one.one',X2)))) | p(s(bool,happ(s(fun('type.one.one',bool),X0),s('type.one.one',X3))))) ) | $spl32),
  inference(subsumption_resolution,[],[f2631,f219])).
fof(f2631,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun('type.one.one',bool),X1),s('type.one.one',X2)))) | p(s(bool,happ(s(fun('type.one.one',bool),X0),s('type.one.one',X3)))) | s('type.one.one',X2) != s('type.one.one',X3)) ) | $spl32),
  inference(superposition,[],[f155,f2554])).
fof(f155,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) != s(X0,X4)) )),
  inference(cnf_transformation,[],[f102])).
fof(f2613,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,happ(s(fun('type.one.one',bool),X11),s('type.one.one',X12)))) | p(s(bool,happ(s(fun('type.one.one',bool),X10),s('type.one.one',X13))))) ) | $spl32),
  inference(superposition,[],[f1025,f2554])).
fof(f2655,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,happ(s(fun('type.one.one',bool),X5),s('type.one.one','const.one.one_0')))) | ~p(s(bool,happ(s(fun('type.one.one',bool),X4),s('type.one.one',X6))))) ) | $spl32),
  inference(forward_demodulation,[],[f2611,f125])).
fof(f2611,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,happ(s(fun('type.one.one',bool),X5),s('type.one.one',sK5(X6,X4,'type.one.one'))))) | ~p(s(bool,happ(s(fun('type.one.one',bool),X4),s('type.one.one',X6))))) ) | $spl32),
  inference(superposition,[],[f157,f2554])).
fof(f2652,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun('type.one.one',bool),X1),s('type.one.one',X2)))) | p(s(bool,happ(s(fun('type.one.one',bool),X0),s('type.one.one',X3))))) ) | $spl32),
  inference(subsumption_resolution,[],[f2610,f219])).
fof(f2610,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun('type.one.one',bool),X1),s('type.one.one',X2)))) | p(s(bool,happ(s(fun('type.one.one',bool),X0),s('type.one.one',X3)))) | s('type.one.one',X2) != s('type.one.one',X3)) ) | $spl32),
  inference(superposition,[],[f155,f2554])).
fof(f2557,plain,(
  ( ! [X16] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X16))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X16)))) ) | $spl38),
  inference(cnf_transformation,[],[f2557_D])).
fof(f2557_D,plain,(
  ( ! [X16] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X16))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X16)))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f2542,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X16))) | s(fun('type.one.one',bool),X17) = s(fun('type.one.one',bool),X18) | s(bool,'T_0') = s(bool,g(s('type.one.one',X16)))) )),
  inference(superposition,[],[f2028,f126])).
fof(f2556,plain,(
  ( ! [X8,X9] : (s(bool,X9) != s(bool,f(s('type.one.one',X8))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s('type.one.one',X8)))) ) | $spl36),
  inference(cnf_transformation,[],[f2556_D])).
fof(f2556_D,plain,(
  ( ! [X8,X9] : (s(bool,X9) != s(bool,f(s('type.one.one',X8))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s('type.one.one',X8)))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f2541,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,X13) != s(bool,f(s('type.one.one',X12))) | s(fun('type.one.one',bool),X14) = s(fun('type.one.one',bool),X15) | s(bool,'T_0') = s(bool,X13) | s(bool,'T_0') = s(bool,g(s('type.one.one',X12)))) )),
  inference(superposition,[],[f2028,f233])).
fof(f2540,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X9) != s(bool,f(s('type.one.one',X8))) | s(fun('type.one.one',bool),X10) = s(fun('type.one.one',bool),X11) | s(bool,'T_0') = s(bool,g(s('type.one.one',X8))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f2028,f233])).
fof(f2555,plain,(
  ( ! [X0,X3] : (s(bool,'T_0') != s(bool,f(s('type.one.one',X0))) | s(bool,'T_0') = s(bool,X3) | s(bool,X3) = s(bool,g(s('type.one.one',X0)))) ) | $spl34),
  inference(cnf_transformation,[],[f2555_D])).
fof(f2555_D,plain,(
  ( ! [X0,X3] : (s(bool,'T_0') != s(bool,f(s('type.one.one',X0))) | s(bool,'T_0') = s(bool,X3) | s(bool,X3) = s(bool,g(s('type.one.one',X0)))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f2539,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') != s(bool,f(s('type.one.one',X4))) | s(fun('type.one.one',bool),X5) = s(fun('type.one.one',bool),X6) | s(bool,X7) = s(bool,g(s('type.one.one',X4))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f2028,f233])).
fof(f2538,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,f(s('type.one.one',X0))) | s(fun('type.one.one',bool),X1) = s(fun('type.one.one',bool),X2) | s(bool,X3) = s(bool,g(s('type.one.one',X0))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f2028,f233])).
fof(f1502,plain,(
  $false | $spl20),
  inference(subsumption_resolution,[],[f1381,f1394])).
fof(f1394,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1)) ) | $spl20),
  inference(unit_resulting_resolution,[],[f1037,f1037,f161])).
fof(f1381,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0)) ) | $spl20),
  inference(unit_resulting_resolution,[],[f124,f1037,f163])).
fof(f163,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0,X1] : ((s(bool,X0) != s(bool,X1) | ((~p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | p(s(bool,X0))))) & ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(flattening,[],[f103])).
fof(f103,plain,(
  ! [X0,X1] : ((s(bool,X0) != s(bool,X1) | ((~p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | p(s(bool,X0))))) & (((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0)))) | s(bool,X0) = s(bool,X1)))),
  inference(nnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1] : (s(bool,X0) = s(bool,X1) <=> ((~p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | p(s(bool,X0)))))),
  inference(ennf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1] : (s(bool,X0) = s(bool,X1) <=> ((p(s(bool,X0)) => p(s(bool,X1))) & (p(s(bool,X1)) => p(s(bool,X0)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6,X7] : (s(bool,X6) = s(bool,X7) <=> ((p(s(bool,X6)) => p(s(bool,X7))) & (p(s(bool,X7)) => p(s(bool,X6)))))),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb','thm.bool.EQ_IMP_THM')).
fof(f1501,plain,(
  $false | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1389,f122])).
fof(f1389,plain,(
  ~p(s(bool,'T_0')) | ($spl11 | $spl20)),
  inference(unit_resulting_resolution,[],[f241,f1037,f161])).
fof(f1500,plain,(
  $false | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1391,f1037])).
fof(f1391,plain,(
  ~p(s(bool,'F_0')) | ($spl11 | $spl20)),
  inference(unit_resulting_resolution,[],[f241,f1037,f161])).
fof(f1499,plain,(
  $false | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1395,f122])).
fof(f1395,plain,(
  ~p(s(bool,'T_0')) | ($spl11 | $spl20)),
  inference(unit_resulting_resolution,[],[f241,f1037,f161])).
fof(f1498,plain,(
  $false | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1397,f1037])).
fof(f1397,plain,(
  ~p(s(bool,'F_0')) | ($spl11 | $spl20)),
  inference(unit_resulting_resolution,[],[f241,f1037,f161])).
fof(f1496,plain,(
  $false | $spl20),
  inference(subsumption_resolution,[],[f1459,f122])).
fof(f1459,plain,(
  ~p(s(bool,'T_0')) | $spl20),
  inference(backward_demodulation,[],[f1399,f124])).
fof(f1399,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl20),
  inference(unit_resulting_resolution,[],[f1037,f235])).
fof(f1495,plain,(
  $false | ($spl11 | $spl20)),
  inference(trivial_inequality_removal,[],[f1461])).
fof(f1461,plain,(
  s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) != s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) | ($spl11 | $spl20)),
  inference(backward_demodulation,[],[f1399,f302])).
fof(f302,plain,(
  s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) != s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) | $spl11),
  inference(unit_resulting_resolution,[],[f241,f153])).
fof(f153,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f99])).
fof(f1494,plain,(
  $false | ($spl11 | $spl20)),
  inference(trivial_inequality_removal,[],[f1464])).
fof(f1464,plain,(
  s('type.option.option'('type.option.option'(bool)),'const.option.SOME_1'(s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))))) != s('type.option.option'('type.option.option'(bool)),'const.option.SOME_1'(s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))))) | ($spl11 | $spl20)),
  inference(backward_demodulation,[],[f1399,f321])).
fof(f321,plain,(
  s('type.option.option'('type.option.option'(bool)),'const.option.SOME_1'(s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))))) != s('type.option.option'('type.option.option'(bool)),'const.option.SOME_1'(s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))))) | $spl11),
  inference(unit_resulting_resolution,[],[f302,f153])).
fof(f1400,plain,(
  $false | ($spl11 | $spl20)),
  inference(unit_resulting_resolution,[],[f241,f1037,f235])).
fof(f1398,plain,(
  $false | ($spl11 | $spl20)),
  inference(unit_resulting_resolution,[],[f1037,f241,f1037,f161])).
fof(f1396,plain,(
  $false | ($spl11 | $spl20)),
  inference(unit_resulting_resolution,[],[f122,f241,f1037,f161])).
fof(f1392,plain,(
  $false | ($spl11 | $spl20)),
  inference(unit_resulting_resolution,[],[f1037,f241,f1037,f161])).
fof(f1390,plain,(
  $false | ($spl11 | $spl20)),
  inference(unit_resulting_resolution,[],[f122,f241,f1037,f161])).
fof(f1383,plain,(
  $false | $spl20),
  inference(unit_resulting_resolution,[],[f124,f170,f1037,f163])).
fof(f1380,plain,(
  $false | ($spl11 | $spl20)),
  inference(unit_resulting_resolution,[],[f241,f241,f241,f1037,f624])).
fof(f1374,plain,(
  $false | $spl20),
  inference(unit_resulting_resolution,[],[f124,f1037])).
fof(f1371,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') != s(bool,X28) | s(bool,'T_0') = s(bool,X29) | s(bool,X28) = s(bool,X29)) ) | $spl30),
  inference(cnf_transformation,[],[f1371_D])).
fof(f1371_D,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') != s(bool,X28) | s(bool,'T_0') = s(bool,X29) | s(bool,X28) = s(bool,X29)) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f1037,plain,(
  ( ! [X11] : (p(s(bool,X11))) ) | $spl20),
  inference(cnf_transformation,[],[f1037_D])).
fof(f1037_D,plain,(
  ( ! [X11] : (p(s(bool,X11))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1370,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,X27)) | s(bool,'F_0') != s(bool,X28) | s(bool,X28) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | $spl16),
  inference(subsumption_resolution,[],[f1362,f623])).
fof(f1362,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,X27)) | s(bool,'F_0') != s(bool,X28) | s(bool,X28) = s(bool,X29) | s(bool,'T_0') = s(bool,X29) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f625,f126])).
fof(f625,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X18)) | s(bool,X17) != s(bool,X18) | s(bool,X17) = s(bool,X19) | s(bool,'T_0') = s(bool,X19)) )),
  inference(subsumption_resolution,[],[f476,f122])).
fof(f476,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'T_0')) | p(s(bool,X18)) | s(bool,X17) != s(bool,X18) | s(bool,X17) = s(bool,X19) | s(bool,'T_0') = s(bool,X19)) )),
  inference(superposition,[],[f163,f233])).
fof(f1367,plain,(
  ( ! [X10,X8,X11] : (s(bool,X8) != s(bool,X10) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X11) | s(bool,X10) = s(bool,X11)) ) | $spl28),
  inference(cnf_transformation,[],[f1367_D])).
fof(f1367_D,plain,(
  ( ! [X10,X8,X11] : (s(bool,X8) != s(bool,X10) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X11) | s(bool,X10) = s(bool,X11)) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f1368,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X14) = s(bool,X15) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,X12)) ) | $spl16),
  inference(subsumption_resolution,[],[f1358,f623])).
fof(f1358,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X14) = s(bool,X15) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,X13) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f625,f233])).
fof(f1366,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,X8)) ) | $spl16),
  inference(subsumption_resolution,[],[f1357,f623])).
fof(f1357,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f625,f233])).
fof(f1161,plain,(
  ( ! [X37] : (s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X37),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X37,'type.num.num'))) ) | $spl26),
  inference(cnf_transformation,[],[f1161_D])).
fof(f1161_D,plain,(
  ( ! [X37] : (s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X37),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X37,'type.num.num'))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f1160,plain,(
  ( ! [X37,X38] : (p(s(bool,X38)) | s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X37),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X37,'type.num.num'))) ) | ($spl6 | $spl16)),
  inference(subsumption_resolution,[],[f1115,f623])).
fof(f1115,plain,(
  ( ! [X37,X38] : (p(s(bool,X38)) | s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X37),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X37,'type.num.num')) | s(bool,'T_0') = s(bool,X38)) ) | ($spl6 | $spl16)),
  inference(superposition,[],[f623,f670])).
fof(f670,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X0,'type.num.num')) | s(bool,'T_0') = s(bool,X1)) ) | $spl6),
  inference(subsumption_resolution,[],[f665,f122])).
fof(f665,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X0,'type.num.num')) | s(bool,X1) = s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s(bool,'T_0') = s(bool,X1)) ) | $spl6),
  inference(superposition,[],[f652,f233])).
fof(f652,plain,(
  ( ! [X32] : (~p(s(bool,happ(s(fun('type.num.num',bool),X32),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X32,'type.num.num'))) ) | $spl6),
  inference(forward_demodulation,[],[f644,f215])).
fof(f644,plain,(
  ( ! [X32] : (~p(s(bool,happ(s(fun('type.num.num',bool),X32),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X32,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f156,f215])).
fof(f156,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) = s(X0,sK5(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f102])).
fof(f1147,plain,(
  ( ! [X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X16,'type.num.num'))) ) | $spl24),
  inference(cnf_transformation,[],[f1147_D])).
fof(f1147_D,plain,(
  ( ! [X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X16,'type.num.num'))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f1158,plain,(
  ( ! [X33,X32] : (p(s(bool,X33)) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X32),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X32,'type.num.num'))) ) | ($spl6 | $spl14 | $spl16)),
  inference(subsumption_resolution,[],[f1113,f623])).
fof(f1113,plain,(
  ( ! [X33,X32] : (p(s(bool,X33)) | s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X32),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X32,'type.num.num')) | s(bool,'T_0') = s(bool,X33)) ) | ($spl6 | $spl14)),
  inference(superposition,[],[f256,f670])).
fof(f1134,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s(bool,'T_0') = s(bool,X0) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X1,'type.num.num'))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f1074])).
fof(f1074,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s(bool,'T_0') = s(bool,X0) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X1,'type.num.num')) | s(bool,'T_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f126,f670])).
fof(f1140,plain,(
  ( ! [X15,X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X16,'type.num.num')) | s(bool,'T_0') = s(bool,X15)) ) | $spl6),
  inference(duplicate_literal_removal,[],[f1061])).
fof(f1061,plain,(
  ( ! [X15,X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X16,'type.num.num')) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) ) | $spl6),
  inference(superposition,[],[f670,f126])).
fof(f1146,plain,(
  ( ! [X2,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X1,'type.num.num')) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X2,'type.num.num'))) ) | $spl22),
  inference(cnf_transformation,[],[f1146_D])).
fof(f1146_D,plain,(
  ( ! [X2,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X1,'type.num.num')) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X2,'type.num.num'))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f1145,plain,(
  ( ! [X2,X0,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X2,'type.num.num')) | s(bool,'T_0') = s(bool,X0) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X1,'type.num.num'))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f1056])).
fof(f1056,plain,(
  ( ! [X2,X0,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X2,'type.num.num')) | s(bool,'T_0') = s(bool,X0) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num',sK5('const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X1,'type.num.num')) | s(bool,'T_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f670,f670])).
fof(f1036,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,happ(s(fun(X8,bool),X9),s(X8,X10)))) | s(bool,'T_0') = s(bool,happ(s(fun(X8,bool),X9),s(X8,sK5(X10,X9,X8))))) ) | $spl18),
  inference(cnf_transformation,[],[f1036_D])).
fof(f1036_D,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,happ(s(fun(X8,bool),X9),s(X8,X10)))) | s(bool,'T_0') = s(bool,happ(s(fun(X8,bool),X9),s(X8,sK5(X10,X9,X8))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f1038,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,X15)) | ~p(s(bool,happ(s(fun(X12,bool),X13),s(X12,X14)))) | s(bool,'T_0') = s(bool,happ(s(fun(X12,bool),X13),s(X12,sK5(X14,X13,X12))))) ) | $spl16),
  inference(subsumption_resolution,[],[f1031,f623])).
fof(f1031,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,X15)) | ~p(s(bool,happ(s(fun(X12,bool),X13),s(X12,X14)))) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,happ(s(fun(X12,bool),X13),s(X12,sK5(X14,X13,X12))))) )),
  inference(superposition,[],[f157,f233])).
fof(f1035,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X11)) | ~p(s(bool,happ(s(fun(X8,bool),X9),s(X8,X10)))) | s(bool,'T_0') = s(bool,happ(s(fun(X8,bool),X9),s(X8,sK5(X10,X9,X8))))) ) | $spl16),
  inference(subsumption_resolution,[],[f1030,f623])).
fof(f1030,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X11)) | ~p(s(bool,happ(s(fun(X8,bool),X9),s(X8,X10)))) | s(bool,'T_0') = s(bool,happ(s(fun(X8,bool),X9),s(X8,sK5(X10,X9,X8)))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f157,f233])).
fof(f623,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'T_0') != s(bool,X1)) ) | $spl16),
  inference(cnf_transformation,[],[f623_D])).
fof(f623_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'T_0') != s(bool,X1)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f631,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | s(bool,'T_0') != s(bool,X1)) )),
  inference(condensation,[],[f630])).
fof(f630,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X15)) | s(bool,'T_0') != s(bool,X15) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) )),
  inference(subsumption_resolution,[],[f488,f257])).
fof(f488,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,'T_0') != s(bool,X15) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f163,f233])).
fof(f622,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | s(bool,'T_0') != s(bool,X1)) )),
  inference(condensation,[],[f621])).
fof(f621,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X15)) | s(bool,'T_0') != s(bool,X15) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) )),
  inference(subsumption_resolution,[],[f459,f257])).
fof(f459,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,'T_0') != s(bool,X15) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f163,f233])).
fof(f269,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f259,f122])).
fof(f259,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(backward_demodulation,[],[f255,f124])).
fof(f256,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) | $spl14),
  inference(cnf_transformation,[],[f256_D])).
fof(f256_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f258,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f252,f235])).
fof(f252,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f158,f126])).
fof(f254,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f250,f235])).
fof(f250,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f158,f126])).
fof(f239,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f239_D])).
fof(f239_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f241,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(cnf_transformation,[],[f241_D])).
fof(f241_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f238,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f126])).
fof(f209,plain,(
  s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl0),
  inference(cnf_transformation,[],[f209_D])).
fof(f209_D,plain,(
  s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f211,plain,(
  s('type.one.one','const.one.one_0') = s('type.one.one',sK4) | $spl2),
  inference(cnf_transformation,[],[f211_D])).
fof(f211_D,plain,(
  s('type.one.one','const.one.one_0') = s('type.one.one',sK4) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f118,plain,(
  s('type.one.one','const.one.one_0') = s('type.one.one',sK4) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | (s('type.one.one','const.one.one_0') = s('type.one.one',sK4) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) & (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | s('type.one.one','const.one.one_0') != s('type.one.one',sK4) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f83])).
fof(f83,plain,(
  ? [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.one.one','const.one.one_0') = s('type.one.one',X4) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))) & (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s('type.one.one','const.one.one_0') != s('type.one.one',X4) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))),
  inference(flattening,[],[f82])).
fof(f82,plain,(
  ? [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.one.one','const.one.one_0') = s('type.one.one',X4) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))) & (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.one.one','const.one.one_0') != s('type.one.one',X4) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))))),
  inference(nnf_transformation,[],[f73])).
fof(f73,plain,(
  ? [X0,X1,X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) <~> (s('type.one.one','const.one.one_0') = s('type.one.one',X4) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))),
  inference(ennf_transformation,[],[f33])).
fof(f33,plain,(
  ~! [X0,X1,X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) <=> (s('type.one.one','const.one.one_0') = s('type.one.one',X4) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9,X10] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X6),s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X10))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))) <=> (s('type.one.one','const.one.one_0') = s('type.one.one',X10) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X6),s('type.infer_t.infer_t',X7))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9)))))) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9,X10] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X6),s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X10))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))) <=> (s('type.one.one','const.one.one_0') = s('type.one.one',X10) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',X6),s('type.infer_t.infer_t',X7))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9)))))) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9)))))),
  file('thm.infer_eComplete.infer_eComplete_25_prove_ltb','thm.infer_eComplete.infer_eComplete_25_prove_ltb')).
fof(f213,plain,(
  p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) | $spl4),
  inference(cnf_transformation,[],[f213_D])).
fof(f213_D,plain,(
  p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f119,plain,(
  p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))),
  inference(cnf_transformation,[],[f84])).
fof(f215,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl6),
  inference(cnf_transformation,[],[f215_D])).
fof(f215_D,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f120,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))),
  inference(cnf_transformation,[],[f84])).
fof(f210,plain,(
  s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl1),
  inference(cnf_transformation,[],[f210_D])).
fof(f210_D,plain,(
  s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f212,plain,(
  s('type.one.one','const.one.one_0') != s('type.one.one',sK4) | $spl3),
  inference(cnf_transformation,[],[f212_D])).
fof(f212_D,plain,(
  s('type.one.one','const.one.one_0') != s('type.one.one',sK4) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f214,plain,(
  ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) | $spl5),
  inference(cnf_transformation,[],[f214_D])).
fof(f214_D,plain,(
  ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f216,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl7),
  inference(cnf_transformation,[],[f216_D])).
fof(f216_D,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f121,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.CONS_2'(s('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) | s('type.one.one','const.one.one_0') != s('type.one.one',sK4) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',sK0),s('type.infer_t.infer_t',sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))),
  inference(cnf_transformation,[],[f84])).
% SZS output end Proof for thm.infer_eComplete
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 126
% Passive clauses: 606
% Generated clauses: 4531
% Final active clauses: 68
% Final passive clauses: 176
% Input formulas: 31
% Initial clauses: 77
% 
% Duplicate literals: 119
% Trivial inequalities: 41
% Fw subsumption resolutions: 180
% Fw demodulations: 665
% Bw demodulations: 230
% Condensations: 186
% Global subsumptions: 2
% 
% Simple tautologies: 73
% Equational tautologies: 71
% Forward subsumptions: 2442
% Fw demodulations to eq. taut.: 79
% Bw demodulations to eq. taut.: 17
% 
% Unit resulting resolution: 614
% Factoring: 1
% Forward superposition: 1029
% Backward superposition: 1081
% Self superposition: 83
% Equality factoring: 30
% Equality resolution: 16
% 
% Split clauses: 40
% Split components: 82
% SAT solver clauses: 717
% SAT solver unit clauses: 57
% SAT solver binary clauses: 265
% 
% Sat splits: 40
% Sat splitting refutations: 27
% 
% Memory used [KB]: 5500
% Time elapsed: 0.357 s
% ------------------------------
% ------------------------------
% Success in time 1.691 s
