Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.RedBlackSet
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.RedBlackSet
% SZS output start Proof for thm.RedBlackSet
fof(f356,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f349,f332,f26,f43,f39,f71,f78,f27,f41,f40])).
fof(f40,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl1),
  inference(cnf_transformation,[],[f40_D])).
fof(f40_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f41,plain,(
  ( ! [X1] : (s('type.num.num',sK0) != s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1)))) ) | $spl2),
  inference(cnf_transformation,[],[f41_D])).
fof(f41_D,plain,(
  ( ! [X1] : (s('type.num.num',sK0) != s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1)))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f27,plain,(
  ( ! [X1] : (s('type.num.num',sK0) != s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num',sK0) = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',sK1)))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ! [X1] : s('type.num.num',sK0) != s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f22])).
fof(f22,plain,(
  ? [X0] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ? [X2] : s('type.num.num',X0) = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X2)))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ! [X1] : s('type.num.num',X0) != s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1)))))),
  inference(rectify,[],[f21])).
fof(f21,plain,(
  ? [X0] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ? [X1] : s('type.num.num',X0) = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1)))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ! [X1] : s('type.num.num',X0) != s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1)))))),
  inference(nnf_transformation,[],[f17])).
fof(f17,plain,(
  ? [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <~> ? [X1] : s('type.num.num',X0) = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1))))),
  inference(ennf_transformation,[],[f10])).
fof(f10,plain,(
  ~! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ? [X1] : s('type.num.num',X0) = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ? [X7] : s('type.num.num',X6) = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ? [X7] : s('type.num.num',X6) = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X7))))),
  file('thm.RedBlackSet.color2num_ONTO','thm.RedBlackSet.color2num_ONTO')).
fof(f78,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) | $spl10),
  inference(cnf_transformation,[],[f78_D])).
fof(f78_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f71,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(resolution,[],[f34,f29])).
fof(f29,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f11])).
fof(f11,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.RedBlackSet.color2num_ONTO',aHL_FALSITY)).
fof(f34,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f18])).
fof(f18,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f14])).
fof(f14,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X8,X9] : ((p(s(bool,X8)) => p(s(bool,X9))) => ((p(s(bool,X9)) => p(s(bool,X8))) => s(bool,X8) = s(bool,X9)))),
  file('thm.RedBlackSet.color2num_ONTO','thm.bool.IMP_ANTISYM_AX')).
fof(f39,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl0),
  inference(cnf_transformation,[],[f39_D])).
fof(f39_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f43,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',sK1))) | $spl4),
  inference(cnf_transformation,[],[f43_D])).
fof(f43_D,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',sK1))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f26,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',sK1))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(cnf_transformation,[],[f23])).
fof(f332,plain,(
  $false | ($spl1 | $spl4 | $spl10)),
  inference(subsumption_resolution,[],[f331,f29])).
fof(f331,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl4 | $spl10)),
  inference(forward_demodulation,[],[f330,f99])).
fof(f99,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl1 | $spl10)),
  inference(resolution,[],[f40,f78])).
fof(f330,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl4),
  inference(forward_demodulation,[],[f329,f43])).
fof(f329,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl4),
  inference(subsumption_resolution,[],[f328,f43])).
fof(f328,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',sK1))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl4),
  inference(forward_demodulation,[],[f324,f45])).
fof(f45,plain,(
  s('type.RedBlackSet.color',sK1) = s('type.RedBlackSet.color','const.RedBlackSet.num2color_1'(s('type.num.num',sK0))) | $spl4),
  inference(superposition,[],[f30,f43])).
fof(f30,plain,(
  ( ! [X0] : (s('type.RedBlackSet.color',X0) = s('type.RedBlackSet.color','const.RedBlackSet.num2color_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X0)))))) )),
  inference(cnf_transformation,[],[f12])).
fof(f12,plain,(
  ! [X0] : s('type.RedBlackSet.color',X0) = s('type.RedBlackSet.color','const.RedBlackSet.num2color_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X0)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : s('type.RedBlackSet.color',X7) = s('type.RedBlackSet.color','const.RedBlackSet.num2color_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X7)))))),
  file('thm.RedBlackSet.color2num_ONTO','thm.RedBlackSet.color_BIJ|split|0')).
fof(f324,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.num2color_1'(s('type.num.num',sK0))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl4),
  inference(superposition,[],[f33,f43])).
fof(f33,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.num2color_1'(s('type.num.num',X0))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num',X0) = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.num2color_1'(s('type.num.num',X0)))))) & (s('type.num.num',X0) != s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.num2color_1'(s('type.num.num',X0))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(nnf_transformation,[],[f13])).
fof(f13,plain,(
  ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> s('type.num.num',X0) = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.num2color_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> s('type.num.num',X6) = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.num2color_1'(s('type.num.num',X6))))))),
  file('thm.RedBlackSet.color2num_ONTO','thm.RedBlackSet.color_BIJ|split|1')).
fof(f349,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f340,f41])).
fof(f340,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.num2color_1'(s('type.num.num',sK0))))) | $spl0),
  inference(resolution,[],[f39,f32])).
fof(f32,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num',X0) = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.num2color_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f24])).
% SZS output end Proof for thm.RedBlackSet
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 22
% Passive clauses: 66
% Generated clauses: 315
% Final active clauses: 16
% Final passive clauses: 27
% Input formulas: 8
% Initial clauses: 13
% 
% Duplicate literals: 38
% Trivial inequalities: 4
% Fw subsumption resolutions: 27
% Fw demodulations: 6
% Bw demodulations: 1
% 
% Simple tautologies: 18
% Equational tautologies: 16
% Forward subsumptions: 128
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 32
% Factoring: 1
% Forward superposition: 48
% Backward superposition: 83
% Self superposition: 25
% Equality factoring: 26
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 19
% SAT solver unit clauses: 4
% SAT solver binary clauses: 10
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 7
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 14
% TWLsolver calls for satisfiability: 9
% 
% Memory used [KB]: 767
% Time elapsed: 0.044 s
% ------------------------------
% ------------------------------
% Success in time 0.045 s
