Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.mod_to_conProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.mod_to_conProof
% SZS output start Proof for thm.mod_to_conProof
fof(f10907,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f10906,f529,f1044,f1042,f10437,f528,f1043,f1041])).
fof(f1041,plain,(
  p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),sK52),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),sK53)))) | $spl0),
  inference(cnf_transformation,[],[f1041_D])).
fof(f1041_D,plain,(
  p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),sK52),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),sK53)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f1043,plain,(
  s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),sK53) | $spl2),
  inference(cnf_transformation,[],[f1043_D])).
fof(f1043_D,plain,(
  s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),sK53) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f528,plain,(
  s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),sK53) | p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),sK52),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),sK53))))),
  inference(cnf_transformation,[],[f280])).
fof(f280,plain,(
  (p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),sK52),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),sK53)))) | s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),sK53)) & (~p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),sK52),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),sK53)))) | s('type.list.list'('type.conSem.v'),'const.list.NIL_0') != s('type.list.list'('type.conSem.v'),sK53))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK52,sK53])],[f279])).
fof(f279,plain,(
  ? [X0,X1] : ((p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),X1)))) | s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X1)) & (~p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),X1)))) | s('type.list.list'('type.conSem.v'),'const.list.NIL_0') != s('type.list.list'('type.conSem.v'),X1)))),
  inference(nnf_transformation,[],[f167])).
fof(f167,plain,(
  ? [X0,X1] : (p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),X1)))) <~> s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X1))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1] : (p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),X1)))) <=> s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X1))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X6),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),X7)))) <=> s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X7))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X6),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),X7)))) <=> s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X7))),
  file('thm.mod_to_conProof.v_rel_eqns|split|4','thm.mod_to_conProof.v_rel_eqns|split|4')).
fof(f10437,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f10436,f602])).
fof(f602,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f117])).
fof(f117,plain,(
  ! [X0] : ! [X1,X2] : ~s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X39] : ! [X14,X13] : ~s('type.list.list'(X39),'const.list.NIL_0') = s('type.list.list'(X39),'const.list.CONS_2'(s(X39,X13),s('type.list.list'(X39),X14)))),
  file('thm.mod_to_conProof.v_rel_eqns|split|4','thm.list.list_distinct')).
fof(f10436,plain,(
  s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK205('const.list.NIL_0',sK53,sK52)),s('type.list.list'('type.modSem.v'),sK206('const.list.NIL_0',sK53,sK52)))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f10435,f1044])).
fof(f10435,plain,(
  s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),sK53) | s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK205('const.list.NIL_0',sK53,sK52)),s('type.list.list'('type.modSem.v'),sK206('const.list.NIL_0',sK53,sK52)))) | $spl0),
  inference(resolution,[],[f779,f6429])).
fof(f6429,plain,(
  sP24(sK52,sK53,'const.list.NIL_0') | $spl0),
  inference(resolution,[],[f788,f1041])).
fof(f788,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X1),s('type.list.list'('type.conSem.v'),X2)))) | sP24(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f421])).
fof(f421,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X1),s('type.list.list'('type.conSem.v'),X2)))) | sP24(X0,X2,X1)) & (~sP24(X0,X2,X1) | p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X1),s('type.list.list'('type.conSem.v'),X2))))))),
  inference(nnf_transformation,[],[f244])).
fof(f244,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X1),s('type.list.list'('type.conSem.v'),X2)))) <=> sP24(X0,X2,X1))),
  inference(definition_folding,[],[f148,f243])).
fof(f243,plain,(
  ! [X0,X2,X1] : (sP24(X0,X2,X1) <=> ((s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X1) & s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X2)) | ? [X3,X4,X5,X6] : (s('type.list.list'('type.modSem.v'),X1) = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X3),s('type.list.list'('type.modSem.v'),X4))) & s('type.list.list'('type.conSem.v'),X2) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X5),s('type.list.list'('type.conSem.v'),X6))) & p(s(bool,'const.mod_to_conProof.v_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.modSem.v',X3),s('type.conSem.v',X5)))) & p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X4),s('type.list.list'('type.conSem.v'),X6)))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP24])])).
fof(f148,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X1),s('type.list.list'('type.conSem.v'),X2)))) <=> ((s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X1) & s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X2)) | ? [X3,X4,X5,X6] : (s('type.list.list'('type.modSem.v'),X1) = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X3),s('type.list.list'('type.modSem.v'),X4))) & s('type.list.list'('type.conSem.v'),X2) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X5),s('type.list.list'('type.conSem.v'),X6))) & p(s(bool,'const.mod_to_conProof.v_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.modSem.v',X3),s('type.conSem.v',X5)))) & p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X4),s('type.list.list'('type.conSem.v'),X6)))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X47,X48,X49] : (p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X47),s('type.list.list'('type.modSem.v'),X48),s('type.list.list'('type.conSem.v'),X49)))) <=> ((s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X48) & s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X49)) | ? [X33,X7,X34,X17] : (s('type.list.list'('type.modSem.v'),X48) = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X33),s('type.list.list'('type.modSem.v'),X7))) & s('type.list.list'('type.conSem.v'),X49) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X34),s('type.list.list'('type.conSem.v'),X17))) & p(s(bool,'const.mod_to_conProof.v_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X47),s('type.modSem.v',X33),s('type.conSem.v',X34)))) & p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X47),s('type.list.list'('type.modSem.v'),X7),s('type.list.list'('type.conSem.v'),X17)))))))),
  file('thm.mod_to_conProof.v_rel_eqns|split|4','thm.mod_to_conProof.v_rel_cases|split|1')).
fof(f779,plain,(
  ( ! [X2,X0,X1] : (~sP24(X0,X1,X2) | s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X1) | s('type.list.list'('type.modSem.v'),X2) = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK205(X2,X1,X0)),s('type.list.list'('type.modSem.v'),sK206(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f420])).
fof(f420,plain,(
  ! [X0,X1,X2] : ((~sP24(X0,X1,X2) | (s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X2) & s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X1)) | (s('type.list.list'('type.modSem.v'),X2) = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK205(X2,X1,X0)),s('type.list.list'('type.modSem.v'),sK206(X2,X1,X0)))) & s('type.list.list'('type.conSem.v'),X1) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK207(X2,X1,X0)),s('type.list.list'('type.conSem.v'),sK208(X2,X1,X0)))) & p(s(bool,'const.mod_to_conProof.v_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.modSem.v',sK205(X2,X1,X0)),s('type.conSem.v',sK207(X2,X1,X0))))) & p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),sK206(X2,X1,X0)),s('type.list.list'('type.conSem.v'),sK208(X2,X1,X0))))))) & (((s('type.list.list'('type.modSem.v'),'const.list.NIL_0') != s('type.list.list'('type.modSem.v'),X2) | s('type.list.list'('type.conSem.v'),'const.list.NIL_0') != s('type.list.list'('type.conSem.v'),X1)) & ! [X3,X4,X5,X6] : (s('type.list.list'('type.modSem.v'),X2) != s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X3),s('type.list.list'('type.modSem.v'),X4))) | s('type.list.list'('type.conSem.v'),X1) != s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X5),s('type.list.list'('type.conSem.v'),X6))) | ~p(s(bool,'const.mod_to_conProof.v_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.modSem.v',X3),s('type.conSem.v',X5)))) | ~p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X4),s('type.list.list'('type.conSem.v'),X6)))))) | sP24(X0,X1,X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK205,sK206,sK207,sK208])],[f419])).
fof(f419,plain,(
  ! [X0,X1,X2] : ((~sP24(X0,X1,X2) | (s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X2) & s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X1)) | ? [X7,X8,X9,X10] : (s('type.list.list'('type.modSem.v'),X2) = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X7),s('type.list.list'('type.modSem.v'),X8))) & s('type.list.list'('type.conSem.v'),X1) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X9),s('type.list.list'('type.conSem.v'),X10))) & p(s(bool,'const.mod_to_conProof.v_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.modSem.v',X7),s('type.conSem.v',X9)))) & p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X8),s('type.list.list'('type.conSem.v'),X10)))))) & (((s('type.list.list'('type.modSem.v'),'const.list.NIL_0') != s('type.list.list'('type.modSem.v'),X2) | s('type.list.list'('type.conSem.v'),'const.list.NIL_0') != s('type.list.list'('type.conSem.v'),X1)) & ! [X3,X4,X5,X6] : (s('type.list.list'('type.modSem.v'),X2) != s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X3),s('type.list.list'('type.modSem.v'),X4))) | s('type.list.list'('type.conSem.v'),X1) != s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X5),s('type.list.list'('type.conSem.v'),X6))) | ~p(s(bool,'const.mod_to_conProof.v_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.modSem.v',X3),s('type.conSem.v',X5)))) | ~p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X4),s('type.list.list'('type.conSem.v'),X6)))))) | sP24(X0,X1,X2)))),
  inference(rectify,[],[f418])).
fof(f418,plain,(
  ! [X0,X2,X1] : ((~sP24(X0,X2,X1) | (s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X1) & s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X2)) | ? [X3,X4,X5,X6] : (s('type.list.list'('type.modSem.v'),X1) = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X3),s('type.list.list'('type.modSem.v'),X4))) & s('type.list.list'('type.conSem.v'),X2) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X5),s('type.list.list'('type.conSem.v'),X6))) & p(s(bool,'const.mod_to_conProof.v_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.modSem.v',X3),s('type.conSem.v',X5)))) & p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X4),s('type.list.list'('type.conSem.v'),X6)))))) & (((s('type.list.list'('type.modSem.v'),'const.list.NIL_0') != s('type.list.list'('type.modSem.v'),X1) | s('type.list.list'('type.conSem.v'),'const.list.NIL_0') != s('type.list.list'('type.conSem.v'),X2)) & ! [X3,X4,X5,X6] : (s('type.list.list'('type.modSem.v'),X1) != s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X3),s('type.list.list'('type.modSem.v'),X4))) | s('type.list.list'('type.conSem.v'),X2) != s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X5),s('type.list.list'('type.conSem.v'),X6))) | ~p(s(bool,'const.mod_to_conProof.v_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.modSem.v',X3),s('type.conSem.v',X5)))) | ~p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X4),s('type.list.list'('type.conSem.v'),X6)))))) | sP24(X0,X2,X1)))),
  inference(flattening,[],[f417])).
fof(f417,plain,(
  ! [X0,X2,X1] : ((~sP24(X0,X2,X1) | ((s('type.list.list'('type.modSem.v'),'const.list.NIL_0') = s('type.list.list'('type.modSem.v'),X1) & s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X2)) | ? [X3,X4,X5,X6] : (s('type.list.list'('type.modSem.v'),X1) = s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X3),s('type.list.list'('type.modSem.v'),X4))) & s('type.list.list'('type.conSem.v'),X2) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X5),s('type.list.list'('type.conSem.v'),X6))) & p(s(bool,'const.mod_to_conProof.v_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.modSem.v',X3),s('type.conSem.v',X5)))) & p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X4),s('type.list.list'('type.conSem.v'),X6))))))) & (((s('type.list.list'('type.modSem.v'),'const.list.NIL_0') != s('type.list.list'('type.modSem.v'),X1) | s('type.list.list'('type.conSem.v'),'const.list.NIL_0') != s('type.list.list'('type.conSem.v'),X2)) & ! [X3,X4,X5,X6] : (s('type.list.list'('type.modSem.v'),X1) != s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X3),s('type.list.list'('type.modSem.v'),X4))) | s('type.list.list'('type.conSem.v'),X2) != s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X5),s('type.list.list'('type.conSem.v'),X6))) | ~p(s(bool,'const.mod_to_conProof.v_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.modSem.v',X3),s('type.conSem.v',X5)))) | ~p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X4),s('type.list.list'('type.conSem.v'),X6)))))) | sP24(X0,X2,X1)))),
  inference(nnf_transformation,[],[f243])).
fof(f1042,plain,(
  ~p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),sK52),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),sK53)))) | $spl1),
  inference(cnf_transformation,[],[f1042_D])).
fof(f1042_D,plain,(
  ~p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),sK52),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),sK53)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f1044,plain,(
  s('type.list.list'('type.conSem.v'),'const.list.NIL_0') != s('type.list.list'('type.conSem.v'),sK53) | $spl3),
  inference(cnf_transformation,[],[f1044_D])).
fof(f1044_D,plain,(
  s('type.list.list'('type.conSem.v'),'const.list.NIL_0') != s('type.list.list'('type.conSem.v'),sK53) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f529,plain,(
  s('type.list.list'('type.conSem.v'),'const.list.NIL_0') != s('type.list.list'('type.conSem.v'),sK53) | ~p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),sK52),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),sK53))))),
  inference(cnf_transformation,[],[f280])).
fof(f10906,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f10905,f538])).
fof(f538,plain,(
  ( ! [X0] : (p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X6),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))),
  file('thm.mod_to_conProof.v_rel_eqns|split|4','thm.mod_to_conProof.v_rel_rules|split|7')).
fof(f10905,plain,(
  ~p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),sK52),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'),s('type.list.list'('type.conSem.v'),'const.list.NIL_0')))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f1042,f1043])).
% SZS output end Proof for thm.mod_to_conProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 587
% Passive clauses: 4939
% Generated clauses: 10373
% Final active clauses: 584
% Final passive clauses: 4005
% Input formulas: 69
% Initial clauses: 506
% 
% Duplicate literals: 217
% Trivial inequalities: 39
% Fw subsumption resolutions: 645
% Fw demodulations: 109
% 
% Simple tautologies: 212
% Equational tautologies: 58
% Forward subsumptions: 4107
% 
% Binary resolution: 6810
% Factoring: 1130
% Forward superposition: 702
% Backward superposition: 115
% Self superposition: 3
% Equality factoring: 2
% Equality resolution: 31
% 
% Split clauses: 147
% Split components: 295
% SAT solver clauses: 329
% SAT solver unit clauses: 8
% SAT solver binary clauses: 58
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 147
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 327
% TWLsolver calls for satisfiability: 272
% 
% Memory used [KB]: 5117
% Time elapsed: 0.266 s
% ------------------------------
% ------------------------------
% Success in time 0.3 s
