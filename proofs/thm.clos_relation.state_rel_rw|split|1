Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_relation
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_relation
% SZS output start Proof for thm.clos_relation
fof(f5034,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f4972])).
fof(f4972,plain,(
  s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK3))),s('type.list.list'('type.closSem.v'),sK2),s('type.list.list'('type.closSem.v'),sK1))) != s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK3))),s('type.list.list'('type.closSem.v'),sK2),s('type.list.list'('type.closSem.v'),sK1)))),
  inference(superposition,[],[f69,f80])).
fof(f80,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X3))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1))) = s(bool,'const.clos_relation.ref_v_rel_4'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X3),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X2))),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X1)))))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1,X2,X3] : s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X3))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1))) = s(bool,'const.clos_relation.ref_v_rel_4'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X3),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X2))),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X1)))))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0] : ! [X1,X2,X3] : s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X3))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1))) = s(bool,'const.clos_relation.ref_v_rel_4'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X3),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X2))),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X1)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X8,X9] : s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X9))),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.closSem.v'),X7))) = s(bool,'const.clos_relation.ref_v_rel_4'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X9),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X8))),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X7)))))),
  file('thm.clos_relation.state_rel_rw|split|1','thm.clos_relation.val_rel_def|split|28')).
fof(f69,plain,(
  s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK3))),s('type.list.list'('type.closSem.v'),sK2),s('type.list.list'('type.closSem.v'),sK1))) != s(bool,'const.clos_relation.ref_v_rel_4'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK3),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),sK2))),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),sK1)))))),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK3))),s('type.list.list'('type.closSem.v'),sK2),s('type.list.list'('type.closSem.v'),sK1))) != s(bool,'const.clos_relation.ref_v_rel_4'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK3),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),sK2))),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f52])).
fof(f52,plain,(
  ? [X0,X1,X2,X3] : s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X3))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1))) != s(bool,'const.clos_relation.ref_v_rel_4'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X3),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X2))),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X1)))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3] : s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X3))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1))) = s(bool,'const.clos_relation.ref_v_rel_4'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X3),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X2))),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X1)))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2,X3] : s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X3))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1))) = s(bool,'const.clos_relation.ref_v_rel_4'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X3),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X2))),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X9))),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.closSem.v'),X7))) = s(bool,'const.clos_relation.ref_v_rel_4'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X9),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X8))),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X9))),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.closSem.v'),X7))) = s(bool,'const.clos_relation.ref_v_rel_4'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X9),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X8))),s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),X7)))))),
  file('thm.clos_relation.state_rel_rw|split|1','thm.clos_relation.state_rel_rw|split|1')).
% SZS output end Proof for thm.clos_relation
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 58
% Passive clauses: 1089
% Generated clauses: 4776
% Final active clauses: 47
% Final passive clauses: 944
% Input formulas: 21
% Initial clauses: 31
% 
% Duplicate literals: 274
% Trivial inequalities: 38
% Fw subsumption resolutions: 619
% Fw demodulations: 196
% Bw demodulations: 7
% 
% Simple tautologies: 80
% Equational tautologies: 40
% Forward subsumptions: 2072
% 
% Binary resolution: 169
% Factoring: 1
% Forward superposition: 1522
% Backward superposition: 1611
% Self superposition: 136
% Equality factoring: 102
% Equality resolution: 3
% 
% Split clauses: 232
% Split components: 464
% SAT solver clauses: 378
% SAT solver unit clauses: 4
% SAT solver binary clauses: 45
% 
% Sat splits: 232
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 378
% TWLsolver calls for satisfiability: 93
% 
% Memory used [KB]: 4093
% Time elapsed: 0.112 s
% ------------------------------
% ------------------------------
% Success in time 0.12 s
