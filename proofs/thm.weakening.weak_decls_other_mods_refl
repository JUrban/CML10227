Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.weakening
% (39857)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 133
% Passive clauses: 1683
% Generated clauses: 16551
% Final active clauses: 116
% Final passive clauses: 1288
% Input formulas: 25
% Initial clauses: 71
% 
% Duplicate literals: 718
% Trivial inequalities: 241
% Fw subsumption resolutions: 3070
% Fw demodulations: 1849
% Bw demodulations: 9
% 
% Simple tautologies: 383
% Equational tautologies: 50
% Forward subsumptions: 7129
% 
% Binary resolution: 486
% Factoring: 4
% Forward superposition: 4897
% Backward superposition: 4656
% Self superposition: 184
% Equality factoring: 132
% Equality resolution: 36
% 
% Split clauses: 751
% Split components: 1548
% SAT solver clauses: 1612
% SAT solver unit clauses: 5
% SAT solver binary clauses: 122
% 
% Sat splits: 750
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 1603
% TWLsolver calls for satisfiability: 257
% 
% Memory used [KB]: 7547
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.weakening
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.weakening
% SZS output start Proof for thm.weakening
fof(f4952,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4951,f163,f225,f4558,f4555,f117,f207,f309,f317,f283,f290,f114,f203,f157,f221,f4611,f2690,f169,f228,f168,f229,f4573,f4623,f164,f224])).
fof(f224,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK6(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1))))))) ) | $spl20),
  inference(cnf_transformation,[],[f224_D])).
fof(f224_D,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK6(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1))))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f164,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK6(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1))))))) )),
  inference(cnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | ! [X5] : (~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X2)))))) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1)))))) | ! [X6] : s('type.ast.id'('type.list.list'('type.string.char')),X5) != s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X6))))) & ((p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK6(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X2)))))) & ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK6(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1)))))) & s('type.ast.id'('type.list.list'('type.string.char')),sK6(X2,X1,X0)) = s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),sK7(X2,X1,X0))))) | sP0(X0,X1,X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6,sK7])],[f104])).
fof(f104,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | ! [X5] : (~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X2)))))) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1)))))) | ! [X6] : s('type.ast.id'('type.list.list'('type.string.char')),X5) != s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X6))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X2)))))) & ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1)))))) & ? [X4] : s('type.ast.id'('type.list.list'('type.string.char')),X3) = s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X4)))) | sP0(X0,X1,X2)))),
  inference(rectify,[],[f103])).
fof(f103,plain,(
  ! [X0,X2,X1] : ((~sP0(X0,X2,X1) | ! [X5] : (~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1)))))) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X2)))))) | ! [X6] : s('type.ast.id'('type.list.list'('type.string.char')),X5) != s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X6))))) & (? [X5] : (p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1)))))) & ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X2)))))) & ? [X6] : s('type.ast.id'('type.list.list'('type.string.char')),X5) = s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X6)))) | sP0(X0,X2,X1)))),
  inference(nnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X2,X1] : (sP0(X0,X2,X1) <=> ! [X5] : (~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1)))))) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X2)))))) | ! [X6] : s('type.ast.id'('type.list.list'('type.string.char')),X5) != s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X6)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f4623,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK6(sK2,sK2,sK1)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',sK2)))))) | $spl509),
  inference(cnf_transformation,[],[f4623_D])).
fof(f4623_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK6(sK2,sK2,sK1)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',sK2)))))) <=> ~$spl509),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl509])])).
fof(f4573,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK6(sK2,sK2,sK1)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',sK2)))))) | ($spl20 | $spl503)),
  inference(resolution,[],[f4555,f224])).
fof(f229,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK8(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) | p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2)))) | ~sP0(X0,X2,X1)) ) | $spl30),
  inference(cnf_transformation,[],[f229_D])).
fof(f229_D,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK8(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) | p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2)))) | ~sP0(X0,X2,X1)) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f168,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2)))) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK8(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) | ~sP0(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2)))) | (sP0(X0,X2,X1) & ! [X5] : (~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2)))))) | ! [X6] : s('type.ast.id'('type.list.list'('type.string.char')),X5) != s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X6)))))) & (~sP0(X0,X2,X1) | (p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK8(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) & ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK8(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2)))))) & s('type.ast.id'('type.list.list'('type.string.char')),sK8(X2,X1,X0)) = s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),sK9(X2,X1,X0))))) | p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8,sK9])],[f108])).
fof(f108,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2)))) | (sP0(X0,X2,X1) & ! [X5] : (~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2)))))) | ! [X6] : s('type.ast.id'('type.list.list'('type.string.char')),X5) != s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X6)))))) & (~sP0(X0,X2,X1) | ? [X3] : (p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) & ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2)))))) & ? [X4] : s('type.ast.id'('type.list.list'('type.string.char')),X3) = s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X4)))) | p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2))))))),
  inference(rectify,[],[f107])).
fof(f107,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2)))) | (sP0(X0,X2,X1) & ! [X3] : (~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2)))))) | ! [X4] : s('type.ast.id'('type.list.list'('type.string.char')),X3) != s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X4)))))) & (~sP0(X0,X2,X1) | ? [X3] : (p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) & ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2)))))) & ? [X4] : s('type.ast.id'('type.list.list'('type.string.char')),X3) = s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X4)))) | p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2))))))),
  inference(flattening,[],[f106])).
fof(f106,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2)))) | (sP0(X0,X2,X1) & ! [X3] : (~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2)))))) | ! [X4] : s('type.ast.id'('type.list.list'('type.string.char')),X3) != s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X4)))))) & ((~sP0(X0,X2,X1) | ? [X3] : (p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) & ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2)))))) & ? [X4] : s('type.ast.id'('type.list.list'('type.string.char')),X3) = s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X4))))) | p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2))))))),
  inference(nnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2)))) <=> (sP0(X0,X2,X1) & ! [X3] : (~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2)))))) | ! [X4] : s('type.ast.id'('type.list.list'('type.string.char')),X3) != s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X4))))))),
  inference(definition_folding,[],[f68,f73])).
fof(f68,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2)))) <=> (! [X5] : (~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1)))))) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X2)))))) | ! [X6] : s('type.ast.id'('type.list.list'('type.string.char')),X5) != s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X6)))) & ! [X3] : (~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2)))))) | ! [X4] : s('type.ast.id'('type.list.list'('type.string.char')),X3) != s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X4))))))),
  inference(flattening,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2)))) <=> (! [X5] : ((~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1)))))) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X2))))))) | ! [X6] : s('type.ast.id'('type.list.list'('type.string.char')),X5) != s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X6)))) & ! [X3] : ((~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2))))))) | ! [X4] : s('type.ast.id'('type.list.list'('type.string.char')),X3) != s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X4))))))),
  inference(ennf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2)))) <=> (! [X5] : ((p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1)))))) & ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X2))))))) => ~? [X6] : s('type.ast.id'('type.list.list'('type.string.char')),X5) = s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X6)))) & ! [X3] : ((p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) & ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2))))))) => ~? [X4] : s('type.ast.id'('type.list.list'('type.string.char')),X3) = s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X4))))))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2)))) <=> (! [X5] : ((p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1)))))) & ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X2))))))) => ~? [X6] : s('type.ast.id'('type.list.list'('type.string.char')),X5) = s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X6)))) & ! [X3] : ((p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1)))))) & ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X3),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2))))))) => ~? [X4] : s('type.ast.id'('type.list.list'('type.string.char')),X3) = s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.list.list'('type.string.char'),X4))))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6,X18,X19] : (p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X6),s('type.typeSystem.decls',X18),s('type.typeSystem.decls',X19)))) <=> (! [X20] : ((p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X20),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X18)))))) & ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X20),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X19))))))) => ~? [X21] : s('type.ast.id'('type.list.list'('type.string.char')),X20) = s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X6),s('type.list.list'('type.string.char'),X21)))) & ! [X22] : ((p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X22),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X18)))))) & ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),X22),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X19))))))) => ~? [X23] : s('type.ast.id'('type.list.list'('type.string.char')),X22) = s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.mk_id_2'(s('type.option.option'('type.list.list'('type.string.char')),X6),s('type.list.list'('type.string.char'),X23))))))),
  file('thm.weakening.weak_decls_other_mods_refl','thm.weakening.weak_decls_other_mods_def')).
fof(f228,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK8(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2)))))) | p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2)))) | ~sP0(X0,X2,X1)) ) | $spl28),
  inference(cnf_transformation,[],[f228_D])).
fof(f228_D,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK8(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2)))))) | p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2)))) | ~sP0(X0,X2,X1)) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f169,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X2)))) | ~p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK8(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X2)))))) | ~sP0(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f109])).
fof(f2690,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X1)))) | ~sP0(X0,X1,X1)) ) | $spl376),
  inference(cnf_transformation,[],[f2690_D])).
fof(f2690_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X1)))) | ~sP0(X0,X1,X1)) ) <=> ~$spl376),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl376])])).
fof(f4611,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X1)))) | ~sP0(X0,X1,X1)) ) | ($spl28 | $spl30)),
  inference(duplicate_literal_removal,[],[f4583])).
fof(f4583,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X1)))) | ~sP0(X0,X1,X1) | p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X1)))) | ~sP0(X0,X1,X1)) ) | ($spl28 | $spl30)),
  inference(resolution,[],[f229,f228])).
fof(f221,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1)) ) | $spl14),
  inference(cnf_transformation,[],[f221_D])).
fof(f221_D,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f157,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X8,X9] : ((p(s(bool,X8)) => p(s(bool,X9))) => ((p(s(bool,X9)) => p(s(bool,X8))) => s(bool,X8) = s(bool,X9)))),
  file('thm.weakening.weak_decls_other_mods_refl','thm.bool.IMP_ANTISYM_AX')).
fof(f203,plain,(
  ~p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),sK1),s('type.typeSystem.decls',sK2),s('type.typeSystem.decls',sK2)))) | $spl1),
  inference(cnf_transformation,[],[f203_D])).
fof(f203_D,plain,(
  ~p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),sK1),s('type.typeSystem.decls',sK2),s('type.typeSystem.decls',sK2)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f114,plain,(
  ~p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),sK1),s('type.typeSystem.decls',sK2),s('type.typeSystem.decls',sK2))))),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ~p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),sK1),s('type.typeSystem.decls',sK2),s('type.typeSystem.decls',sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2])],[f55])).
fof(f55,plain,(
  ? [X0,X1] : ~p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X1))))),
  inference(ennf_transformation,[],[f27])).
fof(f27,plain,(
  ~! [X0,X1] : p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X0),s('type.typeSystem.decls',X1),s('type.typeSystem.decls',X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X6),s('type.typeSystem.decls',X7),s('type.typeSystem.decls',X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : p(s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),X6),s('type.typeSystem.decls',X7),s('type.typeSystem.decls',X7))))),
  file('thm.weakening.weak_decls_other_mods_refl','thm.weakening.weak_decls_other_mods_refl')).
fof(f290,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),sK1),s('type.typeSystem.decls',sK2),s('type.typeSystem.decls',sK2)))) ) | $spl54),
  inference(cnf_transformation,[],[f290_D])).
fof(f290_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),sK1),s('type.typeSystem.decls',sK2),s('type.typeSystem.decls',sK2)))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f283,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),sK1),s('type.typeSystem.decls',sK2),s('type.typeSystem.decls',sK2)))) ) | ($spl1 | $spl14)),
  inference(resolution,[],[f221,f203])).
fof(f317,plain,(
  s(bool,'F_0') = s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),sK1),s('type.typeSystem.decls',sK2),s('type.typeSystem.decls',sK2))) | $spl70),
  inference(cnf_transformation,[],[f317_D])).
fof(f317_D,plain,(
  s(bool,'F_0') = s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),sK1),s('type.typeSystem.decls',sK2),s('type.typeSystem.decls',sK2))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f309,plain,(
  s(bool,'F_0') = s(bool,'const.weakening.weak_decls_other_mods_3'(s('type.option.option'('type.list.list'('type.string.char')),sK1),s('type.typeSystem.decls',sK2),s('type.typeSystem.decls',sK2))) | ($spl5 | $spl54)),
  inference(resolution,[],[f290,f207])).
fof(f207,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f207_D])).
fof(f207_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f117,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.weakening.weak_decls_other_mods_refl',aHL_FALSITY)).
fof(f4555,plain,(
  ~sP0(sK1,sK2,sK2) | $spl503),
  inference(cnf_transformation,[],[f4555_D])).
fof(f4555_D,plain,(
  ~sP0(sK1,sK2,sK2) <=> ~$spl503),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl503])])).
fof(f4558,plain,(
  ~sP0(sK1,sK2,sK2) | ($spl5 | $spl70 | $spl376)),
  inference(subsumption_resolution,[],[f4526,f207])).
fof(f4526,plain,(
  p(s(bool,'F_0')) | ~sP0(sK1,sK2,sK2) | ($spl70 | $spl376)),
  inference(superposition,[],[f2690,f317])).
fof(f225,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK6(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X2))))))) ) | $spl22),
  inference(cnf_transformation,[],[f225_D])).
fof(f225_D,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK6(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X2))))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f163,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK6(X2,X1,X0)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X2))))))) )),
  inference(cnf_transformation,[],[f105])).
fof(f4951,plain,(
  $false | ($spl22 | $spl503 | $spl509)),
  inference(subsumption_resolution,[],[f4949,f4623])).
fof(f4949,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK6(sK2,sK2,sK1)),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',sK2)))))) | ($spl22 | $spl503)),
  inference(resolution,[],[f225,f4555])).
% SZS output end Proof for thm.weakening
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 74
% Passive clauses: 297
% Generated clauses: 4912
% Final active clauses: 54
% Final passive clauses: 164
% Input formulas: 25
% Initial clauses: 71
% 
% Duplicate literals: 464
% Trivial inequalities: 68
% Fw subsumption resolutions: 450
% Fw demodulations: 177
% Bw demodulations: 59
% Condensations: 753
% Global subsumptions: 9
% 
% Simple tautologies: 130
% Equational tautologies: 35
% Forward subsumptions: 1981
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 219
% Factoring: 1
% Forward superposition: 1199
% Backward superposition: 780
% Self superposition: 108
% Equality factoring: 96
% Equality resolution: 16
% 
% Split clauses: 165
% Split components: 335
% SAT solver clauses: 650
% SAT solver unit clauses: 74
% SAT solver binary clauses: 35
% SAT solver learnt clauses: 20
% SAT solver learnt literals: 1
% 
% Sat splits: 165
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 612
% TWLsolver calls for satisfiability: 360
% 
% Memory used [KB]: 4093
% Time elapsed: 0.501 s
% ------------------------------
% ------------------------------
% Success in time 1.11 s
