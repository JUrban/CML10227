Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.labSem
% (134179)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 172
% Passive clauses: 3873
% Generated clauses: 23306
% Final active clauses: 169
% Final passive clauses: 3568
% Input formulas: 69
% Initial clauses: 131
% 
% Duplicate literals: 715
% Trivial inequalities: 439
% Fw subsumption resolutions: 2059
% Fw demodulations: 2737
% Bw demodulations: 1
% 
% Simple tautologies: 412
% Equational tautologies: 50
% Forward subsumptions: 12087
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 537
% Factoring: 2
% Forward superposition: 9001
% Backward superposition: 7328
% Self superposition: 156
% Equality factoring: 68
% Equality resolution: 40
% 
% Split clauses: 264
% Split components: 538
% SAT solver clauses: 566
% SAT solver unit clauses: 23
% SAT solver binary clauses: 110
% 
% Sat splits: 264
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 566
% TWLsolver calls for satisfiability: 148
% 
% Memory used [KB]: 15607
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.labSem
% (134203)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit

% Active clauses: 109
% Passive clauses: 1021
% Generated clauses: 13743
% Final active clauses: 101
% Final passive clauses: 876
% Input formulas: 69
% Initial clauses: 131
% 
% Duplicate literals: 514
% Trivial inequalities: 162
% Fw subsumption resolutions: 810
% Fw demodulations: 1393
% Bw demodulations: 35
% Condensations: 1074
% Global subsumptions: 4
% 
% Simple tautologies: 172
% Equational tautologies: 50
% Forward subsumptions: 6821
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 116
% Factoring: 1
% Forward superposition: 4207
% Backward superposition: 4090
% Self superposition: 144
% Equality factoring: 76
% Equality resolution: 29
% 
% Split clauses: 40
% Split components: 80
% SAT solver clauses: 1845
% SAT solver unit clauses: 177
% SAT solver binary clauses: 88
% SAT solver learnt clauses: 8
% 
% Sat splits: 40
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1829
% TWLsolver calls for satisfiability: 1598
% 
% Memory used [KB]: 17398
% Time elapsed: 0.713 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.labSem
% (134236)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 281
% Passive clauses: 4780
% Generated clauses: 68059
% Final active clauses: 132
% Final passive clauses: 1652
% Input formulas: 69
% Initial clauses: 131
% Discarded non-redundant clauses: 2482
% 
% Duplicate literals: 1234
% Trivial inequalities: 461
% Fw subsumption resolutions: 1517
% Fw demodulations: 7179
% Bw demodulations: 2504
% Condensations: 3197
% Global subsumptions: 311
% 
% Simple tautologies: 363
% Equational tautologies: 412
% Forward subsumptions: 46982
% Fw demodulations to eq. taut.: 648
% Bw demodulations to eq. taut.: 112
% 
% Unit resulting resolution: 5294
% Factoring: 1
% Forward superposition: 29004
% Backward superposition: 14231
% Self superposition: 233
% Equality factoring: 75
% Equality resolution: 56
% 
% Split clauses: 33
% Split components: 66
% SAT solver clauses: 5552
% SAT solver unit clauses: 360
% SAT solver binary clauses: 1486
% 
% Sat splits: 33
% Sat splitting refutations: 393
% 
% Memory used [KB]: 129848
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.labSem
% Refutation not found, incomplete strategy
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation not found, incomplete strategy

% Active clauses: 20
% Passive clauses: 1
% Generated clauses: 94
% Final active clauses: 20
% Input formulas: 69
% Initial clauses: 27
% 
% Selected by SInE selection: 6
% SInE iterations: 1
% 
% Duplicate literals: 1
% 
% Simple tautologies: 7
% Forward subsumptions: 93
% 
% Forward superposition: 93
% 
% SAT solver clauses: 1
% 
% Memory used [KB]: 1279
% Time elapsed: 0.010 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.labSem
% (134709)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 109
% Passive clauses: 1252
% Generated clauses: 18526
% Final active clauses: 108
% Final passive clauses: 1131
% Input formulas: 69
% Initial clauses: 131
% 
% Duplicate literals: 312
% Trivial inequalities: 214
% Fw subsumption resolutions: 685
% Fw demodulations: 2636
% Bw demodulations: 12
% Global subsumptions: 1
% 
% Simple tautologies: 288
% Equational tautologies: 64
% Forward subsumptions: 12721
% Fw demodulations to eq. taut.: 234
% 
% Unit resulting resolution: 1475
% Forward superposition: 8864
% Backward superposition: 4000
% Self superposition: 164
% Equality factoring: 22
% Equality resolution: 9
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 1256
% SAT solver unit clauses: 81
% SAT solver binary clauses: 362
% 
% Sat splits: 1
% 
% Memory used [KB]: 22259
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 25 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.labSem
% (134740)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 136
% Passive clauses: 178
% Generated clauses: 13019
% Final active clauses: 136
% Final passive clauses: 156
% Input formulas: 69
% Initial clauses: 131
% 
% Duplicate literals: 1
% Trivial inequalities: 1
% Fw demodulations: 974
% Condensations: 160
% 
% Simple tautologies: 15
% Equational tautologies: 1
% Forward subsumptions: 11707
% 
% Forward superposition: 12345
% Equality resolution: 1
% 
% SAT solver clauses: 180
% SAT solver unit clauses: 81
% SAT solver binary clauses: 1
% 
% Memory used [KB]: 27121
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 8 next slice time: 8
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.labSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.labSem
% SZS output start Proof for thm.labSem
fof(f387,plain,(
  $false),
  inference(unit_resulting_resolution,[],[f316,f313,f319,f318,f317,f315,f314,f321,f322,f323,f324,f325,f326,f231,f312])).
fof(f312,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X2))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.labSem.state'(X0,X1),X2) = s('type.labSem.state'(X0,X1),X3) | s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X2))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f226])).
fof(f226,plain,(
  ! [X0,X1,X2,X3] : ((s('type.labSem.state'(X0,X1),X2) != s('type.labSem.state'(X0,X1),X3) | (s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X3))))) & (s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X3))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X2))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X3))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X2))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.labSem.state'(X0,X1),X2) = s('type.labSem.state'(X0,X1),X3)))),
  inference(flattening,[],[f225])).
fof(f225,plain,(
  ! [X0,X1,X2,X3] : ((s('type.labSem.state'(X0,X1),X2) != s('type.labSem.state'(X0,X1),X3) | (s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X3))))) & ((s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X3))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X2))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X3))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X2))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X3)))) | s('type.labSem.state'(X0,X1),X2) = s('type.labSem.state'(X0,X1),X3)))),
  inference(nnf_transformation,[],[f122])).
fof(f122,plain,(
  ! [X0,X1,X2,X3] : (s('type.labSem.state'(X0,X1),X2) = s('type.labSem.state'(X0,X1),X3) <=> (s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X3)))))),
  inference(flattening,[],[f121])).
fof(f121,plain,(
  ! [X0,X1] : ! [X2,X3] : (s('type.labSem.state'(X0,X1),X2) = s('type.labSem.state'(X0,X1),X3) <=> (s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X3)))))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X7,X6] : ! [X46,X45] : (s('type.labSem.state'(X7,X6),X45) = s('type.labSem.state'(X7,X6),X46) <=> (s(fun('type.num.num','type.wordSem.word_loc'(X7)),'const.labSem.state_regs_1'(s('type.labSem.state'(X7,X6),X45))) = s(fun('type.num.num','type.wordSem.word_loc'(X7)),'const.labSem.state_regs_1'(s('type.labSem.state'(X7,X6),X46))) & s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'const.labSem.state_mem_1'(s('type.labSem.state'(X7,X6),X45))) = s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'const.labSem.state_mem_1'(s('type.labSem.state'(X7,X6),X46))) & s(fun('type.fcp.cart'(bool,X7),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X7,X6),X45))) = s(fun('type.fcp.cart'(bool,X7),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X7,X6),X46))) & s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X7,X6),X45))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X7,X6),X46))) & s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X7,X6),X45))) = s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X7,X6),X46))) & s('type.ffi.ffi_state'(X6),'const.labSem.state_ffi_1'(s('type.labSem.state'(X7,X6),X45))) = s('type.ffi.ffi_state'(X6),'const.labSem.state_ffi_1'(s('type.labSem.state'(X7,X6),X46))) & s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X7,X6),X45))) = s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X7,X6),X46))) & s('type.list.list'('type.labLang.sec'(X7)),'const.labSem.state_code_1'(s('type.labSem.state'(X7,X6),X45))) = s('type.list.list'('type.labLang.sec'(X7)),'const.labSem.state_code_1'(s('type.labSem.state'(X7,X6),X46))) & s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X7,X6),X45))) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X7,X6),X46))) & s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X7,X6),X45))) = s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X7,X6),X46))) & s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X7,X6),X45))) = s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X7,X6),X46))) & s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X7,X6),X45))) = s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X7,X6),X46))) & s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X7,X6),X45))) = s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X7,X6),X46)))))),
  file('thm.labSem.state_nchotomy','thm.labSem.state_component_equality')).
fof(f231,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X7,X5,X3,X15,X13,X11,X9] : (s('type.labSem.state'(sK1,sK0),sK2) != s('type.labSem.state'(sK1,sK0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(sK1)),X3),s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),X4),s(fun('type.fcp.cart'(bool,sK1),bool),X5),s('type.num.num',X6),s(bool,X7),s('type.ffi.ffi_state'(sK0),X8),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),X9),s('type.list.list'('type.labLang.sec'(sK1)),X10),s('type.num.num',X11),s(bool,X12),s('type.num.num',X13),s('type.num.num',X14),s('type.num.num',X15)))) )),
  inference(cnf_transformation,[],[f200])).
fof(f200,plain,(
  ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.labSem.state'(sK1,sK0),sK2) != s('type.labSem.state'(sK1,sK0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(sK1)),X3),s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),X4),s(fun('type.fcp.cart'(bool,sK1),bool),X5),s('type.num.num',X6),s(bool,X7),s('type.ffi.ffi_state'(sK0),X8),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK1)))),X9),s('type.list.list'('type.labLang.sec'(sK1)),X10),s('type.num.num',X11),s(bool,X12),s('type.num.num',X13),s('type.num.num',X14),s('type.num.num',X15)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f193])).
fof(f193,plain,(
  ? [X0,X1,X2] : ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.labSem.state'(X1,X0),X2) != s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),bool),X5),s('type.num.num',X6),s(bool,X7),s('type.ffi.ffi_state'(X0),X8),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X9),s('type.list.list'('type.labLang.sec'(X1)),X10),s('type.num.num',X11),s(bool,X12),s('type.num.num',X13),s('type.num.num',X14),s('type.num.num',X15)))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2] : ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.labSem.state'(X1,X0),X2) = s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),bool),X5),s('type.num.num',X6),s(bool,X7),s('type.ffi.ffi_state'(X0),X8),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X9),s('type.list.list'('type.labLang.sec'(X1)),X10),s('type.num.num',X11),s(bool,X12),s('type.num.num',X13),s('type.num.num',X14),s('type.num.num',X15)))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1] : ! [X2] : ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.labSem.state'(X1,X0),X2) = s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),bool),X5),s('type.num.num',X6),s(bool,X7),s('type.ffi.ffi_state'(X0),X8),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X9),s('type.list.list'('type.labLang.sec'(X1)),X10),s('type.num.num',X11),s(bool,X12),s('type.num.num',X13),s('type.num.num',X14),s('type.num.num',X15)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s('type.labSem.state'(X7,X6),X8) = s('type.labSem.state'(X7,X6),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),bool),X11),s('type.num.num',X12),s(bool,X13),s('type.ffi.ffi_state'(X6),X14),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15),s('type.list.list'('type.labLang.sec'(X7)),X16),s('type.num.num',X17),s(bool,X18),s('type.num.num',X19),s('type.num.num',X20),s('type.num.num',X21)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s('type.labSem.state'(X7,X6),X8) = s('type.labSem.state'(X7,X6),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),bool),X11),s('type.num.num',X12),s(bool,X13),s('type.ffi.ffi_state'(X6),X14),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15),s('type.list.list'('type.labLang.sec'(X7)),X16),s('type.num.num',X17),s(bool,X18),s('type.num.num',X19),s('type.num.num',X20),s('type.num.num',X21)))),
  file('thm.labSem.state_nchotomy','thm.labSem.state_nchotomy')).
fof(f326,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8) = s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))) )),
  inference(cnf_transformation,[],[f150])).
fof(f150,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8) = s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(flattening,[],[f149])).
fof(f149,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8) = s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X6,X7] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15) = s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X7,X6),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),bool),X11),s('type.num.num',X12),s(bool,X13),s('type.ffi.ffi_state'(X6),X14),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15),s('type.list.list'('type.labLang.sec'(X7)),X16),s('type.num.num',X17),s(bool,X18),s('type.num.num',X19),s('type.num.num',X20),s('type.num.num',X21)))))),
  file('thm.labSem.state_nchotomy','thm.labSem.state_io_regs')).
fof(f325,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3) = s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'const.labSem.state_mem_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))) )),
  inference(cnf_transformation,[],[f148])).
fof(f148,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3) = s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'const.labSem.state_mem_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(flattening,[],[f147])).
fof(f147,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3) = s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'const.labSem.state_mem_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X6,X7] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10) = s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'const.labSem.state_mem_1'(s('type.labSem.state'(X7,X6),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),bool),X11),s('type.num.num',X12),s(bool,X13),s('type.ffi.ffi_state'(X6),X14),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15),s('type.list.list'('type.labLang.sec'(X7)),X16),s('type.num.num',X17),s(bool,X18),s('type.num.num',X19),s('type.num.num',X20),s('type.num.num',X21)))))),
  file('thm.labSem.state_nchotomy','thm.labSem.state_mem')).
fof(f324,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s(fun('type.fcp.cart'(bool,X1),bool),X4) = s(fun('type.fcp.cart'(bool,X1),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))) )),
  inference(cnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.fcp.cart'(bool,X1),bool),X4) = s(fun('type.fcp.cart'(bool,X1),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(flattening,[],[f145])).
fof(f145,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.fcp.cart'(bool,X1),bool),X4) = s(fun('type.fcp.cart'(bool,X1),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6,X7] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s(fun('type.fcp.cart'(bool,X7),bool),X11) = s(fun('type.fcp.cart'(bool,X7),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X7,X6),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),bool),X11),s('type.num.num',X12),s(bool,X13),s('type.ffi.ffi_state'(X6),X14),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15),s('type.list.list'('type.labLang.sec'(X7)),X16),s('type.num.num',X17),s(bool,X18),s('type.num.num',X19),s('type.num.num',X20),s('type.num.num',X21)))))),
  file('thm.labSem.state_nchotomy','thm.labSem.state_mem_domain')).
fof(f323,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2) = s(fun('type.num.num','type.wordSem.word_loc'(X1)),'const.labSem.state_regs_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))) )),
  inference(cnf_transformation,[],[f144])).
fof(f144,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2) = s(fun('type.num.num','type.wordSem.word_loc'(X1)),'const.labSem.state_regs_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(flattening,[],[f143])).
fof(f143,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2) = s(fun('type.num.num','type.wordSem.word_loc'(X1)),'const.labSem.state_regs_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6,X7] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9) = s(fun('type.num.num','type.wordSem.word_loc'(X7)),'const.labSem.state_regs_1'(s('type.labSem.state'(X7,X6),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),bool),X11),s('type.num.num',X12),s(bool,X13),s('type.ffi.ffi_state'(X6),X14),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15),s('type.list.list'('type.labLang.sec'(X7)),X16),s('type.num.num',X17),s(bool,X18),s('type.num.num',X19),s('type.num.num',X20),s('type.num.num',X21)))))),
  file('thm.labSem.state_nchotomy','thm.labSem.state_regs')).
fof(f322,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'('type.labLang.sec'(X1)),X9) = s('type.list.list'('type.labLang.sec'(X1)),'const.labSem.state_code_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))) )),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'('type.labLang.sec'(X1)),X9) = s('type.list.list'('type.labLang.sec'(X1)),'const.labSem.state_code_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(flattening,[],[f141])).
fof(f141,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'('type.labLang.sec'(X1)),X9) = s('type.list.list'('type.labLang.sec'(X1)),'const.labSem.state_code_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X6,X7] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s('type.list.list'('type.labLang.sec'(X7)),X16) = s('type.list.list'('type.labLang.sec'(X7)),'const.labSem.state_code_1'(s('type.labSem.state'(X7,X6),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),bool),X11),s('type.num.num',X12),s(bool,X13),s('type.ffi.ffi_state'(X6),X14),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15),s('type.list.list'('type.labLang.sec'(X7)),X16),s('type.num.num',X17),s(bool,X18),s('type.num.num',X19),s('type.num.num',X20),s('type.num.num',X21)))))),
  file('thm.labSem.state_nchotomy','thm.labSem.state_code')).
fof(f321,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.ffi.ffi_state'(X1),X7) = s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X0)),X2),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X1),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),X8),s('type.list.list'('type.labLang.sec'(X0)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))) )),
  inference(cnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.ffi.ffi_state'(X1),X7) = s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X0)),X2),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X1),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),X8),s('type.list.list'('type.labLang.sec'(X0)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(flattening,[],[f139])).
fof(f139,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.ffi.ffi_state'(X1),X7) = s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X0)),X2),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X1),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),X8),s('type.list.list'('type.labLang.sec'(X0)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X7,X6] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s('type.ffi.ffi_state'(X6),X14) = s('type.ffi.ffi_state'(X6),'const.labSem.state_ffi_1'(s('type.labSem.state'(X7,X6),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),bool),X11),s('type.num.num',X12),s(bool,X13),s('type.ffi.ffi_state'(X6),X14),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15),s('type.list.list'('type.labLang.sec'(X7)),X16),s('type.num.num',X17),s(bool,X18),s('type.num.num',X19),s('type.num.num',X20),s('type.num.num',X21)))))),
  file('thm.labSem.state_nchotomy','thm.labSem.state_ffi')).
fof(f314,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num',X14) = s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))) )),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X14) = s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(flattening,[],[f125])).
fof(f125,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X14) = s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X6,X7] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s('type.num.num',X21) = s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X7,X6),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),bool),X11),s('type.num.num',X12),s(bool,X13),s('type.ffi.ffi_state'(X6),X14),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15),s('type.list.list'('type.labLang.sec'(X7)),X16),s('type.num.num',X17),s(bool,X18),s('type.num.num',X19),s('type.num.num',X20),s('type.num.num',X21)))))),
  file('thm.labSem.state_nchotomy','thm.labSem.state_link_reg')).
fof(f315,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num',X10) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))) )),
  inference(cnf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X10) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(flattening,[],[f127])).
fof(f127,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X10) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X6,X7] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s('type.num.num',X17) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X7,X6),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),bool),X11),s('type.num.num',X12),s(bool,X13),s('type.ffi.ffi_state'(X6),X14),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15),s('type.list.list'('type.labLang.sec'(X7)),X16),s('type.num.num',X17),s(bool,X18),s('type.num.num',X19),s('type.num.num',X20),s('type.num.num',X21)))))),
  file('thm.labSem.state_nchotomy','thm.labSem.state_clock')).
fof(f317,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s(bool,X6) = s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))) )),
  inference(cnf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(bool,X6) = s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(flattening,[],[f131])).
fof(f131,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(bool,X6) = s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X6,X7] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s(bool,X13) = s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X7,X6),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),bool),X11),s('type.num.num',X12),s(bool,X13),s('type.ffi.ffi_state'(X6),X14),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15),s('type.list.list'('type.labLang.sec'(X7)),X16),s('type.num.num',X17),s(bool,X18),s('type.num.num',X19),s('type.num.num',X20),s('type.num.num',X21)))))),
  file('thm.labSem.state_nchotomy','thm.labSem.state_be')).
fof(f318,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num',X5) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))) )),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X5) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(flattening,[],[f133])).
fof(f133,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X5) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X6,X7] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s('type.num.num',X12) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X7,X6),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),bool),X11),s('type.num.num',X12),s(bool,X13),s('type.ffi.ffi_state'(X6),X14),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15),s('type.list.list'('type.labLang.sec'(X7)),X16),s('type.num.num',X17),s(bool,X18),s('type.num.num',X19),s('type.num.num',X20),s('type.num.num',X21)))))),
  file('thm.labSem.state_nchotomy','thm.labSem.state_pc')).
fof(f319,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num',X12) = s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))) )),
  inference(cnf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X12) = s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X12) = s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X6,X7] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s('type.num.num',X19) = s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X7,X6),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),bool),X11),s('type.num.num',X12),s(bool,X13),s('type.ffi.ffi_state'(X6),X14),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15),s('type.list.list'('type.labLang.sec'(X7)),X16),s('type.num.num',X17),s(bool,X18),s('type.num.num',X19),s('type.num.num',X20),s('type.num.num',X21)))))),
  file('thm.labSem.state_nchotomy','thm.labSem.state_ptr_reg')).
fof(f313,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num',X13) = s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))) )),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X13) = s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(flattening,[],[f123])).
fof(f123,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.num.num',X13) = s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X6,X7] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s('type.num.num',X20) = s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X7,X6),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),bool),X11),s('type.num.num',X12),s(bool,X13),s('type.ffi.ffi_state'(X6),X14),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15),s('type.list.list'('type.labLang.sec'(X7)),X16),s('type.num.num',X17),s(bool,X18),s('type.num.num',X19),s('type.num.num',X20),s('type.num.num',X21)))))),
  file('thm.labSem.state_nchotomy','thm.labSem.state_len_reg')).
fof(f316,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s(bool,X11) = s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))) )),
  inference(cnf_transformation,[],[f130])).
fof(f130,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(bool,X11) = s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(flattening,[],[f129])).
fof(f129,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s(bool,X11) = s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X1,X0),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X1)),X2),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X3),s(fun('type.fcp.cart'(bool,X1),bool),X4),s('type.num.num',X5),s(bool,X6),s('type.ffi.ffi_state'(X0),X7),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X1)))),X8),s('type.list.list'('type.labLang.sec'(X1)),X9),s('type.num.num',X10),s(bool,X11),s('type.num.num',X12),s('type.num.num',X13),s('type.num.num',X14)))))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X6,X7] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s(bool,X18) = s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X7,X6),'const.labSem.recordtype|46|state_13'(s(fun('type.num.num','type.wordSem.word_loc'(X7)),X9),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),bool),X11),s('type.num.num',X12),s(bool,X13),s('type.ffi.ffi_state'(X6),X14),s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X7)))),X15),s('type.list.list'('type.labLang.sec'(X7)),X16),s('type.num.num',X17),s(bool,X18),s('type.num.num',X19),s('type.num.num',X20),s('type.num.num',X21)))))),
  file('thm.labSem.state_nchotomy','thm.labSem.state_failed')).
% SZS output end Proof for thm.labSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 115
% Passive clauses: 1
% Generated clauses: 245
% Final active clauses: 115
% Input formulas: 69
% Initial clauses: 131
% 
% Duplicate literals: 1
% Trivial inequalities: 1
% 
% Simple tautologies: 15
% Equational tautologies: 1
% 
% Unit resulting resolution: 113
% Forward superposition: 220
% 
% SAT solver clauses: 3
% SAT solver unit clauses: 1
% 
% Memory used [KB]: 3454
% Time elapsed: 0.081 s
% ------------------------------
% ------------------------------
% Success in time 14.191 s
