Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvlSem
% (124360)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 270
% Passive clauses: 5612
% Generated clauses: 33075
% Final active clauses: 204
% Final passive clauses: 4997
% Input formulas: 132
% Initial clauses: 183
% 
% Duplicate literals: 208
% Trivial inequalities: 767
% Fw subsumption resolutions: 3448
% Fw demodulations: 6554
% Bw demodulations: 58
% 
% Simple tautologies: 164
% Equational tautologies: 25
% Forward subsumptions: 16163
% Bw demodulations to eq. taut.: 4
% 
% Binary resolution: 1282
% Factoring: 1
% Forward superposition: 9786
% Backward superposition: 10525
% Self superposition: 95
% Equality factoring: 28
% Equality resolution: 29
% 
% Split clauses: 123
% Split components: 246
% SAT solver clauses: 394
% SAT solver unit clauses: 4
% SAT solver binary clauses: 69
% 
% Sat splits: 123
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 392
% TWLsolver calls for satisfiability: 110
% 
% Memory used [KB]: 16502
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.bvlSem
% (124379)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 185
% Passive clauses: 2003
% Generated clauses: 21038
% Final active clauses: 176
% Final passive clauses: 1638
% Input formulas: 132
% Initial clauses: 183
% 
% Duplicate literals: 96
% Trivial inequalities: 598
% Fw subsumption resolutions: 1152
% Fw demodulations: 3177
% Bw demodulations: 187
% Condensations: 162
% Global subsumptions: 4
% 
% Simple tautologies: 90
% Equational tautologies: 18
% Forward subsumptions: 11228
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 541
% Factoring: 2
% Forward superposition: 5888
% Backward superposition: 6888
% Self superposition: 75
% Equality factoring: 16
% Equality resolution: 26
% 
% Split clauses: 31
% Split components: 62
% SAT solver clauses: 2536
% SAT solver unit clauses: 280
% SAT solver binary clauses: 54
% SAT solver learnt clauses: 8
% 
% Sat splits: 31
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 2520
% TWLsolver calls for satisfiability: 851
% 
% Memory used [KB]: 20212
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.bvlSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvlSem
% SZS output start Proof for thm.bvlSem
fof(f70780,plain,(
  $false),
  inference(unit_resulting_resolution,[],[f433,f522,f523,f524,f526,f525,f503])).
fof(f503,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X2))) | s('type.bvlSem.state'(X0),X1) = s('type.bvlSem.state'(X0),X2) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),X1))) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),X2))) | s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X1))) != s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X2))) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X1))) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X2))) | s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),X1))) != s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f403])).
fof(f403,plain,(
  ! [X0,X1,X2] : ((s('type.bvlSem.state'(X0),X1) != s('type.bvlSem.state'(X0),X2) | (s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),X2))) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X2))) & s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X1))) = s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X2))) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X2))))) & (s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),X1))) != s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),X2))) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X1))) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X2))) | s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X1))) != s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X2))) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),X1))) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),X2))) | s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X2))) | s('type.bvlSem.state'(X0),X1) = s('type.bvlSem.state'(X0),X2)))),
  inference(flattening,[],[f402])).
fof(f402,plain,(
  ! [X0,X1,X2] : ((s('type.bvlSem.state'(X0),X1) != s('type.bvlSem.state'(X0),X2) | (s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),X2))) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X2))) & s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X1))) = s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X2))) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X2))))) & ((s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),X1))) != s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),X2))) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X1))) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X2))) | s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X1))) != s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X2))) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),X1))) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),X2))) | s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X2)))) | s('type.bvlSem.state'(X0),X1) = s('type.bvlSem.state'(X0),X2)))),
  inference(nnf_transformation,[],[f212])).
fof(f212,plain,(
  ! [X0,X1,X2] : (s('type.bvlSem.state'(X0),X1) = s('type.bvlSem.state'(X0),X2) <=> (s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),X2))) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X2))) & s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X1))) = s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X2))) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X2)))))),
  inference(flattening,[],[f211])).
fof(f211,plain,(
  ! [X0] : ! [X1,X2] : (s('type.bvlSem.state'(X0),X1) = s('type.bvlSem.state'(X0),X2) <=> (s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),X2))) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),X2))) & s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X1))) = s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),X2))) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),X2)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X35,X36] : (s('type.bvlSem.state'(X6),X35) = s('type.bvlSem.state'(X6),X36) <=> (s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X6),X35))) = s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X6),X36))) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X6),X35))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X6),X36))) & s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X6),X35))) = s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X6),X36))) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X6),X35))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X6),X36))) & s('type.ffi.ffi_state'(X6),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X6),X35))) = s('type.ffi.ffi_state'(X6),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X6),X36)))))),
  file('thm.bvlSem.state_nchotomy','thm.bvlSem.bvlSem_9|49|_prove_ltb')).
fof(f525,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))) )),
  inference(cnf_transformation,[],[f242])).
fof(f242,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(flattening,[],[f241])).
fof(f241,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : ! [X8,X9,X10,X11,X12] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X11) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X8),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X9),s('type.num.num',X10),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X11),s('type.ffi.ffi_state'(X6),X12)))))),
  file('thm.bvlSem.state_nchotomy','thm.bvlSem.state_code')).
fof(f526,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))) )),
  inference(cnf_transformation,[],[f244])).
fof(f244,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(flattening,[],[f243])).
fof(f243,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6] : ! [X8,X9,X10,X11,X12] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X9) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X8),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X9),s('type.num.num',X10),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X11),s('type.ffi.ffi_state'(X6),X12)))))),
  file('thm.bvlSem.state_nchotomy','thm.bvlSem.state_refs')).
fof(f524,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'('type.option.option'('type.bvlSem.v')),X1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))) )),
  inference(cnf_transformation,[],[f240])).
fof(f240,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.list.list'('type.option.option'('type.bvlSem.v')),X1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(flattening,[],[f239])).
fof(f239,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s('type.list.list'('type.option.option'('type.bvlSem.v')),X1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X6] : ! [X8,X9,X10,X11,X12] : s('type.list.list'('type.option.option'('type.bvlSem.v')),X8) = s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X8),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X9),s('type.num.num',X10),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X11),s('type.ffi.ffi_state'(X6),X12)))))),
  file('thm.bvlSem.state_nchotomy','thm.bvlSem.state_globals')).
fof(f523,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.ffi.ffi_state'(X0),X5) = s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))) )),
  inference(cnf_transformation,[],[f238])).
fof(f238,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.ffi.ffi_state'(X0),X5) = s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(flattening,[],[f237])).
fof(f237,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s('type.ffi.ffi_state'(X0),X5) = s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X6] : ! [X8,X9,X10,X11,X12] : s('type.ffi.ffi_state'(X6),X12) = s('type.ffi.ffi_state'(X6),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X8),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X9),s('type.num.num',X10),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X11),s('type.ffi.ffi_state'(X6),X12)))))),
  file('thm.bvlSem.state_nchotomy','thm.bvlSem.state_ffi')).
fof(f522,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num',X3) = s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))) )),
  inference(cnf_transformation,[],[f236])).
fof(f236,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.num.num',X3) = s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(flattening,[],[f235])).
fof(f235,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s('type.num.num',X3) = s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6] : ! [X8,X9,X10,X11,X12] : s('type.num.num',X10) = s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X8),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X9),s('type.num.num',X10),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X11),s('type.ffi.ffi_state'(X6),X12)))))),
  file('thm.bvlSem.state_nchotomy','thm.bvlSem.state_clock')).
fof(f433,plain,(
  ( ! [X6,X4,X2,X5,X3] : (s('type.bvlSem.state'(sK0),sK1) != s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X3),s('type.num.num',X4),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X5),s('type.ffi.ffi_state'(sK0),X6)))) )),
  inference(cnf_transformation,[],[f382])).
fof(f382,plain,(
  ! [X2,X3,X4,X5,X6] : s('type.bvlSem.state'(sK0),sK1) != s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X3),s('type.num.num',X4),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X5),s('type.ffi.ffi_state'(sK0),X6)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f374])).
fof(f374,plain,(
  ? [X0,X1] : ! [X2,X3,X4,X5,X6] : s('type.bvlSem.state'(X0),X1) != s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X3),s('type.num.num',X4),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X5),s('type.ffi.ffi_state'(X0),X6)))),
  inference(ennf_transformation,[],[f135])).
fof(f135,plain,(
  ~! [X0,X1] : ? [X2,X3,X4,X5,X6] : s('type.bvlSem.state'(X0),X1) = s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X3),s('type.num.num',X4),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X5),s('type.ffi.ffi_state'(X0),X6)))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ~! [X0] : ! [X1] : ? [X2,X3,X4,X5,X6] : s('type.bvlSem.state'(X0),X1) = s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X3),s('type.num.num',X4),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X5),s('type.ffi.ffi_state'(X0),X6)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ? [X8,X9,X10,X11,X12] : s('type.bvlSem.state'(X6),X7) = s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X8),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X9),s('type.num.num',X10),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X11),s('type.ffi.ffi_state'(X6),X12)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ? [X8,X9,X10,X11,X12] : s('type.bvlSem.state'(X6),X7) = s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X8),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X9),s('type.num.num',X10),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X11),s('type.ffi.ffi_state'(X6),X12)))),
  file('thm.bvlSem.state_nchotomy','thm.bvlSem.state_nchotomy')).
% SZS output end Proof for thm.bvlSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 338
% Passive clauses: 4668
% Generated clauses: 71028
% Final active clauses: 270
% Final passive clauses: 3198
% Input formulas: 132
% Initial clauses: 183
% Discarded non-redundant clauses: 1374
% 
% Duplicate literals: 181
% Trivial inequalities: 1099
% Fw subsumption resolutions: 2759
% Fw demodulations: 12454
% Bw demodulations: 122
% Condensations: 343
% Global subsumptions: 2
% 
% Simple tautologies: 188
% Equational tautologies: 77
% Forward subsumptions: 48639
% Fw demodulations to eq. taut.: 212
% 
% Unit resulting resolution: 5175
% Factoring: 1
% Forward superposition: 24978
% Backward superposition: 22647
% Self superposition: 297
% Equality factoring: 22
% Equality resolution: 41
% 
% Split clauses: 10
% Split components: 20
% SAT solver clauses: 4692
% SAT solver unit clauses: 1402
% SAT solver binary clauses: 1865
% 
% Sat splits: 10
% 
% Memory used [KB]: 85457
% Time elapsed: 3.077 s
% ------------------------------
% ------------------------------
% Success in time 4.44 s
