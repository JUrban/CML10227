Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordSem
% (80952)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 85
% Passive clauses: 3134
% Generated clauses: 12027
% Final active clauses: 78
% Final passive clauses: 2849
% Input formulas: 69
% Initial clauses: 74
% 
% Duplicate literals: 502
% Trivial inequalities: 70
% Fw subsumption resolutions: 1110
% Fw demodulations: 494
% Bw demodulations: 3
% 
% Simple tautologies: 180
% Equational tautologies: 74
% Forward subsumptions: 5793
% 
% Binary resolution: 149
% Factoring: 2
% Forward superposition: 5198
% Backward superposition: 3933
% Self superposition: 360
% Equality factoring: 172
% Equality resolution: 11
% 
% Split clauses: 268
% Split components: 558
% SAT solver clauses: 832
% SAT solver unit clauses: 19
% SAT solver binary clauses: 185
% 
% Sat splits: 268
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 827
% TWLsolver calls for satisfiability: 164
% 
% Memory used [KB]: 17910
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.wordSem
% (80976)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 39
% Passive clauses: 371
% Generated clauses: 5401
% Final active clauses: 38
% Final passive clauses: 318
% Input formulas: 69
% Initial clauses: 74
% 
% Duplicate literals: 636
% Trivial inequalities: 37
% Fw subsumption resolutions: 178
% Fw demodulations: 78
% Bw demodulations: 14
% Condensations: 998
% 
% Simple tautologies: 106
% Equational tautologies: 72
% Forward subsumptions: 1836
% 
% Binary resolution: 63
% Factoring: 2
% Forward superposition: 1133
% Backward superposition: 1620
% Self superposition: 214
% Equality factoring: 166
% Equality resolution: 7
% 
% Split clauses: 9
% Split components: 18
% SAT solver clauses: 658
% SAT solver unit clauses: 132
% SAT solver binary clauses: 37
% 
% Sat splits: 9
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 658
% TWLsolver calls for satisfiability: 144
% 
% Memory used [KB]: 8059
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.wordSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordSem
% SZS output start Proof for thm.wordSem
fof(f8561,plain,(
  $false),
  inference(subsumption_resolution,[],[f8560,f211])).
fof(f211,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.wordSem.state_fupdfupds_comp|split|1',aHL_TRUTH)).
fof(f8560,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f8558,f1215])).
fof(f1215,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X1)))) )),
  inference(equality_resolution,[],[f613])).
fof(f613,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) != s(X0,X2) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) )),
  inference(condensation,[],[f612])).
fof(f612,plain,(
  ( ! [X10,X8,X11,X9] : (s(X8,X9) != s(X8,X10) | s(bool,'T_0') = s(bool,happ(s(fun(X8,bool),happ(s(fun(X8,fun(X8,bool)),'=_0'),s(X8,X9))),s(X8,X10))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(subsumption_resolution,[],[f609,f288])).
fof(f288,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f212,f213])).
fof(f213,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.wordSem.state_fupdfupds_comp|split|1',aHL_BOOL_CASES)).
fof(f212,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.wordSem.state_fupdfupds_comp|split|1',aHL_FALSITY)).
fof(f609,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X11)) | s(X8,X9) != s(X8,X10) | s(bool,'T_0') = s(bool,happ(s(fun(X8,bool),happ(s(fun(X8,fun(X8,bool)),'=_0'),s(X8,X9))),s(X8,X10))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f238,f286])).
fof(f286,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f213,f213])).
fof(f238,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f209])).
fof(f209,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2))))))),
  inference(nnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X45,X46,X47] : (p(s(bool,happ(s(fun(X45,bool),happ(s(fun(X45,fun(X45,bool)),'=_0'),s(X45,X46))),s(X45,X47)))) <=> s(X45,X46) = s(X45,X47))),
  file('thm.wordSem.state_fupdfupds_comp|split|1',arity_0_HL_EQ)).
fof(f8558,plain,(
  ~p(s(bool,happ(s(fun(fun(sK0,'type.wordSem.state'(sK1,sK2)),bool),happ(s(fun(fun(sK0,'type.wordSem.state'(sK1,sK2)),fun(fun(sK0,'type.wordSem.state'(sK1,sK2)),bool)),'=_0'),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK5),s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK4))))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3))))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK5),s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK4))))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3))))))),
  inference(backward_demodulation,[],[f8514,f3426])).
fof(f3426,plain,(
  ~p(s(bool,happ(s(fun(fun(sK0,'type.wordSem.state'(sK1,sK2)),bool),happ(s(fun(fun(sK0,'type.wordSem.state'(sK1,sK2)),fun(fun(sK0,'type.wordSem.state'(sK1,sK2)),bool)),'=_0'),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK5),s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK4))))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3))))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK5))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK4))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3))))))))),
  inference(unit_resulting_resolution,[],[f210,f237])).
fof(f237,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f209])).
fof(f210,plain,(
  s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK5),s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK4))))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3))) != s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK5))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK4))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3)))))),
  inference(cnf_transformation,[],[f205])).
fof(f205,plain,(
  s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK5),s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK4))))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3))) != s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK5))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.wordSem.state'(sK1,sK2),'type.wordSem.state'(sK1,sK2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),sK4))),s(fun(sK0,'type.wordSem.state'(sK1,sK2)),sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f201])).
fof(f201,plain,(
  ? [X0,X1,X2,X3,X4,X5] : s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X5),s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X4))))),s(fun(X0,'type.wordSem.state'(X1,X2)),X3))) != s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X5))),s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X4))),s(fun(X0,'type.wordSem.state'(X1,X2)),X3)))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X5),s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X4))))),s(fun(X0,'type.wordSem.state'(X1,X2)),X3))) = s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X5))),s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X4))),s(fun(X0,'type.wordSem.state'(X1,X2)),X3)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5] : s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X5),s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X4))))),s(fun(X0,'type.wordSem.state'(X1,X2)),X3))) = s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X5))),s(fun(X0,'type.wordSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X2),'type.wordSem.state'(X1,X2)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X4))),s(fun(X0,'type.wordSem.state'(X1,X2)),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11] : s(fun(X6,'type.wordSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),X11),s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),X10))))),s(fun(X6,'type.wordSem.state'(X7,X8)),X9))) = s(fun(X6,'type.wordSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),X11))),s(fun(X6,'type.wordSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),X10))),s(fun(X6,'type.wordSem.state'(X7,X8)),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11] : s(fun(X6,'type.wordSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),X11),s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),X10))))),s(fun(X6,'type.wordSem.state'(X7,X8)),X9))) = s(fun(X6,'type.wordSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),X11))),s(fun(X6,'type.wordSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),X10))),s(fun(X6,'type.wordSem.state'(X7,X8)),X9)))))),
  file('thm.wordSem.state_fupdfupds_comp|split|1','thm.wordSem.state_fupdfupds_comp|split|1')).
fof(f8514,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(fun(X4,'type.wordSem.state'(X0,X1)),'const.combin.o_2'(s(fun('type.wordSem.state'(X0,X1),'type.wordSem.state'(X0,X1)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),'type.sptree.spt'('type.wordSem.word_loc'(X0))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),'type.sptree.spt'('type.wordSem.word_loc'(X0))),X2),s(fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),'type.sptree.spt'('type.wordSem.word_loc'(X0))),X3))))),s(fun(X4,'type.wordSem.state'(X0,X1)),X5))) = s(fun(X4,'type.wordSem.state'(X0,X1)),'const.combin.o_2'(s(fun('type.wordSem.state'(X0,X1),'type.wordSem.state'(X0,X1)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),'type.sptree.spt'('type.wordSem.word_loc'(X0))),X2))),s(fun(X4,'type.wordSem.state'(X0,X1)),'const.combin.o_2'(s(fun('type.wordSem.state'(X0,X1),'type.wordSem.state'(X0,X1)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X0)),'type.sptree.spt'('type.wordSem.word_loc'(X0))),X3))),s(fun(X4,'type.wordSem.state'(X0,X1)),X5)))))) )),
  inference(superposition,[],[f243,f222])).
fof(f222,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X3),s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X2))))) = s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X3))),s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X2)))))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0,X1,X2,X3] : s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X3),s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X2))))) = s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X3))),s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X2)))))),
  inference(flattening,[],[f81])).
fof(f81,plain,(
  ! [X0,X1] : ! [X2,X3] : s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X3),s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X2))))) = s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.combin.o_2'(s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X3))),s(fun('type.wordSem.state'(X1,X0),'type.wordSem.state'(X1,X0)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),X2)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X8,X7] : ! [X10,X11] : s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),X11),s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),X10))))) = s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),X11))),s(fun('type.wordSem.state'(X7,X8),'type.wordSem.state'(X7,X8)),'const.wordSem.state_locals_fupd_1'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),X10)))))),
  file('thm.wordSem.state_fupdfupds_comp|split|1','thm.wordSem.state_fupdfupds_comp|split|0')).
fof(f243,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))) )),
  inference(cnf_transformation,[],[f120])).
fof(f120,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(flattening,[],[f119])).
fof(f119,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6,X7,X21,X15] : ! [X11,X10,X9] : s(fun(X21,X6),'const.combin.o_2'(s(fun(X7,X6),X11),s(fun(X21,X7),'const.combin.o_2'(s(fun(X15,X7),X10),s(fun(X21,X15),X9))))) = s(fun(X21,X6),'const.combin.o_2'(s(fun(X15,X6),'const.combin.o_2'(s(fun(X7,X6),X11),s(fun(X15,X7),X10))),s(fun(X21,X15),X9)))),
  file('thm.wordSem.state_fupdfupds_comp|split|1','thm.combin.o_ASSOC')).
% SZS output end Proof for thm.wordSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 83
% Passive clauses: 888
% Generated clauses: 8173
% Final active clauses: 63
% Final passive clauses: 665
% Input formulas: 69
% Initial clauses: 74
% 
% Duplicate literals: 416
% Trivial inequalities: 34
% Fw subsumption resolutions: 161
% Fw demodulations: 1054
% Bw demodulations: 59
% Condensations: 414
% Global subsumptions: 1
% 
% Simple tautologies: 90
% Equational tautologies: 111
% Forward subsumptions: 4925
% Fw demodulations to eq. taut.: 3
% 
% Unit resulting resolution: 476
% Factoring: 1
% Forward superposition: 2453
% Backward superposition: 2755
% Self superposition: 197
% Equality factoring: 54
% Equality resolution: 1
% 
% Split clauses: 43
% Split components: 91
% SAT solver clauses: 978
% SAT solver unit clauses: 292
% SAT solver binary clauses: 255
% 
% Sat splits: 43
% Sat splitting refutations: 1
% 
% Memory used [KB]: 15351
% Time elapsed: 0.502 s
% ------------------------------
% ------------------------------
% Success in time 1.84 s
