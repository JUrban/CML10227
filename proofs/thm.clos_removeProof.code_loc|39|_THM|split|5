Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_removeProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_removeProof
% SZS output start Proof for thm.clos_removeProof
fof(f2512,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f2508])).
fof(f2508,plain,(
  s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',sK0))) != s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',sK0)))),
  inference(superposition,[],[f92,f2502])).
fof(f2502,plain,(
  ( ! [X0] : (s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',X0))) = s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X0)))))) )),
  inference(forward_demodulation,[],[f2501,f96])).
fof(f96,plain,(
  ( ! [X0] : (s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0] : s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X10] : s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',X10))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X10),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  file('thm.clos_removeProof.code_loc|39|_THM|split|5','thm.clos_removeProof.code_loc|39|_def')).
fof(f2501,plain,(
  ( ! [X0] : (s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X0))))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f99,f96])).
fof(f99,plain,(
  ( ! [X0] : (s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X0))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X0))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X6),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X6))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  file('thm.clos_removeProof.code_loc|39|_THM|split|5','thm.closProps.code_locs_def|split|5')).
fof(f92,plain,(
  s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',sK0))) != s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',sK0)))))),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',sK0))) != s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',sK0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f87])).
fof(f87,plain,(
  ? [X0] : s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',X0))) != s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X0)))))),
  inference(ennf_transformation,[],[f38])).
fof(f38,plain,(
  ~! [X0] : s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',X0))) = s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',X6))) = s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',X6))) = s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X6)))))),
  file('thm.clos_removeProof.code_loc|39|_THM|split|5','thm.clos_removeProof.code_loc|39|_THM|split|5')).
% SZS output end Proof for thm.clos_removeProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 44
% Passive clauses: 356
% Generated clauses: 2320
% Final active clauses: 42
% Final passive clauses: 270
% Input formulas: 36
% Initial clauses: 37
% 
% Duplicate literals: 267
% Trivial inequalities: 53
% Fw subsumption resolutions: 121
% Fw demodulations: 166
% 
% Simple tautologies: 92
% Equational tautologies: 20
% Forward subsumptions: 1175
% 
% Binary resolution: 4
% Forward superposition: 895
% Backward superposition: 609
% Self superposition: 86
% Equality factoring: 58
% Equality resolution: 6
% 
% Split clauses: 51
% Split components: 102
% SAT solver clauses: 105
% SAT solver unit clauses: 21
% SAT solver binary clauses: 49
% 
% Sat splits: 51
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 105
% TWLsolver calls for satisfiability: 26
% 
% Memory used [KB]: 1663
% Time elapsed: 0.092 s
% ------------------------------
% ------------------------------
% Success in time 0.092 s
