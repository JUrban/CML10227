Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bviSem
% (2774)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 275
% Passive clauses: 5588
% Generated clauses: 33051
% Final active clauses: 207
% Final passive clauses: 4973
% Input formulas: 132
% Initial clauses: 183
% 
% Duplicate literals: 214
% Trivial inequalities: 767
% Fw subsumption resolutions: 3451
% Fw demodulations: 6498
% Bw demodulations: 60
% 
% Simple tautologies: 164
% Equational tautologies: 25
% Forward subsumptions: 16229
% Bw demodulations to eq. taut.: 4
% 
% Binary resolution: 1384
% Factoring: 1
% Forward superposition: 10215
% Backward superposition: 10346
% Self superposition: 97
% Equality factoring: 28
% Equality resolution: 29
% 
% Split clauses: 120
% Split components: 240
% SAT solver clauses: 396
% SAT solver unit clauses: 4
% SAT solver binary clauses: 70
% 
% Sat splits: 120
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 394
% TWLsolver calls for satisfiability: 106
% 
% Memory used [KB]: 16630
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.bviSem
% (2809)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 148
% Passive clauses: 1459
% Generated clauses: 14083
% Final active clauses: 144
% Final passive clauses: 1261
% Input formulas: 132
% Initial clauses: 183
% 
% Duplicate literals: 90
% Trivial inequalities: 322
% Fw subsumption resolutions: 790
% Fw demodulations: 2356
% Bw demodulations: 54
% Condensations: 78
% Global subsumptions: 4
% 
% Simple tautologies: 79
% Equational tautologies: 18
% Forward subsumptions: 7084
% 
% Binary resolution: 488
% Factoring: 2
% Forward superposition: 3697
% Backward superposition: 4435
% Self superposition: 57
% Equality factoring: 16
% Equality resolution: 23
% 
% Split clauses: 20
% Split components: 40
% SAT solver clauses: 1948
% SAT solver unit clauses: 280
% SAT solver binary clauses: 53
% SAT solver learnt clauses: 8
% 
% Sat splits: 20
% 
% TWLsolver clauses: 1932
% TWLsolver calls for satisfiability: 816
% 
% Memory used [KB]: 16119
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.bviSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bviSem
% SZS output start Proof for thm.bviSem
fof(f65876,plain,(
  $false),
  inference(unit_resulting_resolution,[],[f433,f522,f523,f524,f526,f525,f502])).
fof(f502,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X2))) | s('type.bviSem.state'(X0),X1) = s('type.bviSem.state'(X0),X2) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X2))) | s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),X1))) != s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),X2))) | s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X1))) != s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),X1))) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f403])).
fof(f403,plain,(
  ! [X0,X1,X2] : ((s('type.bviSem.state'(X0),X1) != s('type.bviSem.state'(X0),X2) | (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),X2))) & s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X1))) = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))) & s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),X1))) = s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),X2))) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X2))))) & (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),X1))) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),X2))) | s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X1))) != s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))) | s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),X1))) != s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),X2))) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X2))) | s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X2))) | s('type.bviSem.state'(X0),X1) = s('type.bviSem.state'(X0),X2)))),
  inference(flattening,[],[f402])).
fof(f402,plain,(
  ! [X0,X1,X2] : ((s('type.bviSem.state'(X0),X1) != s('type.bviSem.state'(X0),X2) | (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),X2))) & s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X1))) = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))) & s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),X1))) = s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),X2))) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X2))))) & ((s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),X1))) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),X2))) | s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X1))) != s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))) | s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),X1))) != s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),X2))) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X2))) | s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X2)))) | s('type.bviSem.state'(X0),X1) = s('type.bviSem.state'(X0),X2)))),
  inference(nnf_transformation,[],[f210])).
fof(f210,plain,(
  ! [X0,X1,X2] : (s('type.bviSem.state'(X0),X1) = s('type.bviSem.state'(X0),X2) <=> (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),X2))) & s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X1))) = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))) & s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),X1))) = s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),X2))) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X2)))))),
  inference(flattening,[],[f209])).
fof(f209,plain,(
  ! [X0] : ! [X1,X2] : (s('type.bviSem.state'(X0),X1) = s('type.bviSem.state'(X0),X2) <=> (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),X1))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),X2))) & s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X1))) = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))) & s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),X1))) = s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),X2))) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X1))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X2)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6] : ! [X43,X44] : (s('type.bviSem.state'(X6),X43) = s('type.bviSem.state'(X6),X44) <=> (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X6),X43))) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X6),X44))) & s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X6),X43))) = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X6),X44))) & s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X6),X43))) = s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X6),X44))) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X6),X43))) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X6),X44))) & s('type.ffi.ffi_state'(X6),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X6),X43))) = s('type.ffi.ffi_state'(X6),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X6),X44)))))),
  file('thm.bviSem.state_nchotomy','thm.bviSem.bviSem_63_prove_ltb')).
fof(f525,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1),s('type.num.num',X2),s('type.option.option'('type.num.num'),X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))) )),
  inference(cnf_transformation,[],[f242])).
fof(f242,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1),s('type.num.num',X2),s('type.option.option'('type.num.num'),X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(flattening,[],[f241])).
fof(f241,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1),s('type.num.num',X2),s('type.option.option'('type.num.num'),X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6] : ! [X8,X9,X10,X11,X12] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X11) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),'const.bviSem.state_code_1'(s('type.bviSem.state'(X6),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X8),s('type.num.num',X9),s('type.option.option'('type.num.num'),X10),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X11),s('type.ffi.ffi_state'(X6),X12)))))),
  file('thm.bviSem.state_nchotomy','thm.bviSem.state_code')).
fof(f526,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1),s('type.num.num',X2),s('type.option.option'('type.num.num'),X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))) )),
  inference(cnf_transformation,[],[f244])).
fof(f244,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1),s('type.num.num',X2),s('type.option.option'('type.num.num'),X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(flattening,[],[f243])).
fof(f243,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1),s('type.num.num',X2),s('type.option.option'('type.num.num'),X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6] : ! [X8,X9,X10,X11,X12] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X8) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bviSem.state_refs_1'(s('type.bviSem.state'(X6),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X8),s('type.num.num',X9),s('type.option.option'('type.num.num'),X10),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X11),s('type.ffi.ffi_state'(X6),X12)))))),
  file('thm.bviSem.state_nchotomy','thm.bviSem.state_refs')).
fof(f524,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.ffi.ffi_state'(X0),X5) = s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1),s('type.num.num',X2),s('type.option.option'('type.num.num'),X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))) )),
  inference(cnf_transformation,[],[f240])).
fof(f240,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.ffi.ffi_state'(X0),X5) = s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1),s('type.num.num',X2),s('type.option.option'('type.num.num'),X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(flattening,[],[f239])).
fof(f239,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s('type.ffi.ffi_state'(X0),X5) = s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1),s('type.num.num',X2),s('type.option.option'('type.num.num'),X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : ! [X8,X9,X10,X11,X12] : s('type.ffi.ffi_state'(X6),X12) = s('type.ffi.ffi_state'(X6),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X6),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X8),s('type.num.num',X9),s('type.option.option'('type.num.num'),X10),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X11),s('type.ffi.ffi_state'(X6),X12)))))),
  file('thm.bviSem.state_nchotomy','thm.bviSem.state_ffi')).
fof(f523,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.option.option'('type.num.num'),X3) = s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1),s('type.num.num',X2),s('type.option.option'('type.num.num'),X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))) )),
  inference(cnf_transformation,[],[f238])).
fof(f238,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.option.option'('type.num.num'),X3) = s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1),s('type.num.num',X2),s('type.option.option'('type.num.num'),X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(flattening,[],[f237])).
fof(f237,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s('type.option.option'('type.num.num'),X3) = s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1),s('type.num.num',X2),s('type.option.option'('type.num.num'),X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X6] : ! [X8,X9,X10,X11,X12] : s('type.option.option'('type.num.num'),X10) = s('type.option.option'('type.num.num'),'const.bviSem.state_global_1'(s('type.bviSem.state'(X6),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X8),s('type.num.num',X9),s('type.option.option'('type.num.num'),X10),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X11),s('type.ffi.ffi_state'(X6),X12)))))),
  file('thm.bviSem.state_nchotomy','thm.bviSem.state_global')).
fof(f522,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num',X2) = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1),s('type.num.num',X2),s('type.option.option'('type.num.num'),X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))) )),
  inference(cnf_transformation,[],[f236])).
fof(f236,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.num.num',X2) = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1),s('type.num.num',X2),s('type.option.option'('type.num.num'),X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(flattening,[],[f235])).
fof(f235,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s('type.num.num',X2) = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X1),s('type.num.num',X2),s('type.option.option'('type.num.num'),X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X6] : ! [X8,X9,X10,X11,X12] : s('type.num.num',X9) = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X6),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X8),s('type.num.num',X9),s('type.option.option'('type.num.num'),X10),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X11),s('type.ffi.ffi_state'(X6),X12)))))),
  file('thm.bviSem.state_nchotomy','thm.bviSem.state_clock')).
fof(f433,plain,(
  ( ! [X6,X4,X2,X5,X3] : (s('type.bviSem.state'(sK0),sK1) != s('type.bviSem.state'(sK0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.option.option'('type.num.num'),X4),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X5),s('type.ffi.ffi_state'(sK0),X6)))) )),
  inference(cnf_transformation,[],[f382])).
fof(f382,plain,(
  ! [X2,X3,X4,X5,X6] : s('type.bviSem.state'(sK0),sK1) != s('type.bviSem.state'(sK0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.option.option'('type.num.num'),X4),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X5),s('type.ffi.ffi_state'(sK0),X6)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f374])).
fof(f374,plain,(
  ? [X0,X1] : ! [X2,X3,X4,X5,X6] : s('type.bviSem.state'(X0),X1) != s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.option.option'('type.num.num'),X4),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X5),s('type.ffi.ffi_state'(X0),X6)))),
  inference(ennf_transformation,[],[f135])).
fof(f135,plain,(
  ~! [X0,X1] : ? [X2,X3,X4,X5,X6] : s('type.bviSem.state'(X0),X1) = s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.option.option'('type.num.num'),X4),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X5),s('type.ffi.ffi_state'(X0),X6)))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ~! [X0] : ! [X1] : ? [X2,X3,X4,X5,X6] : s('type.bviSem.state'(X0),X1) = s('type.bviSem.state'(X0),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.option.option'('type.num.num'),X4),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X5),s('type.ffi.ffi_state'(X0),X6)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ? [X8,X9,X10,X11,X12] : s('type.bviSem.state'(X6),X7) = s('type.bviSem.state'(X6),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X8),s('type.num.num',X9),s('type.option.option'('type.num.num'),X10),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X11),s('type.ffi.ffi_state'(X6),X12)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ? [X8,X9,X10,X11,X12] : s('type.bviSem.state'(X6),X7) = s('type.bviSem.state'(X6),'const.bviSem.recordtype|46|state_5'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X8),s('type.num.num',X9),s('type.option.option'('type.num.num'),X10),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvi.exp')),X11),s('type.ffi.ffi_state'(X6),X12)))),
  file('thm.bviSem.state_nchotomy','thm.bviSem.state_nchotomy')).
% SZS output end Proof for thm.bviSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 335
% Passive clauses: 4067
% Generated clauses: 65913
% Final active clauses: 267
% Final passive clauses: 2033
% Input formulas: 132
% Initial clauses: 183
% Discarded non-redundant clauses: 5594
% 
% Duplicate literals: 181
% Trivial inequalities: 1033
% Fw subsumption resolutions: 2645
% Fw demodulations: 12320
% Bw demodulations: 120
% Condensations: 337
% Global subsumptions: 2
% 
% Simple tautologies: 186
% Equational tautologies: 77
% Forward subsumptions: 44434
% Fw demodulations to eq. taut.: 200
% 
% Unit resulting resolution: 5113
% Factoring: 1
% Forward superposition: 22381
% Backward superposition: 20567
% Self superposition: 245
% Equality factoring: 22
% Equality resolution: 40
% 
% Split clauses: 10
% Split components: 20
% SAT solver clauses: 4091
% SAT solver unit clauses: 1071
% SAT solver binary clauses: 1648
% 
% Sat splits: 10
% 
% Memory used [KB]: 75222
% Time elapsed: 4.503 s
% ------------------------------
% ------------------------------
% Success in time 5.84 s
