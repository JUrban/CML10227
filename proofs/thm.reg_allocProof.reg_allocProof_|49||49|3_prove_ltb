Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.reg_allocProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.reg_allocProof
% SZS output start Proof for thm.reg_allocProof
fof(f5771,plain,(
  $false),
  inference(equality_resolution,[],[f881])).
fof(f881,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',sK1),s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK2))) != s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',X1),s('type.list.list'('type.num.num'),X2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X0)))) )),
  inference(superposition,[],[f71,f96])).
fof(f96,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',X1),s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK8(X2,X1,X0)),s('type.list.list'('type.num.num'),sK9(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',X1),s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK8(X2,X1,X0)),s('type.list.list'('type.num.num'),sK9(X2,X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8,sK9])],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2] : ? [X3,X4] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3),s('type.list.list'('type.num.num'),X4))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',X1),s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X21,X7,X9] : ? [X22,X23] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X22),s('type.list.list'('type.num.num'),X23))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',X7),s('type.list.list'('type.num.num'),X21),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X9)))),
  file('thm.reg_allocProof.reg_allocProof_|49||49|3_prove_ltb','thm.reg_allocProof.reg_allocProof_|49||48|7_prove_ltb')).
fof(f71,plain,(
  ( ! [X4,X3] : (s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3),s('type.list.list'('type.num.num'),X4))) != s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',sK1),s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK2)))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X3,X4] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3),s('type.list.list'('type.num.num'),X4))) != s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',sK1),s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f49])).
fof(f49,plain,(
  ? [X0,X1,X2] : ! [X3,X4] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3),s('type.list.list'('type.num.num'),X4))) != s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',X1),s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1,X2] : ? [X3,X4] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3),s('type.list.list'('type.num.num'),X4))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',X1),s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ? [X9,X10] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X9),s('type.list.list'('type.num.num'),X10))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',X7),s('type.list.list'('type.num.num'),X6),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ? [X9,X10] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X9),s('type.list.list'('type.num.num'),X10))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',X7),s('type.list.list'('type.num.num'),X6),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X8)))),
  file('thm.reg_allocProof.reg_allocProof_|49||49|3_prove_ltb','thm.reg_allocProof.reg_allocProof_|49||49|3_prove_ltb')).
% SZS output end Proof for thm.reg_allocProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 92
% Passive clauses: 596
% Generated clauses: 5555
% Final active clauses: 89
% Final passive clauses: 458
% Input formulas: 21
% Initial clauses: 33
% 
% Duplicate literals: 358
% Trivial inequalities: 349
% Fw subsumption resolutions: 565
% Fw demodulations: 411
% Bw demodulations: 2
% 
% Simple tautologies: 153
% Equational tautologies: 22
% Forward subsumptions: 2807
% 
% Binary resolution: 32
% Forward superposition: 1721
% Backward superposition: 1898
% Self superposition: 72
% Equality factoring: 52
% Equality resolution: 15
% 
% Split clauses: 167
% Split components: 345
% SAT solver clauses: 339
% SAT solver unit clauses: 12
% SAT solver binary clauses: 109
% 
% Sat splits: 167
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 339
% TWLsolver calls for satisfiability: 46
% 
% Memory used [KB]: 2942
% Time elapsed: 0.114 s
% ------------------------------
% ------------------------------
% Success in time 0.117 s
