Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.stackProps
% (129834)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 872
% Passive clauses: 6441
% Generated clauses: 32798
% Final active clauses: 848
% Final passive clauses: 5307
% Input formulas: 517
% Initial clauses: 719
% 
% Duplicate literals: 186
% Trivial inequalities: 53
% Fw subsumption resolutions: 1535
% Fw demodulations: 3106
% Bw demodulations: 13
% 
% Simple tautologies: 218
% Equational tautologies: 25
% Forward subsumptions: 20815
% Fw demodulations to eq. taut.: 8
% 
% Binary resolution: 5302
% Factoring: 901
% Forward superposition: 10282
% Backward superposition: 10560
% Self superposition: 39
% Equality factoring: 2
% Equality resolution: 10
% 
% Split clauses: 493
% Split components: 987
% SAT solver clauses: 657
% SAT solver unit clauses: 15
% SAT solver binary clauses: 61
% 
% Sat splits: 493
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 657
% TWLsolver calls for satisfiability: 347
% 
% Memory used [KB]: 18166
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.stackProps
% (129853)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 470
% Passive clauses: 2784
% Generated clauses: 21733
% Final active clauses: 439
% Final passive clauses: 1851
% Input formulas: 517
% Initial clauses: 719
% 
% Duplicate literals: 88
% Trivial inequalities: 31
% Fw subsumption resolutions: 850
% Fw demodulations: 2604
% Bw demodulations: 450
% Condensations: 120
% Global subsumptions: 20
% 
% Simple tautologies: 209
% Equational tautologies: 10
% Forward subsumptions: 11463
% Fw demodulations to eq. taut.: 15
% Bw demodulations to eq. taut.: 9
% 
% Binary resolution: 2151
% Factoring: 308
% Forward superposition: 6456
% Backward superposition: 4568
% Self superposition: 59
% Equality factoring: 2
% Equality resolution: 5
% 
% Split clauses: 9
% Split components: 18
% SAT solver clauses: 3855
% SAT solver unit clauses: 1152
% SAT solver binary clauses: 126
% SAT solver learnt clauses: 42
% SAT solver learnt literals: 14
% 
% Sat splits: 9
% Sat splitting refutations: 65
% 
% TWLsolver clauses: 3773
% TWLsolver calls for satisfiability: 18933
% 
% Memory used [KB]: 24946
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.stackProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.stackProps
% SZS output start Proof for thm.stackProps
fof(f155483,plain,(
  $false),
  inference(subsumption_resolution,[],[f155481,f36123])).
fof(f36123,plain,(
  ( ! [X2,X0] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X2))),s(X0,X2))))) )),
  inference(forward_demodulation,[],[f36122,f2325])).
fof(f2325,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))) )),
  inference(cnf_transformation,[],[f1398])).
fof(f1398,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(flattening,[],[f1397])).
fof(f1397,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(rectify,[],[f402])).
fof(f402,axiom,(
  ! [X64,X67,X65] : ! [X68,X69,X71] : s(X64,happ(s(fun(X65,X64),happ(s(fun(X67,fun(X65,X64)),X68),s(X67,X71))),s(X65,X69))) = s(X64,happ(s(fun(X67,X64),'_dst_x1x0_2'(s(fun(X67,fun(X65,X64)),X68),s(X65,X69))),s(X67,X71)))),
  file('thm.stackProps.dec_clock_const|split|8','_dst_x1x0_ax')).
fof(f36122,plain,(
  ( ! [X2,X0] : (p(s(bool,happ(s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X2))),s(X0,X2))))) )),
  inference(forward_demodulation,[],[f36121,f2461])).
fof(f2461,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(forward_demodulation,[],[f1922,f1919])).
fof(f1919,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f756])).
fof(f756,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(flattening,[],[f755])).
fof(f755,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(rectify,[],[f289])).
fof(f289,axiom,(
  ! [X58,X9] : ! [X27,X28] : s(X9,X27) = s(X9,'const.combin.K_2'(s(X9,X27),s(X58,X28)))),
  file('thm.stackProps.dec_clock_const|split|8','thm.combin.K_THM')).
fof(f1922,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f762])).
fof(f762,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(flattening,[],[f761])).
fof(f761,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(rectify,[],[f283])).
fof(f283,axiom,(
  ! [X9,X58] : ! [X62,X63] : s(X9,'const.combin.K_2'(s(X9,X62),s(X58,X63))) = s(X9,happ(s(fun(X58,X9),'const.combin.K_1'(s(X9,X62))),s(X58,X63)))),
  file('thm.stackProps.dec_clock_const|split|8','ARITY_1_2_const.combin.K')).
fof(f36121,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X2))),s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3))))))) )),
  inference(forward_demodulation,[],[f35470,f2325])).
fof(f35470,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3))))),s(X0,X2))))) )),
  inference(unit_resulting_resolution,[],[f2461,f2236])).
fof(f2236,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f1597])).
fof(f1597,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2))))))),
  inference(nnf_transformation,[],[f1350])).
fof(f1350,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f321])).
fof(f321,axiom,(
  ! [X84,X82,X83] : (p(s(bool,happ(s(fun(X84,bool),happ(s(fun(X84,fun(X84,bool)),'=_0'),s(X84,X82))),s(X84,X83)))) <=> s(X84,X82) = s(X84,X83))),
  file('thm.stackProps.dec_clock_const|split|8',arity_0_HL_EQ)).
fof(f155481,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK13)),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK13)),fun('type.list.list'('type.fcp.cart'(bool,sK13)),bool)),'=_0'),s('type.list.list'('type.fcp.cart'(bool,sK13)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(sK13,sK14),sK15))))),s('type.list.list'('type.fcp.cart'(bool,sK13)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(sK13,sK14),sK15))))))),
  inference(backward_demodulation,[],[f155217,f34828])).
fof(f34828,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK13)),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK13)),fun('type.list.list'('type.fcp.cart'(bool,sK13)),bool)),'=_0'),s('type.list.list'('type.fcp.cart'(bool,sK13)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(sK13,sK14),sK15))))),s('type.list.list'('type.fcp.cart'(bool,sK13)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(sK13,sK14),'const.stackSem.dec_clock_1'(s('type.stackSem.state'(sK13,sK14),sK15))))))))),
  inference(unit_resulting_resolution,[],[f1632,f2235])).
fof(f2235,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f1597])).
fof(f1632,plain,(
  s('type.list.list'('type.fcp.cart'(bool,sK13)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(sK13,sK14),sK15))) != s('type.list.list'('type.fcp.cart'(bool,sK13)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(sK13,sK14),'const.stackSem.dec_clock_1'(s('type.stackSem.state'(sK13,sK14),sK15)))))),
  inference(cnf_transformation,[],[f1497])).
fof(f1497,plain,(
  s('type.list.list'('type.fcp.cart'(bool,sK13)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(sK13,sK14),sK15))) != s('type.list.list'('type.fcp.cart'(bool,sK13)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(sK13,sK14),'const.stackSem.dec_clock_1'(s('type.stackSem.state'(sK13,sK14),sK15)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14,sK15])],[f1432])).
fof(f1432,plain,(
  ? [X0,X1,X2] : s('type.list.list'('type.fcp.cart'(bool,X0)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X0,X1),X2))) != s('type.list.list'('type.fcp.cart'(bool,X0)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X0,X1),'const.stackSem.dec_clock_1'(s('type.stackSem.state'(X0,X1),X2)))))),
  inference(ennf_transformation,[],[f520])).
fof(f520,plain,(
  ~! [X0,X1,X2] : s('type.list.list'('type.fcp.cart'(bool,X0)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X0,X1),X2))) = s('type.list.list'('type.fcp.cart'(bool,X0)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X0,X1),'const.stackSem.dec_clock_1'(s('type.stackSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f519])).
fof(f519,plain,(
  ~! [X0,X1] : ! [X2] : s('type.list.list'('type.fcp.cart'(bool,X0)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X0,X1),X2))) = s('type.list.list'('type.fcp.cart'(bool,X0)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X0,X1),'const.stackSem.dec_clock_1'(s('type.stackSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : s('type.list.list'('type.fcp.cart'(bool,X6)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X6,X7),X8))) = s('type.list.list'('type.fcp.cart'(bool,X6)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X6,X7),'const.stackSem.dec_clock_1'(s('type.stackSem.state'(X6,X7),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : s('type.list.list'('type.fcp.cart'(bool,X6)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X6,X7),X8))) = s('type.list.list'('type.fcp.cart'(bool,X6)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X6,X7),'const.stackSem.dec_clock_1'(s('type.stackSem.state'(X6,X7),X8)))))),
  file('thm.stackProps.dec_clock_const|split|8','thm.stackProps.dec_clock_const|split|8')).
fof(f155217,plain,(
  ( ! [X30,X31,X32] : (s('type.list.list'('type.fcp.cart'(bool,X30)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X30,X31),X32))) = s('type.list.list'('type.fcp.cart'(bool,X30)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X30,X31),'const.stackSem.dec_clock_1'(s('type.stackSem.state'(X30,X31),X32)))))) )),
  inference(superposition,[],[f2006,f8305])).
fof(f8305,plain,(
  ( ! [X2,X0,X1] : (s('type.stackSem.state'(X0,X1),'const.stackSem.dec_clock_1'(s('type.stackSem.state'(X0,X1),X2))) = s('type.stackSem.state'(X0,X1),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.stackSem.state_clock_1'(s('type.stackSem.state'(X0,X1),X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.stackSem.state'(X0,X1),X2)))) )),
  inference(backward_demodulation,[],[f8291,f2460])).
fof(f2460,plain,(
  ( ! [X2,X0,X1] : (s('type.stackSem.state'(X0,X1),'const.stackSem.dec_clock_1'(s('type.stackSem.state'(X0,X1),X2))) = s('type.stackSem.state'(X0,X1),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.stackSem.state_clock_1'(s('type.stackSem.state'(X0,X1),X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.stackSem.state'(X0,X1),X2)))) )),
  inference(forward_demodulation,[],[f1898,f1638])).
fof(f1638,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f399])).
fof(f399,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.stackProps.dec_clock_const|split|8','thm.numeral.numeral_distrib|split|13')).
fof(f1898,plain,(
  ( ! [X2,X0,X1] : (s('type.stackSem.state'(X0,X1),'const.stackSem.dec_clock_1'(s('type.stackSem.state'(X0,X1),X2))) = s('type.stackSem.state'(X0,X1),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.stackSem.state_clock_1'(s('type.stackSem.state'(X0,X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.stackSem.state'(X0,X1),X2)))) )),
  inference(cnf_transformation,[],[f748])).
fof(f748,plain,(
  ! [X0,X1,X2] : s('type.stackSem.state'(X0,X1),'const.stackSem.dec_clock_1'(s('type.stackSem.state'(X0,X1),X2))) = s('type.stackSem.state'(X0,X1),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.stackSem.state_clock_1'(s('type.stackSem.state'(X0,X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.stackSem.state'(X0,X1),X2)))),
  inference(flattening,[],[f747])).
fof(f747,plain,(
  ! [X0,X1] : ! [X2] : s('type.stackSem.state'(X0,X1),'const.stackSem.dec_clock_1'(s('type.stackSem.state'(X0,X1),X2))) = s('type.stackSem.state'(X0,X1),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.stackSem.state_clock_1'(s('type.stackSem.state'(X0,X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.stackSem.state'(X0,X1),X2)))),
  inference(rectify,[],[f250])).
fof(f250,axiom,(
  ! [X9,X10] : ! [X12] : s('type.stackSem.state'(X9,X10),'const.stackSem.dec_clock_1'(s('type.stackSem.state'(X9,X10),X12))) = s('type.stackSem.state'(X9,X10),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.stackSem.state_clock_1'(s('type.stackSem.state'(X9,X10),X12))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.stackSem.state'(X9,X10),X12)))),
  file('thm.stackProps.dec_clock_const|split|8','thm.stackSem.dec_clock_def')).
fof(f8291,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),
  inference(forward_demodulation,[],[f8176,f1637])).
fof(f1637,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f486])).
fof(f486,axiom,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.stackProps.dec_clock_const|split|8','thm.numeral.numeral_suc|split|0')).
fof(f8176,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f1670,f1647])).
fof(f1647,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f527])).
fof(f527,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f495])).
fof(f495,axiom,(
  ! [X21] : s('type.num.num',X21) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X21)))),
  file('thm.stackProps.dec_clock_const|split|8','thm.arithmetic.ADD_CLAUSES|split|0')).
fof(f1670,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(cnf_transformation,[],[f550])).
fof(f550,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(rectify,[],[f452])).
fof(f452,axiom,(
  ! [X14] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.stackProps.dec_clock_const|split|8','thm.numeral.numeral_add|split|7')).
fof(f2006,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.fcp.cart'(bool,X0)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X0,X1),X2))) = s('type.list.list'('type.fcp.cart'(bool,X0)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X0,X1),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.stackSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f930])).
fof(f930,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'('type.fcp.cart'(bool,X0)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X0,X1),X2))) = s('type.list.list'('type.fcp.cart'(bool,X0)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X0,X1),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.stackSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f929])).
fof(f929,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'('type.fcp.cart'(bool,X0)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X0,X1),X2))) = s('type.list.list'('type.fcp.cart'(bool,X0)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X0,X1),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.stackSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f86])).
fof(f86,axiom,(
  ! [X9,X10] : ! [X12,X60] : s('type.list.list'('type.fcp.cart'(bool,X9)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X9,X10),X12))) = s('type.list.list'('type.fcp.cart'(bool,X9)),'const.stackSem.state_bitmaps_1'(s('type.stackSem.state'(X9,X10),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X60),s('type.stackSem.state'(X9,X10),X12)))))),
  file('thm.stackProps.dec_clock_const|split|8','thm.stackSem.stackSem_|49|78_prove_ltb')).
% SZS output end Proof for thm.stackProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1310
% Passive clauses: 9584
% Generated clauses: 153969
% Final active clauses: 1285
% Final passive clauses: 6751
% Input formulas: 517
% Initial clauses: 719
% Discarded non-redundant clauses: 1651
% 
% Duplicate literals: 7
% Trivial inequalities: 18
% Fw subsumption resolutions: 1053
% Fw demodulations: 55517
% Bw demodulations: 309
% Condensations: 30
% 
% Simple tautologies: 132
% Equational tautologies: 43
% Forward subsumptions: 85212
% Fw demodulations to eq. taut.: 231
% Bw demodulations to eq. taut.: 28
% 
% Unit resulting resolution: 34075
% Factoring: 2
% Forward superposition: 24676
% Backward superposition: 37248
% Self superposition: 154
% Equality factoring: 2
% Equality resolution: 5
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 10681
% SAT solver unit clauses: 5631
% SAT solver binary clauses: 3383
% 
% Sat splits: 7
% Sat splitting refutations: 1081
% 
% Memory used [KB]: 136117
% Time elapsed: 5.240 s
% ------------------------------
% ------------------------------
% Success in time 6.63 s
