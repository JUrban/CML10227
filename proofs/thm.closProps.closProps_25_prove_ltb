Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.closProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.closProps
% SZS output start Proof for thm.closProps
fof(f4822,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4821,f223,f433,f431,f429,f427,f425,f423,f421,f419,f417,f415,f413,f411,f409,f224,f408,f4819,f4818,f4817,f4816,f4815,f4814,f4813,f4812,f4225,f4224,f4820])).
fof(f4820,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f417,f229])).
fof(f229,plain,(
  ( ! [X19] : (s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  (s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') = s('type.list.list'('type.closLang.exp'),sK12) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK13))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',sK14),s('type.closLang.exp',sK15),s('type.closLang.exp',sK16))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),sK17),s('type.closLang.exp',sK18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',sK19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',sK20),s('type.closLang.exp',sK21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',sK22))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK23),s('type.list.list'('type.closLang.exp'),sK24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),sK25),s('type.closLang.exp',sK26),s('type.list.list'('type.closLang.exp'),sK27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK28),s('type.option.option'('type.list.list'('type.num.num')),sK29),s('type.num.num',sK30),s('type.closLang.exp',sK31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),sK32),s('type.option.option'('type.list.list'('type.num.num')),sK33),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK34),s('type.closLang.exp',sK35))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK36),s('type.list.list'('type.closLang.exp'),sK37))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK40),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK38),s('type.list.list'('type.closLang.exp'),sK39)))))) & s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') != s('type.list.list'('type.closLang.exp'),sK12) & ! [X26,X27,X28] : s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28))))) & ! [X25] : s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X22,X23,X24] : s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X22),s('type.closLang.exp',X23),s('type.closLang.exp',X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X20,X21] : s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X20),s('type.closLang.exp',X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X19] : s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X18] : s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X16,X17] : s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X16),s('type.list.list'('type.closLang.exp'),X17))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X13,X14,X15] : s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X13),s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),X15))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X9,X10,X11,X12] : s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X9),s('type.option.option'('type.list.list'('type.num.num')),X10),s('type.num.num',X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X5,X6,X7,X8] : s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X5),s('type.option.option'('type.list.list'('type.num.num')),X6),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X3,X4] : s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X3),s('type.closLang.exp',X4))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X1,X2] : s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),X2))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36,sK37,sK38,sK39,sK40])],[f137])).
fof(f137,plain,(
  ? [X0] : ((s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') = s('type.list.list'('type.closLang.exp'),X0) | ? [X56] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X56))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X53,X54,X55] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X53),s('type.closLang.exp',X54),s('type.closLang.exp',X55))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X51,X52] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X51),s('type.closLang.exp',X52))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X50] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X50))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X48,X49] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X48),s('type.closLang.exp',X49))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X47] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X47))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X45,X46] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X45),s('type.list.list'('type.closLang.exp'),X46))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X42,X43,X44] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X42),s('type.closLang.exp',X43),s('type.list.list'('type.closLang.exp'),X44))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X38,X39,X40,X41] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X38),s('type.option.option'('type.list.list'('type.num.num')),X39),s('type.num.num',X40),s('type.closLang.exp',X41))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X34,X35,X36,X37] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X34),s('type.option.option'('type.list.list'('type.num.num')),X35),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X36),s('type.closLang.exp',X37))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X32,X33] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X29,X30,X31] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X31),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X29),s('type.list.list'('type.closLang.exp'),X30)))))) & s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') != s('type.list.list'('type.closLang.exp'),X0) & ! [X26,X27,X28] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28))))) & ! [X25] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X22,X23,X24] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X22),s('type.closLang.exp',X23),s('type.closLang.exp',X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X20,X21] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X20),s('type.closLang.exp',X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X19] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X18] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X16,X17] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X16),s('type.list.list'('type.closLang.exp'),X17))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X13,X14,X15] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X13),s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),X15))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X9,X10,X11,X12] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X9),s('type.option.option'('type.list.list'('type.num.num')),X10),s('type.num.num',X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X5,X6,X7,X8] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X5),s('type.option.option'('type.list.list'('type.num.num')),X6),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X3,X4] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X3),s('type.closLang.exp',X4))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X1,X2] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),X2))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(rectify,[],[f97])).
fof(f97,plain,(
  ? [X0] : ((s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') = s('type.list.list'('type.closLang.exp'),X0) | ? [X28] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X28))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X25,X26,X27] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X25),s('type.closLang.exp',X26),s('type.closLang.exp',X27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X23,X24] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X23),s('type.closLang.exp',X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X22] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X22))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X20,X21] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X20),s('type.closLang.exp',X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X19] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X17,X18] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X17),s('type.list.list'('type.closLang.exp'),X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X14,X15,X16] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X14),s('type.closLang.exp',X15),s('type.list.list'('type.closLang.exp'),X16))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X10,X11,X12,X13] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X10),s('type.option.option'('type.list.list'('type.num.num')),X11),s('type.num.num',X12),s('type.closLang.exp',X13))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X6,X7,X8,X9] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X6),s('type.option.option'('type.list.list'('type.num.num')),X7),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X8),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X4,X5] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X4),s('type.list.list'('type.closLang.exp'),X5))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X1,X2,X3] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X3),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X1),s('type.list.list'('type.closLang.exp'),X2)))))) & s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') != s('type.list.list'('type.closLang.exp'),X0) & ! [X54,X55,X56] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X54),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X55),s('type.list.list'('type.closLang.exp'),X56))))) & ! [X53] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X53))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X50,X51,X52] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X50),s('type.closLang.exp',X51),s('type.closLang.exp',X52))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X48,X49] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X48),s('type.closLang.exp',X49))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X47] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X47))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X46] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X46))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X44,X45] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X44),s('type.list.list'('type.closLang.exp'),X45))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X41,X42,X43] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X41),s('type.closLang.exp',X42),s('type.list.list'('type.closLang.exp'),X43))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X37,X38,X39,X40] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X37),s('type.option.option'('type.list.list'('type.num.num')),X38),s('type.num.num',X39),s('type.closLang.exp',X40))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X33,X34,X35,X36] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X33),s('type.option.option'('type.list.list'('type.num.num')),X34),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X35),s('type.closLang.exp',X36))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X31,X32] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X31),s('type.closLang.exp',X32))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X29,X30] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X29),s('type.list.list'('type.closLang.exp'),X30))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ? [X0] : ((s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') = s('type.list.list'('type.closLang.exp'),X0) | ? [X28] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X28))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X25,X26,X27] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X25),s('type.closLang.exp',X26),s('type.closLang.exp',X27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X23,X24] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X23),s('type.closLang.exp',X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X22] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X22))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X20,X21] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X20),s('type.closLang.exp',X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X19] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X17,X18] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X17),s('type.list.list'('type.closLang.exp'),X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X14,X15,X16] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X14),s('type.closLang.exp',X15),s('type.list.list'('type.closLang.exp'),X16))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X10,X11,X12,X13] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X10),s('type.option.option'('type.list.list'('type.num.num')),X11),s('type.num.num',X12),s('type.closLang.exp',X13))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X6,X7,X8,X9] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X6),s('type.option.option'('type.list.list'('type.num.num')),X7),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X8),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X4,X5] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X4),s('type.list.list'('type.closLang.exp'),X5))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X1,X2,X3] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X3),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X1),s('type.list.list'('type.closLang.exp'),X2)))))) & (s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') != s('type.list.list'('type.closLang.exp'),X0) & ! [X54,X55,X56] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X54),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X55),s('type.list.list'('type.closLang.exp'),X56))))) & ! [X53] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X53))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X50,X51,X52] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X50),s('type.closLang.exp',X51),s('type.closLang.exp',X52))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X48,X49] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X48),s('type.closLang.exp',X49))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X47] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X47))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X46] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X46))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X44,X45] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X44),s('type.list.list'('type.closLang.exp'),X45))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X41,X42,X43] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X41),s('type.closLang.exp',X42),s('type.list.list'('type.closLang.exp'),X43))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X37,X38,X39,X40] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X37),s('type.option.option'('type.list.list'('type.num.num')),X38),s('type.num.num',X39),s('type.closLang.exp',X40))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X33,X34,X35,X36] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X33),s('type.option.option'('type.list.list'('type.num.num')),X34),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X35),s('type.closLang.exp',X36))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X31,X32] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X31),s('type.closLang.exp',X32))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X29,X30] : s('type.list.list'('type.closLang.exp'),X0) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X29),s('type.list.list'('type.closLang.exp'),X30))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ((s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') = s('type.list.list'('type.closLang.exp'),X0) | ? [X28] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X28))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X25,X26,X27] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X25),s('type.closLang.exp',X26),s('type.closLang.exp',X27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X23,X24] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X23),s('type.closLang.exp',X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X22] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X22))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X20,X21] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X20),s('type.closLang.exp',X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X19] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X17,X18] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X17),s('type.list.list'('type.closLang.exp'),X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X14,X15,X16] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X14),s('type.closLang.exp',X15),s('type.list.list'('type.closLang.exp'),X16))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X10,X11,X12,X13] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X10),s('type.option.option'('type.list.list'('type.num.num')),X11),s('type.num.num',X12),s('type.closLang.exp',X13))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X6,X7,X8,X9] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X6),s('type.option.option'('type.list.list'('type.num.num')),X7),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X8),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X4,X5] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X4),s('type.list.list'('type.closLang.exp'),X5))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X1,X2,X3] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X3),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X1),s('type.list.list'('type.closLang.exp'),X2)))))) => (s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') = s('type.list.list'('type.closLang.exp'),X0) | ? [X54,X55,X56] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X54),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X55),s('type.list.list'('type.closLang.exp'),X56))))) | ? [X53] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X53))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X50,X51,X52] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X50),s('type.closLang.exp',X51),s('type.closLang.exp',X52))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X48,X49] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X48),s('type.closLang.exp',X49))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X47] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X47))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X46] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X46))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X44,X45] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X44),s('type.list.list'('type.closLang.exp'),X45))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X41,X42,X43] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X41),s('type.closLang.exp',X42),s('type.list.list'('type.closLang.exp'),X43))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X37,X38,X39,X40] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X37),s('type.option.option'('type.list.list'('type.num.num')),X38),s('type.num.num',X39),s('type.closLang.exp',X40))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X33,X34,X35,X36] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X33),s('type.option.option'('type.list.list'('type.num.num')),X34),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X35),s('type.closLang.exp',X36))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X31,X32] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X31),s('type.closLang.exp',X32))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X29,X30] : s('type.list.list'('type.closLang.exp'),X0) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X29),s('type.list.list'('type.closLang.exp'),X30))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') = s('type.list.list'('type.closLang.exp'),X6) | ? [X7] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X7))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8,X9,X10] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X8),s('type.closLang.exp',X9),s('type.closLang.exp',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X11,X9] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X11),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8,X9] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X8),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X12,X11] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X12),s('type.list.list'('type.closLang.exp'),X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X13,X8,X9] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X13),s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X13,X14,X15,X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X13),s('type.option.option'('type.list.list'('type.num.num')),X14),s('type.num.num',X15),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X13,X14,X16,X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X13),s('type.option.option'('type.list.list'('type.num.num')),X14),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X16),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X17,X11] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X17),s('type.list.list'('type.closLang.exp'),X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X18,X11,X19] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X18),s('type.list.list'('type.closLang.exp'),X11)))))) => (s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') = s('type.list.list'('type.closLang.exp'),X6) | ? [X19,X18,X11] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X18),s('type.list.list'('type.closLang.exp'),X11))))) | ? [X7] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X7))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8,X9,X10] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X8),s('type.closLang.exp',X9),s('type.closLang.exp',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X11,X9] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X11),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X17,X11] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X17),s('type.list.list'('type.closLang.exp'),X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X13,X8,X9] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X13),s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X13,X14,X15,X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X13),s('type.option.option'('type.list.list'('type.num.num')),X14),s('type.num.num',X15),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X13,X14,X16,X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X13),s('type.option.option'('type.list.list'('type.num.num')),X14),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X16),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8,X9] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X8),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X12,X11] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X12),s('type.list.list'('type.closLang.exp'),X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') = s('type.list.list'('type.closLang.exp'),X6) | ? [X7] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X7))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8,X9,X10] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X8),s('type.closLang.exp',X9),s('type.closLang.exp',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X11,X9] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X11),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8,X9] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X8),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X12,X11] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X12),s('type.list.list'('type.closLang.exp'),X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X13,X8,X9] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X13),s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X13,X14,X15,X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X13),s('type.option.option'('type.list.list'('type.num.num')),X14),s('type.num.num',X15),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X13,X14,X16,X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X13),s('type.option.option'('type.list.list'('type.num.num')),X14),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X16),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X17,X11] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X17),s('type.list.list'('type.closLang.exp'),X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X18,X11,X19] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X18),s('type.list.list'('type.closLang.exp'),X11)))))) => (s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') = s('type.list.list'('type.closLang.exp'),X6) | ? [X19,X18,X11] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X18),s('type.list.list'('type.closLang.exp'),X11))))) | ? [X7] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X7))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8,X9,X10] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X8),s('type.closLang.exp',X9),s('type.closLang.exp',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X11,X9] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X11),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X17,X11] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X17),s('type.list.list'('type.closLang.exp'),X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X13,X8,X9] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X13),s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X13,X14,X15,X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X13),s('type.option.option'('type.list.list'('type.num.num')),X14),s('type.num.num',X15),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X13,X14,X16,X8] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X13),s('type.option.option'('type.list.list'('type.num.num')),X14),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X16),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X8,X9] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X8),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X12,X11] : s('type.list.list'('type.closLang.exp'),X6) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X12),s('type.list.list'('type.closLang.exp'),X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  file('thm.closProps.closProps_25_prove_ltb','thm.closProps.closProps_25_prove_ltb')).
fof(f4224,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f423,f236])).
fof(f236,plain,(
  ( ! [X2,X1] : (s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),X2))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4225,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f419,f235])).
fof(f235,plain,(
  ( ! [X4,X3] : (s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X3),s('type.closLang.exp',X4))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4812,plain,(
  $false | $spl20),
  inference(subsumption_resolution,[],[f429,f234])).
fof(f234,plain,(
  ( ! [X6,X8,X7,X5] : (s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X5),s('type.option.option'('type.list.list'('type.num.num')),X6),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4813,plain,(
  $false | $spl22),
  inference(subsumption_resolution,[],[f431,f231])).
fof(f231,plain,(
  ( ! [X17,X16] : (s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X16),s('type.list.list'('type.closLang.exp'),X17))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4814,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f425,f232])).
fof(f232,plain,(
  ( ! [X14,X15,X13] : (s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X13),s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),X15))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4815,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f421,f230])).
fof(f230,plain,(
  ( ! [X18] : (s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4816,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f427,f233])).
fof(f233,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X9),s('type.option.option'('type.list.list'('type.num.num')),X10),s('type.num.num',X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4817,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f413,f227])).
fof(f227,plain,(
  ( ! [X24,X23,X22] : (s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X22),s('type.closLang.exp',X23),s('type.closLang.exp',X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4818,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f415,f228])).
fof(f228,plain,(
  ( ! [X21,X20] : (s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X20),s('type.closLang.exp',X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4819,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f411,f226])).
fof(f226,plain,(
  ( ! [X25] : (s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f408,plain,(
  s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') != s('type.list.list'('type.closLang.exp'),sK12) | $spl1),
  inference(cnf_transformation,[],[f408_D])).
fof(f408_D,plain,(
  s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') != s('type.list.list'('type.closLang.exp'),sK12) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f224,plain,(
  s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') != s('type.list.list'('type.closLang.exp'),sK12)),
  inference(cnf_transformation,[],[f138])).
fof(f409,plain,(
  s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') = s('type.list.list'('type.closLang.exp'),sK12) | $spl0),
  inference(cnf_transformation,[],[f409_D])).
fof(f409_D,plain,(
  s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') = s('type.list.list'('type.closLang.exp'),sK12) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f411,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK13))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | $spl2),
  inference(cnf_transformation,[],[f411_D])).
fof(f411_D,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK13))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f413,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',sK14),s('type.closLang.exp',sK15),s('type.closLang.exp',sK16))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | $spl4),
  inference(cnf_transformation,[],[f413_D])).
fof(f413_D,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',sK14),s('type.closLang.exp',sK15),s('type.closLang.exp',sK16))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f415,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),sK17),s('type.closLang.exp',sK18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | $spl6),
  inference(cnf_transformation,[],[f415_D])).
fof(f415_D,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),sK17),s('type.closLang.exp',sK18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f417,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',sK19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | $spl8),
  inference(cnf_transformation,[],[f417_D])).
fof(f417_D,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',sK19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f419,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',sK20),s('type.closLang.exp',sK21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | $spl10),
  inference(cnf_transformation,[],[f419_D])).
fof(f419_D,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',sK20),s('type.closLang.exp',sK21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f421,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',sK22))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | $spl12),
  inference(cnf_transformation,[],[f421_D])).
fof(f421_D,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',sK22))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f423,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK23),s('type.list.list'('type.closLang.exp'),sK24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | $spl14),
  inference(cnf_transformation,[],[f423_D])).
fof(f423_D,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK23),s('type.list.list'('type.closLang.exp'),sK24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f425,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),sK25),s('type.closLang.exp',sK26),s('type.list.list'('type.closLang.exp'),sK27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | $spl16),
  inference(cnf_transformation,[],[f425_D])).
fof(f425_D,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),sK25),s('type.closLang.exp',sK26),s('type.list.list'('type.closLang.exp'),sK27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f427,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK28),s('type.option.option'('type.list.list'('type.num.num')),sK29),s('type.num.num',sK30),s('type.closLang.exp',sK31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | $spl18),
  inference(cnf_transformation,[],[f427_D])).
fof(f427_D,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK28),s('type.option.option'('type.list.list'('type.num.num')),sK29),s('type.num.num',sK30),s('type.closLang.exp',sK31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f429,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),sK32),s('type.option.option'('type.list.list'('type.num.num')),sK33),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK34),s('type.closLang.exp',sK35))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | $spl20),
  inference(cnf_transformation,[],[f429_D])).
fof(f429_D,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),sK32),s('type.option.option'('type.list.list'('type.num.num')),sK33),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK34),s('type.closLang.exp',sK35))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f431,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK36),s('type.list.list'('type.closLang.exp'),sK37))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | $spl22),
  inference(cnf_transformation,[],[f431_D])).
fof(f431_D,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK36),s('type.list.list'('type.closLang.exp'),sK37))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f433,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK40),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK38),s('type.list.list'('type.closLang.exp'),sK39))))) | $spl24),
  inference(cnf_transformation,[],[f433_D])).
fof(f433_D,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK40),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK38),s('type.list.list'('type.closLang.exp'),sK39))))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f223,plain,(
  s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK40),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK38),s('type.list.list'('type.closLang.exp'),sK39))))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK36),s('type.list.list'('type.closLang.exp'),sK37))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),sK32),s('type.option.option'('type.list.list'('type.num.num')),sK33),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK34),s('type.closLang.exp',sK35))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK28),s('type.option.option'('type.list.list'('type.num.num')),sK29),s('type.num.num',sK30),s('type.closLang.exp',sK31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),sK25),s('type.closLang.exp',sK26),s('type.list.list'('type.closLang.exp'),sK27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK23),s('type.list.list'('type.closLang.exp'),sK24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',sK22))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',sK20),s('type.closLang.exp',sK21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',sK19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),sK17),s('type.closLang.exp',sK18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',sK14),s('type.closLang.exp',sK15),s('type.closLang.exp',sK16))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),sK12) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK13))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.list.list'('type.closLang.exp'),'const.list.NIL_0') = s('type.list.list'('type.closLang.exp'),sK12)),
  inference(cnf_transformation,[],[f138])).
fof(f4821,plain,(
  $false | $spl24),
  inference(subsumption_resolution,[],[f433,f225])).
fof(f225,plain,(
  ( ! [X28,X26,X27] : (s('type.list.list'('type.closLang.exp'),sK12) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28)))))) )),
  inference(cnf_transformation,[],[f138])).
% SZS output end Proof for thm.closProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 396
% Passive clauses: 1473
% Generated clauses: 4591
% Final active clauses: 396
% Final passive clauses: 879
% Input formulas: 37
% Initial clauses: 181
% 
% Duplicate literals: 154
% Trivial inequalities: 29
% Fw subsumption resolutions: 316
% 
% Simple tautologies: 145
% Equational tautologies: 34
% Forward subsumptions: 2420
% 
% Binary resolution: 2804
% Factoring: 800
% Forward superposition: 162
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 111
% Split components: 234
% SAT solver clauses: 228
% SAT solver unit clauses: 19
% SAT solver binary clauses: 45
% SAT solver learnt clauses: 1
% 
% Sat splits: 111
% Sat splitting refutations: 12
% 
% TWLsolver clauses: 227
% TWLsolver calls for satisfiability: 191
% 
% Memory used [KB]: 2558
% Time elapsed: 0.111 s
% ------------------------------
% ------------------------------
% Success in time 0.114 s
