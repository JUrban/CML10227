Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 148 next slice time: 5
dis+11_7_3 on thm.evalProps
% (136517)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 187
% Passive clauses: 3753
% Generated clauses: 23050
% Final active clauses: 156
% Final passive clauses: 3396
% Input formulas: 515
% Initial clauses: 641
% 
% Duplicate literals: 504
% Trivial inequalities: 377
% Fw subsumption resolutions: 2185
% Fw demodulations: 3889
% Bw demodulations: 29
% 
% Simple tautologies: 365
% Equational tautologies: 42
% Forward subsumptions: 11696
% 
% Binary resolution: 231
% Factoring: 1
% Forward superposition: 6800
% Backward superposition: 8220
% Self superposition: 211
% Equality factoring: 78
% Equality resolution: 31
% 
% Split clauses: 183
% Split components: 368
% SAT solver clauses: 382
% SAT solver unit clauses: 17
% SAT solver binary clauses: 154
% 
% Sat splits: 183
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 380
% TWLsolver calls for satisfiability: 84
% 
% Memory used [KB]: 14711
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 142 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.evalProps
% (136536)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Passive clauses: 557
% Generated clauses: 1329
% Final passive clauses: 549
% Input formulas: 515
% Initial clauses: 641
% 
% Duplicate literals: 1
% Trivial inequalities: 1
% Fw demodulations: 60
% Bw demodulations: 8
% Condensations: 1
% Global subsumptions: 11
% 
% Simple tautologies: 43
% Equational tautologies: 1
% Forward subsumptions: 1
% 
% Split clauses: 36
% Split components: 72
% SAT solver clauses: 1286
% SAT solver unit clauses: 1067
% SAT solver binary clauses: 123
% SAT solver learnt clauses: 22
% SAT solver learnt literals: 2
% 
% Sat splits: 36
% 
% TWLsolver clauses: 1242
% TWLsolver calls for satisfiability: 2031
% 
% Memory used [KB]: 55521
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 135 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.evalProps
% (136565)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 467
% Passive clauses: 5048
% Generated clauses: 183483
% Final active clauses: 302
% Final passive clauses: 2139
% Input formulas: 515
% Initial clauses: 641
% Discarded non-redundant clauses: 27492
% 
% Duplicate literals: 2421
% Trivial inequalities: 743
% Fw subsumption resolutions: 7871
% Fw demodulations: 54746
% Bw demodulations: 1605
% Condensations: 3522
% Global subsumptions: 152
% 
% Simple tautologies: 742
% Equational tautologies: 437
% Forward subsumptions: 85378
% Fw demodulations to eq. taut.: 320
% Bw demodulations to eq. taut.: 48
% 
% Unit resulting resolution: 41012
% Factoring: 1
% Forward superposition: 34720
% Backward superposition: 33925
% Self superposition: 377
% Equality factoring: 142
% Equality resolution: 54
% 
% Split clauses: 133
% Split components: 266
% SAT solver clauses: 5829
% SAT solver unit clauses: 1553
% SAT solver binary clauses: 2252
% 
% Sat splits: 133
% Sat splitting refutations: 361
% 
% Memory used [KB]: 258673
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 30 next slice time: 30
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.evalProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.evalProps
% SZS output start Proof for thm.evalProps
fof(f2758,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2374,f2412,f2410,f2513,f2681])).
fof(f2681,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f2680,f612])).
fof(f612,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f524])).
fof(f524,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f523])).
fof(f523,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X23,X24,X25] : ! [X26,X27,X28] : s(X23,happ(s(fun(X24,X23),X26),s(X24,happ(s(fun(X25,X24),X27),s(X25,X28))))) = s(X23,happ(s(fun(X25,X23),'_dst_x0x1_2'(s(fun(X24,X23),X26),s(fun(X25,X24),X27))),s(X25,X28)))),
  file('thm.evalProps.evalProps_38_prove_ltb','_dst_x0x1_ax')).
fof(f2680,plain,(
  s(sK0,happ(s(fun(sK2,sK0),sK6),s(sK2,happ(s(fun(sK1,sK2),sK7),s(sK1,sK16(sK3,sK1)))))) != s(sK0,happ(s(fun(sK1,sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun(sK1,sK2),sK7))),s(sK1,sK16(sK3,sK1)))) | $spl0),
  inference(forward_demodulation,[],[f2679,f627])).
fof(f627,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,X2))) = s(X0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X1),'const.semanticPrimitives.Refv_1'(s(X1,X2))),s(fun(X1,X0),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X4),s(fun('type.list.list'(X1),X0),X5)))) )),
  inference(cnf_transformation,[],[f537])).
fof(f537,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,X2))) = s(X0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X1),'const.semanticPrimitives.Refv_1'(s(X1,X2))),s(fun(X1,X0),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X4),s(fun('type.list.list'(X1),X0),X5)))),
  inference(flattening,[],[f536])).
fof(f536,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,X2))) = s(X0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X1),'const.semanticPrimitives.Refv_1'(s(X1,X2))),s(fun(X1,X0),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X4),s(fun('type.list.list'(X1),X0),X5)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X8,X7] : ! [X22,X13,X11,X10] : s(X8,happ(s(fun(X7,X8),X13),s(X7,X22))) = s(X8,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X7),'const.semanticPrimitives.Refv_1'(s(X7,X22))),s(fun(X7,X8),X13),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8),X11),s(fun('type.list.list'(X7),X8),X10)))),
  file('thm.evalProps.evalProps_38_prove_ltb','thm.semanticPrimitives.store_v_case_def|split|0')).
fof(f2679,plain,(
  s(sK0,happ(s(fun(sK1,sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun(sK1,sK2),sK7))),s(sK1,sK16(sK3,sK1)))) != s(sK0,happ(s(fun(sK2,sK0),sK6),s(sK2,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Refv_1'(s(sK1,sK16(sK3,sK1)))),s(fun(sK1,sK2),sK7),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5),s(fun('type.list.list'(sK1),sK2),sK4))))) | $spl0),
  inference(forward_demodulation,[],[f2668,f627])).
fof(f2668,plain,(
  s(sK0,happ(s(fun(sK2,sK0),sK6),s(sK2,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Refv_1'(s(sK1,sK16(sK3,sK1)))),s(fun(sK1,sK2),sK7),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5),s(fun('type.list.list'(sK1),sK2),sK4))))) != s(sK0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Refv_1'(s(sK1,sK16(sK3,sK1)))),s(fun(sK1,sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun(sK1,sK2),sK7))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5))),s(fun('type.list.list'(sK1),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'(sK1),sK2),sK4))))) | $spl0),
  inference(trivial_inequality_removal,[],[f2594])).
fof(f2594,plain,(
  s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK1)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK1),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK1)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK1),sK3))) | s(sK0,happ(s(fun(sK2,sK0),sK6),s(sK2,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Refv_1'(s(sK1,sK16(sK3,sK1)))),s(fun(sK1,sK2),sK7),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5),s(fun('type.list.list'(sK1),sK2),sK4))))) != s(sK0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Refv_1'(s(sK1,sK16(sK3,sK1)))),s(fun(sK1,sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun(sK1,sK2),sK7))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5))),s(fun('type.list.list'(sK1),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'(sK1),sK2),sK4))))) | $spl0),
  inference(superposition,[],[f678,f2410])).
fof(f678,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK1)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK1),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK1)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK1),X0))) | s(sK0,happ(s(fun(sK2,sK0),sK6),s(sK2,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),X0),s(fun(sK1,sK2),sK7),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5),s(fun('type.list.list'(sK1),sK2),sK4))))) != s(sK0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),X0),s(fun(sK1,sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun(sK1,sK2),sK7))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5))),s(fun('type.list.list'(sK1),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'(sK1),sK2),sK4)))))) )),
  inference(superposition,[],[f608,f675])).
fof(f675,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,X2) | s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X1))) != s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X2)))) )),
  inference(cnf_transformation,[],[f607])).
fof(f607,plain,(
  ! [X0,X1,X2] : ((s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X1))) != s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X1))) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X2)))))),
  inference(nnf_transformation,[],[f569])).
fof(f569,plain,(
  ! [X0,X1,X2] : (s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X1))) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(flattening,[],[f568])).
fof(f568,plain,(
  ! [X0] : ! [X1,X2] : (s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X1))) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X7] : ! [X22,X111] : (s('type.semanticPrimitives.store_v'(X7),'const.semanticPrimitives.Refv_1'(s(X7,X22))) = s('type.semanticPrimitives.store_v'(X7),'const.semanticPrimitives.Refv_1'(s(X7,X111))) <=> s(X7,X22) = s(X7,X111))),
  file('thm.evalProps.evalProps_38_prove_ltb','thm.semanticPrimitives.store_v_|49||49||split|0')).
fof(f608,plain,(
  s(sK0,happ(s(fun(sK2,sK0),sK6),s(sK2,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),sK3),s(fun(sK1,sK2),sK7),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5),s(fun('type.list.list'(sK1),sK2),sK4))))) != s(sK0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),sK3),s(fun(sK1,sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun(sK1,sK2),sK7))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5))),s(fun('type.list.list'(sK1),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'(sK1),sK2),sK4)))))),
  inference(cnf_transformation,[],[f582])).
fof(f582,plain,(
  s(sK0,happ(s(fun(sK2,sK0),sK6),s(sK2,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),sK3),s(fun(sK1,sK2),sK7),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5),s(fun('type.list.list'(sK1),sK2),sK4))))) != s(sK0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),sK3),s(fun(sK1,sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun(sK1,sK2),sK7))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5))),s(fun('type.list.list'(sK1),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'(sK1),sK2),sK4)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7])],[f570])).
fof(f570,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7] : s(X0,happ(s(fun(X2,X0),X6),s(X2,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X1),X3),s(fun(X1,X2),X7),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2),X5),s(fun('type.list.list'(X1),X2),X4))))) != s(X0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X1),X3),s(fun(X1,X0),'_dst_x0x1_2'(s(fun(X2,X0),X6),s(fun(X1,X2),X7))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),'_dst_x0x1_2'(s(fun(X2,X0),X6),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2),X5))),s(fun('type.list.list'(X1),X0),'_dst_x0x1_2'(s(fun(X2,X0),X6),s(fun('type.list.list'(X1),X2),X4)))))),
  inference(ennf_transformation,[],[f518])).
fof(f518,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7] : s(X0,happ(s(fun(X2,X0),X6),s(X2,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X1),X3),s(fun(X1,X2),X7),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2),X5),s(fun('type.list.list'(X1),X2),X4))))) = s(X0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X1),X3),s(fun(X1,X0),'_dst_x0x1_2'(s(fun(X2,X0),X6),s(fun(X1,X2),X7))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),'_dst_x0x1_2'(s(fun(X2,X0),X6),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2),X5))),s(fun('type.list.list'(X1),X0),'_dst_x0x1_2'(s(fun(X2,X0),X6),s(fun('type.list.list'(X1),X2),X4)))))),
  inference(flattening,[],[f517])).
fof(f517,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5,X6,X7] : s(X0,happ(s(fun(X2,X0),X6),s(X2,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X1),X3),s(fun(X1,X2),X7),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2),X5),s(fun('type.list.list'(X1),X2),X4))))) = s(X0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X1),X3),s(fun(X1,X0),'_dst_x0x1_2'(s(fun(X2,X0),X6),s(fun(X1,X2),X7))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),'_dst_x0x1_2'(s(fun(X2,X0),X6),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2),X5))),s(fun('type.list.list'(X1),X0),'_dst_x0x1_2'(s(fun(X2,X0),X6),s(fun('type.list.list'(X1),X2),X4)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11,X12,X13] : s(X6,happ(s(fun(X8,X6),X12),s(X8,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X7),X9),s(fun(X7,X8),X13),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8),X11),s(fun('type.list.list'(X7),X8),X10))))) = s(X6,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X7),X9),s(fun(X7,X6),'_dst_x0x1_2'(s(fun(X8,X6),X12),s(fun(X7,X8),X13))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6),'_dst_x0x1_2'(s(fun(X8,X6),X12),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8),X11))),s(fun('type.list.list'(X7),X6),'_dst_x0x1_2'(s(fun(X8,X6),X12),s(fun('type.list.list'(X7),X8),X10)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11,X12,X13] : s(X6,happ(s(fun(X8,X6),X12),s(X8,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X7),X9),s(fun(X7,X8),X13),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8),X11),s(fun('type.list.list'(X7),X8),X10))))) = s(X6,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X7),X9),s(fun(X7,X6),'_dst_x0x1_2'(s(fun(X8,X6),X12),s(fun(X7,X8),X13))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6),'_dst_x0x1_2'(s(fun(X8,X6),X12),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8),X11))),s(fun('type.list.list'(X7),X6),'_dst_x0x1_2'(s(fun(X8,X6),X12),s(fun('type.list.list'(X7),X8),X10)))))),
  file('thm.evalProps.evalProps_38_prove_ltb','thm.evalProps.evalProps_38_prove_ltb')).
fof(f2513,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f2512,f612])).
fof(f2512,plain,(
  s(sK0,happ(s(fun(sK2,sK0),sK6),s(sK2,happ(s(fun('type.list.list'(sK1),sK2),sK4),s('type.list.list'(sK1),sK18(sK3,sK1)))))) != s(sK0,happ(s(fun('type.list.list'(sK1),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'(sK1),sK2),sK4))),s('type.list.list'(sK1),sK18(sK3,sK1)))) | $spl2),
  inference(forward_demodulation,[],[f2511,f626])).
fof(f626,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun('type.list.list'(X1),X0),X5),s('type.list.list'(X1),X2))) = s(X0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X1),X2))),s(fun(X1,X0),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X4),s(fun('type.list.list'(X1),X0),X5)))) )),
  inference(cnf_transformation,[],[f535])).
fof(f535,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun('type.list.list'(X1),X0),X5),s('type.list.list'(X1),X2))) = s(X0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X1),X2))),s(fun(X1,X0),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X4),s(fun('type.list.list'(X1),X0),X5)))),
  inference(flattening,[],[f534])).
fof(f534,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : s(X0,happ(s(fun('type.list.list'(X1),X0),X5),s('type.list.list'(X1),X2))) = s(X0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X1),X2))),s(fun(X1,X0),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X4),s(fun('type.list.list'(X1),X0),X5)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X8,X7] : ! [X22,X13,X11,X10] : s(X8,happ(s(fun('type.list.list'(X7),X8),X10),s('type.list.list'(X7),X22))) = s(X8,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X7),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X7),X22))),s(fun(X7,X8),X13),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8),X11),s(fun('type.list.list'(X7),X8),X10)))),
  file('thm.evalProps.evalProps_38_prove_ltb','thm.semanticPrimitives.store_v_case_def|split|2')).
fof(f2511,plain,(
  s(sK0,happ(s(fun('type.list.list'(sK1),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'(sK1),sK2),sK4))),s('type.list.list'(sK1),sK18(sK3,sK1)))) != s(sK0,happ(s(fun(sK2,sK0),sK6),s(sK2,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK1),sK18(sK3,sK1)))),s(fun(sK1,sK2),sK7),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5),s(fun('type.list.list'(sK1),sK2),sK4))))) | $spl2),
  inference(forward_demodulation,[],[f2499,f626])).
fof(f2499,plain,(
  s(sK0,happ(s(fun(sK2,sK0),sK6),s(sK2,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK1),sK18(sK3,sK1)))),s(fun(sK1,sK2),sK7),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5),s(fun('type.list.list'(sK1),sK2),sK4))))) != s(sK0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK1),sK18(sK3,sK1)))),s(fun(sK1,sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun(sK1,sK2),sK7))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5))),s(fun('type.list.list'(sK1),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'(sK1),sK2),sK4))))) | $spl2),
  inference(trivial_inequality_removal,[],[f2425])).
fof(f2425,plain,(
  s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK1)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK1),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK1)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK1),sK3))) | s(sK0,happ(s(fun(sK2,sK0),sK6),s(sK2,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK1),sK18(sK3,sK1)))),s(fun(sK1,sK2),sK7),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5),s(fun('type.list.list'(sK1),sK2),sK4))))) != s(sK0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK1),sK18(sK3,sK1)))),s(fun(sK1,sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun(sK1,sK2),sK7))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5))),s(fun('type.list.list'(sK1),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'(sK1),sK2),sK4))))) | $spl2),
  inference(superposition,[],[f678,f2412])).
fof(f2410,plain,(
  s('type.semanticPrimitives.store_v'(sK1),sK3) = s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Refv_1'(s(sK1,sK16(sK3,sK1)))) | $spl0),
  inference(cnf_transformation,[],[f2410_D])).
fof(f2410_D,plain,(
  s('type.semanticPrimitives.store_v'(sK1),sK3) = s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Refv_1'(s(sK1,sK16(sK3,sK1)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f2412,plain,(
  s('type.semanticPrimitives.store_v'(sK1),sK3) = s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK1),sK18(sK3,sK1)))) | $spl2),
  inference(cnf_transformation,[],[f2412_D])).
fof(f2412_D,plain,(
  s('type.semanticPrimitives.store_v'(sK1),sK3) = s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK1),sK18(sK3,sK1)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f2374,plain,(
  s('type.semanticPrimitives.store_v'(sK1),sK3) = s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK1),sK18(sK3,sK1)))) | s('type.semanticPrimitives.store_v'(sK1),sK3) = s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Refv_1'(s(sK1,sK16(sK3,sK1))))),
  inference(equality_resolution,[],[f1015])).
fof(f1015,plain,(
  ( ! [X81] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK1)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK1),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK1)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK1),X81))) | s('type.semanticPrimitives.store_v'(sK1),X81) = s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK1),sK18(X81,sK1)))) | s('type.semanticPrimitives.store_v'(sK1),X81) = s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Refv_1'(s(sK1,sK16(X81,sK1))))) )),
  inference(subsumption_resolution,[],[f1014,f612])).
fof(f1014,plain,(
  ( ! [X81] : (s(sK0,happ(s(fun(sK2,sK0),sK6),s(sK2,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK17(X81,sK1)))))) != s(sK0,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5))),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK17(X81,sK1)))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK1)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK1),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK1)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK1),X81))) | s('type.semanticPrimitives.store_v'(sK1),X81) = s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK1),sK18(X81,sK1)))) | s('type.semanticPrimitives.store_v'(sK1),X81) = s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Refv_1'(s(sK1,sK16(X81,sK1))))) )),
  inference(forward_demodulation,[],[f1013,f625])).
fof(f625,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X1,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s(X1,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),s(fun(X0,X1),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4),s(fun('type.list.list'(X0),X1),X5)))) )),
  inference(cnf_transformation,[],[f533])).
fof(f533,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X1,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s(X1,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),s(fun(X0,X1),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4),s(fun('type.list.list'(X0),X1),X5)))),
  inference(flattening,[],[f532])).
fof(f532,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : s(X1,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s(X1,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),s(fun(X0,X1),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4),s(fun('type.list.list'(X0),X1),X5)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7,X8] : ! [X22,X13,X11,X10] : s(X8,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8),X11),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X22))) = s(X8,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(X7),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X22))),s(fun(X7,X8),X13),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8),X11),s(fun('type.list.list'(X7),X8),X10)))),
  file('thm.evalProps.evalProps_38_prove_ltb','thm.semanticPrimitives.store_v_case_def|split|1')).
fof(f1013,plain,(
  ( ! [X81] : (s(sK0,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5))),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK17(X81,sK1)))) != s(sK0,happ(s(fun(sK2,sK0),sK6),s(sK2,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK17(X81,sK1)))),s(fun(sK1,sK2),sK7),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5),s(fun('type.list.list'(sK1),sK2),sK4))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK1)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK1),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK1)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK1),X81))) | s('type.semanticPrimitives.store_v'(sK1),X81) = s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK1),sK18(X81,sK1)))) | s('type.semanticPrimitives.store_v'(sK1),X81) = s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Refv_1'(s(sK1,sK16(X81,sK1))))) )),
  inference(forward_demodulation,[],[f928,f625])).
fof(f928,plain,(
  ( ! [X81] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK1)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK1),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK1)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK1),X81))) | s(sK0,happ(s(fun(sK2,sK0),sK6),s(sK2,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK17(X81,sK1)))),s(fun(sK1,sK2),sK7),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5),s(fun('type.list.list'(sK1),sK2),sK4))))) != s(sK0,'const.semanticPrimitives.store_v_CASE_4'(s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK17(X81,sK1)))),s(fun(sK1,sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun(sK1,sK2),sK7))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK2),sK5))),s(fun('type.list.list'(sK1),sK0),'_dst_x0x1_2'(s(fun(sK2,sK0),sK6),s(fun('type.list.list'(sK1),sK2),sK4))))) | s('type.semanticPrimitives.store_v'(sK1),X81) = s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK1),sK18(X81,sK1)))) | s('type.semanticPrimitives.store_v'(sK1),X81) = s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Refv_1'(s(sK1,sK16(X81,sK1))))) )),
  inference(superposition,[],[f678,f636])).
fof(f636,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),sK18(X1,X0)))) | s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK17(X1,X0)))) | s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,sK16(X1,X0))))) )),
  inference(cnf_transformation,[],[f590])).
fof(f590,plain,(
  ! [X0,X1] : (s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,sK16(X1,X0)))) | s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK17(X1,X0)))) | s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),sK18(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16,sK17,sK18])],[f549])).
fof(f549,plain,(
  ! [X0,X1] : (? [X4] : s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X4))) | ? [X3] : s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X3))) | ? [X2] : s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),X2))))),
  inference(flattening,[],[f548])).
fof(f548,plain,(
  ! [X0] : ! [X1] : (? [X4] : s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X4))) | ? [X3] : s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X3))) | ? [X2] : s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),X2))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X7] : ! [X112] : (? [X22] : s('type.semanticPrimitives.store_v'(X7),X112) = s('type.semanticPrimitives.store_v'(X7),'const.semanticPrimitives.Refv_1'(s(X7,X22))) | ? [X67] : s('type.semanticPrimitives.store_v'(X7),X112) = s('type.semanticPrimitives.store_v'(X7),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X67))) | ? [X67] : s('type.semanticPrimitives.store_v'(X7),X112) = s('type.semanticPrimitives.store_v'(X7),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X7),X67))))),
  file('thm.evalProps.evalProps_38_prove_ltb','thm.semanticPrimitives.store_v_nchotomy')).
% SZS output end Proof for thm.evalProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 67
% Passive clauses: 1231
% Generated clauses: 2080
% Final active clauses: 66
% Final passive clauses: 1167
% Input formulas: 515
% Initial clauses: 69
% 
% Selected by SInE selection: 30
% SInE iterations: 1
% 
% Duplicate literals: 9
% Trivial inequalities: 25
% Fw subsumption resolutions: 87
% Fw demodulations: 335
% 
% Simple tautologies: 43
% Forward subsumptions: 320
% 
% Binary resolution: 7
% Forward superposition: 1460
% Backward superposition: 139
% Equality resolution: 15
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 4
% SAT solver unit clauses: 2
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 2
% 
% Memory used [KB]: 16119
% Time elapsed: 0.222 s
% ------------------------------
% ------------------------------
% Success in time 12.19 s
