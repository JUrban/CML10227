Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_knownProof
% (26654)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 693
% Passive clauses: 5961
% Generated clauses: 20710
% Final active clauses: 687
% Final passive clauses: 5014
% Input formulas: 132
% Initial clauses: 312
% 
% Duplicate literals: 178
% Trivial inequalities: 11
% Fw subsumption resolutions: 915
% Fw demodulations: 2595
% Bw demodulations: 5
% 
% Simple tautologies: 212
% Equational tautologies: 20
% Forward subsumptions: 10461
% Fw demodulations to eq. taut.: 18
% 
% Binary resolution: 4324
% Factoring: 927
% Forward superposition: 3801
% Backward superposition: 7417
% Self superposition: 92
% Equality factoring: 2
% Equality resolution: 4
% 
% Split clauses: 340
% Split components: 681
% SAT solver clauses: 488
% SAT solver unit clauses: 12
% SAT solver binary clauses: 48
% 
% Sat splits: 340
% 
% TWLsolver clauses: 488
% TWLsolver calls for satisfiability: 294
% 
% Memory used [KB]: 20340
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.clos_knownProof
% (26671)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 350
% Passive clauses: 2480
% Generated clauses: 14070
% Final active clauses: 337
% Final passive clauses: 1901
% Input formulas: 132
% Initial clauses: 312
% 
% Duplicate literals: 87
% Trivial inequalities: 4
% Fw subsumption resolutions: 408
% Fw demodulations: 1788
% Bw demodulations: 239
% Condensations: 117
% Global subsumptions: 19
% 
% Simple tautologies: 183
% Equational tautologies: 5
% Forward subsumptions: 6219
% Fw demodulations to eq. taut.: 20
% 
% Binary resolution: 1687
% Factoring: 261
% Forward superposition: 3026
% Backward superposition: 3475
% Self superposition: 103
% Equality factoring: 2
% Equality resolution: 3
% 
% Split clauses: 10
% Split components: 20
% SAT solver clauses: 3031
% SAT solver unit clauses: 381
% SAT solver binary clauses: 92
% SAT solver learnt clauses: 38
% SAT solver learnt literals: 12
% 
% Sat splits: 10
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 2955
% TWLsolver calls for satisfiability: 4547
% 
% Memory used [KB]: 26865
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.clos_knownProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_knownProof
% SZS output start Proof for thm.clos_knownProof
fof(f3920,plain,(
  $false),
  inference(unit_resulting_resolution,[],[f695,f512])).
fof(f512,plain,(
  ( ! [X4,X3] : (s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.clos_known.val_approx',X3),s('type.sptree.spt'('type.clos_known.val_approx'),X4))) != s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_op_3'(s('type.closLang.op',sK18),s('type.list.list'('type.clos_known.val_approx'),'const.list.REVERSE_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'type.clos_known.val_approx'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),sK20))))),s('type.sptree.spt'('type.clos_known.val_approx'),sK19)))) )),
  inference(cnf_transformation,[],[f393])).
fof(f393,plain,(
  ! [X3,X4] : s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.clos_known.val_approx',X3),s('type.sptree.spt'('type.clos_known.val_approx'),X4))) != s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_op_3'(s('type.closLang.op',sK18),s('type.list.list'('type.clos_known.val_approx'),'const.list.REVERSE_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'type.clos_known.val_approx'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),sK20))))),s('type.sptree.spt'('type.clos_known.val_approx'),sK19)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK18,sK19,sK20])],[f337])).
fof(f337,plain,(
  ? [X0,X1,X2] : ! [X3,X4] : s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.clos_known.val_approx',X3),s('type.sptree.spt'('type.clos_known.val_approx'),X4))) != s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_op_3'(s('type.closLang.op',X0),s('type.list.list'('type.clos_known.val_approx'),'const.list.REVERSE_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'type.clos_known.val_approx'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),X2))))),s('type.sptree.spt'('type.clos_known.val_approx'),X1)))),
  inference(ennf_transformation,[],[f134])).
fof(f134,plain,(
  ~! [X0,X1,X2] : ? [X3,X4] : s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.clos_known.val_approx',X3),s('type.sptree.spt'('type.clos_known.val_approx'),X4))) = s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_op_3'(s('type.closLang.op',X0),s('type.list.list'('type.clos_known.val_approx'),'const.list.REVERSE_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'type.clos_known.val_approx'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),X2))))),s('type.sptree.spt'('type.clos_known.val_approx'),X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ? [X9,X10] : s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.clos_known.val_approx',X9),s('type.sptree.spt'('type.clos_known.val_approx'),X10))) = s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_op_3'(s('type.closLang.op',X6),s('type.list.list'('type.clos_known.val_approx'),'const.list.REVERSE_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'type.clos_known.val_approx'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),X8))))),s('type.sptree.spt'('type.clos_known.val_approx'),X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ? [X9,X10] : s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.clos_known.val_approx',X9),s('type.sptree.spt'('type.clos_known.val_approx'),X10))) = s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_op_3'(s('type.closLang.op',X6),s('type.list.list'('type.clos_known.val_approx'),'const.list.REVERSE_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'type.clos_known.val_approx'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),X8))))),s('type.sptree.spt'('type.clos_known.val_approx'),X7)))),
  file('thm.clos_knownProof.clos_knownProof_|49|8_prove_ltb','thm.clos_knownProof.clos_knownProof_|49|8_prove_ltb')).
fof(f695,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK77(X2,X1,X0)),s(X1,sK78(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f475])).
fof(f475,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK77(X2,X1,X0)),s(X1,sK78(X2,X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK77,sK78])],[f234])).
fof(f234,plain,(
  ! [X0,X1,X2] : ? [X3,X4] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))),
  inference(flattening,[],[f233])).
fof(f233,plain,(
  ! [X0,X1] : ! [X2] : ? [X3,X4] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))),
  inference(rectify,[],[f103])).
fof(f103,axiom,(
  ! [X39,X38] : ! [X13] : ? [X64,X63] : s('type.pair.prod'(X39,X38),X13) = s('type.pair.prod'(X39,X38),'const.pair.,_2'(s(X39,X64),s(X38,X63)))),
  file('thm.clos_knownProof.clos_knownProof_|49|8_prove_ltb','thm.pair.ABS_PAIR_THM')).
% SZS output end Proof for thm.clos_knownProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 230
% Passive clauses: 744
% Generated clauses: 3421
% Final active clauses: 225
% Final passive clauses: 430
% Input formulas: 132
% Initial clauses: 312
% 
% Duplicate literals: 10
% Trivial inequalities: 2
% Fw subsumption resolutions: 18
% Fw demodulations: 399
% Bw demodulations: 89
% Condensations: 20
% 
% Simple tautologies: 75
% Equational tautologies: 14
% Forward subsumptions: 2125
% 
% Unit resulting resolution: 657
% Factoring: 1
% Forward superposition: 942
% Backward superposition: 942
% Self superposition: 26
% Equality factoring: 2
% Equality resolution: 1
% 
% SAT solver clauses: 746
% SAT solver unit clauses: 391
% SAT solver binary clauses: 197
% 
% Memory used [KB]: 5117
% Time elapsed: 0.086 s
% ------------------------------
% ------------------------------
% Success in time 1.418 s
