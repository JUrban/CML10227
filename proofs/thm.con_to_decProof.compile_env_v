Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.con_to_decProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.con_to_decProof
% SZS output start Proof for thm.con_to_decProof
fof(f7886,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f7856])).
fof(f7856,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',sK0))) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',sK0)))),
  inference(superposition,[],[f36,f4285])).
fof(f4285,plain,(
  ( ! [X0] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',X0)))))) )),
  inference(superposition,[],[f1793,f40])).
fof(f40,plain,(
  ( ! [X0] : (s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',X0))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0))))),s('type.decSem.environment','const.bool.ARB_0')))))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0] : s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',X0))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0))))),s('type.decSem.environment','const.bool.ARB_0')))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',X6))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X6))))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X6))))),s('type.decSem.environment','const.bool.ARB_0')))))),
  file('thm.con_to_decProof.compile_env_v','thm.con_to_decProof.compile_env_def')).
fof(f1793,plain,(
  ( ! [X2,X3] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2))),s('type.decSem.environment',X3)))))) )),
  inference(superposition,[],[f46,f291])).
fof(f291,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(forward_demodulation,[],[f49,f48])).
fof(f48,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X9,X7] : ! [X8,X10] : s(X7,X8) = s(X7,'const.combin.K_2'(s(X7,X8),s(X9,X10)))),
  file('thm.con_to_decProof.compile_env_v','thm.combin.K_THM')).
fof(f49,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X7,X9] : ! [X13,X14] : s(X7,'const.combin.K_2'(s(X7,X13),s(X9,X14))) = s(X7,happ(s(fun(X9,X7),'const.combin.K_1'(s(X7,X13))),s(X9,X14)))),
  file('thm.con_to_decProof.compile_env_v','ARITY_1_2_const.combin.K')).
fof(f46,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.decSem.environment',X1))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment',X1)))))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0,X1] : s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.decSem.environment',X1))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment',X1)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X11,X12] : s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X11),s('type.decSem.environment',X12))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment',X12)))))),
  file('thm.con_to_decProof.compile_env_v','thm.decSem.decSem_79_prove_ltb')).
fof(f36,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',sK0))) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',sK0)))))),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',sK0))) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',sK0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f31])).
fof(f31,plain,(
  ? [X0] : s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',X0)))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ~! [X0] : s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X6))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X6))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.con_to_decProof.compile_env_1'(s('type.conSem.environment',X6)))))),
  file('thm.con_to_decProof.compile_env_v','thm.con_to_decProof.compile_env_v')).
% SZS output end Proof for thm.con_to_decProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 74
% Passive clauses: 532
% Generated clauses: 7685
% Final active clauses: 70
% Final passive clauses: 375
% Input formulas: 14
% Initial clauses: 15
% 
% Duplicate literals: 507
% Trivial inequalities: 104
% Fw subsumption resolutions: 716
% Fw demodulations: 669
% Bw demodulations: 2
% 
% Simple tautologies: 118
% Equational tautologies: 21
% Forward subsumptions: 4784
% 
% Binary resolution: 6
% Forward superposition: 2918
% Backward superposition: 2500
% Self superposition: 134
% Equality factoring: 51
% Equality resolution: 7
% 
% Split clauses: 143
% Split components: 294
% SAT solver clauses: 284
% SAT solver unit clauses: 15
% SAT solver binary clauses: 66
% 
% Sat splits: 143
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 284
% TWLsolver calls for satisfiability: 57
% 
% Memory used [KB]: 5117
% Time elapsed: 0.314 s
% ------------------------------
% ------------------------------
% Success in time 0.36 s
