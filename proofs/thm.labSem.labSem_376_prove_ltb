Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.labSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.labSem
% SZS output start Proof for thm.labSem
fof(f2258,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2257,f133,f239,f237,f235,f233,f231,f2025,f2024,f134,f230,f2026])).
fof(f2026,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f235,f136])).
fof(f136,plain,(
  ( ! [X19,X17,X15,X20,X18,X16] : (s('type.list.list'('type.labLang.sec'(sK6)),sK7) != s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',X15),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.Label_3'(s('type.num.num',X16),s('type.num.num',X17),s('type.num.num',X18))),s('type.list.list'('type.labLang.line'(sK6)),X19))))),s('type.list.list'('type.labLang.sec'(sK6)),X20)))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  (s('type.list.list'('type.labLang.sec'(sK6)),'const.list.NIL_0') = s('type.list.list'('type.labLang.sec'(sK6)),sK7) | s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK8),s('type.list.list'('type.labLang.line'(sK6)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(sK6)),sK9))) | s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK10),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.Label_3'(s('type.num.num',sK11),s('type.num.num',sK12),s('type.num.num',sK13))),s('type.list.list'('type.labLang.line'(sK6)),sK14))))),s('type.list.list'('type.labLang.sec'(sK6)),sK15))) | s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK16),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.Asm_3'(s('type.asm.asm'(sK6),sK17),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK18),s('type.num.num',sK19))),s('type.list.list'('type.labLang.line'(sK6)),sK20))))),s('type.list.list'('type.labLang.sec'(sK6)),sK21))) | s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK22),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(sK6),sK23),s('type.fcp.cart'(bool,sK6),sK24),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK25),s('type.num.num',sK26))),s('type.list.list'('type.labLang.line'(sK6)),sK27))))),s('type.list.list'('type.labLang.sec'(sK6)),sK28)))) & s('type.list.list'('type.labLang.sec'(sK6)),'const.list.NIL_0') != s('type.list.list'('type.labLang.sec'(sK6)),sK7) & ! [X21,X22] : s('type.list.list'('type.labLang.sec'(sK6)),sK7) != s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',X21),s('type.list.list'('type.labLang.line'(sK6)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(sK6)),X22))) & ! [X15,X16,X17,X18,X19,X20] : s('type.list.list'('type.labLang.sec'(sK6)),sK7) != s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',X15),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.Label_3'(s('type.num.num',X16),s('type.num.num',X17),s('type.num.num',X18))),s('type.list.list'('type.labLang.line'(sK6)),X19))))),s('type.list.list'('type.labLang.sec'(sK6)),X20))) & ! [X9,X10,X11,X12,X13,X14] : s('type.list.list'('type.labLang.sec'(sK6)),sK7) != s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',X9),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.Asm_3'(s('type.asm.asm'(sK6),X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),s('type.num.num',X12))),s('type.list.list'('type.labLang.line'(sK6)),X13))))),s('type.list.list'('type.labLang.sec'(sK6)),X14))) & ! [X2,X3,X4,X5,X6,X7,X8] : s('type.list.list'('type.labLang.sec'(sK6)),sK7) != s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',X2),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(sK6),X3),s('type.fcp.cart'(bool,sK6),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X5),s('type.num.num',X6))),s('type.list.list'('type.labLang.line'(sK6)),X7))))),s('type.list.list'('type.labLang.sec'(sK6)),X8)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28])],[f90])).
fof(f90,plain,(
  ? [X0,X1] : ((s('type.list.list'('type.labLang.sec'(X0)),'const.list.NIL_0') = s('type.list.list'('type.labLang.sec'(X0)),X1) | ? [X42,X43] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X42),s('type.list.list'('type.labLang.line'(X0)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(X0)),X43))) | ? [X36,X37,X38,X39,X40,X41] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X36),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Label_3'(s('type.num.num',X37),s('type.num.num',X38),s('type.num.num',X39))),s('type.list.list'('type.labLang.line'(X0)),X40))))),s('type.list.list'('type.labLang.sec'(X0)),X41))) | ? [X30,X31,X32,X33,X34,X35] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X30),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Asm_3'(s('type.asm.asm'(X0),X31),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X32),s('type.num.num',X33))),s('type.list.list'('type.labLang.line'(X0)),X34))))),s('type.list.list'('type.labLang.sec'(X0)),X35))) | ? [X23,X24,X25,X26,X27,X28,X29] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X23),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(X0),X24),s('type.fcp.cart'(bool,X0),X25),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X26),s('type.num.num',X27))),s('type.list.list'('type.labLang.line'(X0)),X28))))),s('type.list.list'('type.labLang.sec'(X0)),X29)))) & s('type.list.list'('type.labLang.sec'(X0)),'const.list.NIL_0') != s('type.list.list'('type.labLang.sec'(X0)),X1) & ! [X21,X22] : s('type.list.list'('type.labLang.sec'(X0)),X1) != s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X21),s('type.list.list'('type.labLang.line'(X0)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(X0)),X22))) & ! [X15,X16,X17,X18,X19,X20] : s('type.list.list'('type.labLang.sec'(X0)),X1) != s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X15),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Label_3'(s('type.num.num',X16),s('type.num.num',X17),s('type.num.num',X18))),s('type.list.list'('type.labLang.line'(X0)),X19))))),s('type.list.list'('type.labLang.sec'(X0)),X20))) & ! [X9,X10,X11,X12,X13,X14] : s('type.list.list'('type.labLang.sec'(X0)),X1) != s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X9),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Asm_3'(s('type.asm.asm'(X0),X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),s('type.num.num',X12))),s('type.list.list'('type.labLang.line'(X0)),X13))))),s('type.list.list'('type.labLang.sec'(X0)),X14))) & ! [X2,X3,X4,X5,X6,X7,X8] : s('type.list.list'('type.labLang.sec'(X0)),X1) != s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X2),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(X0),X3),s('type.fcp.cart'(bool,X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X5),s('type.num.num',X6))),s('type.list.list'('type.labLang.line'(X0)),X7))))),s('type.list.list'('type.labLang.sec'(X0)),X8))))),
  inference(rectify,[],[f65])).
fof(f65,plain,(
  ? [X0,X1] : ((s('type.list.list'('type.labLang.sec'(X0)),'const.list.NIL_0') = s('type.list.list'('type.labLang.sec'(X0)),X1) | ? [X21,X22] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X21),s('type.list.list'('type.labLang.line'(X0)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(X0)),X22))) | ? [X15,X16,X17,X18,X19,X20] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X15),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Label_3'(s('type.num.num',X16),s('type.num.num',X17),s('type.num.num',X18))),s('type.list.list'('type.labLang.line'(X0)),X19))))),s('type.list.list'('type.labLang.sec'(X0)),X20))) | ? [X9,X10,X11,X12,X13,X14] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X9),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Asm_3'(s('type.asm.asm'(X0),X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),s('type.num.num',X12))),s('type.list.list'('type.labLang.line'(X0)),X13))))),s('type.list.list'('type.labLang.sec'(X0)),X14))) | ? [X2,X3,X4,X5,X6,X7,X8] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X2),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(X0),X3),s('type.fcp.cart'(bool,X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X5),s('type.num.num',X6))),s('type.list.list'('type.labLang.line'(X0)),X7))))),s('type.list.list'('type.labLang.sec'(X0)),X8)))) & s('type.list.list'('type.labLang.sec'(X0)),'const.list.NIL_0') != s('type.list.list'('type.labLang.sec'(X0)),X1) & ! [X42,X43] : s('type.list.list'('type.labLang.sec'(X0)),X1) != s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X42),s('type.list.list'('type.labLang.line'(X0)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(X0)),X43))) & ! [X36,X37,X38,X39,X40,X41] : s('type.list.list'('type.labLang.sec'(X0)),X1) != s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X36),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Label_3'(s('type.num.num',X37),s('type.num.num',X38),s('type.num.num',X39))),s('type.list.list'('type.labLang.line'(X0)),X40))))),s('type.list.list'('type.labLang.sec'(X0)),X41))) & ! [X30,X31,X32,X33,X34,X35] : s('type.list.list'('type.labLang.sec'(X0)),X1) != s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X30),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Asm_3'(s('type.asm.asm'(X0),X31),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X32),s('type.num.num',X33))),s('type.list.list'('type.labLang.line'(X0)),X34))))),s('type.list.list'('type.labLang.sec'(X0)),X35))) & ! [X23,X24,X25,X26,X27,X28,X29] : s('type.list.list'('type.labLang.sec'(X0)),X1) != s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X23),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(X0),X24),s('type.fcp.cart'(bool,X0),X25),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X26),s('type.num.num',X27))),s('type.list.list'('type.labLang.line'(X0)),X28))))),s('type.list.list'('type.labLang.sec'(X0)),X29))))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ? [X0,X1] : ((s('type.list.list'('type.labLang.sec'(X0)),'const.list.NIL_0') = s('type.list.list'('type.labLang.sec'(X0)),X1) | ? [X21,X22] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X21),s('type.list.list'('type.labLang.line'(X0)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(X0)),X22))) | ? [X15,X16,X17,X18,X19,X20] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X15),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Label_3'(s('type.num.num',X16),s('type.num.num',X17),s('type.num.num',X18))),s('type.list.list'('type.labLang.line'(X0)),X19))))),s('type.list.list'('type.labLang.sec'(X0)),X20))) | ? [X9,X10,X11,X12,X13,X14] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X9),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Asm_3'(s('type.asm.asm'(X0),X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),s('type.num.num',X12))),s('type.list.list'('type.labLang.line'(X0)),X13))))),s('type.list.list'('type.labLang.sec'(X0)),X14))) | ? [X2,X3,X4,X5,X6,X7,X8] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X2),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(X0),X3),s('type.fcp.cart'(bool,X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X5),s('type.num.num',X6))),s('type.list.list'('type.labLang.line'(X0)),X7))))),s('type.list.list'('type.labLang.sec'(X0)),X8)))) & (s('type.list.list'('type.labLang.sec'(X0)),'const.list.NIL_0') != s('type.list.list'('type.labLang.sec'(X0)),X1) & ! [X42,X43] : s('type.list.list'('type.labLang.sec'(X0)),X1) != s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X42),s('type.list.list'('type.labLang.line'(X0)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(X0)),X43))) & ! [X36,X37,X38,X39,X40,X41] : s('type.list.list'('type.labLang.sec'(X0)),X1) != s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X36),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Label_3'(s('type.num.num',X37),s('type.num.num',X38),s('type.num.num',X39))),s('type.list.list'('type.labLang.line'(X0)),X40))))),s('type.list.list'('type.labLang.sec'(X0)),X41))) & ! [X30,X31,X32,X33,X34,X35] : s('type.list.list'('type.labLang.sec'(X0)),X1) != s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X30),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Asm_3'(s('type.asm.asm'(X0),X31),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X32),s('type.num.num',X33))),s('type.list.list'('type.labLang.line'(X0)),X34))))),s('type.list.list'('type.labLang.sec'(X0)),X35))) & ! [X23,X24,X25,X26,X27,X28,X29] : s('type.list.list'('type.labLang.sec'(X0)),X1) != s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X23),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(X0),X24),s('type.fcp.cart'(bool,X0),X25),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X26),s('type.num.num',X27))),s('type.list.list'('type.labLang.line'(X0)),X28))))),s('type.list.list'('type.labLang.sec'(X0)),X29)))))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ~! [X0,X1] : ((s('type.list.list'('type.labLang.sec'(X0)),'const.list.NIL_0') = s('type.list.list'('type.labLang.sec'(X0)),X1) | ? [X21,X22] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X21),s('type.list.list'('type.labLang.line'(X0)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(X0)),X22))) | ? [X15,X16,X17,X18,X19,X20] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X15),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Label_3'(s('type.num.num',X16),s('type.num.num',X17),s('type.num.num',X18))),s('type.list.list'('type.labLang.line'(X0)),X19))))),s('type.list.list'('type.labLang.sec'(X0)),X20))) | ? [X9,X10,X11,X12,X13,X14] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X9),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Asm_3'(s('type.asm.asm'(X0),X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),s('type.num.num',X12))),s('type.list.list'('type.labLang.line'(X0)),X13))))),s('type.list.list'('type.labLang.sec'(X0)),X14))) | ? [X2,X3,X4,X5,X6,X7,X8] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X2),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(X0),X3),s('type.fcp.cart'(bool,X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X5),s('type.num.num',X6))),s('type.list.list'('type.labLang.line'(X0)),X7))))),s('type.list.list'('type.labLang.sec'(X0)),X8)))) => (s('type.list.list'('type.labLang.sec'(X0)),'const.list.NIL_0') = s('type.list.list'('type.labLang.sec'(X0)),X1) | ? [X42,X43] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X42),s('type.list.list'('type.labLang.line'(X0)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(X0)),X43))) | ? [X36,X37,X38,X39,X40,X41] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X36),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Label_3'(s('type.num.num',X37),s('type.num.num',X38),s('type.num.num',X39))),s('type.list.list'('type.labLang.line'(X0)),X40))))),s('type.list.list'('type.labLang.sec'(X0)),X41))) | ? [X30,X31,X32,X33,X34,X35] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X30),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Asm_3'(s('type.asm.asm'(X0),X31),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X32),s('type.num.num',X33))),s('type.list.list'('type.labLang.line'(X0)),X34))))),s('type.list.list'('type.labLang.sec'(X0)),X35))) | ? [X23,X24,X25,X26,X27,X28,X29] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X23),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(X0),X24),s('type.fcp.cart'(bool,X0),X25),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X26),s('type.num.num',X27))),s('type.list.list'('type.labLang.line'(X0)),X28))))),s('type.list.list'('type.labLang.sec'(X0)),X29)))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ~! [X0] : ! [X1] : ((s('type.list.list'('type.labLang.sec'(X0)),'const.list.NIL_0') = s('type.list.list'('type.labLang.sec'(X0)),X1) | ? [X21,X22] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X21),s('type.list.list'('type.labLang.line'(X0)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(X0)),X22))) | ? [X15,X16,X17,X18,X19,X20] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X15),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Label_3'(s('type.num.num',X16),s('type.num.num',X17),s('type.num.num',X18))),s('type.list.list'('type.labLang.line'(X0)),X19))))),s('type.list.list'('type.labLang.sec'(X0)),X20))) | ? [X9,X10,X11,X12,X13,X14] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X9),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Asm_3'(s('type.asm.asm'(X0),X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),s('type.num.num',X12))),s('type.list.list'('type.labLang.line'(X0)),X13))))),s('type.list.list'('type.labLang.sec'(X0)),X14))) | ? [X2,X3,X4,X5,X6,X7,X8] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X2),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(X0),X3),s('type.fcp.cart'(bool,X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X5),s('type.num.num',X6))),s('type.list.list'('type.labLang.line'(X0)),X7))))),s('type.list.list'('type.labLang.sec'(X0)),X8)))) => (s('type.list.list'('type.labLang.sec'(X0)),'const.list.NIL_0') = s('type.list.list'('type.labLang.sec'(X0)),X1) | ? [X42,X43] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X42),s('type.list.list'('type.labLang.line'(X0)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(X0)),X43))) | ? [X36,X37,X38,X39,X40,X41] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X36),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Label_3'(s('type.num.num',X37),s('type.num.num',X38),s('type.num.num',X39))),s('type.list.list'('type.labLang.line'(X0)),X40))))),s('type.list.list'('type.labLang.sec'(X0)),X41))) | ? [X30,X31,X32,X33,X34,X35] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X30),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.Asm_3'(s('type.asm.asm'(X0),X31),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X32),s('type.num.num',X33))),s('type.list.list'('type.labLang.line'(X0)),X34))))),s('type.list.list'('type.labLang.sec'(X0)),X35))) | ? [X23,X24,X25,X26,X27,X28,X29] : s('type.list.list'('type.labLang.sec'(X0)),X1) = s('type.list.list'('type.labLang.sec'(X0)),'const.list.CONS_2'(s('type.labLang.sec'(X0),'const.labLang.Section_2'(s('type.num.num',X23),s('type.list.list'('type.labLang.line'(X0)),'const.list.CONS_2'(s('type.labLang.line'(X0),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(X0),X24),s('type.fcp.cart'(bool,X0),X25),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X26),s('type.num.num',X27))),s('type.list.list'('type.labLang.line'(X0)),X28))))),s('type.list.list'('type.labLang.sec'(X0)),X29)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((s('type.list.list'('type.labLang.sec'(X6)),'const.list.NIL_0') = s('type.list.list'('type.labLang.sec'(X6)),X7) | ? [X8,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(X6)),X9))) | ? [X8,X10,X11,X12,X13,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.CONS_2'(s('type.labLang.line'(X6),'const.labLang.Label_3'(s('type.num.num',X10),s('type.num.num',X11),s('type.num.num',X12))),s('type.list.list'('type.labLang.line'(X6)),X13))))),s('type.list.list'('type.labLang.sec'(X6)),X9))) | ? [X8,X14,X15,X16,X13,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.CONS_2'(s('type.labLang.line'(X6),'const.labLang.Asm_3'(s('type.asm.asm'(X6),X14),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15),s('type.num.num',X16))),s('type.list.list'('type.labLang.line'(X6)),X13))))),s('type.list.list'('type.labLang.sec'(X6)),X9))) | ? [X8,X17,X18,X19,X20,X13,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.CONS_2'(s('type.labLang.line'(X6),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(X6),X17),s('type.fcp.cart'(bool,X6),X18),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19),s('type.num.num',X20))),s('type.list.list'('type.labLang.line'(X6)),X13))))),s('type.list.list'('type.labLang.sec'(X6)),X9)))) => (s('type.list.list'('type.labLang.sec'(X6)),'const.list.NIL_0') = s('type.list.list'('type.labLang.sec'(X6)),X7) | ? [X8,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(X6)),X9))) | ? [X8,X10,X11,X12,X13,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.CONS_2'(s('type.labLang.line'(X6),'const.labLang.Label_3'(s('type.num.num',X10),s('type.num.num',X11),s('type.num.num',X12))),s('type.list.list'('type.labLang.line'(X6)),X13))))),s('type.list.list'('type.labLang.sec'(X6)),X9))) | ? [X8,X14,X15,X16,X13,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.CONS_2'(s('type.labLang.line'(X6),'const.labLang.Asm_3'(s('type.asm.asm'(X6),X14),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15),s('type.num.num',X16))),s('type.list.list'('type.labLang.line'(X6)),X13))))),s('type.list.list'('type.labLang.sec'(X6)),X9))) | ? [X8,X17,X18,X19,X20,X13,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.CONS_2'(s('type.labLang.line'(X6),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(X6),X17),s('type.fcp.cart'(bool,X6),X18),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19),s('type.num.num',X20))),s('type.list.list'('type.labLang.line'(X6)),X13))))),s('type.list.list'('type.labLang.sec'(X6)),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((s('type.list.list'('type.labLang.sec'(X6)),'const.list.NIL_0') = s('type.list.list'('type.labLang.sec'(X6)),X7) | ? [X8,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(X6)),X9))) | ? [X8,X10,X11,X12,X13,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.CONS_2'(s('type.labLang.line'(X6),'const.labLang.Label_3'(s('type.num.num',X10),s('type.num.num',X11),s('type.num.num',X12))),s('type.list.list'('type.labLang.line'(X6)),X13))))),s('type.list.list'('type.labLang.sec'(X6)),X9))) | ? [X8,X14,X15,X16,X13,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.CONS_2'(s('type.labLang.line'(X6),'const.labLang.Asm_3'(s('type.asm.asm'(X6),X14),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15),s('type.num.num',X16))),s('type.list.list'('type.labLang.line'(X6)),X13))))),s('type.list.list'('type.labLang.sec'(X6)),X9))) | ? [X8,X17,X18,X19,X20,X13,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.CONS_2'(s('type.labLang.line'(X6),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(X6),X17),s('type.fcp.cart'(bool,X6),X18),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19),s('type.num.num',X20))),s('type.list.list'('type.labLang.line'(X6)),X13))))),s('type.list.list'('type.labLang.sec'(X6)),X9)))) => (s('type.list.list'('type.labLang.sec'(X6)),'const.list.NIL_0') = s('type.list.list'('type.labLang.sec'(X6)),X7) | ? [X8,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(X6)),X9))) | ? [X8,X10,X11,X12,X13,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.CONS_2'(s('type.labLang.line'(X6),'const.labLang.Label_3'(s('type.num.num',X10),s('type.num.num',X11),s('type.num.num',X12))),s('type.list.list'('type.labLang.line'(X6)),X13))))),s('type.list.list'('type.labLang.sec'(X6)),X9))) | ? [X8,X14,X15,X16,X13,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.CONS_2'(s('type.labLang.line'(X6),'const.labLang.Asm_3'(s('type.asm.asm'(X6),X14),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15),s('type.num.num',X16))),s('type.list.list'('type.labLang.line'(X6)),X13))))),s('type.list.list'('type.labLang.sec'(X6)),X9))) | ? [X8,X17,X18,X19,X20,X13,X9] : s('type.list.list'('type.labLang.sec'(X6)),X7) = s('type.list.list'('type.labLang.sec'(X6)),'const.list.CONS_2'(s('type.labLang.sec'(X6),'const.labLang.Section_2'(s('type.num.num',X8),s('type.list.list'('type.labLang.line'(X6)),'const.list.CONS_2'(s('type.labLang.line'(X6),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(X6),X17),s('type.fcp.cart'(bool,X6),X18),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19),s('type.num.num',X20))),s('type.list.list'('type.labLang.line'(X6)),X13))))),s('type.list.list'('type.labLang.sec'(X6)),X9)))))),
  file('thm.labSem.labSem_376_prove_ltb','thm.labSem.labSem_376_prove_ltb')).
fof(f230,plain,(
  s('type.list.list'('type.labLang.sec'(sK6)),'const.list.NIL_0') != s('type.list.list'('type.labLang.sec'(sK6)),sK7) | $spl1),
  inference(cnf_transformation,[],[f230_D])).
fof(f230_D,plain,(
  s('type.list.list'('type.labLang.sec'(sK6)),'const.list.NIL_0') != s('type.list.list'('type.labLang.sec'(sK6)),sK7) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f134,plain,(
  s('type.list.list'('type.labLang.sec'(sK6)),'const.list.NIL_0') != s('type.list.list'('type.labLang.sec'(sK6)),sK7)),
  inference(cnf_transformation,[],[f91])).
fof(f2024,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f237,f137])).
fof(f137,plain,(
  ( ! [X14,X12,X10,X13,X11,X9] : (s('type.list.list'('type.labLang.sec'(sK6)),sK7) != s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',X9),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.Asm_3'(s('type.asm.asm'(sK6),X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11),s('type.num.num',X12))),s('type.list.list'('type.labLang.line'(sK6)),X13))))),s('type.list.list'('type.labLang.sec'(sK6)),X14)))) )),
  inference(cnf_transformation,[],[f91])).
fof(f2025,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f233,f135])).
fof(f135,plain,(
  ( ! [X21,X22] : (s('type.list.list'('type.labLang.sec'(sK6)),sK7) != s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',X21),s('type.list.list'('type.labLang.line'(sK6)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(sK6)),X22)))) )),
  inference(cnf_transformation,[],[f91])).
fof(f231,plain,(
  s('type.list.list'('type.labLang.sec'(sK6)),'const.list.NIL_0') = s('type.list.list'('type.labLang.sec'(sK6)),sK7) | $spl0),
  inference(cnf_transformation,[],[f231_D])).
fof(f231_D,plain,(
  s('type.list.list'('type.labLang.sec'(sK6)),'const.list.NIL_0') = s('type.list.list'('type.labLang.sec'(sK6)),sK7) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f233,plain,(
  s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK8),s('type.list.list'('type.labLang.line'(sK6)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(sK6)),sK9))) | $spl2),
  inference(cnf_transformation,[],[f233_D])).
fof(f233_D,plain,(
  s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK8),s('type.list.list'('type.labLang.line'(sK6)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(sK6)),sK9))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f235,plain,(
  s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK10),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.Label_3'(s('type.num.num',sK11),s('type.num.num',sK12),s('type.num.num',sK13))),s('type.list.list'('type.labLang.line'(sK6)),sK14))))),s('type.list.list'('type.labLang.sec'(sK6)),sK15))) | $spl4),
  inference(cnf_transformation,[],[f235_D])).
fof(f235_D,plain,(
  s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK10),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.Label_3'(s('type.num.num',sK11),s('type.num.num',sK12),s('type.num.num',sK13))),s('type.list.list'('type.labLang.line'(sK6)),sK14))))),s('type.list.list'('type.labLang.sec'(sK6)),sK15))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f237,plain,(
  s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK16),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.Asm_3'(s('type.asm.asm'(sK6),sK17),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK18),s('type.num.num',sK19))),s('type.list.list'('type.labLang.line'(sK6)),sK20))))),s('type.list.list'('type.labLang.sec'(sK6)),sK21))) | $spl6),
  inference(cnf_transformation,[],[f237_D])).
fof(f237_D,plain,(
  s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK16),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.Asm_3'(s('type.asm.asm'(sK6),sK17),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK18),s('type.num.num',sK19))),s('type.list.list'('type.labLang.line'(sK6)),sK20))))),s('type.list.list'('type.labLang.sec'(sK6)),sK21))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f239,plain,(
  s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK22),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(sK6),sK23),s('type.fcp.cart'(bool,sK6),sK24),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK25),s('type.num.num',sK26))),s('type.list.list'('type.labLang.line'(sK6)),sK27))))),s('type.list.list'('type.labLang.sec'(sK6)),sK28))) | $spl8),
  inference(cnf_transformation,[],[f239_D])).
fof(f239_D,plain,(
  s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK22),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(sK6),sK23),s('type.fcp.cart'(bool,sK6),sK24),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK25),s('type.num.num',sK26))),s('type.list.list'('type.labLang.line'(sK6)),sK27))))),s('type.list.list'('type.labLang.sec'(sK6)),sK28))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f133,plain,(
  s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK22),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(sK6),sK23),s('type.fcp.cart'(bool,sK6),sK24),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK25),s('type.num.num',sK26))),s('type.list.list'('type.labLang.line'(sK6)),sK27))))),s('type.list.list'('type.labLang.sec'(sK6)),sK28))) | s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK16),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.Asm_3'(s('type.asm.asm'(sK6),sK17),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK18),s('type.num.num',sK19))),s('type.list.list'('type.labLang.line'(sK6)),sK20))))),s('type.list.list'('type.labLang.sec'(sK6)),sK21))) | s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK10),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.Label_3'(s('type.num.num',sK11),s('type.num.num',sK12),s('type.num.num',sK13))),s('type.list.list'('type.labLang.line'(sK6)),sK14))))),s('type.list.list'('type.labLang.sec'(sK6)),sK15))) | s('type.list.list'('type.labLang.sec'(sK6)),sK7) = s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',sK8),s('type.list.list'('type.labLang.line'(sK6)),'const.list.NIL_0'))),s('type.list.list'('type.labLang.sec'(sK6)),sK9))) | s('type.list.list'('type.labLang.sec'(sK6)),'const.list.NIL_0') = s('type.list.list'('type.labLang.sec'(sK6)),sK7)),
  inference(cnf_transformation,[],[f91])).
fof(f2257,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f239,f138])).
fof(f138,plain,(
  ( ! [X6,X4,X2,X8,X7,X5,X3] : (s('type.list.list'('type.labLang.sec'(sK6)),sK7) != s('type.list.list'('type.labLang.sec'(sK6)),'const.list.CONS_2'(s('type.labLang.sec'(sK6),'const.labLang.Section_2'(s('type.num.num',X2),s('type.list.list'('type.labLang.line'(sK6)),'const.list.CONS_2'(s('type.labLang.line'(sK6),'const.labLang.LabAsm_4'(s('type.labLang.asm_with_lab'(sK6),X3),s('type.fcp.cart'(bool,sK6),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X5),s('type.num.num',X6))),s('type.list.list'('type.labLang.line'(sK6)),X7))))),s('type.list.list'('type.labLang.sec'(sK6)),X8)))) )),
  inference(cnf_transformation,[],[f91])).
% SZS output end Proof for thm.labSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 193
% Passive clauses: 906
% Generated clauses: 2118
% Final active clauses: 193
% Final passive clauses: 647
% Input formulas: 26
% Initial clauses: 96
% 
% Duplicate literals: 39
% Trivial inequalities: 13
% Fw subsumption resolutions: 145
% 
% Simple tautologies: 61
% Equational tautologies: 16
% Forward subsumptions: 918
% 
% Binary resolution: 1421
% Factoring: 206
% Forward superposition: 106
% Backward superposition: 51
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 46
% Split components: 96
% SAT solver clauses: 86
% SAT solver unit clauses: 11
% SAT solver binary clauses: 29
% SAT solver learnt clauses: 1
% 
% Sat splits: 46
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 85
% TWLsolver calls for satisfiability: 65
% 
% Memory used [KB]: 1535
% Time elapsed: 0.078 s
% ------------------------------
% ------------------------------
% Success in time 0.09 s
