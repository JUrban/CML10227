Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.gramProps
% (37211)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1055
% Passive clauses: 6440
% Generated clauses: 30913
% Final active clauses: 812
% Final passive clauses: 4606
% Input formulas: 101
% Initial clauses: 245
% 
% Duplicate literals: 308
% Trivial inequalities: 94
% Fw subsumption resolutions: 2424
% Fw demodulations: 3041
% Bw demodulations: 161
% 
% Simple tautologies: 225
% Equational tautologies: 37
% Forward subsumptions: 18137
% Fw demodulations to eq. taut.: 3
% 
% Binary resolution: 6833
% Factoring: 1203
% Forward superposition: 7717
% Backward superposition: 8631
% Self superposition: 55
% Equality factoring: 26
% Equality resolution: 12
% 
% Split clauses: 338
% Split components: 677
% SAT solver clauses: 538
% SAT solver unit clauses: 11
% SAT solver binary clauses: 95
% 
% Sat splits: 338
% Sat splitting refutations: 12
% 
% TWLsolver clauses: 538
% TWLsolver calls for satisfiability: 407
% 
% Memory used [KB]: 14583
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.gramProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.gramProps
% SZS output start Proof for thm.gramProps
fof(f12187,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f12185,f368,f626,f633,f635,f807,f810,f366,f620,f416,f670,f826,f832,f364,f624,f420,f672,f10969,f10970,f365,f622,f541,f729,f542,f730,f5190,f5192,f468,f691,f4336,f4338,f462,f689,f827,f834,f367,f618])).
fof(f618,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14)))))))) | $spl1),
  inference(cnf_transformation,[],[f618_D])).
fof(f618_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14)))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f367,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14))))))))),
  inference(cnf_transformation,[],[f270])).
fof(f270,plain,(
  ~p(s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.CONS_2'(s('type.grammar.symbol'(sK10,sK11),sK13),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0')))))) & (s('type.grammar.symbol'(sK10,sK11),sK13) = s('type.grammar.symbol'(sK10,sK11),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(sK10,sK11),sK14))) & p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.grammar.parsetree'(sK10,sK11),sK14)))) & ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14)))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12,sK13,sK14])],[f226])).
fof(f226,plain,(
  ? [X0,X1,X2,X3] : (~p(s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.CONS_2'(s('type.grammar.symbol'(X0,X1),X3),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.NIL_0')))))) & ? [X4] : (s('type.grammar.symbol'(X0,X1),X3) = s('type.grammar.symbol'(X0,X1),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(X0,X1),X4))) & p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.grammar.parsetree'(X0,X1),X4)))) & ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(X0,X1),X4))))))))))),
  inference(flattening,[],[f225])).
fof(f225,plain,(
  ? [X0,X1,X2,X3] : (~p(s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.CONS_2'(s('type.grammar.symbol'(X0,X1),X3),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.NIL_0')))))) & ? [X4] : (s('type.grammar.symbol'(X0,X1),X3) = s('type.grammar.symbol'(X0,X1),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(X0,X1),X4))) & (p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.grammar.parsetree'(X0,X1),X4)))) & ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(X0,X1),X4)))))))))))),
  inference(ennf_transformation,[],[f104])).
fof(f104,plain,(
  ~! [X0,X1,X2,X3] : (~p(s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.CONS_2'(s('type.grammar.symbol'(X0,X1),X3),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.NIL_0')))))) => ! [X4] : (s('type.grammar.symbol'(X0,X1),X3) = s('type.grammar.symbol'(X0,X1),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(X0,X1),X4))) => (p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.grammar.parsetree'(X0,X1),X4)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(X0,X1),X4)))))))))))),
  inference(flattening,[],[f103])).
fof(f103,plain,(
  ~! [X0,X1] : ! [X2,X3] : (~p(s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.CONS_2'(s('type.grammar.symbol'(X0,X1),X3),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.NIL_0')))))) => ! [X4] : (s('type.grammar.symbol'(X0,X1),X3) = s('type.grammar.symbol'(X0,X1),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(X0,X1),X4))) => (p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.grammar.parsetree'(X0,X1),X4)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(X0,X1),X4)))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : (~p(s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(X6,X7),X8),s('type.list.list'('type.grammar.symbol'(X6,X7)),'const.list.CONS_2'(s('type.grammar.symbol'(X6,X7),X9),s('type.list.list'('type.grammar.symbol'(X6,X7)),'const.list.NIL_0')))))) => ! [X10] : (s('type.grammar.symbol'(X6,X7),X9) = s('type.grammar.symbol'(X6,X7),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(X6,X7),X10))) => (p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(X6,X7),X8),s('type.grammar.parsetree'(X6,X7),X10)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(X6,X7)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(X6,X7),X10)))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : (~p(s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(X6,X7),X8),s('type.list.list'('type.grammar.symbol'(X6,X7)),'const.list.CONS_2'(s('type.grammar.symbol'(X6,X7),X9),s('type.list.list'('type.grammar.symbol'(X6,X7)),'const.list.NIL_0')))))) => ! [X10] : (s('type.grammar.symbol'(X6,X7),X9) = s('type.grammar.symbol'(X6,X7),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(X6,X7),X10))) => (p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(X6,X7),X8),s('type.grammar.parsetree'(X6,X7),X10)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(X6,X7)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(X6,X7),X10)))))))))))),
  file('thm.gramProps.fringe_length_not_nullable','thm.gramProps.fringe_length_not_nullable')).
fof(f834,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14))))))) | $spl300),
  inference(cnf_transformation,[],[f834_D])).
fof(f834_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14))))))) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f827,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14))))))) | ($spl1 | $spl80)),
  inference(resolution,[],[f672,f618])).
fof(f689,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl94),
  inference(cnf_transformation,[],[f689_D])).
fof(f689_D,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f462,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f302])).
fof(f302,plain,(
  ! [X0] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(flattening,[],[f164])).
fof(f164,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X12] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X12)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X12))),
  file('thm.gramProps.fringe_length_not_nullable','thm.arithmetic.NOT_LT_ZERO_EQ_ZERO')).
fof(f4338,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14))))) | $spl1258),
  inference(cnf_transformation,[],[f4338_D])).
fof(f4338_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14))))) <=> ~$spl1258),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1258])])).
fof(f4336,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14))))) | ($spl17 | $spl94 | $spl300)),
  inference(subsumption_resolution,[],[f4315,f635])).
fof(f4315,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14))))) | ($spl94 | $spl300)),
  inference(superposition,[],[f689,f834])).
fof(f691,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | $spl98),
  inference(cnf_transformation,[],[f691_D])).
fof(f691_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f468,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f305])).
fof(f305,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f171])).
fof(f171,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f170])).
fof(f170,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X6] : ! [X21] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X21))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X21))),
  file('thm.gramProps.fringe_length_not_nullable','thm.list.LENGTH_NIL')).
fof(f5192,plain,(
  s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0') = s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14))) | $spl1452),
  inference(cnf_transformation,[],[f5192_D])).
fof(f5192_D,plain,(
  s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0') = s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14))) <=> ~$spl1452),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1452])])).
fof(f5190,plain,(
  s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0') = s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14))) | ($spl98 | $spl1258)),
  inference(trivial_inequality_removal,[],[f5189])).
fof(f5189,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0') = s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14))) | ($spl98 | $spl1258)),
  inference(superposition,[],[f691,f4338])).
fof(f730,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.relation.RTC_3'(s(fun('type.list.list'('type.grammar.symbol'(X0,X1)),fun('type.list.list'('type.grammar.symbol'(X0,X1)),bool)),'const.grammar.derive_1'(s('type.grammar.grammar'(X0,X1),X2))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.CONS_2'(s('type.grammar.symbol'(X0,X1),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(X0,X1),X3))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.NIL_0'))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(X0,X1),X3)))))) | ~p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.grammar.parsetree'(X0,X1),X3))))) ) | $spl166),
  inference(cnf_transformation,[],[f730_D])).
fof(f730_D,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.relation.RTC_3'(s(fun('type.list.list'('type.grammar.symbol'(X0,X1)),fun('type.list.list'('type.grammar.symbol'(X0,X1)),bool)),'const.grammar.derive_1'(s('type.grammar.grammar'(X0,X1),X2))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.CONS_2'(s('type.grammar.symbol'(X0,X1),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(X0,X1),X3))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.NIL_0'))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(X0,X1),X3)))))) | ~p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.grammar.parsetree'(X0,X1),X3))))) ) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f542,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.relation.RTC_3'(s(fun('type.list.list'('type.grammar.symbol'(X0,X1)),fun('type.list.list'('type.grammar.symbol'(X0,X1)),bool)),'const.grammar.derive_1'(s('type.grammar.grammar'(X0,X1),X2))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.CONS_2'(s('type.grammar.symbol'(X0,X1),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(X0,X1),X3))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.NIL_0'))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(X0,X1),X3)))))) | ~p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.grammar.parsetree'(X0,X1),X3))))) )),
  inference(cnf_transformation,[],[f249])).
fof(f249,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.grammar.parsetree'(X0,X1),X3)))) | p(s(bool,'const.relation.RTC_3'(s(fun('type.list.list'('type.grammar.symbol'(X0,X1)),fun('type.list.list'('type.grammar.symbol'(X0,X1)),bool)),'const.grammar.derive_1'(s('type.grammar.grammar'(X0,X1),X2))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.CONS_2'(s('type.grammar.symbol'(X0,X1),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(X0,X1),X3))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.NIL_0'))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(X0,X1),X3)))))))),
  inference(ennf_transformation,[],[f213])).
fof(f213,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.grammar.parsetree'(X0,X1),X3)))) => p(s(bool,'const.relation.RTC_3'(s(fun('type.list.list'('type.grammar.symbol'(X0,X1)),fun('type.list.list'('type.grammar.symbol'(X0,X1)),bool)),'const.grammar.derive_1'(s('type.grammar.grammar'(X0,X1),X2))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.CONS_2'(s('type.grammar.symbol'(X0,X1),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(X0,X1),X3))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.NIL_0'))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(X0,X1),X3)))))))),
  inference(flattening,[],[f212])).
fof(f212,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.grammar.parsetree'(X0,X1),X3)))) => p(s(bool,'const.relation.RTC_3'(s(fun('type.list.list'('type.grammar.symbol'(X0,X1)),fun('type.list.list'('type.grammar.symbol'(X0,X1)),bool)),'const.grammar.derive_1'(s('type.grammar.grammar'(X0,X1),X2))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.CONS_2'(s('type.grammar.symbol'(X0,X1),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(X0,X1),X3))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.NIL_0'))),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(X0,X1),X3)))))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X6,X7] : ! [X8,X10] : (p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(X6,X7),X8),s('type.grammar.parsetree'(X6,X7),X10)))) => p(s(bool,'const.relation.RTC_3'(s(fun('type.list.list'('type.grammar.symbol'(X6,X7)),fun('type.list.list'('type.grammar.symbol'(X6,X7)),bool)),'const.grammar.derive_1'(s('type.grammar.grammar'(X6,X7),X8))),s('type.list.list'('type.grammar.symbol'(X6,X7)),'const.list.CONS_2'(s('type.grammar.symbol'(X6,X7),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(X6,X7),X10))),s('type.list.list'('type.grammar.symbol'(X6,X7)),'const.list.NIL_0'))),s('type.list.list'('type.grammar.symbol'(X6,X7)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(X6,X7),X10)))))))),
  file('thm.gramProps.fringe_length_not_nullable','thm.grammar.valid_ptree_derive')).
fof(f729,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.list.list'('type.grammar.symbol'(X0,X1)),X3))) = s(bool,'const.relation.RTC_3'(s(fun('type.list.list'('type.grammar.symbol'(X0,X1)),fun('type.list.list'('type.grammar.symbol'(X0,X1)),bool)),'const.grammar.derive_1'(s('type.grammar.grammar'(X0,X1),X2))),s('type.list.list'('type.grammar.symbol'(X0,X1)),X3),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.NIL_0')))) ) | $spl164),
  inference(cnf_transformation,[],[f729_D])).
fof(f729_D,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.list.list'('type.grammar.symbol'(X0,X1)),X3))) = s(bool,'const.relation.RTC_3'(s(fun('type.list.list'('type.grammar.symbol'(X0,X1)),fun('type.list.list'('type.grammar.symbol'(X0,X1)),bool)),'const.grammar.derive_1'(s('type.grammar.grammar'(X0,X1),X2))),s('type.list.list'('type.grammar.symbol'(X0,X1)),X3),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.NIL_0')))) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f541,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.list.list'('type.grammar.symbol'(X0,X1)),X3))) = s(bool,'const.relation.RTC_3'(s(fun('type.list.list'('type.grammar.symbol'(X0,X1)),fun('type.list.list'('type.grammar.symbol'(X0,X1)),bool)),'const.grammar.derive_1'(s('type.grammar.grammar'(X0,X1),X2))),s('type.list.list'('type.grammar.symbol'(X0,X1)),X3),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f211])).
fof(f211,plain,(
  ! [X0,X1,X2,X3] : s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.list.list'('type.grammar.symbol'(X0,X1)),X3))) = s(bool,'const.relation.RTC_3'(s(fun('type.list.list'('type.grammar.symbol'(X0,X1)),fun('type.list.list'('type.grammar.symbol'(X0,X1)),bool)),'const.grammar.derive_1'(s('type.grammar.grammar'(X0,X1),X2))),s('type.list.list'('type.grammar.symbol'(X0,X1)),X3),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.NIL_0')))),
  inference(flattening,[],[f210])).
fof(f210,plain,(
  ! [X0,X1] : ! [X2,X3] : s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(X0,X1),X2),s('type.list.list'('type.grammar.symbol'(X0,X1)),X3))) = s(bool,'const.relation.RTC_3'(s(fun('type.list.list'('type.grammar.symbol'(X0,X1)),fun('type.list.list'('type.grammar.symbol'(X0,X1)),bool)),'const.grammar.derive_1'(s('type.grammar.grammar'(X0,X1),X2))),s('type.list.list'('type.grammar.symbol'(X0,X1)),X3),s('type.list.list'('type.grammar.symbol'(X0,X1)),'const.list.NIL_0')))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : ! [X8,X11] : s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(X6,X7),X8),s('type.list.list'('type.grammar.symbol'(X6,X7)),X11))) = s(bool,'const.relation.RTC_3'(s(fun('type.list.list'('type.grammar.symbol'(X6,X7)),fun('type.list.list'('type.grammar.symbol'(X6,X7)),bool)),'const.grammar.derive_1'(s('type.grammar.grammar'(X6,X7),X8))),s('type.list.list'('type.grammar.symbol'(X6,X7)),X11),s('type.list.list'('type.grammar.symbol'(X6,X7)),'const.list.NIL_0')))),
  file('thm.gramProps.fringe_length_not_nullable','thm.NTproperties.nullable_def')).
fof(f622,plain,(
  s('type.grammar.symbol'(sK10,sK11),sK13) = s('type.grammar.symbol'(sK10,sK11),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(sK10,sK11),sK14))) | $spl4),
  inference(cnf_transformation,[],[f622_D])).
fof(f622_D,plain,(
  s('type.grammar.symbol'(sK10,sK11),sK13) = s('type.grammar.symbol'(sK10,sK11),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(sK10,sK11),sK14))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f365,plain,(
  s('type.grammar.symbol'(sK10,sK11),sK13) = s('type.grammar.symbol'(sK10,sK11),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(sK10,sK11),sK14)))),
  inference(cnf_transformation,[],[f270])).
fof(f10970,plain,(
  ( ! [X0] : (p(s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(sK10,sK11),X0),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.CONS_2'(s('type.grammar.symbol'(sK10,sK11),sK13),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0')))))) | ~p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(sK10,sK11),X0),s('type.grammar.parsetree'(sK10,sK11),sK14))))) ) | $spl2964),
  inference(cnf_transformation,[],[f10970_D])).
fof(f10970_D,plain,(
  ( ! [X0] : (p(s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(sK10,sK11),X0),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.CONS_2'(s('type.grammar.symbol'(sK10,sK11),sK13),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0')))))) | ~p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(sK10,sK11),X0),s('type.grammar.parsetree'(sK10,sK11),sK14))))) ) <=> ~$spl2964),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2964])])).
fof(f10969,plain,(
  ( ! [X0] : (p(s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(sK10,sK11),X0),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.CONS_2'(s('type.grammar.symbol'(sK10,sK11),sK13),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0')))))) | ~p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(sK10,sK11),X0),s('type.grammar.parsetree'(sK10,sK11),sK14))))) ) | ($spl4 | $spl164 | $spl166 | $spl1452)),
  inference(forward_demodulation,[],[f10968,f729])).
fof(f10968,plain,(
  ( ! [X0] : (p(s(bool,'const.relation.RTC_3'(s(fun('type.list.list'('type.grammar.symbol'(sK10,sK11)),fun('type.list.list'('type.grammar.symbol'(sK10,sK11)),bool)),'const.grammar.derive_1'(s('type.grammar.grammar'(sK10,sK11),X0))),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.CONS_2'(s('type.grammar.symbol'(sK10,sK11),sK13),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0'))),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0')))) | ~p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(sK10,sK11),X0),s('type.grammar.parsetree'(sK10,sK11),sK14))))) ) | ($spl4 | $spl166 | $spl1452)),
  inference(forward_demodulation,[],[f10948,f5192])).
fof(f10948,plain,(
  ( ! [X0] : (p(s(bool,'const.relation.RTC_3'(s(fun('type.list.list'('type.grammar.symbol'(sK10,sK11)),fun('type.list.list'('type.grammar.symbol'(sK10,sK11)),bool)),'const.grammar.derive_1'(s('type.grammar.grammar'(sK10,sK11),X0))),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.CONS_2'(s('type.grammar.symbol'(sK10,sK11),sK13),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0'))),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'(sK10,sK11),sK14)))))) | ~p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(sK10,sK11),X0),s('type.grammar.parsetree'(sK10,sK11),sK14))))) ) | ($spl4 | $spl166)),
  inference(superposition,[],[f730,f622])).
fof(f672,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl80),
  inference(cnf_transformation,[],[f672_D])).
fof(f672_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f420,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f275])).
fof(f275,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f145])).
fof(f145,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X17] : (s(bool,'F_0') = s(bool,X17) <=> ~p(s(bool,X17)))),
  file('thm.gramProps.fringe_length_not_nullable','thm.bool.EQ_CLAUSES|split|3')).
fof(f624,plain,(
  ~p(s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.CONS_2'(s('type.grammar.symbol'(sK10,sK11),sK13),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0')))))) | $spl7),
  inference(cnf_transformation,[],[f624_D])).
fof(f624_D,plain,(
  ~p(s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.CONS_2'(s('type.grammar.symbol'(sK10,sK11),sK13),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0')))))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f364,plain,(
  ~p(s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.CONS_2'(s('type.grammar.symbol'(sK10,sK11),sK13),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0'))))))),
  inference(cnf_transformation,[],[f270])).
fof(f832,plain,(
  s(bool,'F_0') = s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.CONS_2'(s('type.grammar.symbol'(sK10,sK11),sK13),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0'))))) | $spl298),
  inference(cnf_transformation,[],[f832_D])).
fof(f832_D,plain,(
  s(bool,'F_0') = s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.CONS_2'(s('type.grammar.symbol'(sK10,sK11),sK13),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0'))))) <=> ~$spl298),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl298])])).
fof(f826,plain,(
  s(bool,'F_0') = s(bool,'const.NTproperties.nullable_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.CONS_2'(s('type.grammar.symbol'(sK10,sK11),sK13),s('type.list.list'('type.grammar.symbol'(sK10,sK11)),'const.list.NIL_0'))))) | ($spl7 | $spl80)),
  inference(resolution,[],[f672,f624])).
fof(f670,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl76),
  inference(cnf_transformation,[],[f670_D])).
fof(f670_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f416,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f273])).
fof(f273,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X17] : (s(bool,'T_0') = s(bool,X17) <=> p(s(bool,X17)))),
  file('thm.gramProps.fringe_length_not_nullable','thm.bool.EQ_CLAUSES|split|1')).
fof(f620,plain,(
  p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.grammar.parsetree'(sK10,sK11),sK14)))) | $spl2),
  inference(cnf_transformation,[],[f620_D])).
fof(f620_D,plain,(
  p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.grammar.parsetree'(sK10,sK11),sK14)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f366,plain,(
  p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.grammar.parsetree'(sK10,sK11),sK14))))),
  inference(cnf_transformation,[],[f270])).
fof(f810,plain,(
  s(bool,'T_0') = s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.grammar.parsetree'(sK10,sK11),sK14))) | $spl294),
  inference(cnf_transformation,[],[f810_D])).
fof(f810_D,plain,(
  s(bool,'T_0') = s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.grammar.parsetree'(sK10,sK11),sK14))) <=> ~$spl294),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl294])])).
fof(f807,plain,(
  s(bool,'T_0') = s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.grammar.parsetree'(sK10,sK11),sK14))) | ($spl2 | $spl76)),
  inference(resolution,[],[f670,f620])).
fof(f635,plain,(
  ~p(s(bool,'F_0')) | $spl17),
  inference(cnf_transformation,[],[f635_D])).
fof(f635_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f633,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f374,f368])).
fof(f374,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f271])).
fof(f271,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f105])).
fof(f105,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f37])).
fof(f37,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.gramProps.fringe_length_not_nullable','thm.bool.NOT_CLAUSES|split|2')).
fof(f626,plain,(
  p(s(bool,'T_0')) | $spl8),
  inference(cnf_transformation,[],[f626_D])).
fof(f626_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f368,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.gramProps.fringe_length_not_nullable',aHL_TRUTH)).
fof(f12185,plain,(
  $false | ($spl8 | $spl17 | $spl294 | $spl298 | $spl2964)),
  inference(subsumption_resolution,[],[f12184,f626])).
fof(f12184,plain,(
  ~p(s(bool,'T_0')) | ($spl17 | $spl294 | $spl298 | $spl2964)),
  inference(forward_demodulation,[],[f12183,f810])).
fof(f12183,plain,(
  ~p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.grammar.parsetree'(sK10,sK11),sK14)))) | ($spl17 | $spl298 | $spl2964)),
  inference(subsumption_resolution,[],[f12164,f635])).
fof(f12164,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'(sK10,sK11),sK12),s('type.grammar.parsetree'(sK10,sK11),sK14)))) | ($spl298 | $spl2964)),
  inference(superposition,[],[f10970,f832])).
% SZS output end Proof for thm.gramProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 443
% Passive clauses: 1624
% Generated clauses: 11862
% Final active clauses: 387
% Final passive clauses: 1024
% Input formulas: 101
% Initial clauses: 245
% 
% Duplicate literals: 87
% Trivial inequalities: 54
% Fw subsumption resolutions: 657
% Fw demodulations: 1322
% Bw demodulations: 189
% Condensations: 65
% Global subsumptions: 20
% 
% Simple tautologies: 186
% Equational tautologies: 6
% Forward subsumptions: 5974
% Fw demodulations to eq. taut.: 13
% 
% Binary resolution: 1601
% Factoring: 161
% Forward superposition: 3290
% Backward superposition: 2411
% Self superposition: 40
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 4
% Split components: 8
% SAT solver clauses: 2072
% SAT solver unit clauses: 306
% SAT solver binary clauses: 94
% SAT solver learnt clauses: 41
% SAT solver learnt literals: 12
% 
% Sat splits: 4
% Sat splitting refutations: 30
% 
% TWLsolver clauses: 1991
% TWLsolver calls for satisfiability: 1582
% 
% Memory used [KB]: 10746
% Time elapsed: 0.412 s
% ------------------------------
% ------------------------------
% Success in time 1.043 s
