Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvlProps
% (108117)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 291
% Passive clauses: 5319
% Generated clauses: 37702
% Final active clauses: 235
% Final passive clauses: 4724
% Input formulas: 81
% Initial clauses: 122
% 
% Duplicate literals: 1334
% Trivial inequalities: 408
% Fw subsumption resolutions: 2724
% Fw demodulations: 8493
% Bw demodulations: 52
% 
% Simple tautologies: 468
% Equational tautologies: 81
% Forward subsumptions: 18461
% Fw demodulations to eq. taut.: 8
% 
% Binary resolution: 104
% Factoring: 1
% Forward superposition: 12461
% Backward superposition: 11557
% Self superposition: 188
% Equality factoring: 134
% Equality resolution: 53
% 
% Split clauses: 306
% Split components: 612
% SAT solver clauses: 576
% SAT solver unit clauses: 9
% SAT solver binary clauses: 102
% 
% Sat splits: 306
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 576
% TWLsolver calls for satisfiability: 80
% 
% Memory used [KB]: 19061
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.bvlProps
% (108141)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 187
% Passive clauses: 895
% Generated clauses: 19768
% Final active clauses: 181
% Final passive clauses: 677
% Input formulas: 81
% Initial clauses: 122
% 
% Duplicate literals: 742
% Trivial inequalities: 254
% Fw subsumption resolutions: 1125
% Fw demodulations: 3829
% Bw demodulations: 36
% Condensations: 671
% Global subsumptions: 21
% 
% Simple tautologies: 220
% Equational tautologies: 44
% Forward subsumptions: 10085
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 72
% Factoring: 1
% Forward superposition: 6067
% Backward superposition: 5685
% Self superposition: 132
% Equality factoring: 54
% Equality resolution: 43
% 
% Split clauses: 80
% Split components: 160
% SAT solver clauses: 1916
% SAT solver unit clauses: 208
% SAT solver binary clauses: 79
% SAT solver learnt clauses: 43
% SAT solver learnt literals: 1
% 
% Sat splits: 80
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1831
% TWLsolver calls for satisfiability: 503
% 
% Memory used [KB]: 12537
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.bvlProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvlProps
% SZS output start Proof for thm.bvlProps
fof(f61500,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f212,f338,f336,f211,f337,f335,f374,f625,f634,f626,f636,f632,f3136,f3135,f3196,f3197,f3208,f5190,f3174,f5189,f3175,f3173,f6069,f6072,f6109,f6107,f6946,f6949,f6986,f6984,f7627,f7992,f11385,f11485,f11501,f11487,f11503,f11570,f11670,f11686,f11672,f11688,f12002,f12006,f12004,f12008,f12012,f12010,f15747,f15788,f15787,f15993,f15996,f15999,f16003,f16006,f16010,f16014,f16018,f16022,f16027,f16030,f16033,f16037,f16040,f16044,f16048,f16052,f16056,f16060,f16063,f16064,f16065,f16066,f16076,f16079,f16168,f16274,f16272,f16169,f16278,f16276,f16170,f16282,f16280,f19511,f19492,f19495,f19526,f19515,f19513,f20286,f20265,f20268,f20299,f20302,f20301,f20305,f20290,f20288,f23302,f23304,f16273,f26465,f26468,f26467,f23303,f27965,f27966,f27967,f27968,f27969,f27970,f28253,f28251,f27989,f27990,f27991,f28299,f28241,f28301,f28245,f28303,f28247,f28305,f28248,f28307,f28249,f28360,f28365,f28366,f28367,f28368,f28369,f28370,f28199,f28362,f28364,f28372,f28263,f28374,f28265,f28267,f28376,f28269,f28243,f30000,f30001,f30002,f30003,f30004,f30005,f30301,f30299,f30024,f30025,f30026,f30362,f30289,f30364,f30293,f30366,f30295,f30368,f30296,f30370,f30297,f30423,f30428,f30429,f30430,f30431,f30432,f30433,f30247,f30425,f30427,f30435,f30311,f30437,f30313,f30315,f30439,f30317,f30291,f37907,f37908,f37909,f37910,f37911,f37912,f38284,f38282,f37931,f37932,f37933,f38397,f38272,f38399,f38276,f38401,f38278,f38403,f38279,f38405,f38280,f38458,f38463,f38464,f38465,f38466,f38467,f38468,f38215,f38460,f38462,f38470,f38294,f38472,f38296,f38298,f38474,f38300,f38274,f61337])).
fof(f61337,plain,(
  $false | ($spl0 | $spl5 | $spl9)),
  inference(subsumption_resolution,[],[f61336,f1366])).
fof(f1366,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.conLang.false_tag_0')),
  inference(subsumption_resolution,[],[f1355,f363])).
fof(f363,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f265,f343])).
fof(f343,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f221,f213])).
fof(f213,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.bvlProps.Boolv_|49||49|',aHL_TRUTH)).
fof(f221,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f173])).
fof(f173,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f84])).
fof(f84,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f19])).
fof(f19,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.bvlProps.Boolv_|49||49|','thm.bool.NOT_CLAUSES|split|2')).
fof(f265,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f181])).
fof(f181,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f76])).
fof(f76,axiom,(
  ! [X22] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))) <=> p(s(bool,'F_0')))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_eq|split|1')).
fof(f1355,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.conLang.false_tag_0') | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f365,f218])).
fof(f218,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f38])).
fof(f38,axiom,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.conLang.false_tag_def')).
fof(f365,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f269,f215])).
fof(f215,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f37])).
fof(f37,axiom,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.bvlProps.Boolv_|49||49|','thm.conLang.true_tag_def')).
fof(f269,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f183])).
fof(f183,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f125])).
fof(f125,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X22] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X22))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|17')).
fof(f61336,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.conLang.false_tag_0') | ($spl0 | $spl5 | $spl9)),
  inference(forward_demodulation,[],[f61222,f1700])).
fof(f1700,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'T_0')))),
  inference(superposition,[],[f244,f295])).
fof(f295,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f139])).
fof(f139,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X9] : ! [X11,X12] : s(X9,X11) = s(X9,'const.bool.COND_3'(s(bool,'T_0'),s(X9,X11),s(X9,X12)))),
  file('thm.bvlProps.Boolv_|49||49|','thm.bool.COND_CLAUSES|split|0')).
fof(f244,plain,(
  ( ! [X0] : (s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0] : s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X21] : s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X21))) = s('type.num.num','const.bool.COND_3'(s(bool,X21),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))),
  file('thm.bvlProps.Boolv_|49||49|','thm.clos_to_bvl.bool_to_tag_def')).
fof(f61222,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'T_0'))) | ($spl0 | $spl5 | $spl9)),
  inference(unit_resulting_resolution,[],[f8017,f7516])).
fof(f7516,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X1),s('type.list.list'('type.bvlSem.v'),X2))) | s('type.num.num',X1) = s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0)))) )),
  inference(superposition,[],[f330,f246])).
fof(f246,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0))),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0] : s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0))),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0')))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X21] : s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X21))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X21))),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0')))),
  file('thm.bvlProps.Boolv_|49||49|','thm.bvlSem.Boolv_def')).
fof(f330,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X0),s('type.list.list'('type.bvlSem.v'),X1))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X3))) | s('type.num.num',X0) = s('type.num.num',X2)) )),
  inference(cnf_transformation,[],[f210])).
fof(f210,plain,(
  ! [X0,X1,X2,X3] : ((s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X0),s('type.list.list'('type.bvlSem.v'),X1))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X3))) | (s('type.num.num',X0) = s('type.num.num',X2) & s('type.list.list'('type.bvlSem.v'),X1) = s('type.list.list'('type.bvlSem.v'),X3))) & (s('type.num.num',X0) != s('type.num.num',X2) | s('type.list.list'('type.bvlSem.v'),X1) != s('type.list.list'('type.bvlSem.v'),X3) | s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X0),s('type.list.list'('type.bvlSem.v'),X1))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X3)))))),
  inference(flattening,[],[f209])).
fof(f209,plain,(
  ! [X0,X1,X2,X3] : ((s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X0),s('type.list.list'('type.bvlSem.v'),X1))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X3))) | (s('type.num.num',X0) = s('type.num.num',X2) & s('type.list.list'('type.bvlSem.v'),X1) = s('type.list.list'('type.bvlSem.v'),X3))) & ((s('type.num.num',X0) != s('type.num.num',X2) | s('type.list.list'('type.bvlSem.v'),X1) != s('type.list.list'('type.bvlSem.v'),X3)) | s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X0),s('type.list.list'('type.bvlSem.v'),X1))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X3)))))),
  inference(nnf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0,X1,X2,X3] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X0),s('type.list.list'('type.bvlSem.v'),X1))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X3))) <=> (s('type.num.num',X0) = s('type.num.num',X2) & s('type.list.list'('type.bvlSem.v'),X1) = s('type.list.list'('type.bvlSem.v'),X3)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X17,X18,X19,X20] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X17),s('type.list.list'('type.bvlSem.v'),X18))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X19),s('type.list.list'('type.bvlSem.v'),X20))) <=> (s('type.num.num',X17) = s('type.num.num',X19) & s('type.list.list'('type.bvlSem.v'),X18) = s('type.list.list'('type.bvlSem.v'),X20)))),
  file('thm.bvlProps.Boolv_|49||49|','thm.bvlSem.v_|49||49||split|2')).
fof(f8017,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'))) | ($spl0 | $spl5 | $spl9)),
  inference(backward_demodulation,[],[f8016,f7831])).
fof(f7831,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'F_0'))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0')))),
  inference(superposition,[],[f246,f1699])).
fof(f1699,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0')))),
  inference(superposition,[],[f244,f294])).
fof(f294,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f137])).
fof(f137,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X9] : ! [X11,X12] : s(X9,X12) = s(X9,'const.bool.COND_3'(s(bool,'F_0'),s(X9,X11),s(X9,X12)))),
  file('thm.bvlProps.Boolv_|49||49|','thm.bool.COND_CLAUSES|split|1')).
fof(f8016,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'F_0'))) | ($spl0 | $spl5 | $spl9)),
  inference(forward_demodulation,[],[f8015,f7790])).
fof(f7790,plain,(
  s(bool,'T_0') = s(bool,sK0) | $spl9),
  inference(unit_resulting_resolution,[],[f636,f251])).
fof(f251,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.bvlProps.Boolv_|49||49|',aHL_BOOL_CASES)).
fof(f8015,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'F_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) | ($spl0 | $spl5)),
  inference(forward_demodulation,[],[f335,f7783])).
fof(f7783,plain,(
  s(bool,'F_0') = s(bool,sK1) | $spl5),
  inference(unit_resulting_resolution,[],[f631,f251])).
fof(f631,plain,(
  s(bool,'T_0') != s(bool,sK1) | $spl5),
  inference(cnf_transformation,[],[f631_D])).
fof(f631_D,plain,(
  s(bool,'T_0') != s(bool,sK1) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f38274,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl133),
  inference(cnf_transformation,[],[f38274_D])).
fof(f38274_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl133),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl133])])).
fof(f38300,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl152),
  inference(cnf_transformation,[],[f38300_D])).
fof(f38300_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f38474,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f38473,f9499])).
fof(f9499,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f360])).
fof(f360,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(forward_demodulation,[],[f248,f215])).
fof(f248,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f66])).
fof(f66,axiom,(
  ! [X22] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.num.|48|_0')))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|27')).
fof(f9361,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.ZERO_0') | $spl14),
  inference(unit_resulting_resolution,[],[f8818,f365])).
fof(f8818,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(subsumption_resolution,[],[f8797,f213])).
fof(f8797,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f371,f8761])).
fof(f8761,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))))) | $spl14),
  inference(superposition,[],[f8305,f1268])).
fof(f1268,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f1254,f295])).
fof(f1254,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f295,f364])).
fof(f364,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f270,f215])).
fof(f270,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f183])).
fof(f8305,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0')))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f301,f3175])).
fof(f301,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f70])).
fof(f70,axiom,(
  ! [X22,X23] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X23),s('type.num.num',X22))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|31')).
fof(f371,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f370,f215])).
fof(f370,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num',X0) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f273,f215])).
fof(f273,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f69])).
fof(f69,axiom,(
  ! [X22] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X22)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X22))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|30')).
fof(f38473,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(forward_demodulation,[],[f38226,f11957])).
fof(f11957,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(backward_demodulation,[],[f11850,f11549])).
fof(f11549,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f240,f9518])).
fof(f9518,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(backward_demodulation,[],[f9361,f1825])).
fof(f1825,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f245,f218])).
fof(f245,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X22] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|16')).
fof(f240,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X22] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|14')).
fof(f11850,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(unit_resulting_resolution,[],[f9643,f9524])).
fof(f9524,plain,(
  ( ! [X1] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f2793])).
fof(f2793,plain,(
  ( ! [X1] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f316,f218])).
fof(f316,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f202])).
fof(f202,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f155])).
fof(f155,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f58])).
fof(f58,axiom,(
  ! [X22,X23] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) <=> s('type.num.num',X22) = s('type.num.num',X23))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|19')).
fof(f9643,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f9514,f342])).
fof(f342,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0')))),
  inference(forward_demodulation,[],[f341,f215])).
fof(f341,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),
  inference(forward_demodulation,[],[f219,f218])).
fof(f219,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f52])).
fof(f52,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|13')).
fof(f9514,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))))) | $spl14),
  inference(backward_demodulation,[],[f9361,f1609])).
fof(f1609,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f1581,f342])).
fof(f1581,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f240,f1268])).
fof(f38226,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(superposition,[],[f12967,f11957])).
fof(f12967,plain,(
  ( ! [X149] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X149))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X149),s('type.num.num','const.conLang.true_tag_0'))))) ) | $spl14),
  inference(forward_demodulation,[],[f12966,f12746])).
fof(f12746,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9709,f316])).
fof(f9709,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(forward_demodulation,[],[f9629,f351])).
fof(f351,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f234,f215])).
fof(f234,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X22] : s('type.num.num',X22) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X22)))),
  file('thm.bvlProps.Boolv_|49||49|','thm.arithmetic.ADD|split|0')).
fof(f9629,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f8674])).
fof(f8674,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f8562,f351])).
fof(f8562,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))))) )),
  inference(superposition,[],[f305,f1268])).
fof(f305,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f150])).
fof(f150,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X22,X23] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X23))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|2')).
fof(f12966,plain,(
  ( ! [X149] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X149),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X149)))))) ) | $spl14),
  inference(forward_demodulation,[],[f12870,f9582])).
fof(f9582,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6544])).
fof(f6544,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f301,f1268])).
fof(f12870,plain,(
  ( ! [X149] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X149)))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X149)))))) ) | $spl14),
  inference(superposition,[],[f369,f9709])).
fof(f369,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f368,f215])).
fof(f368,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f274,f215])).
fof(f274,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f185])).
fof(f38298,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl151),
  inference(cnf_transformation,[],[f38298_D])).
fof(f38298_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl151),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl151])])).
fof(f38296,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl148),
  inference(cnf_transformation,[],[f38296_D])).
fof(f38296_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f38472,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f38471,f11957])).
fof(f38471,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f38225,f11957])).
fof(f38225,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f12939,f11957])).
fof(f12939,plain,(
  ( ! [X41] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X41)))) ) | $spl14),
  inference(forward_demodulation,[],[f12810,f342])).
fof(f12810,plain,(
  ( ! [X41] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X41)))) ) | $spl14),
  inference(superposition,[],[f9645,f9709])).
fof(f9645,plain,(
  ( ! [X27] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9643,f2785])).
fof(f2785,plain,(
  ( ! [X27] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f316,f342])).
fof(f38294,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl146),
  inference(cnf_transformation,[],[f38294_D])).
fof(f38294_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f38470,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f38469,f11957])).
fof(f38469,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f38224,f11957])).
fof(f38224,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f12935,f11957])).
fof(f12935,plain,(
  ( ! [X36] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X36)))) ) | $spl14),
  inference(forward_demodulation,[],[f12805,f340])).
fof(f340,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0')))),
  inference(forward_demodulation,[],[f217,f215])).
fof(f217,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f54])).
fof(f54,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.bvlProps.Boolv_|49||49|','thm.prim_rec.PRE|split|0')).
fof(f12805,plain,(
  ( ! [X36] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X36)))) ) | $spl14),
  inference(superposition,[],[f8828,f9709])).
fof(f8828,plain,(
  ( ! [X30] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))) | s('type.num.num',X30) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f8818,f2787])).
fof(f2787,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))) | s('type.num.num',X30) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f316,f340])).
fof(f38462,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl156),
  inference(cnf_transformation,[],[f38462_D])).
fof(f38462_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f38460,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl155),
  inference(cnf_transformation,[],[f38460_D])).
fof(f38460_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl155),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl155])])).
fof(f38215,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f12126,f11957])).
fof(f12126,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num',X0)) ) | $spl14),
  inference(superposition,[],[f322,f11850])).
fof(f322,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f205])).
fof(f205,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f158])).
fof(f158,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f81])).
fof(f81,axiom,(
  ! [X22,X23] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))) <=> s('type.num.num',X22) = s('type.num.num',X23))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_eq|split|6')).
fof(f38468,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f38205,f8818])).
fof(f38205,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f11913,f11957])).
fof(f11913,plain,(
  ( ! [X5] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f9552])).
fof(f9552,plain,(
  ( ! [X5] : (s('type.num.num',X5) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f4240])).
fof(f4240,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f322,f1268])).
fof(f38467,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f38202,f340])).
fof(f38202,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f11896,f11957])).
fof(f11896,plain,(
  ( ! [X30] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X30))) | s('type.num.num',X30) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f4255])).
fof(f4255,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X30))) | s('type.num.num',X30) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f322,f340])).
fof(f38466,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f38201,f358])).
fof(f358,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f243,f215])).
fof(f243,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X22] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22)))))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|9')).
fof(f38201,plain,(
  ( ! [X247] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X247)))))))) ) | $spl14),
  inference(superposition,[],[f11894,f11957])).
fof(f11894,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f4251])).
fof(f4251,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))))))) )),
  inference(superposition,[],[f322,f358])).
fof(f38465,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f38200,f357])).
fof(f357,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f242,f215])).
fof(f242,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X22] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|10')).
fof(f38200,plain,(
  ( ! [X246] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X246)))))))) ) | $spl14),
  inference(superposition,[],[f11893,f11957])).
fof(f11893,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f4250])).
fof(f4250,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) )),
  inference(superposition,[],[f322,f357])).
fof(f38464,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f38199,f345])).
fof(f345,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f228,f215])).
fof(f228,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X22] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X22)))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|6')).
fof(f38199,plain,(
  ( ! [X245] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X245))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f11892,f11957])).
fof(f11892,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X16)))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f4247])).
fof(f4247,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X16)))) )),
  inference(superposition,[],[f322,f345])).
fof(f38463,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f38198,f354])).
fof(f354,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f237,f215])).
fof(f237,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X22] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X22)))),
  file('thm.bvlProps.Boolv_|49||49|','thm.arithmetic.MULT|split|0')).
fof(f38198,plain,(
  ( ! [X244] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X244))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f11891,f11957])).
fof(f11891,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X14)))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f4246])).
fof(f4246,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X14)))) )),
  inference(superposition,[],[f322,f354])).
fof(f38458,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f38197,f348])).
fof(f348,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(forward_demodulation,[],[f231,f215])).
fof(f231,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X22] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.num.|48|_0')))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|4')).
fof(f38197,plain,(
  ( ! [X243] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X243),s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f11890,f11957])).
fof(f11890,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f4245])).
fof(f4245,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f322,f348])).
fof(f38280,plain,(
  ( ! [X28] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X28)))) ) | $spl140),
  inference(cnf_transformation,[],[f38280_D])).
fof(f38280_D,plain,(
  ( ! [X28] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X28)))) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f38405,plain,(
  ( ! [X175] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X175))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f38404,f11957])).
fof(f38404,plain,(
  ( ! [X175] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num',X175)))) ) | $spl14),
  inference(forward_demodulation,[],[f38107,f11957])).
fof(f38107,plain,(
  ( ! [X175] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num',X175)))) ) | $spl14),
  inference(superposition,[],[f9512,f11957])).
fof(f9512,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X9),s('type.num.num',X10)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f1354])).
fof(f1354,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X9),s('type.num.num',X10)))) )),
  inference(superposition,[],[f365,f295])).
fof(f38279,plain,(
  ( ! [X27] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X27),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl138),
  inference(cnf_transformation,[],[f38279_D])).
fof(f38279_D,plain,(
  ( ! [X27] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X27),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f38403,plain,(
  ( ! [X174] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X174),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f38402,f11957])).
fof(f38402,plain,(
  ( ! [X174] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X174),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))))) ) | $spl14),
  inference(forward_demodulation,[],[f38106,f11957])).
fof(f38106,plain,(
  ( ! [X174] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X174),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))))) ) | $spl14),
  inference(superposition,[],[f9511,f11957])).
fof(f9511,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X7),s('type.num.num',X8)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f1353])).
fof(f1353,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X7),s('type.num.num',X8)))) )),
  inference(superposition,[],[f365,f294])).
fof(f38278,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl136),
  inference(cnf_transformation,[],[f38278_D])).
fof(f38278_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f38401,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f38400,f11957])).
fof(f38400,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f38105,f11957])).
fof(f38105,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9510,f11957])).
fof(f9510,plain,(
  ( ! [X5] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X5),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f1349])).
fof(f1349,plain,(
  ( ! [X5] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X5),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f365,f346])).
fof(f346,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(forward_demodulation,[],[f229,f215])).
fof(f229,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X22] : s('type.num.num',X22) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X22),s('type.num.num','const.num.|48|_0')))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|7')).
fof(f38276,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl134),
  inference(cnf_transformation,[],[f38276_D])).
fof(f38276_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f38399,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f38398,f11957])).
fof(f38398,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f38104,f11957])).
fof(f38104,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f9509,f11957])).
fof(f9509,plain,(
  ( ! [X1] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X1)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f1345])).
fof(f1345,plain,(
  ( ! [X1] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X1)))) )),
  inference(superposition,[],[f365,f351])).
fof(f38272,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl130),
  inference(cnf_transformation,[],[f38272_D])).
fof(f38272_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f38397,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f38396,f11957])).
fof(f38396,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f38103,f11957])).
fof(f38103,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9508,f11957])).
fof(f9508,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f1344])).
fof(f1344,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f365,f349])).
fof(f349,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(forward_demodulation,[],[f232,f215])).
fof(f232,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X22] : s('type.num.num',X22) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num','const.num.|48|_0')))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|1')).
fof(f37933,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(superposition,[],[f12967,f11957])).
fof(f37932,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f12939,f11957])).
fof(f37931,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f12935,f11957])).
fof(f38282,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl142),
  inference(cnf_transformation,[],[f38282_D])).
fof(f38282_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f38284,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl144),
  inference(cnf_transformation,[],[f38284_D])).
fof(f38284_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f37912,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9562,f11957])).
fof(f9562,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X5)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f5272])).
fof(f5272,plain,(
  ( ! [X5] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X5))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f359,f251])).
fof(f359,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(forward_demodulation,[],[f247,f215])).
fof(f247,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f63])).
fof(f63,axiom,(
  ! [X22] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X22))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.num.|48|_0')))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|24')).
fof(f37911,plain,(
  ( ! [X28] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X28)))) ) | $spl14),
  inference(superposition,[],[f9512,f11957])).
fof(f37910,plain,(
  ( ! [X27] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X27),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f9511,f11957])).
fof(f37909,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9510,f11957])).
fof(f37908,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9509,f11957])).
fof(f37907,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9508,f11957])).
fof(f30291,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl105),
  inference(cnf_transformation,[],[f30291_D])).
fof(f30291_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl105),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl105])])).
fof(f30317,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl124),
  inference(cnf_transformation,[],[f30317_D])).
fof(f30317_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f30439,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f30438,f9499])).
fof(f30438,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(forward_demodulation,[],[f30258,f11933])).
fof(f11933,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(backward_demodulation,[],[f11850,f11365])).
fof(f11365,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f245,f9513])).
fof(f9513,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(backward_demodulation,[],[f9361,f1580])).
fof(f1580,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f240,f218])).
fof(f30258,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(superposition,[],[f12967,f11933])).
fof(f30315,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl123),
  inference(cnf_transformation,[],[f30315_D])).
fof(f30315_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl123),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl123])])).
fof(f30313,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl120),
  inference(cnf_transformation,[],[f30313_D])).
fof(f30313_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f30437,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f30436,f11933])).
fof(f30436,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f30257,f11933])).
fof(f30257,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f12939,f11933])).
fof(f30311,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl118),
  inference(cnf_transformation,[],[f30311_D])).
fof(f30311_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f30435,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f30434,f11933])).
fof(f30434,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f30256,f11933])).
fof(f30256,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f12935,f11933])).
fof(f30427,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl128),
  inference(cnf_transformation,[],[f30427_D])).
fof(f30427_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f30425,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl127),
  inference(cnf_transformation,[],[f30425_D])).
fof(f30425_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl127),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl127])])).
fof(f30247,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f12126,f11933])).
fof(f30433,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f30237,f8818])).
fof(f30237,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f11913,f11933])).
fof(f30432,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f30234,f340])).
fof(f30234,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f11896,f11933])).
fof(f30431,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f30233,f358])).
fof(f30233,plain,(
  ( ! [X186] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X186)))))))) ) | $spl14),
  inference(superposition,[],[f11894,f11933])).
fof(f30430,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f30232,f357])).
fof(f30232,plain,(
  ( ! [X185] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X185)))))))) ) | $spl14),
  inference(superposition,[],[f11893,f11933])).
fof(f30429,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f30231,f345])).
fof(f30231,plain,(
  ( ! [X184] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X184))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f11892,f11933])).
fof(f30428,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f30230,f354])).
fof(f30230,plain,(
  ( ! [X183] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X183))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f11891,f11933])).
fof(f30423,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f30229,f348])).
fof(f30229,plain,(
  ( ! [X182] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X182),s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f11890,f11933])).
fof(f30297,plain,(
  ( ! [X28] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X28)))) ) | $spl112),
  inference(cnf_transformation,[],[f30297_D])).
fof(f30297_D,plain,(
  ( ! [X28] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X28)))) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f30370,plain,(
  ( ! [X114] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X114))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f30369,f11933])).
fof(f30369,plain,(
  ( ! [X114] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num',X114)))) ) | $spl14),
  inference(forward_demodulation,[],[f30139,f11933])).
fof(f30139,plain,(
  ( ! [X114] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num',X114)))) ) | $spl14),
  inference(superposition,[],[f9512,f11933])).
fof(f30296,plain,(
  ( ! [X27] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X27),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl110),
  inference(cnf_transformation,[],[f30296_D])).
fof(f30296_D,plain,(
  ( ! [X27] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X27),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f30368,plain,(
  ( ! [X113] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X113),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f30367,f11933])).
fof(f30367,plain,(
  ( ! [X113] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X113),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))))) ) | $spl14),
  inference(forward_demodulation,[],[f30138,f11933])).
fof(f30138,plain,(
  ( ! [X113] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X113),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))))) ) | $spl14),
  inference(superposition,[],[f9511,f11933])).
fof(f30295,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl108),
  inference(cnf_transformation,[],[f30295_D])).
fof(f30295_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f30366,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f30365,f11933])).
fof(f30365,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f30137,f11933])).
fof(f30137,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9510,f11933])).
fof(f30293,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl106),
  inference(cnf_transformation,[],[f30293_D])).
fof(f30293_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f30364,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f30363,f11933])).
fof(f30363,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f30136,f11933])).
fof(f30136,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f9509,f11933])).
fof(f30289,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl102),
  inference(cnf_transformation,[],[f30289_D])).
fof(f30289_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f30362,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f30361,f11933])).
fof(f30361,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f30135,f11933])).
fof(f30135,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9508,f11933])).
fof(f30026,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(superposition,[],[f12967,f11933])).
fof(f30025,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f12939,f11933])).
fof(f30024,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f12935,f11933])).
fof(f30299,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl114),
  inference(cnf_transformation,[],[f30299_D])).
fof(f30299_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f30301,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl116),
  inference(cnf_transformation,[],[f30301_D])).
fof(f30301_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f30005,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9562,f11933])).
fof(f30004,plain,(
  ( ! [X28] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X28)))) ) | $spl14),
  inference(superposition,[],[f9512,f11933])).
fof(f30003,plain,(
  ( ! [X27] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X27),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f9511,f11933])).
fof(f30002,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9510,f11933])).
fof(f30001,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9509,f11933])).
fof(f30000,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9508,f11933])).
fof(f28243,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl77),
  inference(cnf_transformation,[],[f28243_D])).
fof(f28243_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl77),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl77])])).
fof(f28269,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl96),
  inference(cnf_transformation,[],[f28269_D])).
fof(f28269_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f28376,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f28375,f9499])).
fof(f28375,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(forward_demodulation,[],[f28210,f11932])).
fof(f11932,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(backward_demodulation,[],[f11850,f11364])).
fof(f11364,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f240,f9513])).
fof(f28210,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(superposition,[],[f12967,f11932])).
fof(f28267,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl95),
  inference(cnf_transformation,[],[f28267_D])).
fof(f28267_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl95),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl95])])).
fof(f28265,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl92),
  inference(cnf_transformation,[],[f28265_D])).
fof(f28265_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f28374,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f28373,f11932])).
fof(f28373,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f28209,f11932])).
fof(f28209,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f12939,f11932])).
fof(f28263,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl90),
  inference(cnf_transformation,[],[f28263_D])).
fof(f28263_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f28372,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f28371,f11932])).
fof(f28371,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f28208,f11932])).
fof(f28208,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f12935,f11932])).
fof(f28364,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl100),
  inference(cnf_transformation,[],[f28364_D])).
fof(f28364_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f28362,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl99),
  inference(cnf_transformation,[],[f28362_D])).
fof(f28362_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl99),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl99])])).
fof(f28199,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f12126,f11932])).
fof(f28370,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f28189,f8818])).
fof(f28189,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f11913,f11932])).
fof(f28369,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f28186,f340])).
fof(f28186,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f11896,f11932])).
fof(f28368,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f28185,f358])).
fof(f28185,plain,(
  ( ! [X174] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X174)))))))) ) | $spl14),
  inference(superposition,[],[f11894,f11932])).
fof(f28367,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f28184,f357])).
fof(f28184,plain,(
  ( ! [X173] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X173)))))))) ) | $spl14),
  inference(superposition,[],[f11893,f11932])).
fof(f28366,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f28183,f345])).
fof(f28183,plain,(
  ( ! [X172] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X172))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f11892,f11932])).
fof(f28365,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f28182,f354])).
fof(f28182,plain,(
  ( ! [X171] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X171))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f11891,f11932])).
fof(f28360,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f28181,f348])).
fof(f28181,plain,(
  ( ! [X170] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X170),s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f11890,f11932])).
fof(f28249,plain,(
  ( ! [X22] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X22)))) ) | $spl84),
  inference(cnf_transformation,[],[f28249_D])).
fof(f28249_D,plain,(
  ( ! [X22] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X22)))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f28307,plain,(
  ( ! [X102] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X102))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f28306,f11932])).
fof(f28306,plain,(
  ( ! [X102] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num',X102)))) ) | $spl14),
  inference(forward_demodulation,[],[f28091,f11932])).
fof(f28091,plain,(
  ( ! [X102] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num',X102)))) ) | $spl14),
  inference(superposition,[],[f9512,f11932])).
fof(f28248,plain,(
  ( ! [X21] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X21),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl82),
  inference(cnf_transformation,[],[f28248_D])).
fof(f28248_D,plain,(
  ( ! [X21] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X21),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f28305,plain,(
  ( ! [X101] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X101),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f28304,f11932])).
fof(f28304,plain,(
  ( ! [X101] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X101),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))))) ) | $spl14),
  inference(forward_demodulation,[],[f28090,f11932])).
fof(f28090,plain,(
  ( ! [X101] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X101),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))))) ) | $spl14),
  inference(superposition,[],[f9511,f11932])).
fof(f28247,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl80),
  inference(cnf_transformation,[],[f28247_D])).
fof(f28247_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f28303,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f28302,f11932])).
fof(f28302,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f28089,f11932])).
fof(f28089,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9510,f11932])).
fof(f28245,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl78),
  inference(cnf_transformation,[],[f28245_D])).
fof(f28245_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f28301,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f28300,f11932])).
fof(f28300,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f28088,f11932])).
fof(f28088,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f9509,f11932])).
fof(f28241,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl74),
  inference(cnf_transformation,[],[f28241_D])).
fof(f28241_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f28299,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f28298,f11932])).
fof(f28298,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f28087,f11932])).
fof(f28087,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9508,f11932])).
fof(f27991,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(superposition,[],[f12967,f11932])).
fof(f27990,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f12939,f11932])).
fof(f27989,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f12935,f11932])).
fof(f28251,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl86),
  inference(cnf_transformation,[],[f28251_D])).
fof(f28251_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f28253,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl88),
  inference(cnf_transformation,[],[f28253_D])).
fof(f28253_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f27970,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9562,f11932])).
fof(f27969,plain,(
  ( ! [X22] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X22)))) ) | $spl14),
  inference(superposition,[],[f9512,f11932])).
fof(f27968,plain,(
  ( ! [X21] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X21),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f9511,f11932])).
fof(f27967,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9510,f11932])).
fof(f27966,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9509,f11932])).
fof(f27965,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9508,f11932])).
fof(f23303,plain,(
  ( ! [X15] : (s(bool,'T_0') = s(bool,X15)) ) | $spl70),
  inference(cnf_transformation,[],[f23303_D])).
fof(f23303_D,plain,(
  ( ! [X15] : (s(bool,'T_0') = s(bool,X15)) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f26467,plain,(
  s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl73),
  inference(cnf_transformation,[],[f26467_D])).
fof(f26467_D,plain,(
  s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl73),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl73])])).
fof(f26468,plain,(
  ( ! [X29] : (s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,X29)) ) | ($spl14 | $spl48)),
  inference(forward_demodulation,[],[f26403,f347])).
fof(f347,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f230,f215])).
fof(f230,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f65])).
fof(f65,axiom,(
  ! [X22] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X22)))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|26')).
fof(f26403,plain,(
  ( ! [X30,X29] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X30))) | s(bool,'T_0') = s(bool,X29)) ) | ($spl14 | $spl48)),
  inference(duplicate_literal_removal,[],[f26282])).
fof(f26282,plain,(
  ( ! [X30,X29] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X30))) | s(bool,'T_0') = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl14 | $spl48)),
  inference(superposition,[],[f3175,f19205])).
fof(f19205,plain,(
  ( ! [X6] : (s(bool,X6) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,X6)) ) | $spl48),
  inference(subsumption_resolution,[],[f19159,f343])).
fof(f19159,plain,(
  ( ! [X6] : (p(s(bool,'F_0')) | s(bool,X6) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,X6)) ) | $spl48),
  inference(superposition,[],[f695,f16272])).
fof(f695,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f675,f343])).
fof(f675,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f306,f251])).
fof(f306,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f168])).
fof(f168,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X11,X12] : ((p(s(bool,X11)) => p(s(bool,X12))) => ((p(s(bool,X12)) => p(s(bool,X11))) => s(bool,X11) = s(bool,X12)))),
  file('thm.bvlProps.Boolv_|49||49|','thm.bool.IMP_ANTISYM_AX')).
fof(f26465,plain,(
  ( ! [X27] : (s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,X27)) ) | ($spl12 | $spl48)),
  inference(forward_demodulation,[],[f26404,f352])).
fof(f352,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(forward_demodulation,[],[f235,f215])).
fof(f235,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f68])).
fof(f68,axiom,(
  ! [X22] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X22),s('type.num.num','const.num.|48|_0')))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|29')).
fof(f26404,plain,(
  ( ! [X28,X27] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X28),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X27)) ) | ($spl12 | $spl48)),
  inference(duplicate_literal_removal,[],[f26281])).
fof(f26281,plain,(
  ( ! [X28,X27] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X28),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) ) | ($spl12 | $spl48)),
  inference(superposition,[],[f3174,f19205])).
fof(f16273,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | $spl51),
  inference(cnf_transformation,[],[f16273_D])).
fof(f16273_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f23304,plain,(
  ( ! [X17] : (s(bool,'T_0') != s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X17)) ) | ($spl14 | $spl48)),
  inference(forward_demodulation,[],[f23258,f347])).
fof(f23258,plain,(
  ( ! [X17,X18] : (s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X18))) | s(bool,'T_0') = s(bool,X17)) ) | ($spl14 | $spl48)),
  inference(duplicate_literal_removal,[],[f23162])).
fof(f23162,plain,(
  ( ! [X17,X18] : (s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X18))) | s(bool,'T_0') = s(bool,X17) | s(bool,'T_0') = s(bool,X17)) ) | ($spl14 | $spl48)),
  inference(superposition,[],[f3175,f19213])).
fof(f19213,plain,(
  ( ! [X22] : (s(bool,X22) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X22)) ) | $spl48),
  inference(subsumption_resolution,[],[f19168,f343])).
fof(f19168,plain,(
  ( ! [X22] : (p(s(bool,'F_0')) | s(bool,X22) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X22)) ) | $spl48),
  inference(superposition,[],[f695,f16292])).
fof(f16292,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | $spl48),
  inference(backward_demodulation,[],[f16272,f5715])).
fof(f5715,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0')))),
  inference(backward_demodulation,[],[f5677,f5268])).
fof(f5268,plain,(
  s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f359,f218])).
fof(f5677,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f361,f218])).
fof(f361,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f249,f215])).
fof(f249,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X22] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X22))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|21')).
fof(f23302,plain,(
  ( ! [X15] : (s(bool,'T_0') != s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X15)) ) | ($spl12 | $spl48)),
  inference(forward_demodulation,[],[f23259,f352])).
fof(f23259,plain,(
  ( ! [X15,X16] : (s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X16),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X15)) ) | ($spl12 | $spl48)),
  inference(duplicate_literal_removal,[],[f23161])).
fof(f23161,plain,(
  ( ! [X15,X16] : (s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X16),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) ) | ($spl12 | $spl48)),
  inference(superposition,[],[f3174,f19213])).
fof(f20288,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl64),
  inference(cnf_transformation,[],[f20288_D])).
fof(f20288_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f20290,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl66),
  inference(cnf_transformation,[],[f20290_D])).
fof(f20290_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f20305,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | ($spl5 | $spl14)),
  inference(forward_demodulation,[],[f20281,f7783])).
fof(f20281,plain,(
  s(bool,sK1) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | ($spl5 | $spl14)),
  inference(superposition,[],[f19238,f13173])).
fof(f13173,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f9683,f9643])).
fof(f9683,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X1))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9681,f6619])).
fof(f6619,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(forward_demodulation,[],[f6572,f6144])).
fof(f6144,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))) )),
  inference(superposition,[],[f299,f218])).
fof(f299,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f144])).
fof(f144,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f67])).
fof(f67,axiom,(
  ! [X22,X23] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X23))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|28')).
fof(f6572,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f301,f218])).
fof(f9681,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl14),
  inference(forward_demodulation,[],[f9577,f342])).
fof(f9577,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X2)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6145])).
fof(f6145,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f299,f1609])).
fof(f19238,plain,(
  ( ! [X77] : (s(bool,sK1) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) ) | $spl5),
  inference(subsumption_resolution,[],[f19201,f343])).
fof(f19201,plain,(
  ( ! [X77] : (p(s(bool,'F_0')) | s(bool,sK1) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) ) | $spl5),
  inference(superposition,[],[f695,f7783])).
fof(f20301,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl69),
  inference(cnf_transformation,[],[f20301_D])).
fof(f20301_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl69),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl69])])).
fof(f20302,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f20278,f347])).
fof(f20278,plain,(
  ( ! [X5] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X5))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(superposition,[],[f3175,f13173])).
fof(f20299,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | ($spl12 | $spl14)),
  inference(forward_demodulation,[],[f20277,f352])).
fof(f20277,plain,(
  ( ! [X4] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X4),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) ) | ($spl12 | $spl14)),
  inference(superposition,[],[f3174,f13173])).
fof(f20268,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f251,f13173])).
fof(f20265,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f13173,f251])).
fof(f20286,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | ($spl5 | $spl14)),
  inference(forward_demodulation,[],[f20264,f7783])).
fof(f20264,plain,(
  s(bool,sK1) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | ($spl5 | $spl14)),
  inference(superposition,[],[f13173,f19238])).
fof(f19513,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl60),
  inference(cnf_transformation,[],[f19513_D])).
fof(f19513_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f19515,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl62),
  inference(cnf_transformation,[],[f19515_D])).
fof(f19515_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f19526,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | ($spl5 | $spl14)),
  inference(forward_demodulation,[],[f19506,f7783])).
fof(f19506,plain,(
  s(bool,sK1) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | ($spl5 | $spl14)),
  inference(superposition,[],[f19238,f12590])).
fof(f12590,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f9677,f9643])).
fof(f9677,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X1))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9675,f6400])).
fof(f6400,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(forward_demodulation,[],[f6357,f5921])).
fof(f5921,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))) )),
  inference(superposition,[],[f298,f218])).
fof(f298,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X22,X23] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|22')).
fof(f6357,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f300,f218])).
fof(f300,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f64])).
fof(f64,axiom,(
  ! [X22,X23] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X22))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|25')).
fof(f9675,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X2))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl14),
  inference(forward_demodulation,[],[f9570,f342])).
fof(f9570,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X2)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f5922])).
fof(f5922,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f298,f1609])).
fof(f19495,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f251,f12590])).
fof(f19492,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f12590,f251])).
fof(f19511,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | ($spl5 | $spl14)),
  inference(forward_demodulation,[],[f19491,f7783])).
fof(f19491,plain,(
  s(bool,sK1) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | ($spl5 | $spl14)),
  inference(superposition,[],[f12590,f19238])).
fof(f16280,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl56),
  inference(cnf_transformation,[],[f16280_D])).
fof(f16280_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f16282,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) | $spl58),
  inference(cnf_transformation,[],[f16282_D])).
fof(f16282_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f16170,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(superposition,[],[f9562,f9654])).
fof(f9654,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f9519,f342])).
fof(f9519,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(backward_demodulation,[],[f9361,f1827])).
fof(f1827,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f245,f1609])).
fof(f16276,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl52),
  inference(cnf_transformation,[],[f16276_D])).
fof(f16276_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f16278,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) | $spl54),
  inference(cnf_transformation,[],[f16278_D])).
fof(f16278_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f16169,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(superposition,[],[f9562,f9652])).
fof(f9652,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f9515,f342])).
fof(f9515,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(backward_demodulation,[],[f9361,f1614])).
fof(f1614,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f240,f1609])).
fof(f16272,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl48),
  inference(cnf_transformation,[],[f16272_D])).
fof(f16272_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f16274,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | $spl50),
  inference(cnf_transformation,[],[f16274_D])).
fof(f16274_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f16168,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f9562,f9643])).
fof(f16079,plain,(
  $false | ($spl14 | $spl44)),
  inference(subsumption_resolution,[],[f15983,f16072])).
fof(f16072,plain,(
  ( ! [X16] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num',X16)) ) | ($spl14 | $spl44)),
  inference(global_subsumption,[],[f212,f211,f213,f215,f339,f340,f218,f342,f343,f225,f344,f345,f346,f347,f348,f349,f350,f351,f352,f353,f354,f238,f239,f240,f356,f357,f358,f245,f359,f360,f361,f251,f254,f253,f258,f257,f362,f363,f364,f365,f369,f371,f294,f295,f298,f299,f300,f301,f302,f303,f304,f305,f309,f306,f372,f315,f314,f317,f316,f319,f318,f321,f320,f323,f322,f325,f324,f327,f326,f329,f332,f331,f330,f382,f385,f400,f604,f695,f872,f873,f909,f910,f937,f1001,f1111,f1268,f1309,f1310,f1339,f1338,f1344,f1345,f1349,f1353,f1354,f1366,f1463,f1515,f1514,f1544,f1543,f1549,f1580,f1609,f1614,f1616,f1617,f1649,f1699,f1700,f1734,f1767,f1825,f1856,f1827,f1862,f1867,f2067,f2142,f2166,f2177,f2178,f2823,f2765,f2764,f2762,f2772,f2773,f2774,f2775,f2776,f2777,f2778,f2779,f2780,f2781,f2782,f2783,f2784,f2785,f2787,f2840,f2790,f2791,f2793,f2794,f3071,f2165,f3314,f3313,f3312,f3311,f3310,f3364,f3307,f3306,f3316,f3317,f3319,f3320,f3321,f3322,f3323,f3324,f3325,f3326,f3327,f3328,f3329,f3330,f3331,f3332,f3334,f3336,f3337,f3338,f3537,f3538,f3540,f3541,f3542,f3543,f3544,f3545,f3546,f3547,f3548,f3549,f3550,f3551,f3552,f3553,f3555,f3557,f3558,f3559,f3560,f3588,f3590,f3758,f3757,f3756,f3755,f3754,f3808,f3751,f3750,f3760,f3761,f3763,f3764,f3765,f3766,f3767,f3768,f3769,f3770,f3771,f3772,f3773,f3774,f3775,f3776,f3778,f3780,f3781,f3782,f3940,f3941,f3943,f3944,f3945,f3946,f3947,f3948,f3949,f3950,f3951,f3952,f3953,f3954,f3955,f3956,f3958,f3960,f3961,f3962,f3963,f3991,f4011,f4235,f4234,f4233,f4232,f4231,f4285,f4228,f4227,f4240,f4241,f4242,f4243,f4244,f4245,f4246,f4247,f4248,f4249,f4250,f4251,f4252,f4253,f4255,f4257,f4258,f4259,f4365,f4364,f4363,f4362,f4827,f4826,f4825,f4824,f4823,f4822,f4877,f4819,f4818,f4833,f4834,f4835,f4836,f4837,f4838,f4839,f4840,f4841,f4842,f4843,f4844,f4845,f4847,f4849,f4850,f4851,f5125,f5124,f5123,f5122,f5121,f5302,f5268,f5269,f5272,f5570,f5533,f5534,f5537,f5677,f5715,f5716,f5681,f5921,f5922,f5989,f5948,f5990,f5952,f6069,f6072,f6212,f6144,f6145,f6171,f6213,f6175,f6330,f6400,f6361,f6544,f6614,f6616,f6545,f6619,f6576,f6634,f6633,f6695,f6694,f6723,f6725,f6789,f6790,f6791,f6887,f6818,f6819,f6832,f6836,f6838,f6840,f6842,f6844,f6871,f6898,f6900,f6946,f6949,f7133,f7033,f7034,f7134,f7062,f7063,f7078,f7082,f7084,f7086,f7088,f7090,f7117,f7145,f7147,f7373,f7270,f7271,f7374,f7300,f7301,f7318,f7322,f7324,f7326,f7328,f7330,f7357,f7385,f7387,f7461,f7486,f7485,f7484,f7483,f7482,f7481,f7480,f7550,f7477,f7476,f7496,f7497,f7499,f7502,f7503,f7504,f7512,f7513,f7516,f7915,f7916,f7917,f4828,f4236,f3939,f3759,f3536,f3315,f2768,f1718,f246,f244,f7831,f3175,f8305,f8304,f8303,f8331,f8332,f8493,f8674,f8563,f8564,f8675,f8594,f8595,f8701,f8703,f8761,f8762,f8793,f8794,f8818,f8819,f8820,f8821,f8822,f8823,f8824,f8825,f8826,f8827,f8828,f8829,f8842,f8831,f8832,f8833,f8834,f8835,f8875,f8859,f9104,f9344,f9343,f9342,f9341,f9340,f9353,f9352,f9356,f9357,f9361,f9497,f9642,f9498,f9499,f9500,f9501,f9502,f9503,f9504,f9508,f9509,f9510,f9511,f9512,f9513,f9643,f9644,f9645,f9652,f9517,f9518,f9654,f9521,f9655,f9524,f9527,f9528,f9530,f9531,f9659,f9534,f9535,f9661,f9538,f9539,f9541,f9542,f9664,f9545,f9546,f9666,f9549,f9550,f9552,f9553,f9669,f9556,f9557,f9559,f9562,f9564,f9566,f9567,f9569,f9675,f9676,f9677,f9571,f9678,f9679,f9576,f9681,f9682,f9683,f9578,f9684,f9685,f9686,f9582,f9687,f9584,f9585,f9586,f9587,f9589,f9590,f9689,f9690,f9592,f9691,f9692,f9594,f9596,f9597,f9600,f9695,f9696,f9602,f9697,f9698,f9604,f9607,f9608,f9609,f9701,f9702,f9611,f9703,f9704,f9613,f9616,f9617,f9618,f9619,f9620,f9625,f9707,f9627,f9708,f9709,f9710,f9711,f9713,f9712,f9714,f9716,f9717,f9633,f9641,f9892,f9932,f10007,f10088,f10285,f10284,f10446,f10445,f10611,f10609,f10608,f10607,f10606,f10605,f10806,f10837,f10924,f10967,f10938,f10937,f10936,f10935,f10934,f11137,f11139,f11067,f11071,f11073,f11075,f11077,f11079,f11151,f11153,f11118,f11197,f11167,f11166,f11165,f11164,f11163,f11212,f11211,f11210,f11209,f11208,f11207,f11267,f11266,f11265,f11264,f11263,f11262,f11339,f11309,f11308,f11307,f11306,f11305,f11362,f11363,f11364,f11365,f11366,f11367,f11368,f11369,f11370,f11481,f11372,f11482,f11374,f11375,f11376,f11377,f11378,f11379,f11380,f11382,f11383,f11384,f11483,f11385,f11386,f11387,f11488,f11410,f11412,f11414,f11416,f11418,f11422,f11501,f11547,f11548,f11549,f11550,f11551,f11552,f11553,f11554,f11555,f11666,f11557,f11667,f11559,f11560,f11561,f11562,f11563,f11564,f11565,f11567,f11568,f11569,f11668,f11570,f11571,f11572,f11673,f11595,f11597,f11599,f11601,f11603,f11607,f11686,f11850,f11888,f11889,f11890,f11891,f11892,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11901,f11902,f11911,f11912,f11913,f11921,f11922,f11923,f11924,f11925,f11926,f11927,f11928,f11929,f11930,f11931,f11932,f11933,f11934,f11983,f11935,f11936,f11984,f11937,f11938,f11939,f11940,f11941,f11942,f11943,f11944,f11945,f11946,f11947,f11948,f11949,f11950,f11951,f11952,f11953,f11955,f11957,f11958,f11959,f11986,f11960,f11961,f11987,f11962,f11963,f11964,f11965,f11966,f11967,f11968,f11969,f11970,f11971,f11972,f11973,f11974,f11975,f11976,f11977,f11978,f11980,f11846,f11990,f12002,f12008,f12013,f12014,f12015,f12018,f12020,f12021,f12027,f12035,f12036,f12126,f12156,f12158,f12160,f12162,f12343,f12313,f12312,f12311,f12310,f12309,f12495,f12504,f12505,f12506,f12511,f12514,f12515,f12522,f12525,f12526,f12590,f12591,f12672,f12641,f12640,f12673,f12638,f12637,f12708,f12746,f12803,f12935,f12939,f12967,f12969,f13046,f13048,f13050,f13052,f13054,f13142,f13173,f13174,f13336,f13501,f13570,f13539,f13538,f13537,f13536,f13535,f13614,f13582,f13581,f13580,f13579,f13578,f13648,f13719,f13688,f13687,f13686,f13685,f13684,f13763,f13731,f13730,f13729,f13728,f13727,f14219,f14220,f14221,f14222,f14243,f14404,f14405,f14406,f14407,f14428,f15240,f15207,f15206,f15205,f15204,f15203,f15461,f15460,f15459,f15458,f15457,f15456,f15536,f15540,f15629,f15628,f15627,f15626,f15625,f15624,f15744,f15742,f15741,f15740,f15739,f15738,f15747,f15787,f15856,f16067,f16071])).
fof(f16071,plain,(
  ( ! [X16] : (s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num',X16)) ) | ($spl14 | $spl44)),
  inference(forward_demodulation,[],[f16070,f9643])).
fof(f16070,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num',X16)) ) | $spl44),
  inference(forward_demodulation,[],[f16069,f1699])).
fof(f16069,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num',X16)) ) | $spl44),
  inference(forward_demodulation,[],[f15881,f244])).
fof(f15881,plain,(
  ( ! [X16] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num',X16) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl44),
  inference(superposition,[],[f317,f15787])).
fof(f16067,plain,(
  ( ! [X14] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) | s('type.num.num',X14) = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) ) | ($spl14 | $spl44)),
  inference(forward_demodulation,[],[f15879,f8818])).
fof(f15879,plain,(
  ( ! [X14] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) | s('type.num.num',X14) = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl44),
  inference(superposition,[],[f316,f15787])).
fof(f15856,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(superposition,[],[f15787,f251])).
fof(f15738,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.list.list'('type.bvlSem.v'),X1)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f10611,f330])).
fof(f15739,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f10611,f324])).
fof(f15740,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f10611,f322])).
fof(f15741,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f10611,f320])).
fof(f15742,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f10611,f318])).
fof(f15744,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f15743,f9643])).
fof(f15743,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f10611,f316])).
fof(f15624,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.list.list'('type.bvlSem.v'),X1)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11901,f330])).
fof(f15625,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f11901,f324])).
fof(f15626,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f11901,f322])).
fof(f15627,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f11901,f320])).
fof(f15628,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f11901,f318])).
fof(f15629,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f11901,f316])).
fof(f15540,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(superposition,[],[f11900,f319])).
fof(f15536,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(superposition,[],[f11899,f321])).
fof(f15456,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.list.list'('type.bvlSem.v'),X1)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11898,f330])).
fof(f15457,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f11898,f324])).
fof(f15458,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f11898,f322])).
fof(f15459,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f11898,f320])).
fof(f15460,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f11898,f318])).
fof(f15461,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f11898,f316])).
fof(f15203,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f12343,f330])).
fof(f15204,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f12343,f324])).
fof(f15205,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f12343,f322])).
fof(f15206,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f12343,f320])).
fof(f15207,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f12343,f318])).
fof(f15240,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(forward_demodulation,[],[f15208,f9643])).
fof(f15208,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f12343,f316])).
fof(f14428,plain,(
  ( ! [X35] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X35) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(superposition,[],[f316,f9654])).
fof(f14407,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(superposition,[],[f9687,f9654])).
fof(f14406,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(superposition,[],[f9686,f9654])).
fof(f14405,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f9683,f9654])).
fof(f14404,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f9677,f9654])).
fof(f14243,plain,(
  ( ! [X35] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X35) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(superposition,[],[f316,f9652])).
fof(f14222,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(superposition,[],[f9687,f9652])).
fof(f14221,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(superposition,[],[f9686,f9652])).
fof(f14220,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f9683,f9652])).
fof(f14219,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f9677,f9652])).
fof(f13727,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11889,f330])).
fof(f13728,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11889,f324])).
fof(f13729,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11889,f322])).
fof(f13730,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11889,f320])).
fof(f13731,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11889,f318])).
fof(f13763,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(forward_demodulation,[],[f13732,f9643])).
fof(f13732,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11889,f316])).
fof(f13684,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11888,f330])).
fof(f13685,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11888,f324])).
fof(f13686,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11888,f322])).
fof(f13687,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11888,f320])).
fof(f13688,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11888,f318])).
fof(f13719,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(forward_demodulation,[],[f13689,f9643])).
fof(f13689,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11888,f316])).
fof(f13648,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl14),
  inference(superposition,[],[f9687,f251])).
fof(f13578,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11197,f330])).
fof(f13579,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11197,f324])).
fof(f13580,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11197,f322])).
fof(f13581,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11197,f320])).
fof(f13582,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11197,f318])).
fof(f13614,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(forward_demodulation,[],[f13583,f9643])).
fof(f13583,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11197,f316])).
fof(f13535,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f10967,f330])).
fof(f13536,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f10967,f324])).
fof(f13537,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f10967,f322])).
fof(f13538,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f10967,f320])).
fof(f13539,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f10967,f318])).
fof(f13570,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(forward_demodulation,[],[f13540,f9643])).
fof(f13540,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f10967,f316])).
fof(f13501,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl14),
  inference(superposition,[],[f9686,f251])).
fof(f13336,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(superposition,[],[f9685,f251])).
fof(f13174,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(superposition,[],[f9683,f251])).
fof(f13142,plain,(
  ( ! [X137] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X137)))) ) | $spl14),
  inference(forward_demodulation,[],[f13109,f340])).
fof(f13109,plain,(
  ( ! [X137] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X137))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X137)))) ) | $spl14),
  inference(superposition,[],[f11896,f12746])).
fof(f13054,plain,(
  ( ! [X57,X56] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X56))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X57))) | s('type.num.num',X57) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X56)))) ) | $spl14),
  inference(superposition,[],[f322,f12746])).
fof(f13052,plain,(
  ( ! [X52,X53] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X52))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X53))) | s('type.num.num',X53) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X52)))) ) | $spl14),
  inference(superposition,[],[f321,f12746])).
fof(f13050,plain,(
  ( ! [X48,X49] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X48))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X49))) | s('type.num.num',X49) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X48)))) ) | $spl14),
  inference(superposition,[],[f320,f12746])).
fof(f13048,plain,(
  ( ! [X45,X44] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X44))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X45))) | s('type.num.num',X45) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X44)))) ) | $spl14),
  inference(superposition,[],[f319,f12746])).
fof(f13046,plain,(
  ( ! [X41,X40] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X40))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X41))) | s('type.num.num',X41) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X40)))) ) | $spl14),
  inference(superposition,[],[f318,f12746])).
fof(f12969,plain,(
  ( ! [X150] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X150),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X150)))) ) | $spl14),
  inference(forward_demodulation,[],[f12968,f12746])).
fof(f12968,plain,(
  ( ! [X150] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X150),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X150)))))) ) | $spl14),
  inference(forward_demodulation,[],[f12871,f9582])).
fof(f12871,plain,(
  ( ! [X150] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X150)))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X150)))))) ) | $spl14),
  inference(superposition,[],[f371,f9709])).
fof(f12803,plain,(
  ( ! [X33,X32] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))) | s('type.num.num',X33) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X32)))) ) | $spl14),
  inference(superposition,[],[f316,f9709])).
fof(f12708,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(superposition,[],[f9679,f251])).
fof(f12637,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f8820,f330])).
fof(f12638,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f8820,f324])).
fof(f12673,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(forward_demodulation,[],[f12639,f11850])).
fof(f12639,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f8820,f322])).
fof(f12640,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f8820,f320])).
fof(f12641,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f8820,f318])).
fof(f12672,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(forward_demodulation,[],[f12642,f8818])).
fof(f12642,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f8820,f316])).
fof(f12591,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(superposition,[],[f9677,f251])).
fof(f12526,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X22),s('type.num.num',X23))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22)))) ) | $spl14),
  inference(forward_demodulation,[],[f12492,f340])).
fof(f12492,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X22),s('type.num.num',X23)))) ) | $spl14),
  inference(superposition,[],[f11896,f295])).
fof(f12525,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X20),s('type.num.num',X21))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))) ) | $spl14),
  inference(forward_demodulation,[],[f12491,f340])).
fof(f12491,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X20),s('type.num.num',X21)))) ) | $spl14),
  inference(superposition,[],[f11896,f294])).
fof(f12522,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num',X17)))))))) ) | $spl14),
  inference(forward_demodulation,[],[f12486,f340])).
fof(f12486,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num',X17))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17)))))) ) | $spl14),
  inference(superposition,[],[f11896,f302])).
fof(f12515,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X11),s('type.num.num',X12)))))))) ) | $spl14),
  inference(forward_demodulation,[],[f12481,f340])).
fof(f12481,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X11),s('type.num.num',X12))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))))) ) | $spl14),
  inference(superposition,[],[f11896,f304])).
fof(f12514,plain,(
  ( ! [X10] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10)))) ) | $spl14),
  inference(forward_demodulation,[],[f12480,f340])).
fof(f12480,plain,(
  ( ! [X10] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(superposition,[],[f11896,f346])).
fof(f12511,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8)))))))) ) | $spl14),
  inference(forward_demodulation,[],[f12478,f340])).
fof(f12478,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))) ) | $spl14),
  inference(superposition,[],[f11896,f303])).
fof(f12506,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4)))))))) ) | $spl14),
  inference(forward_demodulation,[],[f12475,f340])).
fof(f12475,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) ) | $spl14),
  inference(superposition,[],[f11896,f9710])).
fof(f12505,plain,(
  ( ! [X2] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X2))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))) ) | $spl14),
  inference(forward_demodulation,[],[f12474,f340])).
fof(f12474,plain,(
  ( ! [X2] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X2)))) ) | $spl14),
  inference(superposition,[],[f11896,f351])).
fof(f12504,plain,(
  ( ! [X1] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))) ) | $spl14),
  inference(forward_demodulation,[],[f12473,f340])).
fof(f12473,plain,(
  ( ! [X1] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(superposition,[],[f11896,f349])).
fof(f12495,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0)))))) ) | $spl14),
  inference(forward_demodulation,[],[f12465,f340])).
fof(f12465,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(superposition,[],[f11896,f244])).
fof(f12309,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11846,f330])).
fof(f12310,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11846,f324])).
fof(f12311,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11846,f322])).
fof(f12312,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11846,f320])).
fof(f12313,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11846,f318])).
fof(f12343,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(forward_demodulation,[],[f12314,f9643])).
fof(f12314,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f11846,f316])).
fof(f12162,plain,(
  ( ! [X27] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X27))) | s('type.num.num',X27) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(superposition,[],[f321,f11850])).
fof(f12160,plain,(
  ( ! [X25] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(superposition,[],[f320,f11850])).
fof(f12158,plain,(
  ( ! [X23] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X23))) | s('type.num.num',X23) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(superposition,[],[f319,f11850])).
fof(f12156,plain,(
  ( ! [X21] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(superposition,[],[f318,f11850])).
fof(f12036,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X22),s('type.num.num',X23))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))) ) | $spl14),
  inference(forward_demodulation,[],[f11881,f11850])).
fof(f11881,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X22),s('type.num.num',X23)))) ) | $spl14),
  inference(superposition,[],[f9524,f295])).
fof(f12035,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X20),s('type.num.num',X21))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))) ) | $spl14),
  inference(forward_demodulation,[],[f11880,f11850])).
fof(f11880,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X20),s('type.num.num',X21)))) ) | $spl14),
  inference(superposition,[],[f9524,f294])).
fof(f12027,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num',X17)))))))) ) | $spl14),
  inference(forward_demodulation,[],[f11875,f11850])).
fof(f11875,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num',X17))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17)))))) ) | $spl14),
  inference(superposition,[],[f9524,f302])).
fof(f12021,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X11),s('type.num.num',X12)))))))) ) | $spl14),
  inference(forward_demodulation,[],[f11870,f11850])).
fof(f11870,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X11),s('type.num.num',X12))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))))) ) | $spl14),
  inference(superposition,[],[f9524,f304])).
fof(f12020,plain,(
  ( ! [X10] : (s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))) ) | $spl14),
  inference(forward_demodulation,[],[f11869,f11850])).
fof(f11869,plain,(
  ( ! [X10] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(superposition,[],[f9524,f346])).
fof(f12018,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8)))))))) ) | $spl14),
  inference(forward_demodulation,[],[f11867,f11850])).
fof(f11867,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))) ) | $spl14),
  inference(superposition,[],[f9524,f303])).
fof(f12015,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4)))))))) ) | $spl14),
  inference(forward_demodulation,[],[f11864,f11850])).
fof(f11864,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) ) | $spl14),
  inference(superposition,[],[f9524,f9710])).
fof(f12014,plain,(
  ( ! [X2] : (s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X2))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))) ) | $spl14),
  inference(forward_demodulation,[],[f11863,f11850])).
fof(f11863,plain,(
  ( ! [X2] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X2)))) ) | $spl14),
  inference(superposition,[],[f9524,f351])).
fof(f12013,plain,(
  ( ! [X1] : (s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) ) | $spl14),
  inference(forward_demodulation,[],[f11862,f11850])).
fof(f11862,plain,(
  ( ! [X1] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(superposition,[],[f9524,f349])).
fof(f11990,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0)))))) ) | $spl14),
  inference(forward_demodulation,[],[f11852,f11850])).
fof(f11852,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(superposition,[],[f9524,f244])).
fof(f11846,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f372,f9524])).
fof(f11980,plain,(
  ( ! [X32] : (s('type.num.num',X32) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11673])).
fof(f11978,plain,(
  ( ! [X44] : (s('type.num.num',X44) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11603])).
fof(f11977,plain,(
  ( ! [X42] : (s('type.num.num',X42) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X42))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11601])).
fof(f11976,plain,(
  ( ! [X40] : (s('type.num.num',X40) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X40))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11599])).
fof(f11975,plain,(
  ( ! [X38] : (s('type.num.num',X38) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X38))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11597])).
fof(f11974,plain,(
  ( ! [X36] : (s('type.num.num',X36) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X36))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11595])).
fof(f11973,plain,(
  ( ! [X17] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11572])).
fof(f11972,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X16))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11571])).
fof(f11971,plain,(
  ( ! [X14] : (s('type.num.num',X14) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11565])).
fof(f11970,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X13),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11564])).
fof(f11969,plain,(
  ( ! [X12] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X12))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11563])).
fof(f11968,plain,(
  ( ! [X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11562])).
fof(f11967,plain,(
  ( ! [X10] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X10))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11561])).
fof(f11966,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X9),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11560])).
fof(f11965,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11559])).
fof(f11964,plain,(
  ( ! [X6] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11557])).
fof(f11963,plain,(
  ( ! [X4] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11555])).
fof(f11962,plain,(
  ( ! [X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11554])).
fof(f11987,plain,(
  ( ! [X7] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X7))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11961,f11667])).
fof(f11961,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11553])).
fof(f11960,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11552])).
fof(f11986,plain,(
  ( ! [X5] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X5))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11959,f11666])).
fof(f11959,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11551])).
fof(f11958,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(backward_demodulation,[],[f11850,f11550])).
fof(f11955,plain,(
  ( ! [X32] : (s('type.num.num',X32) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11488])).
fof(f11953,plain,(
  ( ! [X44] : (s('type.num.num',X44) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11418])).
fof(f11952,plain,(
  ( ! [X42] : (s('type.num.num',X42) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X42))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11416])).
fof(f11951,plain,(
  ( ! [X40] : (s('type.num.num',X40) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X40))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11414])).
fof(f11950,plain,(
  ( ! [X38] : (s('type.num.num',X38) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X38))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11412])).
fof(f11949,plain,(
  ( ! [X36] : (s('type.num.num',X36) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X36))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11410])).
fof(f11948,plain,(
  ( ! [X17] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11387])).
fof(f11947,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X16))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11386])).
fof(f11946,plain,(
  ( ! [X14] : (s('type.num.num',X14) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11380])).
fof(f11945,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11379])).
fof(f11944,plain,(
  ( ! [X12] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X12))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11378])).
fof(f11943,plain,(
  ( ! [X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11377])).
fof(f11942,plain,(
  ( ! [X10] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X10))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11376])).
fof(f11941,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11375])).
fof(f11940,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11374])).
fof(f11939,plain,(
  ( ! [X6] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11372])).
fof(f11938,plain,(
  ( ! [X4] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11370])).
fof(f11937,plain,(
  ( ! [X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11369])).
fof(f11984,plain,(
  ( ! [X7] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X7))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11936,f11482])).
fof(f11936,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11368])).
fof(f11935,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11367])).
fof(f11983,plain,(
  ( ! [X5] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X5))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f11934,f11481])).
fof(f11934,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11366])).
fof(f11931,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11307])).
fof(f11930,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11167])).
fof(f11929,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11166])).
fof(f11928,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11165])).
fof(f11927,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11164])).
fof(f11926,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f11163])).
fof(f11925,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f10938])).
fof(f11924,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f10937])).
fof(f11923,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f10936])).
fof(f11922,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f10935])).
fof(f11921,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f10934])).
fof(f11912,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f9550])).
fof(f11911,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f9549])).
fof(f11902,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X1)))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f7484])).
fof(f11901,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(backward_demodulation,[],[f11850,f4826])).
fof(f11900,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(backward_demodulation,[],[f11850,f4364])).
fof(f11899,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(backward_demodulation,[],[f11850,f4363])).
fof(f11898,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(backward_demodulation,[],[f11850,f4362])).
fof(f11897,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(backward_demodulation,[],[f11850,f4285])).
fof(f11895,plain,(
  ( ! [X26] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f4252])).
fof(f11889,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f4228])).
fof(f11888,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f11850,f4227])).
fof(f11607,plain,(
  ( ! [X48] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X48) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f324,f9518])).
fof(f11603,plain,(
  ( ! [X44] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X44) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f322,f9518])).
fof(f11601,plain,(
  ( ! [X42] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X42))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X42) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f321,f9518])).
fof(f11599,plain,(
  ( ! [X40] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X40))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X40) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f320,f9518])).
fof(f11597,plain,(
  ( ! [X38] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X38))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X38) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f319,f9518])).
fof(f11595,plain,(
  ( ! [X36] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X36))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X36) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f318,f9518])).
fof(f11673,plain,(
  ( ! [X32] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))) | s('type.num.num',X32) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(forward_demodulation,[],[f11591,f9654])).
fof(f11591,plain,(
  ( ! [X32] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X32) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f316,f9518])).
fof(f11572,plain,(
  ( ! [X17] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))))) ) | $spl14),
  inference(superposition,[],[f9710,f9518])).
fof(f11571,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X16)))))) ) | $spl14),
  inference(superposition,[],[f9710,f9518])).
fof(f11668,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(backward_demodulation,[],[f11569,f11567])).
fof(f11569,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9500,f9518])).
fof(f11568,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9499,f9518])).
fof(f11567,plain,(
  s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9498,f9518])).
fof(f11565,plain,(
  ( ! [X14] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) | s('type.num.num',X14) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))) ) | $spl14),
  inference(superposition,[],[f316,f9518])).
fof(f11564,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X13),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))))) ) | $spl14),
  inference(superposition,[],[f304,f9518])).
fof(f11563,plain,(
  ( ! [X12] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X12)))))) ) | $spl14),
  inference(superposition,[],[f304,f9518])).
fof(f11562,plain,(
  ( ! [X11] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))))) ) | $spl14),
  inference(superposition,[],[f303,f9518])).
fof(f11561,plain,(
  ( ! [X10] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X10)))))) ) | $spl14),
  inference(superposition,[],[f303,f9518])).
fof(f11560,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X9),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))))) ) | $spl14),
  inference(superposition,[],[f302,f9518])).
fof(f11559,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X8)))))) ) | $spl14),
  inference(superposition,[],[f302,f9518])).
fof(f11667,plain,(
  ( ! [X7] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f11558,f11553])).
fof(f11558,plain,(
  ( ! [X7] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X7))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(superposition,[],[f301,f9518])).
fof(f11557,plain,(
  ( ! [X6] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) ) | $spl14),
  inference(superposition,[],[f301,f9518])).
fof(f11666,plain,(
  ( ! [X5] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f11556,f11551])).
fof(f11556,plain,(
  ( ! [X5] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X5))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(superposition,[],[f300,f9518])).
fof(f11555,plain,(
  ( ! [X4] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) ) | $spl14),
  inference(superposition,[],[f300,f9518])).
fof(f11554,plain,(
  ( ! [X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(superposition,[],[f299,f9518])).
fof(f11553,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X2)))) ) | $spl14),
  inference(superposition,[],[f299,f9518])).
fof(f11552,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(superposition,[],[f298,f9518])).
fof(f11551,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X0)))) ) | $spl14),
  inference(superposition,[],[f298,f9518])).
fof(f11550,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f245,f9518])).
fof(f11548,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f239,f9518])).
fof(f11547,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f238,f9518])).
fof(f11422,plain,(
  ( ! [X48] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X48))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X48) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f324,f9513])).
fof(f11418,plain,(
  ( ! [X44] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X44))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X44) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f322,f9513])).
fof(f11416,plain,(
  ( ! [X42] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X42))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X42) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f321,f9513])).
fof(f11414,plain,(
  ( ! [X40] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X40))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X40) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f320,f9513])).
fof(f11412,plain,(
  ( ! [X38] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X38))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X38) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f319,f9513])).
fof(f11410,plain,(
  ( ! [X36] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X36))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X36) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f318,f9513])).
fof(f11488,plain,(
  ( ! [X32] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))) | s('type.num.num',X32) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(forward_demodulation,[],[f11406,f9652])).
fof(f11406,plain,(
  ( ! [X32] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num',X32) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f316,f9513])).
fof(f11387,plain,(
  ( ! [X17] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))))) ) | $spl14),
  inference(superposition,[],[f9710,f9513])).
fof(f11386,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X16)))))) ) | $spl14),
  inference(superposition,[],[f9710,f9513])).
fof(f11483,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(backward_demodulation,[],[f11384,f11382])).
fof(f11384,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9500,f9513])).
fof(f11383,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9499,f9513])).
fof(f11382,plain,(
  s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9498,f9513])).
fof(f11380,plain,(
  ( ! [X14] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) | s('type.num.num',X14) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))) ) | $spl14),
  inference(superposition,[],[f316,f9513])).
fof(f11379,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))))) ) | $spl14),
  inference(superposition,[],[f304,f9513])).
fof(f11378,plain,(
  ( ! [X12] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X12)))))) ) | $spl14),
  inference(superposition,[],[f304,f9513])).
fof(f11377,plain,(
  ( ! [X11] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))))) ) | $spl14),
  inference(superposition,[],[f303,f9513])).
fof(f11376,plain,(
  ( ! [X10] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X10)))))) ) | $spl14),
  inference(superposition,[],[f303,f9513])).
fof(f11375,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))))) ) | $spl14),
  inference(superposition,[],[f302,f9513])).
fof(f11374,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X8)))))) ) | $spl14),
  inference(superposition,[],[f302,f9513])).
fof(f11482,plain,(
  ( ! [X7] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f11373,f11368])).
fof(f11373,plain,(
  ( ! [X7] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X7))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(superposition,[],[f301,f9513])).
fof(f11372,plain,(
  ( ! [X6] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) ) | $spl14),
  inference(superposition,[],[f301,f9513])).
fof(f11481,plain,(
  ( ! [X5] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f11371,f11366])).
fof(f11371,plain,(
  ( ! [X5] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X5))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(superposition,[],[f300,f9513])).
fof(f11370,plain,(
  ( ! [X4] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) ) | $spl14),
  inference(superposition,[],[f300,f9513])).
fof(f11369,plain,(
  ( ! [X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(superposition,[],[f299,f9513])).
fof(f11368,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X2)))) ) | $spl14),
  inference(superposition,[],[f299,f9513])).
fof(f11367,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(superposition,[],[f298,f9513])).
fof(f11366,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))),s('type.num.num',X0)))) ) | $spl14),
  inference(superposition,[],[f298,f9513])).
fof(f11363,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f239,f9513])).
fof(f11362,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f238,f9513])).
fof(f11305,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f8819,f330])).
fof(f11306,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f8819,f324])).
fof(f11307,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f8819,f322])).
fof(f11308,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f8819,f320])).
fof(f11309,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f8819,f318])).
fof(f11339,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(forward_demodulation,[],[f11310,f8818])).
fof(f11310,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f8819,f316])).
fof(f11262,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9557,f330])).
fof(f11263,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9557,f324])).
fof(f11264,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9557,f322])).
fof(f11265,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9557,f320])).
fof(f11266,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9557,f318])).
fof(f11267,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9557,f316])).
fof(f11207,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9556,f330])).
fof(f11208,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9556,f324])).
fof(f11209,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9556,f322])).
fof(f11210,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9556,f320])).
fof(f11211,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9556,f318])).
fof(f11212,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9556,f316])).
fof(f11163,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9550,f330])).
fof(f11164,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9550,f324])).
fof(f11165,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9550,f322])).
fof(f11166,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9550,f320])).
fof(f11167,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9550,f318])).
fof(f11197,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(forward_demodulation,[],[f11168,f9497])).
fof(f11168,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9550,f316])).
fof(f11118,plain,(
  ( ! [X189,X188] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X188),s('type.num.num',X189))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X188))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X189)))))) ) | $spl14),
  inference(superposition,[],[f9504,f9710])).
fof(f11153,plain,(
  ( ! [X158,X159] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X158),s('type.num.num',X159))),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X158),s('type.num.num',X159)))))) ) | $spl14),
  inference(forward_demodulation,[],[f11152,f9710])).
fof(f11152,plain,(
  ( ! [X158,X159] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X158),s('type.num.num',X159))),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X158))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X159)))))) ) | $spl14),
  inference(forward_demodulation,[],[f11105,f9582])).
fof(f11105,plain,(
  ( ! [X158,X159] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X158),s('type.num.num',X159)))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X158))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X159)))))) ) | $spl14),
  inference(superposition,[],[f371,f9710])).
fof(f11151,plain,(
  ( ! [X156,X157] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X156),s('type.num.num',X157))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X156),s('type.num.num',X157))),s('type.num.num','const.conLang.true_tag_0'))))) ) | $spl14),
  inference(forward_demodulation,[],[f11150,f9710])).
fof(f11150,plain,(
  ( ! [X156,X157] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X156),s('type.num.num',X157))),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X156))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X157)))))) ) | $spl14),
  inference(forward_demodulation,[],[f11104,f9582])).
fof(f11104,plain,(
  ( ! [X156,X157] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X156),s('type.num.num',X157)))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X156))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X157)))))) ) | $spl14),
  inference(superposition,[],[f369,f9710])).
fof(f11079,plain,(
  ( ! [X88,X87,X86] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87))))))) | s('type.num.num',X88) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X86))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X87)))))) ) | $spl14),
  inference(superposition,[],[f322,f9710])).
fof(f11077,plain,(
  ( ! [X80,X81,X82] : (s('type.num.num',X82) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81))))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X82))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X80),s('type.num.num',X81)))))))) ) | $spl14),
  inference(superposition,[],[f321,f9710])).
fof(f11075,plain,(
  ( ! [X76,X74,X75] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X76))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X74),s('type.num.num',X75))))))) | s('type.num.num',X76) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X74))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X75)))))) ) | $spl14),
  inference(superposition,[],[f320,f9710])).
fof(f11073,plain,(
  ( ! [X70,X68,X69] : (s('type.num.num',X70) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X69))))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X70))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X68),s('type.num.num',X69)))))))) ) | $spl14),
  inference(superposition,[],[f319,f9710])).
fof(f11071,plain,(
  ( ! [X64,X62,X63] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X64))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X63))))))) | s('type.num.num',X64) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X62))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63)))))) ) | $spl14),
  inference(superposition,[],[f318,f9710])).
fof(f11067,plain,(
  ( ! [X52,X50,X51] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X50),s('type.num.num',X51))))))) | s('type.num.num',X52) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51)))))) ) | $spl14),
  inference(superposition,[],[f316,f9710])).
fof(f11139,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(forward_demodulation,[],[f11048,f9711])).
fof(f11048,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f9710,f9497])).
fof(f11137,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X2)))))) ) | $spl14),
  inference(forward_demodulation,[],[f11017,f9712])).
fof(f11017,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X2)))))) ) | $spl14),
  inference(superposition,[],[f9710,f9497])).
fof(f10934,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9549,f330])).
fof(f10935,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9549,f324])).
fof(f10936,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9549,f322])).
fof(f10937,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9549,f320])).
fof(f10938,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9549,f318])).
fof(f10967,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(forward_demodulation,[],[f10939,f9497])).
fof(f10939,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9549,f316])).
fof(f10924,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X1))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) ) | $spl14),
  inference(superposition,[],[f9539,f321])).
fof(f10837,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X1))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) ) | $spl14),
  inference(superposition,[],[f9538,f321])).
fof(f10806,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X1))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) ) | $spl14),
  inference(superposition,[],[f9528,f319])).
fof(f10605,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.list.list'('type.bvlSem.v'),X1)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9642,f330])).
fof(f10606,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f9642,f324])).
fof(f10607,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f9642,f322])).
fof(f10608,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f9642,f320])).
fof(f10609,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f9642,f318])).
fof(f10611,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f10610,f9643])).
fof(f10610,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(unit_resulting_resolution,[],[f9642,f316])).
fof(f10445,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9932,f258])).
fof(f10446,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9932,f253])).
fof(f10284,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9892,f258])).
fof(f10285,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9892,f253])).
fof(f10088,plain,(
  ( ! [X30] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))) | s('type.num.num',X30) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(forward_demodulation,[],[f10027,f9643])).
fof(f10027,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))) | s('type.num.num',X30) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(superposition,[],[f316,f9643])).
fof(f10007,plain,(
  ( ! [X14] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num',X14)) ) | $spl14),
  inference(superposition,[],[f316,f9643])).
fof(f9932,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9502,f371])).
fof(f9892,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9501,f371])).
fof(f9641,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(backward_demodulation,[],[f9361,f9353])).
fof(f9633,plain,(
  ( ! [X5] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f8821])).
fof(f9717,plain,(
  ( ! [X173,X172] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X172),s('type.num.num',X173))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X172),s('type.num.num',X173))))),s('type.num.num','const.conLang.true_tag_0'))))) ) | $spl14),
  inference(forward_demodulation,[],[f9632,f9709])).
fof(f9632,plain,(
  ( ! [X173,X172] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X172),s('type.num.num',X173))))),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X172),s('type.num.num',X173)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f8703])).
fof(f9716,plain,(
  ( ! [X171,X170] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X170),s('type.num.num',X171))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X170),s('type.num.num',X171))))),s('type.num.num','const.conLang.true_tag_0'))))) ) | $spl14),
  inference(forward_demodulation,[],[f9631,f9709])).
fof(f9631,plain,(
  ( ! [X171,X170] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X170),s('type.num.num',X171))))),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X170),s('type.num.num',X171)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f8701])).
fof(f9714,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X1)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9712,f9625])).
fof(f9712,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9709,f9707])).
fof(f9713,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9711,f9627])).
fof(f9711,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9709,f9708])).
fof(f9710,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9709,f305])).
fof(f9708,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(forward_demodulation,[],[f9628,f342])).
fof(f9628,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0')))))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f8595])).
fof(f9627,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f8594])).
fof(f9707,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X2)))))))) ) | $spl14),
  inference(forward_demodulation,[],[f9626,f342])).
fof(f9626,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X2)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f8564])).
fof(f9625,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X1)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f8563])).
fof(f9620,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7481])).
fof(f9619,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.list.list'('type.bvlSem.v'),X2)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7480])).
fof(f9618,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X1))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7461])).
fof(f9617,plain,(
  ( ! [X146,X147] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X146),s('type.num.num',X147))),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X146),s('type.num.num',X147)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7387])).
fof(f9616,plain,(
  ( ! [X144,X145] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X144),s('type.num.num',X145))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X144),s('type.num.num',X145))),s('type.num.num','const.conLang.true_tag_0'))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7385])).
fof(f9613,plain,(
  ( ! [X142,X143] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X142),s('type.num.num',X143))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X142))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X143)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7357])).
fof(f9704,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9703,f9611])).
fof(f9703,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(forward_demodulation,[],[f9612,f342])).
fof(f9612,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7301])).
fof(f9611,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7300])).
fof(f9702,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X1)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9701,f9609])).
fof(f9701,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl14),
  inference(forward_demodulation,[],[f9610,f342])).
fof(f9610,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X2)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7271])).
fof(f9609,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X1)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7270])).
fof(f9608,plain,(
  ( ! [X140,X141] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X140),s('type.num.num',X141))),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X140),s('type.num.num',X141)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7147])).
fof(f9607,plain,(
  ( ! [X138,X139] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X138),s('type.num.num',X139))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X138),s('type.num.num',X139))),s('type.num.num','const.conLang.true_tag_0'))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7145])).
fof(f9604,plain,(
  ( ! [X136,X137] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X136),s('type.num.num',X137))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X137)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7117])).
fof(f9698,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9697,f9602])).
fof(f9697,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(forward_demodulation,[],[f9603,f342])).
fof(f9603,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7063])).
fof(f9602,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7062])).
fof(f9696,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X1)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9695,f9600])).
fof(f9695,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl14),
  inference(forward_demodulation,[],[f9601,f342])).
fof(f9601,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X2)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7034])).
fof(f9600,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X1)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f7033])).
fof(f9597,plain,(
  ( ! [X134,X135] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X134),s('type.num.num',X135))),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X134),s('type.num.num',X135)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6900])).
fof(f9596,plain,(
  ( ! [X132,X133] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X132),s('type.num.num',X133))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X132),s('type.num.num',X133))),s('type.num.num','const.conLang.true_tag_0'))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6898])).
fof(f9594,plain,(
  ( ! [X130,X131] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X130),s('type.num.num',X131))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X131)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6871])).
fof(f9692,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9691,f9592])).
fof(f9691,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(forward_demodulation,[],[f9593,f342])).
fof(f9593,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6819])).
fof(f9592,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6818])).
fof(f9690,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X1)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9689,f9590])).
fof(f9689,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl14),
  inference(forward_demodulation,[],[f9591,f342])).
fof(f9591,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X2)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6791])).
fof(f9590,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X1)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6790])).
fof(f9589,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6789])).
fof(f9587,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6695])).
fof(f9586,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6694])).
fof(f9585,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6634])).
fof(f9584,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6633])).
fof(f9687,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl14),
  inference(forward_demodulation,[],[f9583,f9684])).
fof(f9583,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6545])).
fof(f9686,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl14),
  inference(forward_demodulation,[],[f9581,f9678])).
fof(f9581,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6330])).
fof(f9685,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9684,f9578])).
fof(f9684,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f9580,f342])).
fof(f9580,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6213])).
fof(f9578,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6171])).
fof(f9682,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X1)))) ) | $spl14),
  inference(backward_demodulation,[],[f9681,f9576])).
fof(f9576,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X1)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f6144])).
fof(f9679,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9678,f9571])).
fof(f9678,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f9573,f342])).
fof(f9573,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0')))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f5990])).
fof(f9571,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f5948])).
fof(f9676,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X1)))) ) | $spl14),
  inference(backward_demodulation,[],[f9675,f9569])).
fof(f9569,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X1)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f5921])).
fof(f9567,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X5)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f5681])).
fof(f9566,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | $spl14),
  inference(backward_demodulation,[],[f9361,f5677])).
fof(f9564,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f5537])).
fof(f9559,plain,(
  ( ! [X6] : (s('type.num.num',X6) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f4833])).
fof(f9557,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f4823])).
fof(f9556,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f4822])).
fof(f9669,plain,(
  ( ! [X7] : (s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))) ) | $spl14),
  inference(forward_demodulation,[],[f9554,f342])).
fof(f9554,plain,(
  ( ! [X7] : (s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f4242])).
fof(f9553,plain,(
  ( ! [X6] : (s('type.num.num',X6) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f4241])).
fof(f9550,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f4232])).
fof(f9549,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f4231])).
fof(f9666,plain,(
  ( ! [X7] : (s('type.num.num',X7) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X7)))) ) | $spl14),
  inference(forward_demodulation,[],[f9547,f342])).
fof(f9547,plain,(
  ( ! [X7] : (s('type.num.num',X7) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X7)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3945])).
fof(f9546,plain,(
  ( ! [X6] : (s('type.num.num',X6) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X6)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3944])).
fof(f9545,plain,(
  ( ! [X5] : (s('type.num.num',X5) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X5)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3943])).
fof(f9664,plain,(
  ( ! [X7] : (s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X7)))) ) | $spl14),
  inference(forward_demodulation,[],[f9543,f342])).
fof(f9543,plain,(
  ( ! [X7] : (s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X7)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3765])).
fof(f9542,plain,(
  ( ! [X6] : (s('type.num.num',X6) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X6)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3764])).
fof(f9541,plain,(
  ( ! [X5] : (s('type.num.num',X5) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X5)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3763])).
fof(f9539,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3755])).
fof(f9538,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3754])).
fof(f9661,plain,(
  ( ! [X7] : (s('type.num.num',X7) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X7)))) ) | $spl14),
  inference(forward_demodulation,[],[f9536,f342])).
fof(f9536,plain,(
  ( ! [X7] : (s('type.num.num',X7) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X7)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3542])).
fof(f9535,plain,(
  ( ! [X6] : (s('type.num.num',X6) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X6)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3541])).
fof(f9534,plain,(
  ( ! [X5] : (s('type.num.num',X5) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X5)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3540])).
fof(f9659,plain,(
  ( ! [X7] : (s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X7)))) ) | $spl14),
  inference(forward_demodulation,[],[f9532,f342])).
fof(f9532,plain,(
  ( ! [X7] : (s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X7)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3321])).
fof(f9531,plain,(
  ( ! [X6] : (s('type.num.num',X6) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X6)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3320])).
fof(f9530,plain,(
  ( ! [X5] : (s('type.num.num',X5) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X5)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3319])).
fof(f9528,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3311])).
fof(f9527,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f3310])).
fof(f9655,plain,(
  ( ! [X6] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f9522,f9643])).
fof(f9522,plain,(
  ( ! [X6] : (s('type.num.num',X6) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f2773])).
fof(f9521,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(backward_demodulation,[],[f9361,f2142])).
fof(f9517,plain,(
  ( ! [X17] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X17))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,X17),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f1718])).
fof(f9644,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9643,f2781])).
fof(f9504,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num',X0)) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f365])).
fof(f9503,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num',X0) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f364])).
fof(f9502,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f363])).
fof(f9501,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f362])).
fof(f9500,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f361])).
fof(f9498,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9361,f359])).
fof(f9642,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(backward_demodulation,[],[f9497,f4365])).
fof(f9497,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | $spl14),
  inference(backward_demodulation,[],[f9361,f218])).
fof(f9357,plain,(
  ( ! [X4,X5,X3] : (s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X3))) != s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X5))) | s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X5) = s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.bool.COND_3'(s(bool,'T_0'),s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X3),s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X4)))) )),
  inference(superposition,[],[f326,f295])).
fof(f9356,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1))) != s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X2))) | s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X2) = s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.bool.COND_3'(s(bool,'F_0'),s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X0),s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1)))) )),
  inference(superposition,[],[f326,f294])).
fof(f9352,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl14),
  inference(unit_resulting_resolution,[],[f8875,f258])).
fof(f9353,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl14),
  inference(unit_resulting_resolution,[],[f8875,f253])).
fof(f9340,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'('type.bvlSem.v'),X1)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f8859,f330])).
fof(f9341,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl14),
  inference(unit_resulting_resolution,[],[f8859,f324])).
fof(f9342,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl14),
  inference(unit_resulting_resolution,[],[f8859,f322])).
fof(f9343,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl14),
  inference(unit_resulting_resolution,[],[f8859,f320])).
fof(f9344,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl14),
  inference(unit_resulting_resolution,[],[f8859,f318])).
fof(f9104,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X0),s('type.list.list'('type.bvlSem.v'),X1))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X1))) | s('type.num.num',X0) != s('type.num.num',X2)) )),
  inference(equality_resolution,[],[f332])).
fof(f8859,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.ZERO_0') | $spl14),
  inference(unit_resulting_resolution,[],[f8829,f364])).
fof(f8875,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl14),
  inference(forward_demodulation,[],[f8860,f6544])).
fof(f8860,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0')))))) | $spl14),
  inference(unit_resulting_resolution,[],[f8829,f371])).
fof(f8835,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X1)))) ) | $spl14),
  inference(backward_demodulation,[],[f8818,f7485])).
fof(f8834,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(backward_demodulation,[],[f8818,f4827])).
fof(f8833,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(backward_demodulation,[],[f8818,f4235])).
fof(f8832,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(backward_demodulation,[],[f8818,f3758])).
fof(f8831,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(backward_demodulation,[],[f8818,f3314])).
fof(f8842,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f8830,f8818])).
fof(f8830,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(backward_demodulation,[],[f8818,f3071])).
fof(f8829,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(backward_demodulation,[],[f8818,f2823])).
fof(f8827,plain,(
  ( ! [X26] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f8818,f2784])).
fof(f8826,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f8818,f2783])).
fof(f8825,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f8818,f2782])).
fof(f8824,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X16)))) ) | $spl14),
  inference(backward_demodulation,[],[f8818,f2779])).
fof(f8823,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X14)))) ) | $spl14),
  inference(backward_demodulation,[],[f8818,f2778])).
fof(f8822,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f8818,f2777])).
fof(f8821,plain,(
  ( ! [X5] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f8818,f2772])).
fof(f8820,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f8818,f2765])).
fof(f8819,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f8818,f2764])).
fof(f8794,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK2(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK2(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f329,f251])).
fof(f8793,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK2(X0,X1,X2,bool))) )),
  inference(superposition,[],[f329,f251])).
fof(f8762,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))))) | $spl14),
  inference(superposition,[],[f8305,f218])).
fof(f8703,plain,(
  ( ! [X173,X172] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X172),s('type.num.num',X173))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X172),s('type.num.num',X173))))),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f8702,f305])).
fof(f8702,plain,(
  ( ! [X173,X172] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X172),s('type.num.num',X173))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X173)))))) )),
  inference(forward_demodulation,[],[f8659,f6544])).
fof(f8659,plain,(
  ( ! [X173,X172] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X172),s('type.num.num',X173)))))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X173)))))) )),
  inference(superposition,[],[f371,f305])).
fof(f8701,plain,(
  ( ! [X171,X170] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X170),s('type.num.num',X171))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X170),s('type.num.num',X171))))),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f8700,f305])).
fof(f8700,plain,(
  ( ! [X171,X170] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X170),s('type.num.num',X171))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X170))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X171)))))) )),
  inference(forward_demodulation,[],[f8658,f6544])).
fof(f8658,plain,(
  ( ! [X171,X170] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X170),s('type.num.num',X171)))))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X170))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X171)))))) )),
  inference(superposition,[],[f369,f305])).
fof(f8595,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f305,f1609])).
fof(f8594,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f305,f218])).
fof(f8675,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f8593,f349])).
fof(f8593,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f305,f1268])).
fof(f8564,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))))))) )),
  inference(superposition,[],[f305,f1609])).
fof(f8563,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))))))) )),
  inference(superposition,[],[f305,f218])).
fof(f8493,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f8304,f218])).
fof(f8332,plain,(
  ( ! [X59,X57,X58] : (s(bool,X57) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X59))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)))) ) | $spl14),
  inference(superposition,[],[f3175,f295])).
fof(f8331,plain,(
  ( ! [X54,X56,X55] : (s(bool,X55) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X56))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X54),s(bool,X55)))) ) | $spl14),
  inference(superposition,[],[f3175,f294])).
fof(f8303,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(unit_resulting_resolution,[],[f360,f3175])).
fof(f8304,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f299,f3175])).
fof(f1718,plain,(
  ( ! [X17] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X17))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.bool.COND_3'(s(bool,X17),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f365,f244])).
fof(f2768,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0))))) | s('type.num.num',X1) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f316,f244])).
fof(f3315,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X1))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0))))) | s('type.num.num',X1) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f318,f244])).
fof(f3536,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X1))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0))))) | s('type.num.num',X1) != s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f319,f244])).
fof(f3759,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X1))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0))))) | s('type.num.num',X1) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f320,f244])).
fof(f3939,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X1))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0))))) | s('type.num.num',X1) != s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f321,f244])).
fof(f4236,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0))))) | s('type.num.num',X1) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f322,f244])).
fof(f4828,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0))))) | s('type.num.num',X1) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f324,f244])).
fof(f7917,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X1),s('type.list.list'('type.bvlSem.v'),X2))) | s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0') = s('type.list.list'('type.bvlSem.v'),X2)) )),
  inference(superposition,[],[f331,f246])).
fof(f7916,plain,(
  ( ! [X6,X8,X7,X5,X9] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X7),s('type.list.list'('type.bvlSem.v'),X5))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X8),s('type.list.list'('type.bvlSem.v'),X9))) | s('type.list.list'('type.bvlSem.v'),X9) = s('type.list.list'('type.bvlSem.v'),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'('type.bvlSem.v'),X5),s('type.list.list'('type.bvlSem.v'),X6)))) )),
  inference(superposition,[],[f331,f295])).
fof(f7915,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X1))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.bvlSem.v'),X4))) | s('type.list.list'('type.bvlSem.v'),X4) = s('type.list.list'('type.bvlSem.v'),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'('type.bvlSem.v'),X0),s('type.list.list'('type.bvlSem.v'),X1)))) )),
  inference(superposition,[],[f331,f294])).
fof(f7513,plain,(
  ( ! [X101,X99,X102,X100,X98] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X98),s('type.list.list'('type.bvlSem.v'),X100))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X101),s('type.list.list'('type.bvlSem.v'),X102))) | s('type.num.num',X101) = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X98),s('type.num.num',X99)))) )),
  inference(superposition,[],[f330,f295])).
fof(f7512,plain,(
  ( ! [X94,X97,X95,X93,X96] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X94),s('type.list.list'('type.bvlSem.v'),X95))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X96),s('type.list.list'('type.bvlSem.v'),X97))) | s('type.num.num',X96) = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X93),s('type.num.num',X94)))) )),
  inference(superposition,[],[f330,f294])).
fof(f7504,plain,(
  ( ! [X66,X64,X67,X65] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X65))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X66),s('type.list.list'('type.bvlSem.v'),X67))) | s('type.num.num',X66) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X64)))))))) )),
  inference(superposition,[],[f330,f358])).
fof(f7503,plain,(
  ( ! [X61,X62,X60,X63] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X61))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X62),s('type.list.list'('type.bvlSem.v'),X63))) | s('type.num.num',X62) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X60)))))))) )),
  inference(superposition,[],[f330,f357])).
fof(f7502,plain,(
  ( ! [X59,X57,X58,X56] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X57))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X58),s('type.list.list'('type.bvlSem.v'),X59))) | s('type.num.num',X58) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X56),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f330,f356])).
fof(f7499,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X44))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X45),s('type.list.list'('type.bvlSem.v'),X46))) | s('type.num.num',X45) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X43)))) )),
  inference(superposition,[],[f330,f345])).
fof(f7497,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X35))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X36),s('type.list.list'('type.bvlSem.v'),X37))) | s('type.num.num',X36) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X34)))) )),
  inference(superposition,[],[f330,f354])).
fof(f7496,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X31))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X32),s('type.list.list'('type.bvlSem.v'),X33))) | s('type.num.num',X32) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X30),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f330,f348])).
fof(f7476,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.list.list'('type.bvlSem.v'),X2)))) )),
  inference(unit_resulting_resolution,[],[f1338,f330])).
fof(f7477,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.list.list'('type.bvlSem.v'),X2)))) )),
  inference(unit_resulting_resolution,[],[f1339,f330])).
fof(f7550,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X1)))) )),
  inference(forward_demodulation,[],[f7479,f1699])).
fof(f7479,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))),s('type.list.list'('type.bvlSem.v'),X1)))) )),
  inference(unit_resulting_resolution,[],[f1767,f330])).
fof(f7480,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.list.list'('type.bvlSem.v'),X2)))) )),
  inference(unit_resulting_resolution,[],[f362,f330])).
fof(f7481,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.list.list'('type.bvlSem.v'),X2)))) )),
  inference(unit_resulting_resolution,[],[f363,f330])).
fof(f7482,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.list.list'('type.bvlSem.v'),X1)))) )),
  inference(unit_resulting_resolution,[],[f2142,f330])).
fof(f7483,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.list.list'('type.bvlSem.v'),X1))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.list.list'('type.bvlSem.v'),X3)))) )),
  inference(unit_resulting_resolution,[],[f372,f330])).
fof(f7484,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X1)))) )),
  inference(unit_resulting_resolution,[],[f4285,f330])).
fof(f7485,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X1)))) )),
  inference(unit_resulting_resolution,[],[f2823,f330])).
fof(f7486,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X1)))) )),
  inference(unit_resulting_resolution,[],[f4877,f330])).
fof(f7461,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X1))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(superposition,[],[f3310,f319])).
fof(f7387,plain,(
  ( ! [X146,X147] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X146),s('type.num.num',X147))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X146),s('type.num.num',X147))),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f7386,f304])).
fof(f7386,plain,(
  ( ! [X146,X147] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X146),s('type.num.num',X147))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X146))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X147)))))) )),
  inference(forward_demodulation,[],[f7359,f6544])).
fof(f7359,plain,(
  ( ! [X146,X147] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X146),s('type.num.num',X147)))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X146))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X147)))))) )),
  inference(superposition,[],[f371,f304])).
fof(f7385,plain,(
  ( ! [X144,X145] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X144),s('type.num.num',X145))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X144),s('type.num.num',X145))),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f7384,f304])).
fof(f7384,plain,(
  ( ! [X144,X145] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X144),s('type.num.num',X145))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X145)))))) )),
  inference(forward_demodulation,[],[f7358,f6544])).
fof(f7358,plain,(
  ( ! [X144,X145] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X144),s('type.num.num',X145)))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X144))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X145)))))) )),
  inference(superposition,[],[f369,f304])).
fof(f7357,plain,(
  ( ! [X142,X143] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X142),s('type.num.num',X143))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X142))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X143)))))) )),
  inference(superposition,[],[f365,f304])).
fof(f7330,plain,(
  ( ! [X80,X81,X82] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X82))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X80),s('type.num.num',X81))))))) | s('type.num.num',X82) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))))) )),
  inference(superposition,[],[f322,f304])).
fof(f7328,plain,(
  ( ! [X76,X74,X75] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X76))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X74),s('type.num.num',X75))))))) | s('type.num.num',X76) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X74))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X75)))))) )),
  inference(superposition,[],[f321,f304])).
fof(f7326,plain,(
  ( ! [X70,X68,X69] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X70))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X68),s('type.num.num',X69))))))) | s('type.num.num',X70) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X69)))))) )),
  inference(superposition,[],[f320,f304])).
fof(f7324,plain,(
  ( ! [X64,X62,X63] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X64))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X62),s('type.num.num',X63))))))) | s('type.num.num',X64) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X62))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63)))))) )),
  inference(superposition,[],[f319,f304])).
fof(f7322,plain,(
  ( ! [X57,X58,X56] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X58))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X56),s('type.num.num',X57))))))) | s('type.num.num',X58) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57)))))) )),
  inference(superposition,[],[f318,f304])).
fof(f7318,plain,(
  ( ! [X45,X46,X44] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X46))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X44),s('type.num.num',X45))))))) | s('type.num.num',X46) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))))) )),
  inference(superposition,[],[f316,f304])).
fof(f7301,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f304,f1609])).
fof(f7300,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f304,f218])).
fof(f7374,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f7299,f346])).
fof(f7299,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f304,f1268])).
fof(f7271,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))))) )),
  inference(superposition,[],[f304,f1609])).
fof(f7270,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))))) )),
  inference(superposition,[],[f304,f218])).
fof(f7373,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f7269,f345])).
fof(f7269,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f304,f1268])).
fof(f7147,plain,(
  ( ! [X140,X141] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X140),s('type.num.num',X141))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X140),s('type.num.num',X141))),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f7146,f303])).
fof(f7146,plain,(
  ( ! [X140,X141] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X140),s('type.num.num',X141))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X141)))))) )),
  inference(forward_demodulation,[],[f7119,f6544])).
fof(f7119,plain,(
  ( ! [X140,X141] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X140),s('type.num.num',X141)))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X140))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X141)))))) )),
  inference(superposition,[],[f371,f303])).
fof(f7145,plain,(
  ( ! [X138,X139] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X138),s('type.num.num',X139))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X138),s('type.num.num',X139))),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f7144,f303])).
fof(f7144,plain,(
  ( ! [X138,X139] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X138),s('type.num.num',X139))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X139)))))) )),
  inference(forward_demodulation,[],[f7118,f6544])).
fof(f7118,plain,(
  ( ! [X138,X139] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X138),s('type.num.num',X139)))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X138))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X139)))))) )),
  inference(superposition,[],[f369,f303])).
fof(f7117,plain,(
  ( ! [X136,X137] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X136),s('type.num.num',X137))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X136))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X137)))))) )),
  inference(superposition,[],[f365,f303])).
fof(f7090,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X76))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X74),s('type.num.num',X75))))))) | s('type.num.num',X76) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X74))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X75)))))) )),
  inference(superposition,[],[f322,f303])).
fof(f7088,plain,(
  ( ! [X70,X68,X69] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X70))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X68),s('type.num.num',X69))))))) | s('type.num.num',X70) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X69)))))) )),
  inference(superposition,[],[f321,f303])).
fof(f7086,plain,(
  ( ! [X64,X62,X63] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X64))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num',X63))))))) | s('type.num.num',X64) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X62))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63)))))) )),
  inference(superposition,[],[f320,f303])).
fof(f7084,plain,(
  ( ! [X57,X58,X56] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X58))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X56),s('type.num.num',X57))))))) | s('type.num.num',X58) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57)))))) )),
  inference(superposition,[],[f319,f303])).
fof(f7082,plain,(
  ( ! [X52,X50,X51] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X52))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X50),s('type.num.num',X51))))))) | s('type.num.num',X52) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51)))))) )),
  inference(superposition,[],[f318,f303])).
fof(f7078,plain,(
  ( ! [X39,X38,X40] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X38),s('type.num.num',X39))))))) | s('type.num.num',X40) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))))) )),
  inference(superposition,[],[f316,f303])).
fof(f7063,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f303,f1609])).
fof(f7062,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f303,f218])).
fof(f7134,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f7061,f348])).
fof(f7061,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f303,f1268])).
fof(f7034,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))))) )),
  inference(superposition,[],[f303,f1609])).
fof(f7033,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))))) )),
  inference(superposition,[],[f303,f218])).
fof(f7133,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f7032,f354])).
fof(f7032,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f303,f1268])).
fof(f6900,plain,(
  ( ! [X134,X135] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X134),s('type.num.num',X135))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X134),s('type.num.num',X135))),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f6899,f302])).
fof(f6899,plain,(
  ( ! [X134,X135] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X134),s('type.num.num',X135))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X134))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X135)))))) )),
  inference(forward_demodulation,[],[f6873,f6544])).
fof(f6873,plain,(
  ( ! [X134,X135] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X134),s('type.num.num',X135)))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X134))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X135)))))) )),
  inference(superposition,[],[f371,f302])).
fof(f6898,plain,(
  ( ! [X132,X133] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X132),s('type.num.num',X133))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X132),s('type.num.num',X133))),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f6897,f302])).
fof(f6897,plain,(
  ( ! [X132,X133] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X132),s('type.num.num',X133))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X133)))))) )),
  inference(forward_demodulation,[],[f6872,f6544])).
fof(f6872,plain,(
  ( ! [X132,X133] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X132),s('type.num.num',X133)))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X132))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X133)))))) )),
  inference(superposition,[],[f369,f302])).
fof(f6871,plain,(
  ( ! [X130,X131] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X130),s('type.num.num',X131))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X131)))))) )),
  inference(superposition,[],[f365,f302])).
fof(f6844,plain,(
  ( ! [X70,X68,X69] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X70))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X68),s('type.num.num',X69))))))) | s('type.num.num',X70) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X69)))))) )),
  inference(superposition,[],[f322,f302])).
fof(f6842,plain,(
  ( ! [X64,X62,X63] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X64))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X62),s('type.num.num',X63))))))) | s('type.num.num',X64) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X62))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X63)))))) )),
  inference(superposition,[],[f321,f302])).
fof(f6840,plain,(
  ( ! [X57,X58,X56] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X58))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X56),s('type.num.num',X57))))))) | s('type.num.num',X58) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57)))))) )),
  inference(superposition,[],[f320,f302])).
fof(f6838,plain,(
  ( ! [X52,X50,X51] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X52))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X50),s('type.num.num',X51))))))) | s('type.num.num',X52) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X50))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51)))))) )),
  inference(superposition,[],[f319,f302])).
fof(f6836,plain,(
  ( ! [X45,X46,X44] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X46))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X44),s('type.num.num',X45))))))) | s('type.num.num',X46) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45)))))) )),
  inference(superposition,[],[f318,f302])).
fof(f6832,plain,(
  ( ! [X33,X34,X32] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X34))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X32),s('type.num.num',X33))))))) | s('type.num.num',X34) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33)))))) )),
  inference(superposition,[],[f316,f302])).
fof(f6819,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f302,f1609])).
fof(f6818,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f302,f218])).
fof(f6887,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f6817,f356])).
fof(f6817,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f302,f1268])).
fof(f6791,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))))) )),
  inference(superposition,[],[f302,f1609])).
fof(f6790,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))))) )),
  inference(superposition,[],[f302,f218])).
fof(f6789,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f302,f1268])).
fof(f6725,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(backward_demodulation,[],[f6723,f5534])).
fof(f6723,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0')))),
  inference(backward_demodulation,[],[f6694,f5533])).
fof(f6694,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f6616,f258])).
fof(f6695,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f6616,f253])).
fof(f6633,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f6614,f258])).
fof(f6634,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(unit_resulting_resolution,[],[f6614,f253])).
fof(f6576,plain,(
  ( ! [X8,X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X8))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f301,f251])).
fof(f6545,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f301,f218])).
fof(f6616,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(backward_demodulation,[],[f6544,f1549])).
fof(f6614,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(backward_demodulation,[],[f6544,f1515])).
fof(f6361,plain,(
  ( ! [X8,X9] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num',X8))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f300,f251])).
fof(f6330,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f300,f218])).
fof(f6175,plain,(
  ( ! [X8,X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X9))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f299,f251])).
fof(f6213,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f6172,f6171])).
fof(f6172,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f299,f1609])).
fof(f6171,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f299,f218])).
fof(f6212,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f6143,f347])).
fof(f6143,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f299,f1268])).
fof(f5952,plain,(
  ( ! [X8,X9] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X9))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) )),
  inference(superposition,[],[f298,f251])).
fof(f5990,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f5949,f5948])).
fof(f5949,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f298,f1609])).
fof(f5948,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f298,f218])).
fof(f5989,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f5947,f350])).
fof(f5947,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f298,f1268])).
fof(f5681,plain,(
  ( ! [X5] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X5))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f361,f251])).
fof(f5716,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(backward_demodulation,[],[f5715,f5269])).
fof(f5537,plain,(
  ( ! [X5] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f360,f251])).
fof(f5534,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f360,f1609])).
fof(f5533,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f360,f218])).
fof(f5570,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f5532,f347])).
fof(f5532,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f360,f1268])).
fof(f5269,plain,(
  s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f359,f1609])).
fof(f5302,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f5267,f353])).
fof(f5267,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.true_tag_0')))),
  inference(superposition,[],[f359,f1268])).
fof(f5121,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0')))))),
  inference(unit_resulting_resolution,[],[f4877,f324])).
fof(f5122,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0')))))),
  inference(unit_resulting_resolution,[],[f4877,f322])).
fof(f5123,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0')))))),
  inference(unit_resulting_resolution,[],[f4877,f320])).
fof(f5124,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0')))))),
  inference(unit_resulting_resolution,[],[f4877,f318])).
fof(f5125,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0')))))),
  inference(unit_resulting_resolution,[],[f4877,f316])).
fof(f4851,plain,(
  ( ! [X39,X37,X38] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X37))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X39))) | s('type.num.num',X39) = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38)))) )),
  inference(superposition,[],[f324,f295])).
fof(f4850,plain,(
  ( ! [X35,X36,X34] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X36))) | s('type.num.num',X36) = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X34),s('type.num.num',X35)))) )),
  inference(superposition,[],[f324,f294])).
fof(f4849,plain,(
  ( ! [X33] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33))) | s('type.num.num',X33) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f324,f1867])).
fof(f4847,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X30))) | s('type.num.num',X30) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f324,f340])).
fof(f4845,plain,(
  ( ! [X27] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f324,f342])).
fof(f4844,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f324,f2067])).
fof(f4843,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))))))) )),
  inference(superposition,[],[f324,f358])).
fof(f4842,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) )),
  inference(superposition,[],[f324,f357])).
fof(f4841,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f324,f356])).
fof(f4840,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f324,f346])).
fof(f4839,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X16)))) )),
  inference(superposition,[],[f324,f345])).
fof(f4838,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X14)))) )),
  inference(superposition,[],[f324,f354])).
fof(f4837,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f324,f348])).
fof(f4836,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X10)))) )),
  inference(superposition,[],[f324,f351])).
fof(f4835,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f324,f349])).
fof(f4834,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f324,f1609])).
fof(f4833,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f324,f218])).
fof(f4818,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1338,f324])).
fof(f4819,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1339,f324])).
fof(f4877,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0')))),
  inference(forward_demodulation,[],[f4821,f1699])).
fof(f4821,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0')))))),
  inference(unit_resulting_resolution,[],[f1767,f324])).
fof(f4822,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f362,f324])).
fof(f4823,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f363,f324])).
fof(f4824,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f2142,f324])).
fof(f4825,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f372,f324])).
fof(f4826,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0')))))),
  inference(unit_resulting_resolution,[],[f4285,f324])).
fof(f4827,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0')))))),
  inference(unit_resulting_resolution,[],[f2823,f324])).
fof(f4362,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0')))))),
  inference(unit_resulting_resolution,[],[f4285,f322])).
fof(f4363,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0')))))),
  inference(unit_resulting_resolution,[],[f4285,f320])).
fof(f4364,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0')))))),
  inference(unit_resulting_resolution,[],[f4285,f318])).
fof(f4365,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0')))))),
  inference(unit_resulting_resolution,[],[f4285,f316])).
fof(f4259,plain,(
  ( ! [X39,X37,X38] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X39))) | s('type.num.num',X39) = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38)))) )),
  inference(superposition,[],[f322,f295])).
fof(f4258,plain,(
  ( ! [X35,X36,X34] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X35))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X36))) | s('type.num.num',X36) = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X34),s('type.num.num',X35)))) )),
  inference(superposition,[],[f322,f294])).
fof(f4257,plain,(
  ( ! [X33] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))) | s('type.num.num',X33) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f322,f1867])).
fof(f4253,plain,(
  ( ! [X27] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f322,f342])).
fof(f4252,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f322,f2067])).
fof(f4249,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f322,f356])).
fof(f4248,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f322,f346])).
fof(f4244,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X10)))) )),
  inference(superposition,[],[f322,f351])).
fof(f4243,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f322,f349])).
fof(f4242,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f322,f1609])).
fof(f4241,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f322,f218])).
fof(f4227,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1338,f322])).
fof(f4228,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1339,f322])).
fof(f4285,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0')))),
  inference(forward_demodulation,[],[f4230,f1699])).
fof(f4230,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0')))))),
  inference(unit_resulting_resolution,[],[f1767,f322])).
fof(f4231,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f362,f322])).
fof(f4232,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f363,f322])).
fof(f4233,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f2142,f322])).
fof(f4234,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f372,f322])).
fof(f4235,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0')))))),
  inference(unit_resulting_resolution,[],[f2823,f322])).
fof(f4011,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X0))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num',X0)) )),
  inference(superposition,[],[f3808,f321])).
fof(f3991,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X1))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X2))) | s('type.num.num',X0) = s('type.num.num',X2) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(superposition,[],[f320,f321])).
fof(f3963,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num',X0) != s('type.num.num',X2) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X1))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X2)))) )),
  inference(superposition,[],[f321,f321])).
fof(f3962,plain,(
  ( ! [X39,X37,X38] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X37))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X39))) | s('type.num.num',X39) != s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38)))) )),
  inference(superposition,[],[f321,f295])).
fof(f3961,plain,(
  ( ! [X35,X36,X34] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X35))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X36))) | s('type.num.num',X36) != s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X34),s('type.num.num',X35)))) )),
  inference(superposition,[],[f321,f294])).
fof(f3960,plain,(
  ( ! [X33] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X33))) | s('type.num.num',X33) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f321,f1867])).
fof(f3958,plain,(
  ( ! [X30] : (s('type.num.num',X30) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X30)))) )),
  inference(superposition,[],[f321,f340])).
fof(f3956,plain,(
  ( ! [X27] : (s('type.num.num',X27) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X27)))) )),
  inference(superposition,[],[f321,f342])).
fof(f3955,plain,(
  ( ! [X26] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X26))) | s('type.num.num',X26) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f321,f2067])).
fof(f3954,plain,(
  ( ! [X24,X25] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X25))) | s('type.num.num',X25) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))))))) )),
  inference(superposition,[],[f321,f358])).
fof(f3953,plain,(
  ( ! [X23,X22] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X23))) | s('type.num.num',X23) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) )),
  inference(superposition,[],[f321,f357])).
fof(f3952,plain,(
  ( ! [X21,X20] : (s('type.num.num',X21) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X21)))) )),
  inference(superposition,[],[f321,f356])).
fof(f3951,plain,(
  ( ! [X19,X18] : (s('type.num.num',X19) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X18))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X19)))) )),
  inference(superposition,[],[f321,f346])).
fof(f3950,plain,(
  ( ! [X17,X16] : (s('type.num.num',X17) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X16))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X17)))) )),
  inference(superposition,[],[f321,f345])).
fof(f3949,plain,(
  ( ! [X14,X15] : (s('type.num.num',X15) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X14))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X15)))) )),
  inference(superposition,[],[f321,f354])).
fof(f3948,plain,(
  ( ! [X12,X13] : (s('type.num.num',X13) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X13)))) )),
  inference(superposition,[],[f321,f348])).
fof(f3947,plain,(
  ( ! [X10,X11] : (s('type.num.num',X11) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X10))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X10))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X11)))) )),
  inference(superposition,[],[f321,f351])).
fof(f3946,plain,(
  ( ! [X8,X9] : (s('type.num.num',X9) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X8))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X9)))) )),
  inference(superposition,[],[f321,f349])).
fof(f3945,plain,(
  ( ! [X7] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X7))) | s('type.num.num',X7) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f321,f1609])).
fof(f3944,plain,(
  ( ! [X6] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X6))) | s('type.num.num',X6) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f321,f218])).
fof(f3943,plain,(
  ( ! [X5] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X5))) | s('type.num.num',X5) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f321,f1268])).
fof(f3941,plain,(
  ( ! [X3] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X3))) | s('type.num.num',X3) != s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'T_0')))) )),
  inference(superposition,[],[f321,f1700])).
fof(f3940,plain,(
  ( ! [X2] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X2))) | s('type.num.num',X2) != s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0')))) )),
  inference(superposition,[],[f321,f1699])).
fof(f3782,plain,(
  ( ! [X39,X37,X38] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X37))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X39))) | s('type.num.num',X39) = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38)))) )),
  inference(superposition,[],[f320,f295])).
fof(f3781,plain,(
  ( ! [X35,X36,X34] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X35))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X36))) | s('type.num.num',X36) = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X34),s('type.num.num',X35)))) )),
  inference(superposition,[],[f320,f294])).
fof(f3780,plain,(
  ( ! [X33] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X33))) | s('type.num.num',X33) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f320,f1867])).
fof(f3778,plain,(
  ( ! [X30] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X30))) | s('type.num.num',X30) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f320,f340])).
fof(f3776,plain,(
  ( ! [X27] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f320,f342])).
fof(f3775,plain,(
  ( ! [X26] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f320,f2067])).
fof(f3774,plain,(
  ( ! [X24,X25] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))))))) )),
  inference(superposition,[],[f320,f358])).
fof(f3773,plain,(
  ( ! [X23,X22] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) )),
  inference(superposition,[],[f320,f357])).
fof(f3772,plain,(
  ( ! [X21,X20] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f320,f356])).
fof(f3771,plain,(
  ( ! [X19,X18] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X18))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f320,f346])).
fof(f3770,plain,(
  ( ! [X17,X16] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X16)))) )),
  inference(superposition,[],[f320,f345])).
fof(f3769,plain,(
  ( ! [X14,X15] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X14)))) )),
  inference(superposition,[],[f320,f354])).
fof(f3768,plain,(
  ( ! [X12,X13] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f320,f348])).
fof(f3767,plain,(
  ( ! [X10,X11] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X10))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X10)))) )),
  inference(superposition,[],[f320,f351])).
fof(f3766,plain,(
  ( ! [X8,X9] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X8))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f320,f349])).
fof(f3765,plain,(
  ( ! [X7] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f320,f1609])).
fof(f3764,plain,(
  ( ! [X6] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X6))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f320,f218])).
fof(f3763,plain,(
  ( ! [X5] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f320,f1268])).
fof(f3761,plain,(
  ( ! [X3] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'T_0')))) )),
  inference(superposition,[],[f320,f1700])).
fof(f3760,plain,(
  ( ! [X2] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0')))) )),
  inference(superposition,[],[f320,f1699])).
fof(f3750,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1338,f320])).
fof(f3751,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1339,f320])).
fof(f3808,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0')))),
  inference(forward_demodulation,[],[f3753,f1699])).
fof(f3753,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0')))))),
  inference(unit_resulting_resolution,[],[f1767,f320])).
fof(f3754,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f362,f320])).
fof(f3755,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f363,f320])).
fof(f3756,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f2142,f320])).
fof(f3757,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f372,f320])).
fof(f3758,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0')))))),
  inference(unit_resulting_resolution,[],[f2823,f320])).
fof(f3590,plain,(
  ( ! [X7] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X7))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num',X7)) )),
  inference(superposition,[],[f3364,f319])).
fof(f3588,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X1))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X2))) | s('type.num.num',X0) = s('type.num.num',X2) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(superposition,[],[f318,f319])).
fof(f3560,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num',X0) != s('type.num.num',X2) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X1))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X2)))) )),
  inference(superposition,[],[f319,f319])).
fof(f3559,plain,(
  ( ! [X39,X37,X38] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X37))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X39))) | s('type.num.num',X39) != s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38)))) )),
  inference(superposition,[],[f319,f295])).
fof(f3558,plain,(
  ( ! [X35,X36,X34] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X35))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X36))) | s('type.num.num',X36) != s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X34),s('type.num.num',X35)))) )),
  inference(superposition,[],[f319,f294])).
fof(f3557,plain,(
  ( ! [X33] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X33))) | s('type.num.num',X33) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f319,f1867])).
fof(f3555,plain,(
  ( ! [X30] : (s('type.num.num',X30) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X30)))) )),
  inference(superposition,[],[f319,f340])).
fof(f3553,plain,(
  ( ! [X27] : (s('type.num.num',X27) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X27)))) )),
  inference(superposition,[],[f319,f342])).
fof(f3552,plain,(
  ( ! [X26] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X26))) | s('type.num.num',X26) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f319,f2067])).
fof(f3551,plain,(
  ( ! [X24,X25] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X25))) | s('type.num.num',X25) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))))))) )),
  inference(superposition,[],[f319,f358])).
fof(f3550,plain,(
  ( ! [X23,X22] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X23))) | s('type.num.num',X23) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) )),
  inference(superposition,[],[f319,f357])).
fof(f3549,plain,(
  ( ! [X21,X20] : (s('type.num.num',X21) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X21)))) )),
  inference(superposition,[],[f319,f356])).
fof(f3548,plain,(
  ( ! [X19,X18] : (s('type.num.num',X19) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X18))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X19)))) )),
  inference(superposition,[],[f319,f346])).
fof(f3547,plain,(
  ( ! [X17,X16] : (s('type.num.num',X17) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X16))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X17)))) )),
  inference(superposition,[],[f319,f345])).
fof(f3546,plain,(
  ( ! [X14,X15] : (s('type.num.num',X15) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X14))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X15)))) )),
  inference(superposition,[],[f319,f354])).
fof(f3545,plain,(
  ( ! [X12,X13] : (s('type.num.num',X13) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X13)))) )),
  inference(superposition,[],[f319,f348])).
fof(f3544,plain,(
  ( ! [X10,X11] : (s('type.num.num',X11) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X10))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X10))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X11)))) )),
  inference(superposition,[],[f319,f351])).
fof(f3543,plain,(
  ( ! [X8,X9] : (s('type.num.num',X9) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X8))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X9)))) )),
  inference(superposition,[],[f319,f349])).
fof(f3542,plain,(
  ( ! [X7] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X7))) | s('type.num.num',X7) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f319,f1609])).
fof(f3541,plain,(
  ( ! [X6] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X6))) | s('type.num.num',X6) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f319,f218])).
fof(f3540,plain,(
  ( ! [X5] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X5))) | s('type.num.num',X5) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f319,f1268])).
fof(f3538,plain,(
  ( ! [X3] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X3))) | s('type.num.num',X3) != s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'T_0')))) )),
  inference(superposition,[],[f319,f1700])).
fof(f3537,plain,(
  ( ! [X2] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X2))) | s('type.num.num',X2) != s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0')))) )),
  inference(superposition,[],[f319,f1699])).
fof(f3338,plain,(
  ( ! [X39,X37,X38] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X37))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X39))) | s('type.num.num',X39) = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38)))) )),
  inference(superposition,[],[f318,f295])).
fof(f3337,plain,(
  ( ! [X35,X36,X34] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X35))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X36))) | s('type.num.num',X36) = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X34),s('type.num.num',X35)))) )),
  inference(superposition,[],[f318,f294])).
fof(f3336,plain,(
  ( ! [X33] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X33))) | s('type.num.num',X33) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f318,f1867])).
fof(f3334,plain,(
  ( ! [X30] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X30))) | s('type.num.num',X30) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f318,f340])).
fof(f3332,plain,(
  ( ! [X27] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f318,f342])).
fof(f3331,plain,(
  ( ! [X26] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f318,f2067])).
fof(f3330,plain,(
  ( ! [X24,X25] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))))))) )),
  inference(superposition,[],[f318,f358])).
fof(f3329,plain,(
  ( ! [X23,X22] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) )),
  inference(superposition,[],[f318,f357])).
fof(f3328,plain,(
  ( ! [X21,X20] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f318,f356])).
fof(f3327,plain,(
  ( ! [X19,X18] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X18))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f318,f346])).
fof(f3326,plain,(
  ( ! [X17,X16] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X16)))) )),
  inference(superposition,[],[f318,f345])).
fof(f3325,plain,(
  ( ! [X14,X15] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X14)))) )),
  inference(superposition,[],[f318,f354])).
fof(f3324,plain,(
  ( ! [X12,X13] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f318,f348])).
fof(f3323,plain,(
  ( ! [X10,X11] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X10))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X10)))) )),
  inference(superposition,[],[f318,f351])).
fof(f3322,plain,(
  ( ! [X8,X9] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X8))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f318,f349])).
fof(f3321,plain,(
  ( ! [X7] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f318,f1609])).
fof(f3320,plain,(
  ( ! [X6] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X6))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f318,f218])).
fof(f3319,plain,(
  ( ! [X5] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f318,f1268])).
fof(f3317,plain,(
  ( ! [X3] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'T_0')))) )),
  inference(superposition,[],[f318,f1700])).
fof(f3316,plain,(
  ( ! [X2] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0')))) )),
  inference(superposition,[],[f318,f1699])).
fof(f3306,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1338,f318])).
fof(f3307,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1339,f318])).
fof(f3364,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0')))),
  inference(forward_demodulation,[],[f3309,f1699])).
fof(f3309,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0')))))),
  inference(unit_resulting_resolution,[],[f1767,f318])).
fof(f3310,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f362,f318])).
fof(f3311,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f363,f318])).
fof(f3312,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f2142,f318])).
fof(f3313,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f372,f318])).
fof(f3314,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0')))))),
  inference(unit_resulting_resolution,[],[f2823,f318])).
fof(f2165,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'F_0'))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0')))),
  inference(superposition,[],[f246,f1699])).
fof(f3071,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0')))))),
  inference(unit_resulting_resolution,[],[f2823,f316])).
fof(f2794,plain,(
  ( ! [X2] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f316,f1609])).
fof(f2791,plain,(
  ( ! [X39,X37,X38] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X37))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39))) | s('type.num.num',X39) = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38)))) )),
  inference(superposition,[],[f316,f295])).
fof(f2790,plain,(
  ( ! [X35,X36,X34] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36))) | s('type.num.num',X36) = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X34),s('type.num.num',X35)))) )),
  inference(superposition,[],[f316,f294])).
fof(f2840,plain,(
  ( ! [X33] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))) | s('type.num.num',X33) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f2789,f1268])).
fof(f2789,plain,(
  ( ! [X33] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))) | s('type.num.num',X33) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f316,f1867])).
fof(f2784,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f316,f2067])).
fof(f2783,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))))))) )),
  inference(superposition,[],[f316,f358])).
fof(f2782,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) )),
  inference(superposition,[],[f316,f357])).
fof(f2781,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f316,f356])).
fof(f2780,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f316,f346])).
fof(f2779,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X16)))) )),
  inference(superposition,[],[f316,f345])).
fof(f2778,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X14)))) )),
  inference(superposition,[],[f316,f354])).
fof(f2777,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f316,f348])).
fof(f2776,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X10)))) )),
  inference(superposition,[],[f316,f351])).
fof(f2775,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f316,f349])).
fof(f2774,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f316,f1609])).
fof(f2773,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f316,f218])).
fof(f2772,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f316,f1268])).
fof(f2762,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f372,f316])).
fof(f2764,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1338,f316])).
fof(f2765,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1339,f316])).
fof(f2823,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0')))),
  inference(forward_demodulation,[],[f2767,f1699])).
fof(f2767,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0')))))),
  inference(unit_resulting_resolution,[],[f1767,f316])).
fof(f2178,plain,(
  ( ! [X4,X5,X3] : (s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X3))) != s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X5))) | s('type.integer.int',X5) = s('type.integer.int','const.bool.COND_3'(s(bool,'T_0'),s('type.integer.int',X3),s('type.integer.int',X4)))) )),
  inference(superposition,[],[f314,f295])).
fof(f2177,plain,(
  ( ! [X2,X0,X1] : (s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X1))) != s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int','const.bool.COND_3'(s(bool,'F_0'),s('type.integer.int',X0),s('type.integer.int',X1)))) )),
  inference(superposition,[],[f314,f294])).
fof(f2166,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0')))),
  inference(superposition,[],[f246,f1700])).
fof(f2142,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(unit_resulting_resolution,[],[f1649,f364])).
fof(f2067,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))),
  inference(superposition,[],[f358,f218])).
fof(f1867,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(unit_resulting_resolution,[],[f1856,f365])).
fof(f1862,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1767,f251])).
fof(f1856,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f1826,f340])).
fof(f1826,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f245,f1268])).
fof(f1767,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0')))),
  inference(subsumption_resolution,[],[f1766,f343])).
fof(f1766,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0')))),
  inference(forward_demodulation,[],[f1754,f1543])).
fof(f1754,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0')))),
  inference(superposition,[],[f369,f1699])).
fof(f1734,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1699,f251])).
fof(f1649,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(subsumption_resolution,[],[f1648,f343])).
fof(f1648,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f1636,f1543])).
fof(f1636,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f369,f1609])).
fof(f1617,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f238,f1609])).
fof(f1616,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f239,f1609])).
fof(f1549,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f1339,f371])).
fof(f1543,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))),
  inference(unit_resulting_resolution,[],[f1514,f258])).
fof(f1544,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))),
  inference(unit_resulting_resolution,[],[f1514,f253])).
fof(f1514,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))))),
  inference(unit_resulting_resolution,[],[f1366,f371])).
fof(f1515,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f1338,f371])).
fof(f1463,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f1420,f343])).
fof(f1420,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) )),
  inference(superposition,[],[f369,f251])).
fof(f1338,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f362,f365])).
fof(f1339,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f363,f365])).
fof(f1310,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f1286,f385])).
fof(f1286,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f238,f1268])).
fof(f1309,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f1285,f400])).
fof(f1285,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f239,f1268])).
fof(f1111,plain,(
  ( ! [X4,X3] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X3),s(bool,X4))) | s(bool,'F_0') = s(bool,X3)) )),
  inference(superposition,[],[f295,f251])).
fof(f1001,plain,(
  ( ! [X4,X3] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X4))) | s(bool,'F_0') = s(bool,X4)) )),
  inference(superposition,[],[f294,f251])).
fof(f937,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.bool.COND_3'(s(bool,X0),s(X1,X3),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f294,f251])).
fof(f910,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f239,f251])).
fof(f909,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f239,f218])).
fof(f873,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f238,f251])).
fof(f872,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f238,f218])).
fof(f604,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f251,f251])).
fof(f400,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.conLang.true_tag_0')))),
  inference(unit_resulting_resolution,[],[f344,f258])).
fof(f385,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.conLang.true_tag_0')))),
  inference(unit_resulting_resolution,[],[f339,f254])).
fof(f382,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.conLang.true_tag_0')))),
  inference(unit_resulting_resolution,[],[f344,f253])).
fof(f331,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X0),s('type.list.list'('type.bvlSem.v'),X1))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X3))) | s('type.list.list'('type.bvlSem.v'),X1) = s('type.list.list'('type.bvlSem.v'),X3)) )),
  inference(cnf_transformation,[],[f210])).
fof(f332,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.bvlSem.v'),X1) != s('type.list.list'('type.bvlSem.v'),X3) | s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X0),s('type.list.list'('type.bvlSem.v'),X1))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X3))) | s('type.num.num',X0) != s('type.num.num',X2)) )),
  inference(cnf_transformation,[],[f210])).
fof(f329,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK2(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK2(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f208])).
fof(f208,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK2(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK2(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2])],[f170])).
fof(f170,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f163])).
fof(f163,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.bvlProps.Boolv_|49||49|',aHL_EXT)).
fof(f326,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X0))) != s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1))) | s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X0) = s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1)) )),
  inference(cnf_transformation,[],[f207])).
fof(f207,plain,(
  ! [X0,X1] : ((s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X0))) != s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1))) | s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X0) = s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1)) & (s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X0) != s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1) | s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X0))) = s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1)))))),
  inference(nnf_transformation,[],[f160])).
fof(f160,plain,(
  ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X0))) = s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1))) <=> s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X0) = s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X15,X16] : (s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X15))) = s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X16))) <=> s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X15) = s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X16))),
  file('thm.bvlProps.Boolv_|49||49|','thm.bvlSem.v_|49||49||split|1')).
fof(f327,plain,(
  ( ! [X0,X1] : (s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X0) != s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1) | s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X0))) = s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1)))) )),
  inference(cnf_transformation,[],[f207])).
fof(f324,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f206])).
fof(f206,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f159])).
fof(f159,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f82])).
fof(f82,axiom,(
  ! [X22,X23] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23))) <=> s('type.num.num',X22) = s('type.num.num',X23))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_eq|split|7')).
fof(f325,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f206])).
fof(f323,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f205])).
fof(f320,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X0))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f204])).
fof(f204,plain,(
  ! [X0,X1] : ((s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X0))) != s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X0))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X0))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X15,X16] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X15))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X16))) <=> s('type.num.num',X15) = s('type.num.num',X16))),
  file('thm.bvlProps.Boolv_|49||49|','thm.bvlSem.v_|49||49||split|3')).
fof(f321,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X0))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X1))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f204])).
fof(f318,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X0))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f203])).
fof(f203,plain,(
  ! [X0,X1] : ((s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X0))) != s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X0))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f156])).
fof(f156,plain,(
  ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X0))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X15,X16] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X15))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X16))) <=> s('type.num.num',X15) = s('type.num.num',X16))),
  file('thm.bvlProps.Boolv_|49||49|','thm.bvlSem.v_|49||49||split|4')).
fof(f319,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X0))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X1))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f203])).
fof(f317,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f202])).
fof(f314,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X0))) != s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int',X1)) )),
  inference(cnf_transformation,[],[f201])).
fof(f201,plain,(
  ! [X0,X1] : ((s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X0))) != s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int',X1)) & (s('type.integer.int',X0) != s('type.integer.int',X1) | s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X0))) = s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X1)))))),
  inference(nnf_transformation,[],[f154])).
fof(f154,plain,(
  ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X0))) = s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X1))) <=> s('type.integer.int',X0) = s('type.integer.int',X1))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X15,X16] : (s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X15))) = s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X16))) <=> s('type.integer.int',X15) = s('type.integer.int',X16))),
  file('thm.bvlProps.Boolv_|49||49|','thm.bvlSem.v_|49||49||split|0')).
fof(f315,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) != s('type.integer.int',X1) | s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X0))) = s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X1)))) )),
  inference(cnf_transformation,[],[f201])).
fof(f372,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f310,f343])).
fof(f310,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f199])).
fof(f199,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f152])).
fof(f152,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f80])).
fof(f80,axiom,(
  ! [X22,X23] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))) <=> p(s(bool,'F_0')))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_eq|split|5')).
fof(f309,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f169])).
fof(f304,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X22,X23] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X22),s('type.num.num',X23))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|8')).
fof(f303,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f148])).
fof(f148,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X22,X23] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num',X23))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|5')).
fof(f302,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X22,X23] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X22),s('type.num.num',X23))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|12')).
fof(f362,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f261,f343])).
fof(f261,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f179])).
fof(f179,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f78])).
fof(f78,axiom,(
  ! [X22] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22))) <=> p(s(bool,'F_0')))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_eq|split|3')).
fof(f257,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f177])).
fof(f177,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f117])).
fof(f117,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.bvlProps.Boolv_|49||49|','thm.bool.EQ_CLAUSES|split|2')).
fof(f258,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f177])).
fof(f253,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f175])).
fof(f175,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.bvlProps.Boolv_|49||49|','thm.bool.EQ_CLAUSES|split|0')).
fof(f254,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f175])).
fof(f356,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(forward_demodulation,[],[f355,f218])).
fof(f355,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(forward_demodulation,[],[f241,f215])).
fof(f241,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X22] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X22),s('type.num.num','const.num.|48|_0')))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|11')).
fof(f239,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f71])).
fof(f71,axiom,(
  ! [X22] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X22))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|32')).
fof(f238,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f72])).
fof(f72,axiom,(
  ! [X22] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X22))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|33')).
fof(f353,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f236,f215])).
fof(f236,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X22] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X22)))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|23')).
fof(f350,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(forward_demodulation,[],[f233,f215])).
fof(f233,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f59])).
fof(f59,axiom,(
  ! [X22] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num','const.num.|48|_0')))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|20')).
fof(f344,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.conLang.true_tag_0'))))),
  inference(forward_demodulation,[],[f227,f215])).
fof(f227,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f73])).
fof(f73,axiom,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|34')).
fof(f225,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(flattening,[],[f22])).
fof(f22,axiom,(
  ~s(bool,'T_0') = s(bool,'F_0')),
  file('thm.bvlProps.Boolv_|49||49|','thm.bool.BOOL_EQ_DISTINCT|split|0')).
fof(f339,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.conLang.true_tag_0'))))),
  inference(forward_demodulation,[],[f216,f215])).
fof(f216,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f74])).
fof(f74,axiom,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.bvlProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|35')).
fof(f15983,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.conLang.false_tag_0') | $spl44),
  inference(superposition,[],[f294,f15787])).
fof(f16076,plain,(
  $false | ($spl14 | $spl44)),
  inference(subsumption_resolution,[],[f15988,f16072])).
fof(f15988,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))))) | ($spl14 | $spl44)),
  inference(trivial_inequality_removal,[],[f15937])).
fof(f15937,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.conLang.true_tag_0') | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))))) | ($spl14 | $spl44)),
  inference(superposition,[],[f9503,f15787])).
fof(f16066,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f15860,f1767])).
fof(f15860,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))) | $spl44),
  inference(superposition,[],[f244,f15787])).
fof(f16065,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f15859,f1366])).
fof(f15859,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.conLang.false_tag_0') | $spl44),
  inference(superposition,[],[f15787,f294])).
fof(f16064,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f15858,f1767])).
fof(f15858,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))) | $spl44),
  inference(superposition,[],[f15787,f244])).
fof(f16063,plain,(
  $false | ($spl14 | $spl44)),
  inference(subsumption_resolution,[],[f16062,f8829])).
fof(f16062,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) | ($spl14 | $spl44)),
  inference(forward_demodulation,[],[f16061,f1699])).
fof(f16061,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))))) | ($spl14 | $spl44)),
  inference(forward_demodulation,[],[f15836,f244])).
fof(f15836,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))))) | ($spl14 | $spl44)),
  inference(unit_resulting_resolution,[],[f15787,f9503])).
fof(f16060,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f16059,f343])).
fof(f16059,plain,(
  p(s(bool,'F_0')) | $spl44),
  inference(forward_demodulation,[],[f16058,f1543])).
fof(f16058,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) | $spl44),
  inference(forward_demodulation,[],[f16057,f1699])).
fof(f16057,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0')))))) | $spl44),
  inference(forward_demodulation,[],[f15837,f244])).
fof(f15837,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))))) | $spl44),
  inference(unit_resulting_resolution,[],[f15787,f369])).
fof(f16056,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f16055,f7550])).
fof(f16055,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16054,f1699])).
fof(f16054,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16053,f244])).
fof(f16053,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f15838,f294])).
fof(f15838,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'('type.bvlSem.v'),X1),s('type.list.list'('type.bvlSem.v'),X0)))))) ) | $spl44),
  inference(unit_resulting_resolution,[],[f294,f15787,f332])).
fof(f16052,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f16051,f7550])).
fof(f16051,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16050,f1699])).
fof(f16050,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16049,f244])).
fof(f16049,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f15839,f295])).
fof(f15839,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'('type.bvlSem.v'),X0),s('type.list.list'('type.bvlSem.v'),X1)))))) ) | $spl44),
  inference(unit_resulting_resolution,[],[f295,f15787,f332])).
fof(f16048,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f16047,f7550])).
fof(f16047,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16046,f1699])).
fof(f16046,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16045,f244])).
fof(f16045,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f15840,f294])).
fof(f15840,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'('type.bvlSem.v'),X1),s('type.list.list'('type.bvlSem.v'),X0)))))) ) | $spl44),
  inference(unit_resulting_resolution,[],[f294,f15787,f332])).
fof(f16044,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f16043,f7550])).
fof(f16043,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16042,f1699])).
fof(f16042,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16041,f244])).
fof(f16041,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f15841,f295])).
fof(f15841,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'('type.bvlSem.v'),X0),s('type.list.list'('type.bvlSem.v'),X1)))))) ) | $spl44),
  inference(unit_resulting_resolution,[],[f295,f15787,f332])).
fof(f16040,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f16039,f4877])).
fof(f16039,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl44),
  inference(forward_demodulation,[],[f16038,f1699])).
fof(f16038,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))))) | $spl44),
  inference(forward_demodulation,[],[f15842,f244])).
fof(f15842,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))))) | $spl44),
  inference(unit_resulting_resolution,[],[f15787,f325])).
fof(f16037,plain,(
  $false | ($spl14 | $spl44)),
  inference(subsumption_resolution,[],[f16036,f11897])).
fof(f16036,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) | ($spl14 | $spl44)),
  inference(forward_demodulation,[],[f16035,f11850])).
fof(f16035,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl44),
  inference(forward_demodulation,[],[f16034,f1699])).
fof(f16034,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))))) | $spl44),
  inference(forward_demodulation,[],[f15843,f244])).
fof(f15843,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))))) | $spl44),
  inference(unit_resulting_resolution,[],[f15787,f323])).
fof(f16033,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f16032,f3808])).
fof(f16032,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl44),
  inference(forward_demodulation,[],[f16031,f1699])).
fof(f16031,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))))) | $spl44),
  inference(forward_demodulation,[],[f15844,f244])).
fof(f15844,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))))) | $spl44),
  inference(unit_resulting_resolution,[],[f15787,f321])).
fof(f16030,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f16029,f3364])).
fof(f16029,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl44),
  inference(forward_demodulation,[],[f16028,f1699])).
fof(f16028,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))))) | $spl44),
  inference(forward_demodulation,[],[f15845,f244])).
fof(f15845,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))))) | $spl44),
  inference(unit_resulting_resolution,[],[f15787,f319])).
fof(f16027,plain,(
  $false | ($spl14 | $spl44)),
  inference(subsumption_resolution,[],[f16026,f1366])).
fof(f16026,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.conLang.false_tag_0') | ($spl14 | $spl44)),
  inference(forward_demodulation,[],[f16025,f8818])).
fof(f16025,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) | ($spl14 | $spl44)),
  inference(forward_demodulation,[],[f16024,f9643])).
fof(f16024,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl44),
  inference(forward_demodulation,[],[f16023,f1699])).
fof(f16023,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))))) | $spl44),
  inference(forward_demodulation,[],[f15846,f244])).
fof(f15846,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))))) | $spl44),
  inference(unit_resulting_resolution,[],[f15787,f317])).
fof(f16022,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f16021,f7550])).
fof(f16021,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16020,f1699])).
fof(f16020,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16019,f244])).
fof(f16019,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f15847,f294])).
fof(f15847,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'('type.bvlSem.v'),X1),s('type.list.list'('type.bvlSem.v'),X0)))))) ) | $spl44),
  inference(unit_resulting_resolution,[],[f294,f15787,f332])).
fof(f16018,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f16017,f7550])).
fof(f16017,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16016,f1699])).
fof(f16016,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16015,f244])).
fof(f16015,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f15848,f295])).
fof(f15848,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'('type.bvlSem.v'),X0),s('type.list.list'('type.bvlSem.v'),X1)))))) ) | $spl44),
  inference(unit_resulting_resolution,[],[f295,f15787,f332])).
fof(f16014,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f16013,f7550])).
fof(f16013,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16012,f1699])).
fof(f16012,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16011,f244])).
fof(f16011,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f15849,f294])).
fof(f15849,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'('type.bvlSem.v'),X1),s('type.list.list'('type.bvlSem.v'),X0)))))) ) | $spl44),
  inference(unit_resulting_resolution,[],[f294,f15787,f332])).
fof(f16010,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f16009,f7550])).
fof(f16009,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16008,f1699])).
fof(f16008,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f16007,f244])).
fof(f16007,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),X0)))) ) | $spl44),
  inference(forward_demodulation,[],[f15850,f295])).
fof(f15850,plain,(
  ( ! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.list.list'('type.bvlSem.v'),X0))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.bvlSem.v'),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'('type.bvlSem.v'),X0),s('type.list.list'('type.bvlSem.v'),X1)))))) ) | $spl44),
  inference(unit_resulting_resolution,[],[f295,f15787,f332])).
fof(f16006,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f16005,f4877])).
fof(f16005,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl44),
  inference(forward_demodulation,[],[f16004,f1699])).
fof(f16004,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))))) | $spl44),
  inference(forward_demodulation,[],[f15851,f244])).
fof(f15851,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))))) | $spl44),
  inference(unit_resulting_resolution,[],[f15787,f325])).
fof(f16003,plain,(
  $false | ($spl14 | $spl44)),
  inference(subsumption_resolution,[],[f16002,f11897])).
fof(f16002,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) | ($spl14 | $spl44)),
  inference(forward_demodulation,[],[f16001,f11850])).
fof(f16001,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl44),
  inference(forward_demodulation,[],[f16000,f1699])).
fof(f16000,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))))) | $spl44),
  inference(forward_demodulation,[],[f15852,f244])).
fof(f15852,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))))) | $spl44),
  inference(unit_resulting_resolution,[],[f15787,f323])).
fof(f15999,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f15998,f3808])).
fof(f15998,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl44),
  inference(forward_demodulation,[],[f15997,f1699])).
fof(f15997,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))))) | $spl44),
  inference(forward_demodulation,[],[f15853,f244])).
fof(f15853,plain,(
  s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))))) | $spl44),
  inference(unit_resulting_resolution,[],[f15787,f321])).
fof(f15996,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f15995,f3364])).
fof(f15995,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl44),
  inference(forward_demodulation,[],[f15994,f1699])).
fof(f15994,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))))) | $spl44),
  inference(forward_demodulation,[],[f15854,f244])).
fof(f15854,plain,(
  s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))))) | $spl44),
  inference(unit_resulting_resolution,[],[f15787,f319])).
fof(f15993,plain,(
  $false | ($spl14 | $spl44)),
  inference(subsumption_resolution,[],[f15992,f1366])).
fof(f15992,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.conLang.false_tag_0') | ($spl14 | $spl44)),
  inference(forward_demodulation,[],[f15991,f8818])).
fof(f15991,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) | ($spl14 | $spl44)),
  inference(forward_demodulation,[],[f15990,f9643])).
fof(f15990,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl44),
  inference(forward_demodulation,[],[f15989,f1699])).
fof(f15989,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'F_0'))))) | $spl44),
  inference(forward_demodulation,[],[f15855,f244])).
fof(f15855,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))))) | $spl44),
  inference(unit_resulting_resolution,[],[f15787,f317])).
fof(f15787,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl44),
  inference(cnf_transformation,[],[f15787_D])).
fof(f15787_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f15788,plain,(
  ( ! [X1] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X1))))) | s(bool,'T_0') = s(bool,X1)) ) | $spl46),
  inference(cnf_transformation,[],[f15788_D])).
fof(f15788_D,plain,(
  ( ! [X1] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X1))))) | s(bool,'T_0') = s(bool,X1)) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f15747,plain,(
  ( ! [X1] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,X1))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,X1)) ) | $spl14),
  inference(superposition,[],[f9517,f251])).
fof(f12010,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl41),
  inference(cnf_transformation,[],[f12010_D])).
fof(f12010_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f12012,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl42),
  inference(cnf_transformation,[],[f12012_D])).
fof(f12012_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f12008,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f12007,f11850])).
fof(f12007,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f11861,f9654])).
fof(f11861,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9524,f9518])).
fof(f12004,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl37),
  inference(cnf_transformation,[],[f12004_D])).
fof(f12004_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f12006,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl38),
  inference(cnf_transformation,[],[f12006_D])).
fof(f12006_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f12002,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f12001,f11850])).
fof(f12001,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f11860,f9652])).
fof(f11860,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9524,f9513])).
fof(f11688,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl34),
  inference(cnf_transformation,[],[f11688_D])).
fof(f11688_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f11672,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl33),
  inference(cnf_transformation,[],[f11672_D])).
fof(f11672_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f11686,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f11643,f9654])).
fof(f11643,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9504,f9518])).
fof(f11670,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | $spl30),
  inference(cnf_transformation,[],[f11670_D])).
fof(f11670_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f11570,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | $spl14),
  inference(superposition,[],[f9504,f9518])).
fof(f11503,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl28),
  inference(cnf_transformation,[],[f11503_D])).
fof(f11503_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f11487,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl27),
  inference(cnf_transformation,[],[f11487_D])).
fof(f11487_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f11501,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f11458,f9652])).
fof(f11458,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9504,f9513])).
fof(f11485,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | $spl24),
  inference(cnf_transformation,[],[f11485_D])).
fof(f11485_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f11385,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | $spl14),
  inference(superposition,[],[f9504,f9513])).
fof(f7992,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f7991,f1366])).
fof(f7991,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.conLang.false_tag_0') | $spl10),
  inference(forward_demodulation,[],[f7959,f1700])).
fof(f7959,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'T_0'))) | $spl10),
  inference(unit_resulting_resolution,[],[f246,f7951])).
fof(f7951,plain,(
  ( ! [X4,X5] : (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.bvlSem.v'),X5))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num',X4)) ) | $spl10),
  inference(superposition,[],[f330,f7650])).
fof(f7650,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'))) | $spl10),
  inference(forward_demodulation,[],[f2165,f3173])).
fof(f7627,plain,(
  $false | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f7626,f1366])).
fof(f7626,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.conLang.false_tag_0') | ($spl0 | $spl3 | $spl4)),
  inference(forward_demodulation,[],[f7594,f1700])).
fof(f7594,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s(bool,'T_0'))) | ($spl0 | $spl3 | $spl4)),
  inference(unit_resulting_resolution,[],[f246,f7517])).
fof(f7517,plain,(
  ( ! [X4,X3] : (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) != s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.bvlSem.v'),X4))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num',X3)) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f330,f3209])).
fof(f3209,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.bvlSem.v'),'const.list.NIL_0'))) | ($spl0 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f3207,f2165])).
fof(f3207,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'F_0'))) | ($spl0 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f3201,f3198])).
fof(f3198,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f335,f632])).
fof(f3201,plain,(
  s(bool,'F_0') = s(bool,sK0) | ($spl3 | $spl4)),
  inference(unit_resulting_resolution,[],[f3200,f251])).
fof(f3200,plain,(
  s(bool,'T_0') != s(bool,sK0) | ($spl3 | $spl4)),
  inference(forward_demodulation,[],[f338,f632])).
fof(f6984,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl20),
  inference(cnf_transformation,[],[f6984_D])).
fof(f6984_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f6986,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl22),
  inference(cnf_transformation,[],[f6986_D])).
fof(f6986_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f6949,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f251,f909])).
fof(f6946,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f909,f251])).
fof(f6107,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(cnf_transformation,[],[f6107_D])).
fof(f6107_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f6109,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl18),
  inference(cnf_transformation,[],[f6109_D])).
fof(f6109_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f6072,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f251,f872])).
fof(f6069,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f872,f251])).
fof(f3173,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0)))) ) | $spl10),
  inference(cnf_transformation,[],[f3173_D])).
fof(f3173_D,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0)))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f3175,plain,(
  ( ! [X4,X5] : (s(bool,X5) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,X5)) ) | $spl14),
  inference(cnf_transformation,[],[f3175_D])).
fof(f3175_D,plain,(
  ( ! [X4,X5] : (s(bool,X5) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,X5)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f5189,plain,(
  ( ! [X4,X5,X3] : (s(bool,X5) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X4))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X3))) | s(bool,'T_0') = s(bool,X5)) ) | ($spl0 | $spl3 | $spl4)),
  inference(duplicate_literal_removal,[],[f5167])).
fof(f5167,plain,(
  ( ! [X4,X5,X3] : (s(bool,X5) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X4))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X3))) | s(bool,'T_0') = s(bool,X5) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X3)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f4307,f3879])).
fof(f3879,plain,(
  ( ! [X12,X11] : (s(bool,X12) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X11))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X12)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f3862,f213])).
fof(f3862,plain,(
  ( ! [X12,X11] : (~p(s(bool,'T_0')) | s(bool,X12) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X11))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X12)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f3738,f347])).
fof(f3738,plain,(
  ( ! [X21,X22] : (~p(s(bool,X22)) | s(bool,X21) = s(bool,X22) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X21)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(forward_demodulation,[],[f3737,f294])).
fof(f3737,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,X22)) | s(bool,X22) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X20),s(bool,X21))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X21)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f3713,f213])).
fof(f3713,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X22)) | s(bool,X22) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X20),s(bool,X21))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X21)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f309,f3279])).
fof(f3279,plain,(
  ( ! [X8,X9] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X8),s(bool,X9))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X9)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f3253,f294])).
fof(f3253,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f3207,f251])).
fof(f4307,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f4180,f251])).
fof(f4180,plain,(
  ( ! [X10] : (s(bool,'F_0') != s(bool,X10) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X10)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f4179,f213])).
fof(f4179,plain,(
  ( ! [X10] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X10) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X10)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(forward_demodulation,[],[f4083,f347])).
fof(f4083,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X11)))) | s(bool,'F_0') != s(bool,X10) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X10)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f257,f3879])).
fof(f3174,plain,(
  ( ! [X2,X1] : (s(bool,X2) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl12),
  inference(cnf_transformation,[],[f3174_D])).
fof(f3174_D,plain,(
  ( ! [X2,X1] : (s(bool,X2) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f5190,plain,(
  ( ! [X2,X0,X1] : (s(bool,X2) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X2)) ) | ($spl0 | $spl3 | $spl4)),
  inference(duplicate_literal_removal,[],[f5166])).
fof(f5166,plain,(
  ( ! [X2,X0,X1] : (s(bool,X2) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X2) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f4307,f3880])).
fof(f3880,plain,(
  ( ! [X14,X13] : (s(bool,X14) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X13),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X14)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f3863,f213])).
fof(f3863,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | s(bool,X14) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X13),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X14)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f3738,f352])).
fof(f3208,plain,(
  $false | ($spl0 | $spl3 | $spl4 | $spl7)),
  inference(subsumption_resolution,[],[f3207,f3199])).
fof(f3199,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) != s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'F_0'))) | ($spl0 | $spl4 | $spl7)),
  inference(backward_demodulation,[],[f3198,f633])).
fof(f633,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'F_0'))) != s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) | $spl7),
  inference(cnf_transformation,[],[f633_D])).
fof(f633_D,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'F_0'))) != s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f3197,plain,(
  $false | ($spl3 | $spl4 | $spl9)),
  inference(subsumption_resolution,[],[f632,f645])).
fof(f645,plain,(
  s(bool,'T_0') != s(bool,sK1) | ($spl3 | $spl9)),
  inference(backward_demodulation,[],[f638,f338])).
fof(f638,plain,(
  s(bool,'T_0') = s(bool,sK0) | $spl9),
  inference(unit_resulting_resolution,[],[f636,f251])).
fof(f3196,plain,(
  $false | ($spl0 | $spl3 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f3195,f3193])).
fof(f3193,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'F_0'))) | ($spl0 | $spl3 | $spl9)),
  inference(forward_demodulation,[],[f3192,f638])).
fof(f3192,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'F_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) | ($spl0 | $spl3 | $spl9)),
  inference(forward_demodulation,[],[f335,f647])).
fof(f647,plain,(
  s(bool,'F_0') = s(bool,sK1) | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f645,f251])).
fof(f3195,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) != s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'F_0'))) | ($spl7 | $spl9)),
  inference(forward_demodulation,[],[f633,f638])).
fof(f3135,plain,(
  ( ! [X4,X5,X3] : (s(bool,X5) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X4))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X3))) | s(bool,'T_0') = s(bool,X5)) ) | ($spl6 | $spl9)),
  inference(duplicate_literal_removal,[],[f3113])).
fof(f3113,plain,(
  ( ! [X4,X5,X3] : (s(bool,X5) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X4))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X3))) | s(bool,'T_0') = s(bool,X5) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X3)))) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f2393,f1487])).
fof(f1487,plain,(
  ( ! [X12,X11] : (s(bool,X12) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X11))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X12)))) ) | ($spl6 | $spl9)),
  inference(subsumption_resolution,[],[f1472,f213])).
fof(f1472,plain,(
  ( ! [X12,X11] : (~p(s(bool,'T_0')) | s(bool,X12) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X11))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X12)))) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f1221,f347])).
fof(f1221,plain,(
  ( ! [X17,X18] : (~p(s(bool,X18)) | s(bool,X17) = s(bool,X18) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X17)))) ) | ($spl6 | $spl9)),
  inference(forward_demodulation,[],[f1220,f294])).
fof(f1220,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X18)) | s(bool,X18) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X16),s(bool,X17))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X17)))) ) | ($spl6 | $spl9)),
  inference(subsumption_resolution,[],[f1198,f213])).
fof(f1198,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X18)) | s(bool,X18) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X16),s(bool,X17))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X17)))) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f309,f1010])).
fof(f1010,plain,(
  ( ! [X19,X20] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X19),s(bool,X20))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X20)))) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f712,f294])).
fof(f712,plain,(
  ( ! [X0] : (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f643,f251])).
fof(f643,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'F_0'))) | ($spl6 | $spl9)),
  inference(backward_demodulation,[],[f638,f634])).
fof(f2393,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f2349,f251])).
fof(f2349,plain,(
  ( ! [X10] : (s(bool,'F_0') != s(bool,X10) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X10)))) ) | ($spl6 | $spl9)),
  inference(subsumption_resolution,[],[f2348,f213])).
fof(f2348,plain,(
  ( ! [X10] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X10) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X10)))) ) | ($spl6 | $spl9)),
  inference(forward_demodulation,[],[f2252,f347])).
fof(f2252,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X11)))) | s(bool,'F_0') != s(bool,X10) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X10)))) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f257,f1487])).
fof(f3136,plain,(
  ( ! [X2,X0,X1] : (s(bool,X2) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X2)) ) | ($spl6 | $spl9)),
  inference(duplicate_literal_removal,[],[f3112])).
fof(f3112,plain,(
  ( ! [X2,X0,X1] : (s(bool,X2) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X2) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0)))) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f2393,f1488])).
fof(f1488,plain,(
  ( ! [X14,X13] : (s(bool,X14) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X13),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X14)))) ) | ($spl6 | $spl9)),
  inference(subsumption_resolution,[],[f1473,f213])).
fof(f1473,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | s(bool,X14) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X13),s('type.num.num','const.conLang.true_tag_0'))) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'T_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X14)))) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f1221,f352])).
fof(f632,plain,(
  s(bool,'T_0') = s(bool,sK1) | $spl4),
  inference(cnf_transformation,[],[f632_D])).
fof(f632_D,plain,(
  s(bool,'T_0') = s(bool,sK1) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f636,plain,(
  s(bool,'F_0') != s(bool,sK0) | $spl9),
  inference(cnf_transformation,[],[f636_D])).
fof(f636_D,plain,(
  s(bool,'F_0') != s(bool,sK0) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f626,plain,(
  s(bool,'F_0') != s(bool,sK0) | s(bool,'T_0') = s(bool,sK1) | $spl3),
  inference(superposition,[],[f338,f251])).
fof(f634,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'F_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) | $spl6),
  inference(cnf_transformation,[],[f634_D])).
fof(f634_D,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'F_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f625,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,'F_0'))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) | s(bool,'T_0') = s(bool,sK1) | $spl0),
  inference(superposition,[],[f335,f251])).
fof(f374,plain,(
  $false | ($spl1 | $spl2)),
  inference(trivial_inequality_removal,[],[f373])).
fof(f373,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) != s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f336,f337])).
fof(f335,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK1))) | $spl0),
  inference(cnf_transformation,[],[f335_D])).
fof(f335_D,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK1))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f337,plain,(
  s(bool,sK0) = s(bool,sK1) | $spl2),
  inference(cnf_transformation,[],[f337_D])).
fof(f337_D,plain,(
  s(bool,sK0) = s(bool,sK1) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f211,plain,(
  s(bool,sK0) = s(bool,sK1) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK1)))),
  inference(cnf_transformation,[],[f172])).
fof(f172,plain,(
  (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK1))) | s(bool,sK0) = s(bool,sK1)) & (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) != s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK1))) | s(bool,sK0) != s(bool,sK1))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f171])).
fof(f171,plain,(
  ? [X0,X1] : ((s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X1))) | s(bool,X0) = s(bool,X1)) & (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0))) != s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X1))) | s(bool,X0) != s(bool,X1)))),
  inference(nnf_transformation,[],[f166])).
fof(f166,plain,(
  ? [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X1))) <~> s(bool,X0) = s(bool,X1))),
  inference(ennf_transformation,[],[f83])).
fof(f83,plain,(
  ~! [X0,X1] : (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X0))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X1))) <=> s(bool,X0) = s(bool,X1))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X6))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X7))) <=> s(bool,X6) = s(bool,X7))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X6))) = s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,X7))) <=> s(bool,X6) = s(bool,X7))),
  file('thm.bvlProps.Boolv_|49||49|','thm.bvlProps.Boolv_|49||49|')).
fof(f336,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) != s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK1))) | $spl1),
  inference(cnf_transformation,[],[f336_D])).
fof(f336_D,plain,(
  s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) != s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK1))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f338,plain,(
  s(bool,sK0) != s(bool,sK1) | $spl3),
  inference(cnf_transformation,[],[f338_D])).
fof(f338_D,plain,(
  s(bool,sK0) != s(bool,sK1) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f212,plain,(
  s(bool,sK0) != s(bool,sK1) | s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK0))) != s('type.bvlSem.v','const.bvlSem.Boolv_1'(s(bool,sK1)))),
  inference(cnf_transformation,[],[f172])).
% SZS output end Proof for thm.bvlProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 590
% Passive clauses: 2590
% Generated clauses: 61124
% Final active clauses: 475
% Final passive clauses: 1604
% Input formulas: 81
% Initial clauses: 122
% 
% Duplicate literals: 282
% Trivial inequalities: 324
% Fw subsumption resolutions: 960
% Fw demodulations: 22922
% Bw demodulations: 373
% Condensations: 329
% Global subsumptions: 2
% 
% Simple tautologies: 189
% Equational tautologies: 308
% Forward subsumptions: 30146
% Fw demodulations to eq. taut.: 2929
% Bw demodulations to eq. taut.: 24
% 
% Unit resulting resolution: 14698
% Factoring: 1
% Forward superposition: 13879
% Backward superposition: 6904
% Self superposition: 129
% Equality factoring: 32
% Equality resolution: 88
% 
% Split clauses: 111
% Split components: 222
% SAT solver clauses: 2848
% SAT solver unit clauses: 249
% SAT solver binary clauses: 1252
% 
% Sat splits: 111
% Sat splitting refutations: 32
% 
% Memory used [KB]: 26737
% Time elapsed: 1.487 s
% ------------------------------
% ------------------------------
% Success in time 2.86 s
