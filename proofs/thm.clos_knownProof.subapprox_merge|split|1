Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_knownProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_knownProof
% SZS output start Proof for thm.clos_knownProof
fof(f2879,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2874,f172,f277,f2382,f2444])).
fof(f2444,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx',X0))))))) ) | $spl52),
  inference(cnf_transformation,[],[f2444_D])).
fof(f2444_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx',X0))))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f2382,plain,(
  ( ! [X2,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X2),s('type.clos_known.val_approx',X1))))))) )),
  inference(superposition,[],[f2331,f208])).
fof(f208,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx',X0)))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1] : s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx',X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X9,X10] : s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X9),s('type.clos_known.val_approx',X10))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx',X9)))),
  file('thm.clos_knownProof.subapprox_merge|split|1','thm.clos_knownProof.merge_comm')).
fof(f2331,plain,(
  ( ! [X6,X5] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X5),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X5),s('type.clos_known.val_approx',X6))))))) )),
  inference(trivial_inequality_removal,[],[f2302])).
fof(f2302,plain,(
  ( ! [X6,X5] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X5),s('type.clos_known.val_approx',X6))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X5),s('type.clos_known.val_approx',X6))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X5),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X5),s('type.clos_known.val_approx',X6))))))) )),
  inference(superposition,[],[f214,f1018])).
fof(f1018,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))))) )),
  inference(superposition,[],[f231,f173])).
fof(f173,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X0)))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X7] : s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X7),s('type.clos_known.val_approx',X7)))),
  file('thm.clos_knownProof.subapprox_merge|split|1','thm.clos_knownProof.merge_idem')).
fof(f231,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx',X2))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))),s('type.clos_known.val_approx',X2)))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0,X1,X2] : s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx',X2))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))),s('type.clos_known.val_approx',X2)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X9,X10,X11] : s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X9),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx',X11))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X9),s('type.clos_known.val_approx',X10))),s('type.clos_known.val_approx',X11)))),
  file('thm.clos_knownProof.subapprox_merge|split|1','thm.clos_knownProof.merge_assoc')).
fof(f214,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))))) )),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) & (s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))))))),
  inference(nnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) <=> s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X9,X10] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X9),s('type.clos_known.val_approx',X10)))) <=> s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X9),s('type.clos_known.val_approx',X10))))),
  file('thm.clos_knownProof.subapprox_merge|split|1','thm.clos_knownProof.subapprox_def')).
fof(f277,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f277_D])).
fof(f277_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f172,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.clos_knownProof.subapprox_merge|split|1',aHL_FALSITY)).
fof(f2874,plain,(
  $false | ($spl3 | $spl52)),
  inference(subsumption_resolution,[],[f2865,f277])).
fof(f2865,plain,(
  p(s(bool,'F_0')) | $spl52),
  inference(superposition,[],[f2444,f377])).
fof(f377,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK8),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',sK8)))))),
  inference(resolution,[],[f165,f186])).
fof(f186,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X8] : (s(bool,'F_0') = s(bool,X8) <=> ~p(s(bool,X8)))),
  file('thm.clos_knownProof.subapprox_merge|split|1','thm.bool.EQ_CLAUSES|split|3')).
fof(f165,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK8),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',sK8))))))),
  inference(cnf_transformation,[],[f118])).
fof(f118,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK8),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',sK8))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7,sK8])],[f83])).
fof(f83,plain,(
  ? [X0,X1] : ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))))))),
  inference(ennf_transformation,[],[f36])).
fof(f36,plain,(
  ~! [X0,X1] : p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X7),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X6),s('type.clos_known.val_approx',X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X7),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X6),s('type.clos_known.val_approx',X7))))))),
  file('thm.clos_knownProof.subapprox_merge|split|1','thm.clos_knownProof.subapprox_merge|split|1')).
% SZS output end Proof for thm.clos_knownProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 191
% Passive clauses: 699
% Generated clauses: 2689
% Final active clauses: 189
% Final passive clauses: 440
% Input formulas: 34
% Initial clauses: 107
% 
% Duplicate literals: 94
% Trivial inequalities: 16
% Fw subsumption resolutions: 189
% Fw demodulations: 124
% Bw demodulations: 2
% 
% Simple tautologies: 124
% Equational tautologies: 23
% Forward subsumptions: 1398
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 1065
% Factoring: 8
% Forward superposition: 426
% Backward superposition: 568
% Self superposition: 40
% Equality factoring: 26
% Equality resolution: 3
% 
% Split clauses: 55
% Split components: 111
% SAT solver clauses: 92
% SAT solver unit clauses: 6
% SAT solver binary clauses: 40
% SAT solver learnt clauses: 1
% 
% Sat splits: 55
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 88
% TWLsolver calls for satisfiability: 51
% 
% Memory used [KB]: 2046
% Time elapsed: 0.121 s
% ------------------------------
% ------------------------------
% Success in time 0.12 s
