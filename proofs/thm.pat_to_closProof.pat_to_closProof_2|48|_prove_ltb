Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.pat_to_closProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pat_to_closProof
% SZS output start Proof for thm.pat_to_closProof
fof(f241,plain,(
  $false),
  inference(equality_resolution,[],[f238])).
fof(f238,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),sK6) != s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),X0)) )),
  inference(superposition,[],[f102,f158])).
fof(f158,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),X0) = s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),'const.pair.,_2'(s('type.list.list'('type.patSem.v'),sK62(X0)),s('type.patLang.exp',sK63(X0))))) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0] : s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),X0) = s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),'const.pair.,_2'(s('type.list.list'('type.patSem.v'),sK62(X0)),s('type.patLang.exp',sK63(X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK62,sK63])],[f43])).
fof(f43,plain,(
  ! [X0] : ? [X1,X2] : s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),X0) = s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),'const.pair.,_2'(s('type.list.list'('type.patSem.v'),X1),s('type.patLang.exp',X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X9] : ? [X10,X11] : s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),X9) = s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),'const.pair.,_2'(s('type.list.list'('type.patSem.v'),X10),s('type.patLang.exp',X11)))),
  file('thm.pat_to_closProof.pat_to_closProof_2|48|_prove_ltb','thm.exh_to_patProof.exh_to_patProof_|49|36_prove_ltb')).
fof(f102,plain,(
  ( ! [X2,X1] : (s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),sK6) != s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),'const.pair.,_2'(s('type.list.list'('type.patSem.v'),X1),s('type.patLang.exp',X2)))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X1,X2] : s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),sK6) != s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),'const.pair.,_2'(s('type.list.list'('type.patSem.v'),X1),s('type.patLang.exp',X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6])],[f49])).
fof(f49,plain,(
  ? [X0] : ! [X1,X2] : s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),X0) != s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),'const.pair.,_2'(s('type.list.list'('type.patSem.v'),X1),s('type.patLang.exp',X2)))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ? [X1,X2] : s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),X0) = s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),'const.pair.,_2'(s('type.list.list'('type.patSem.v'),X1),s('type.patLang.exp',X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),X6) = s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),'const.pair.,_2'(s('type.list.list'('type.patSem.v'),X7),s('type.patLang.exp',X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),X6) = s('type.pair.prod'('type.list.list'('type.patSem.v'),'type.patLang.exp'),'const.pair.,_2'(s('type.list.list'('type.patSem.v'),X7),s('type.patLang.exp',X8)))),
  file('thm.pat_to_closProof.pat_to_closProof_2|48|_prove_ltb','thm.pat_to_closProof.pat_to_closProof_2|48|_prove_ltb')).
% SZS output end Proof for thm.pat_to_closProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 17
% Passive clauses: 60
% Generated clauses: 133
% Final active clauses: 17
% Final passive clauses: 33
% Input formulas: 21
% Initial clauses: 61
% 
% Duplicate literals: 3
% Trivial inequalities: 5
% Fw subsumption resolutions: 1
% Fw demodulations: 4
% 
% Simple tautologies: 21
% Equational tautologies: 3
% Forward subsumptions: 39
% 
% Binary resolution: 8
% Forward superposition: 24
% Backward superposition: 20
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 3
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 6
% SAT solver unit clauses: 3
% SAT solver binary clauses: 3
% 
% Sat splits: 3
% 
% TWLsolver clauses: 6
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 895
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
% Success in time 0.021 s
