Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvpProps
% (963)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 694
% Passive clauses: 6243
% Generated clauses: 25482
% Final active clauses: 689
% Final passive clauses: 5371
% Input formulas: 132
% Initial clauses: 301
% 
% Duplicate literals: 148
% Trivial inequalities: 32
% Fw subsumption resolutions: 831
% Fw demodulations: 4120
% Bw demodulations: 4
% 
% Simple tautologies: 257
% Equational tautologies: 26
% Forward subsumptions: 13423
% Fw demodulations to eq. taut.: 14
% 
% Binary resolution: 4266
% Factoring: 666
% Forward superposition: 7418
% Backward superposition: 7469
% Self superposition: 72
% Equality factoring: 2
% Equality resolution: 20
% 
% Split clauses: 455
% Split components: 912
% SAT solver clauses: 564
% SAT solver unit clauses: 13
% SAT solver binary clauses: 50
% 
% Sat splits: 455
% 
% TWLsolver clauses: 564
% TWLsolver calls for satisfiability: 265
% 
% Memory used [KB]: 15863
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.bvpProps
% (986)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 338
% Passive clauses: 2154
% Generated clauses: 14208
% Final active clauses: 337
% Final passive clauses: 1720
% Input formulas: 132
% Initial clauses: 301
% 
% Duplicate literals: 84
% Trivial inequalities: 5
% Fw subsumption resolutions: 378
% Fw demodulations: 1935
% Bw demodulations: 97
% Condensations: 116
% Global subsumptions: 24
% 
% Simple tautologies: 219
% Equational tautologies: 11
% Forward subsumptions: 6737
% Fw demodulations to eq. taut.: 14
% 
% Binary resolution: 1673
% Factoring: 279
% Forward superposition: 3450
% Backward superposition: 3644
% Self superposition: 105
% Equality factoring: 2
% Equality resolution: 7
% 
% Split clauses: 10
% Split components: 20
% SAT solver clauses: 2867
% SAT solver unit clauses: 364
% SAT solver binary clauses: 80
% SAT solver learnt clauses: 48
% SAT solver learnt literals: 12
% 
% Sat splits: 10
% 
% TWLsolver clauses: 2771
% TWLsolver calls for satisfiability: 1790
% 
% Memory used [KB]: 23666
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.bvpProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvpProps
% SZS output start Proof for thm.bvpProps
fof(f8091,plain,(
  $false),
  inference(unit_resulting_resolution,[],[f659,f820])).
fof(f820,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK10)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X4),s('type.bvpSem.state'(sK10),X5))) != s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK10)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK10)),'const.pair.,_2'(s('type.bvp.prog',sK13),s('type.bvpSem.state'(sK10),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK12),s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(sK10),sK11))))))),s('type.bvpSem.state'(sK10),sK11)))))))) )),
  inference(backward_demodulation,[],[f605,f495])).
fof(f495,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK10)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X4),s('type.bvpSem.state'(sK10),X5))) != s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK10)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK10)),'const.pair.,_2'(s('type.bvp.prog',sK13),s('type.bvpSem.state'(sK10),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(sK10),sK11))),s('type.num.num',sK12))))),s('type.bvpSem.state'(sK10),sK11)))))))) )),
  inference(cnf_transformation,[],[f384])).
fof(f384,plain,(
  ! [X4,X5] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK10)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X4),s('type.bvpSem.state'(sK10),X5))) != s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK10)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK10)),'const.pair.,_2'(s('type.bvp.prog',sK13),s('type.bvpSem.state'(sK10),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(sK10),sK11))),s('type.num.num',sK12))))),s('type.bvpSem.state'(sK10),sK11)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12,sK13])],[f336])).
fof(f336,plain,(
  ? [X0,X1,X2,X3] : ! [X4,X5] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X4),s('type.bvpSem.state'(X0),X5))) != s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X3),s('type.bvpSem.state'(X0),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),X1))),s('type.num.num',X2))))),s('type.bvpSem.state'(X0),X1)))))))),
  inference(ennf_transformation,[],[f135])).
fof(f135,plain,(
  ~! [X0,X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X4),s('type.bvpSem.state'(X0),X5))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X3),s('type.bvpSem.state'(X0),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),X1))),s('type.num.num',X2))))),s('type.bvpSem.state'(X0),X1)))))))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ~! [X0] : ! [X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X4),s('type.bvpSem.state'(X0),X5))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X3),s('type.bvpSem.state'(X0),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),X1))),s('type.num.num',X2))))),s('type.bvpSem.state'(X0),X1)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X10),s('type.bvpSem.state'(X6),X11))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog',X9),s('type.bvpSem.state'(X6),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X6),X7))),s('type.num.num',X8))))),s('type.bvpSem.state'(X6),X7)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X10),s('type.bvpSem.state'(X6),X11))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog',X9),s('type.bvpSem.state'(X6),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X6),X7))),s('type.num.num',X8))))),s('type.bvpSem.state'(X6),X7)))))))),
  file('thm.bvpProps.bvpProps_7|48|_prove_ltb','thm.bvpProps.bvpProps_7|48|_prove_ltb')).
fof(f605,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f207])).
fof(f207,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X15,X16] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X15)))),
  file('thm.bvpProps.bvpProps_7|48|_prove_ltb','thm.arithmetic.ADD_SYM')).
fof(f659,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK15(X2,X1,X0)),s(X1,sK16(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f453])).
fof(f453,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK15(X2,X1,X0)),s(X1,sK16(X2,X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15,sK16])],[f232])).
fof(f232,plain,(
  ! [X0,X1,X2] : ? [X3,X4] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))),
  inference(flattening,[],[f231])).
fof(f231,plain,(
  ! [X0,X1] : ! [X2] : ? [X3,X4] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))),
  inference(rectify,[],[f100])).
fof(f100,axiom,(
  ! [X6,X20] : ! [X38] : ? [X45,X44] : s('type.pair.prod'(X6,X20),X38) = s('type.pair.prod'(X6,X20),'const.pair.,_2'(s(X6,X45),s(X20,X44)))),
  file('thm.bvpProps.bvpProps_7|48|_prove_ltb','thm.pair.ABS_PAIR_THM')).
% SZS output end Proof for thm.bvpProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 281
% Passive clauses: 971
% Generated clauses: 7609
% Final active clauses: 279
% Final passive clauses: 670
% Input formulas: 132
% Initial clauses: 301
% 
% Duplicate literals: 7
% Trivial inequalities: 5
% Fw subsumption resolutions: 28
% Fw demodulations: 1419
% Bw demodulations: 21
% Condensations: 15
% 
% Simple tautologies: 96
% Equational tautologies: 28
% Forward subsumptions: 4979
% Fw demodulations to eq. taut.: 45
% Bw demodulations to eq. taut.: 1
% 
% Unit resulting resolution: 1380
% Factoring: 1
% Forward superposition: 2790
% Backward superposition: 1598
% Self superposition: 43
% Equality factoring: 2
% Equality resolution: 5
% 
% SAT solver clauses: 973
% SAT solver unit clauses: 556
% SAT solver binary clauses: 280
% 
% Memory used [KB]: 6780
% Time elapsed: 0.180 s
% ------------------------------
% ------------------------------
% Success in time 1.521 s
