Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordSem
% SZS output start Proof for thm.wordSem
fof(f4564,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4563,f217,f393,f391,f389,f218,f388,f4562])).
fof(f4562,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f393,f219])).
fof(f219,plain,(
  ( ! [X6,X8,X7,X5] : (s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),X5),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK13),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK13))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7))),s('type.list.list'('type.wordSem.stack_frame'(sK13)),X8)))))) )),
  inference(cnf_transformation,[],[f136])).
fof(f136,plain,(
  (s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.NIL_0'))) | s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),'const.list.CONS_2'(s('type.wordSem.word_loc'(sK12),sK15),s('type.list.list'('type.wordSem.word_loc'(sK12)),sK16))),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.NIL_0'))) | s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),sK20),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK13),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK13))),sK17),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK18))),s('type.list.list'('type.wordSem.stack_frame'(sK13)),sK19)))))) & s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.NIL_0'))) & ! [X5,X6,X7,X8] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),X5),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK13),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK13))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7))),s('type.list.list'('type.wordSem.stack_frame'(sK13)),X8))))) & ! [X3,X4] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),'const.list.CONS_2'(s('type.wordSem.word_loc'(sK12),X3),s('type.list.list'('type.wordSem.word_loc'(sK12)),X4))),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.NIL_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20])],[f135])).
fof(f135,plain,(
  ? [X0,X1,X2] : ((s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))) | ? [X13,X14] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.CONS_2'(s('type.wordSem.word_loc'(X0),X13),s('type.list.list'('type.wordSem.word_loc'(X0)),X14))),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))) | ? [X9,X10,X11,X12] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X12),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X10))),s('type.list.list'('type.wordSem.stack_frame'(X1)),X11)))))) & s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))) & ! [X5,X6,X7,X8] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7))),s('type.list.list'('type.wordSem.stack_frame'(X1)),X8))))) & ! [X3,X4] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.CONS_2'(s('type.wordSem.word_loc'(X0),X3),s('type.list.list'('type.wordSem.word_loc'(X0)),X4))),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))))),
  inference(rectify,[],[f95])).
fof(f95,plain,(
  ? [X0,X1,X2] : ((s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.CONS_2'(s('type.wordSem.word_loc'(X0),X7),s('type.list.list'('type.wordSem.word_loc'(X0)),X8))),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))) | ? [X3,X4,X5,X6] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X4))),s('type.list.list'('type.wordSem.stack_frame'(X1)),X5)))))) & s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))) & ! [X11,X12,X13,X14] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X11),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X13))),s('type.list.list'('type.wordSem.stack_frame'(X1)),X14))))) & ! [X9,X10] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.CONS_2'(s('type.wordSem.word_loc'(X0),X9),s('type.list.list'('type.wordSem.word_loc'(X0)),X10))),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))))),
  inference(flattening,[],[f94])).
fof(f94,plain,(
  ? [X0,X1,X2] : ((s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.CONS_2'(s('type.wordSem.word_loc'(X0),X7),s('type.list.list'('type.wordSem.word_loc'(X0)),X8))),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))) | ? [X3,X4,X5,X6] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X4))),s('type.list.list'('type.wordSem.stack_frame'(X1)),X5)))))) & (s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))) & ! [X11,X12,X13,X14] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X11),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X13))),s('type.list.list'('type.wordSem.stack_frame'(X1)),X14))))) & ! [X9,X10] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.CONS_2'(s('type.wordSem.word_loc'(X0),X9),s('type.list.list'('type.wordSem.word_loc'(X0)),X10))),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0')))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1,X2] : ((s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.CONS_2'(s('type.wordSem.word_loc'(X0),X7),s('type.list.list'('type.wordSem.word_loc'(X0)),X8))),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))) | ? [X3,X4,X5,X6] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X4))),s('type.list.list'('type.wordSem.stack_frame'(X1)),X5)))))) => (s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))) | ? [X11,X12,X13,X14] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X11),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X13))),s('type.list.list'('type.wordSem.stack_frame'(X1)),X14))))) | ? [X9,X10] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.CONS_2'(s('type.wordSem.word_loc'(X0),X9),s('type.list.list'('type.wordSem.word_loc'(X0)),X10))),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0')))))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ~! [X0,X1] : ! [X2] : ((s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.CONS_2'(s('type.wordSem.word_loc'(X0),X7),s('type.list.list'('type.wordSem.word_loc'(X0)),X8))),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))) | ? [X3,X4,X5,X6] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X4))),s('type.list.list'('type.wordSem.stack_frame'(X1)),X5)))))) => (s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0'))) | ? [X11,X12,X13,X14] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X11),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X13))),s('type.list.list'('type.wordSem.stack_frame'(X1)),X14))))) | ? [X9,X10] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),X2) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),'const.list.CONS_2'(s('type.wordSem.word_loc'(X0),X9),s('type.list.list'('type.wordSem.word_loc'(X0)),X10))),s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.list.NIL_0')))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : ((s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),X8) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X6)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X7)),'const.list.NIL_0'))) | ? [X9,X10] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),X8) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X6)),'const.list.CONS_2'(s('type.wordSem.word_loc'(X6),X9),s('type.list.list'('type.wordSem.word_loc'(X6)),X10))),s('type.list.list'('type.wordSem.stack_frame'(X7)),'const.list.NIL_0'))) | ? [X11,X12,X13,X14] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),X8) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X6)),X14),s('type.list.list'('type.wordSem.stack_frame'(X7)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X7),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X7))),X11),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X12))),s('type.list.list'('type.wordSem.stack_frame'(X7)),X13)))))) => (s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),X8) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X6)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X7)),'const.list.NIL_0'))) | ? [X14,X11,X12,X13] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),X8) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X6)),X14),s('type.list.list'('type.wordSem.stack_frame'(X7)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X7),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X7))),X11),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X12))),s('type.list.list'('type.wordSem.stack_frame'(X7)),X13))))) | ? [X9,X10] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),X8) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X6)),'const.list.CONS_2'(s('type.wordSem.word_loc'(X6),X9),s('type.list.list'('type.wordSem.word_loc'(X6)),X10))),s('type.list.list'('type.wordSem.stack_frame'(X7)),'const.list.NIL_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : ((s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),X8) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X6)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X7)),'const.list.NIL_0'))) | ? [X9,X10] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),X8) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X6)),'const.list.CONS_2'(s('type.wordSem.word_loc'(X6),X9),s('type.list.list'('type.wordSem.word_loc'(X6)),X10))),s('type.list.list'('type.wordSem.stack_frame'(X7)),'const.list.NIL_0'))) | ? [X11,X12,X13,X14] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),X8) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X6)),X14),s('type.list.list'('type.wordSem.stack_frame'(X7)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X7),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X7))),X11),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X12))),s('type.list.list'('type.wordSem.stack_frame'(X7)),X13)))))) => (s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),X8) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X6)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X7)),'const.list.NIL_0'))) | ? [X14,X11,X12,X13] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),X8) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X6)),X14),s('type.list.list'('type.wordSem.stack_frame'(X7)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X7),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X7))),X11),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X12))),s('type.list.list'('type.wordSem.stack_frame'(X7)),X13))))) | ? [X9,X10] : s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),X8) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(X6)),'const.list.CONS_2'(s('type.wordSem.word_loc'(X6),X9),s('type.list.list'('type.wordSem.word_loc'(X6)),X10))),s('type.list.list'('type.wordSem.stack_frame'(X7)),'const.list.NIL_0')))))),
  file('thm.wordSem.wordSem_423_prove_ltb','thm.wordSem.wordSem_423_prove_ltb')).
fof(f388,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.NIL_0'))) | $spl1),
  inference(cnf_transformation,[],[f388_D])).
fof(f388_D,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.NIL_0'))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f218,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f136])).
fof(f389,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.NIL_0'))) | $spl0),
  inference(cnf_transformation,[],[f389_D])).
fof(f389_D,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.NIL_0'))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f391,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),'const.list.CONS_2'(s('type.wordSem.word_loc'(sK12),sK15),s('type.list.list'('type.wordSem.word_loc'(sK12)),sK16))),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.NIL_0'))) | $spl2),
  inference(cnf_transformation,[],[f391_D])).
fof(f391_D,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),'const.list.CONS_2'(s('type.wordSem.word_loc'(sK12),sK15),s('type.list.list'('type.wordSem.word_loc'(sK12)),sK16))),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.NIL_0'))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f393,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),sK20),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK13),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK13))),sK17),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK18))),s('type.list.list'('type.wordSem.stack_frame'(sK13)),sK19))))) | $spl4),
  inference(cnf_transformation,[],[f393_D])).
fof(f393_D,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),sK20),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK13),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK13))),sK17),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK18))),s('type.list.list'('type.wordSem.stack_frame'(sK13)),sK19))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f217,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),sK20),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK13),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK13))),sK17),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK18))),s('type.list.list'('type.wordSem.stack_frame'(sK13)),sK19))))) | s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),'const.list.CONS_2'(s('type.wordSem.word_loc'(sK12),sK15),s('type.list.list'('type.wordSem.word_loc'(sK12)),sK16))),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.NIL_0'))) | s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) = s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f136])).
fof(f4563,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f391,f220])).
fof(f220,plain,(
  ( ! [X4,X3] : (s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),sK14) != s('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK13))),'const.pair.,_2'(s('type.list.list'('type.wordSem.word_loc'(sK12)),'const.list.CONS_2'(s('type.wordSem.word_loc'(sK12),X3),s('type.list.list'('type.wordSem.word_loc'(sK12)),X4))),s('type.list.list'('type.wordSem.stack_frame'(sK13)),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f136])).
% SZS output end Proof for thm.wordSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 359
% Passive clauses: 1445
% Generated clauses: 4339
% Final active clauses: 359
% Final passive clauses: 923
% Input formulas: 36
% Initial clauses: 167
% 
% Duplicate literals: 153
% Trivial inequalities: 17
% Fw subsumption resolutions: 292
% 
% Simple tautologies: 145
% Equational tautologies: 30
% Forward subsumptions: 2254
% 
% Binary resolution: 2693
% Factoring: 767
% Forward superposition: 138
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 10
% 
% Split clauses: 96
% Split components: 194
% SAT solver clauses: 176
% SAT solver unit clauses: 9
% SAT solver binary clauses: 32
% SAT solver learnt clauses: 1
% 
% Sat splits: 96
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 175
% TWLsolver calls for satisfiability: 147
% 
% Memory used [KB]: 2302
% Time elapsed: 0.069 s
% ------------------------------
% ------------------------------
% Success in time 0.06 s
