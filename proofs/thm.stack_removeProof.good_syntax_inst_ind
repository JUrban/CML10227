Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.stack_removeProof
% (13346)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 167
% Passive clauses: 2282
% Generated clauses: 21726
% Final active clauses: 162
% Final passive clauses: 1936
% Input formulas: 20
% Initial clauses: 36
% 
% Duplicate literals: 1241
% Trivial inequalities: 127
% Fw subsumption resolutions: 2776
% Fw demodulations: 4123
% Bw demodulations: 5
% 
% Simple tautologies: 335
% Equational tautologies: 19
% Forward subsumptions: 9618
% Fw demodulations to eq. taut.: 4
% 
% Binary resolution: 409
% Forward superposition: 8026
% Backward superposition: 4667
% Self superposition: 111
% Equality factoring: 35
% Equality resolution: 29
% 
% Split clauses: 581
% Split components: 1167
% SAT solver clauses: 1244
% SAT solver unit clauses: 27
% SAT solver binary clauses: 152
% 
% Sat splits: 581
% 
% TWLsolver clauses: 1244
% TWLsolver calls for satisfiability: 207
% 
% Memory used [KB]: 17398
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.stack_removeProof
% (13376)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 114
% Passive clauses: 578
% Generated clauses: 5728
% Final active clauses: 95
% Final passive clauses: 446
% Input formulas: 20
% Initial clauses: 36
% 
% Duplicate literals: 334
% Trivial inequalities: 62
% Fw subsumption resolutions: 166
% Fw demodulations: 676
% Bw demodulations: 26
% Condensations: 368
% 
% Simple tautologies: 103
% Equational tautologies: 17
% Forward subsumptions: 2651
% Fw demodulations to eq. taut.: 3
% Bw demodulations to eq. taut.: 5
% 
% Binary resolution: 51
% Forward superposition: 2092
% Backward superposition: 1843
% Self superposition: 73
% Equality factoring: 29
% Equality resolution: 26
% 
% Split clauses: 23
% Split components: 52
% SAT solver clauses: 814
% SAT solver unit clauses: 52
% SAT solver binary clauses: 27
% 
% Sat splits: 23
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 814
% TWLsolver calls for satisfiability: 723
% 
% Memory used [KB]: 11769
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.stack_removeProof
% (13419)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 255
% Passive clauses: 2473
% Generated clauses: 107005
% Final active clauses: 93
% Final passive clauses: 268
% Input formulas: 20
% Initial clauses: 36
% Discarded non-redundant clauses: 1690
% 
% Duplicate literals: 5329
% Trivial inequalities: 656
% Fw subsumption resolutions: 8217
% Fw demodulations: 15491
% Bw demodulations: 658
% Condensations: 9536
% Global subsumptions: 200
% 
% Simple tautologies: 1138
% Equational tautologies: 420
% Forward subsumptions: 56828
% Fw demodulations to eq. taut.: 26
% Bw demodulations to eq. taut.: 96
% 
% Unit resulting resolution: 2362
% Forward superposition: 24363
% Backward superposition: 24005
% Self superposition: 543
% Equality factoring: 278
% Equality resolution: 84
% 
% Split clauses: 300
% Split components: 605
% SAT solver clauses: 3455
% SAT solver unit clauses: 56
% SAT solver binary clauses: 171
% 
% Sat splits: 300
% Sat splitting refutations: 179
% 
% Memory used [KB]: 120765
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.stack_removeProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.stack_removeProof
% SZS output start Proof for thm.stack_removeProof
fof(f2223,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f114,f130,f149,f160,f151,f171,f175,f187,f197,f203,f204,f219,f233,f237,f157,f155,f153,f241,f342,f218,f132,f368,f372,f451,f828,f838,f834,f832,f830,f854,f864,f873,f189,f889,f899,f895,f893,f891,f999,f1000,f1032,f1036,f1074,f128,f1182,f1196,f1198,f1212,f1256,f1328,f1369,f1370,f1397,f1398,f1400,f1403,f1404,f1405,f1408,f1401,f1411,f1399,f1412,f1413,f1414,f1415,f1090,f1085,f1426,f1429,f1431,f1432,f1454,f1463,f1467,f1471,f1438,f133,f1417,f1475,f1495,f1524,f1534,f1554,f1595,f1597,f1598,f1599,f1600,f1601,f1602,f1603,f1604,f1605,f193,f1622,f1608,f1625,f1629,f1633,f1680,f1681,f1770,f1774,f1772,f1779,f1781,f1794,f1803,f1798,f1796,f1808,f1810,f1813,f136,f1814,f1815,f1816,f134,f1836,f1839,f1843,f1847,f1460,f1458,f1456,f1850,f1572,f1423,f1421,f1419,f1868,f1855,f1877,f1881,f1804,f1885,f1874,f1872,f1870,f1925,f1926,f1948,f1389,f1387,f1968,f1972,f191,f1997,f1983,f1393,f1391,f2000,f2004,f129,f2008,f860,f858,f856,f2098,f2099,f2203,f2204])).
fof(f2204,plain,(
  $false | ($spl6 | $spl48)),
  inference(subsumption_resolution,[],[f2166,f297])).
fof(f297,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(forward_demodulation,[],[f296,f99])).
fof(f99,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',X2)))) )),
  inference(resolution,[],[f69,f89])).
fof(f89,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X35] : (s(bool,'T_0') = s(bool,X35) <=> p(s(bool,X35)))),
  file('thm.stack_removeProof.good_syntax_inst_ind','thm.bool.EQ_CLAUSES|split|1')).
fof(f69,plain,(
  ( ! [X9] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',X9))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X23,X24,X25,X26,X27] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',X23),s('type.num.num',X24),s('type.asm.addr'(sK0),'const.asm.Addr_2'(s('type.num.num',X25),s('type.fcp.cart'(bool,sK0),X26))))))),s('type.num.num',X27)))) & ! [X20,X21,X22] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',X20),s('type.fcp.cart'(bool,sK0),X21))))),s('type.num.num',X22)))) & ! [X15,X16,X17,X18,X19] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',X15),s('type.num.num',X16),s('type.num.num',X17),s('type.num.num',X18))))))),s('type.num.num',X19)))) & ! [X10,X11,X12,X13,X14] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X10),s('type.num.num',X11),s('type.num.num',X12),s('type.asm.reg_imm'(sK0),X13))))))),s('type.num.num',X14)))) & ! [X9] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',X9)))) & ! [X4,X5,X6,X7,X8] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',X4),s('type.num.num',X5),s('type.num.num',X6),s('type.num.num',X7))))))),s('type.num.num',X8)))) & ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',sK3))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f52])).
fof(f52,plain,(
  ? [X0,X1] : (! [X23,X24,X25,X26,X27] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',X23),s('type.num.num',X24),s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',X25),s('type.fcp.cart'(bool,X0),X26))))))),s('type.num.num',X27)))) & ! [X20,X21,X22] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',X20),s('type.fcp.cart'(bool,X0),X21))))),s('type.num.num',X22)))) & ! [X15,X16,X17,X18,X19] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',X15),s('type.num.num',X16),s('type.num.num',X17),s('type.num.num',X18))))))),s('type.num.num',X19)))) & ! [X10,X11,X12,X13,X14] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X10),s('type.num.num',X11),s('type.num.num',X12),s('type.asm.reg_imm'(X0),X13))))))),s('type.num.num',X14)))) & ! [X9] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Skip_0'))),s('type.num.num',X9)))) & ! [X4,X5,X6,X7,X8] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',X4),s('type.num.num',X5),s('type.num.num',X6),s('type.num.num',X7))))))),s('type.num.num',X8)))) & ? [X2,X3] : ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),X2))),s('type.num.num',X3)))))),
  inference(rectify,[],[f48])).
fof(f48,plain,(
  ? [X0,X1] : (! [X21,X22,X23,X24,X25] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',X21),s('type.num.num',X22),s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',X23),s('type.fcp.cart'(bool,X0),X24))))))),s('type.num.num',X25)))) & ! [X18,X19,X20] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',X18),s('type.fcp.cart'(bool,X0),X19))))),s('type.num.num',X20)))) & ! [X13,X14,X15,X16,X17] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.num.num',X16))))))),s('type.num.num',X17)))) & ! [X8,X9,X10,X11,X12] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X8),s('type.num.num',X9),s('type.num.num',X10),s('type.asm.reg_imm'(X0),X11))))))),s('type.num.num',X12)))) & ! [X7] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Skip_0'))),s('type.num.num',X7)))) & ! [X2,X3,X4,X5,X6] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num',X6)))) & ? [X26,X27] : ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),X26))),s('type.num.num',X27)))))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ? [X0,X1] : ((! [X21,X22,X23,X24,X25] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',X21),s('type.num.num',X22),s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',X23),s('type.fcp.cart'(bool,X0),X24))))))),s('type.num.num',X25)))) & ! [X18,X19,X20] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',X18),s('type.fcp.cart'(bool,X0),X19))))),s('type.num.num',X20)))) & ! [X13,X14,X15,X16,X17] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.num.num',X16))))))),s('type.num.num',X17)))) & ! [X8,X9,X10,X11,X12] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X8),s('type.num.num',X9),s('type.num.num',X10),s('type.asm.reg_imm'(X0),X11))))))),s('type.num.num',X12)))) & ! [X7] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Skip_0'))),s('type.num.num',X7)))) & ! [X2,X3,X4,X5,X6] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num',X6))))) & ? [X26,X27] : ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),X26))),s('type.num.num',X27)))))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1] : ((! [X21,X22,X23,X24,X25] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',X21),s('type.num.num',X22),s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',X23),s('type.fcp.cart'(bool,X0),X24))))))),s('type.num.num',X25)))) & ! [X18,X19,X20] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',X18),s('type.fcp.cart'(bool,X0),X19))))),s('type.num.num',X20)))) & ! [X13,X14,X15,X16,X17] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.num.num',X16))))))),s('type.num.num',X17)))) & ! [X8,X9,X10,X11,X12] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X8),s('type.num.num',X9),s('type.num.num',X10),s('type.asm.reg_imm'(X0),X11))))))),s('type.num.num',X12)))) & ! [X7] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Skip_0'))),s('type.num.num',X7)))) & ! [X2,X3,X4,X5,X6] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num',X6))))) => ! [X26,X27] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),X26))),s('type.num.num',X27)))))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ~! [X0] : ! [X1] : ((! [X21,X22,X23,X24,X25] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',X21),s('type.num.num',X22),s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',X23),s('type.fcp.cart'(bool,X0),X24))))))),s('type.num.num',X25)))) & ! [X18,X19,X20] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',X18),s('type.fcp.cart'(bool,X0),X19))))),s('type.num.num',X20)))) & ! [X13,X14,X15,X16,X17] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.num.num',X16))))))),s('type.num.num',X17)))) & ! [X8,X9,X10,X11,X12] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X8),s('type.num.num',X9),s('type.num.num',X10),s('type.asm.reg_imm'(X0),X11))))))),s('type.num.num',X12)))) & ! [X7] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Skip_0'))),s('type.num.num',X7)))) & ! [X2,X3,X4,X5,X6] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5))))))),s('type.num.num',X6))))) => ! [X26,X27] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X0),fun('type.num.num',bool)),X1),s('type.asm.inst'(X0),X26))),s('type.num.num',X27)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((! [X8,X9,X10,X11,X12] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X6),fun('type.num.num',bool)),X7),s('type.asm.inst'(X6),'const.asm.Mem_3'(s('type.asm.mem_op',X8),s('type.num.num',X9),s('type.asm.addr'(X6),'const.asm.Addr_2'(s('type.num.num',X10),s('type.fcp.cart'(bool,X6),X11))))))),s('type.num.num',X12)))) & ! [X9,X13,X12] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X6),fun('type.num.num',bool)),X7),s('type.asm.inst'(X6),'const.asm.Const_2'(s('type.num.num',X9),s('type.fcp.cart'(bool,X6),X13))))),s('type.num.num',X12)))) & ! [X14,X9,X15,X16,X12] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X6),fun('type.num.num',bool)),X7),s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),'const.asm.Shift_4'(s('type.asm.shift',X14),s('type.num.num',X9),s('type.num.num',X15),s('type.num.num',X16))))))),s('type.num.num',X12)))) & ! [X17,X9,X15,X18,X12] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X6),fun('type.num.num',bool)),X7),s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X9),s('type.num.num',X15),s('type.asm.reg_imm'(X6),X18))))))),s('type.num.num',X12)))) & ! [X19] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X6),fun('type.num.num',bool)),X7),s('type.asm.inst'(X6),'const.asm.Skip_0'))),s('type.num.num',X19)))) & ! [X20,X21,X22,X23,X19] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X6),fun('type.num.num',bool)),X7),s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),'const.asm.AddCarry_4'(s('type.num.num',X20),s('type.num.num',X21),s('type.num.num',X22),s('type.num.num',X23))))))),s('type.num.num',X19))))) => ! [X24,X11] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X6),fun('type.num.num',bool)),X7),s('type.asm.inst'(X6),X24))),s('type.num.num',X11)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((! [X8,X9,X10,X11,X12] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X6),fun('type.num.num',bool)),X7),s('type.asm.inst'(X6),'const.asm.Mem_3'(s('type.asm.mem_op',X8),s('type.num.num',X9),s('type.asm.addr'(X6),'const.asm.Addr_2'(s('type.num.num',X10),s('type.fcp.cart'(bool,X6),X11))))))),s('type.num.num',X12)))) & ! [X9,X13,X12] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X6),fun('type.num.num',bool)),X7),s('type.asm.inst'(X6),'const.asm.Const_2'(s('type.num.num',X9),s('type.fcp.cart'(bool,X6),X13))))),s('type.num.num',X12)))) & ! [X14,X9,X15,X16,X12] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X6),fun('type.num.num',bool)),X7),s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),'const.asm.Shift_4'(s('type.asm.shift',X14),s('type.num.num',X9),s('type.num.num',X15),s('type.num.num',X16))))))),s('type.num.num',X12)))) & ! [X17,X9,X15,X18,X12] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X6),fun('type.num.num',bool)),X7),s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X9),s('type.num.num',X15),s('type.asm.reg_imm'(X6),X18))))))),s('type.num.num',X12)))) & ! [X19] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X6),fun('type.num.num',bool)),X7),s('type.asm.inst'(X6),'const.asm.Skip_0'))),s('type.num.num',X19)))) & ! [X20,X21,X22,X23,X19] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X6),fun('type.num.num',bool)),X7),s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),'const.asm.AddCarry_4'(s('type.num.num',X20),s('type.num.num',X21),s('type.num.num',X22),s('type.num.num',X23))))))),s('type.num.num',X19))))) => ! [X24,X11] : p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(X6),fun('type.num.num',bool)),X7),s('type.asm.inst'(X6),X24))),s('type.num.num',X11)))))),
  file('thm.stack_removeProof.good_syntax_inst_ind','thm.stack_removeProof.good_syntax_inst_ind')).
fof(f296,plain,(
  ( ! [X11] : (s(bool,'F_0') != s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',X11)))) )),
  inference(subsumption_resolution,[],[f269,f91])).
fof(f91,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.stack_removeProof.good_syntax_inst_ind',aHL_TRUTH)).
fof(f269,plain,(
  ( ! [X11] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',X11)))) )),
  inference(superposition,[],[f82,f99])).
fof(f82,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X35] : (s(bool,'F_0') = s(bool,X35) <=> ~p(s(bool,X35)))),
  file('thm.stack_removeProof.good_syntax_inst_ind','thm.bool.EQ_CLAUSES|split|3')).
fof(f2166,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl6 | $spl48)),
  inference(backward_demodulation,[],[f1791,f119])).
fof(f119,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',sK3)))),
  inference(resolution,[],[f71,f85])).
fof(f85,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X35] : (s(bool,'F_0') = s(bool,X35) <=> ~p(s(bool,X35)))),
  file('thm.stack_removeProof.good_syntax_inst_ind','thm.bool.EQ_CLAUSES|split|2')).
fof(f71,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',sK3))))),
  inference(cnf_transformation,[],[f53])).
fof(f1791,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) ) | ($spl6 | $spl48)),
  inference(forward_demodulation,[],[f1782,f134])).
fof(f1782,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X0)))) ) | $spl48),
  inference(superposition,[],[f463,f1389])).
fof(f463,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X8),s('type.num.num',X9))))))),s('type.num.num',X10)))) )),
  inference(resolution,[],[f70,f89])).
fof(f70,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',X4),s('type.num.num',X5),s('type.num.num',X6),s('type.num.num',X7))))))),s('type.num.num',X8))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f2203,plain,(
  $false | ($spl6 | $spl48)),
  inference(trivial_inequality_removal,[],[f2175])).
fof(f2175,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl6 | $spl48)),
  inference(superposition,[],[f117,f1791])).
fof(f117,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',sK3)))),
  inference(resolution,[],[f71,f88])).
fof(f88,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f63])).
fof(f2099,plain,(
  $false | ($spl6 | $spl46)),
  inference(subsumption_resolution,[],[f2061,f297])).
fof(f2061,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl6 | $spl46)),
  inference(backward_demodulation,[],[f1767,f119])).
fof(f1767,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) ) | ($spl6 | $spl46)),
  inference(forward_demodulation,[],[f1758,f134])).
fof(f1758,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X0)))) ) | $spl46),
  inference(superposition,[],[f380,f1387])).
fof(f380,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',X6),s('type.num.num',X7),s('type.num.num',X8),s('type.num.num',X9))))))),s('type.num.num',X10)))) )),
  inference(resolution,[],[f67,f89])).
fof(f67,plain,(
  ( ! [X19,X17,X15,X18,X16] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',X15),s('type.num.num',X16),s('type.num.num',X17),s('type.num.num',X18))))))),s('type.num.num',X19))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f2098,plain,(
  $false | ($spl6 | $spl46)),
  inference(trivial_inequality_removal,[],[f2070])).
fof(f2070,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl6 | $spl46)),
  inference(superposition,[],[f117,f1767])).
fof(f856,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl30),
  inference(cnf_transformation,[],[f856_D])).
fof(f856_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f858,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl32),
  inference(cnf_transformation,[],[f858_D])).
fof(f858_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f860,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl34),
  inference(cnf_transformation,[],[f860_D])).
fof(f860_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f2008,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f2007,f191])).
fof(f2007,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f2006,f191])).
fof(f2006,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f2005,f191])).
fof(f2005,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1987,f150])).
fof(f150,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') != s('type.asm.inst'(sK0),sK2) | $spl11),
  inference(cnf_transformation,[],[f150_D])).
fof(f150_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') != s('type.asm.inst'(sK0),sK2) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f1987,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f79,f191])).
fof(f79,plain,(
  ( ! [X0,X1] : (s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(X1,X0)),s('type.num.num',sK44(X1,X0)),s('type.asm.addr'(X0),sK45(X1,X0)))) | s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),sK42(X1,X0)))) | s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',sK40(X1,X0)),s('type.fcp.cart'(bool,X0),sK41(X1,X0)))) | s('type.asm.inst'(X0),'const.asm.Skip_0') = s('type.asm.inst'(X0),X1)) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1] : (s('type.asm.inst'(X0),'const.asm.Skip_0') = s('type.asm.inst'(X0),X1) | s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',sK40(X1,X0)),s('type.fcp.cart'(bool,X0),sK41(X1,X0)))) | s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),sK42(X1,X0)))) | s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(X1,X0)),s('type.num.num',sK44(X1,X0)),s('type.asm.addr'(X0),sK45(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK40,sK41,sK42,sK43,sK44,sK45])],[f29])).
fof(f29,plain,(
  ! [X0,X1] : (s('type.asm.inst'(X0),'const.asm.Skip_0') = s('type.asm.inst'(X0),X1) | ? [X6,X7] : s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',X6),s('type.fcp.cart'(bool,X0),X7))) | ? [X5] : s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),X5))) | ? [X2,X3,X4] : s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',X2),s('type.num.num',X3),s('type.asm.addr'(X0),X4))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0] : ! [X1] : (s('type.asm.inst'(X0),'const.asm.Skip_0') = s('type.asm.inst'(X0),X1) | ? [X6,X7] : s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',X6),s('type.fcp.cart'(bool,X0),X7))) | ? [X5] : s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),X5))) | ? [X2,X3,X4] : s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',X2),s('type.num.num',X3),s('type.asm.addr'(X0),X4))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X33] : (s('type.asm.inst'(X6),'const.asm.Skip_0') = s('type.asm.inst'(X6),X33) | ? [X9,X32] : s('type.asm.inst'(X6),X33) = s('type.asm.inst'(X6),'const.asm.Const_2'(s('type.num.num',X9),s('type.fcp.cart'(bool,X6),X32))) | ? [X10] : s('type.asm.inst'(X6),X33) = s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),X10))) | ? [X34,X9,X10] : s('type.asm.inst'(X6),X33) = s('type.asm.inst'(X6),'const.asm.Mem_3'(s('type.asm.mem_op',X34),s('type.num.num',X9),s('type.asm.addr'(X6),X10))))),
  file('thm.stack_removeProof.good_syntax_inst_ind','thm.asm.inst_nchotomy')).
fof(f129,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0))))) ) | $spl2),
  inference(cnf_transformation,[],[f129_D])).
fof(f129_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f2004,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2))))) ) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f2003,f150])).
fof(f2003,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2))))) ) | $spl20),
  inference(forward_demodulation,[],[f2002,f191])).
fof(f2002,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f2001,f191])).
fof(f2001,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1985,f191])).
fof(f1985,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl20),
  inference(superposition,[],[f328,f191])).
fof(f328,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),X0))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),X0) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(X0,sK0)),s('type.num.num',sK44(X0,sK0)),s('type.asm.addr'(sK0),sK45(X0,sK0)))) | s('type.asm.inst'(sK0),X0) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(X0,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),X0)) )),
  inference(superposition,[],[f66,f79])).
fof(f66,plain,(
  ( ! [X21,X22,X20] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',X20),s('type.fcp.cart'(bool,sK0),X21))))),s('type.num.num',X22))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f2000,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1))))) ) | $spl20),
  inference(forward_demodulation,[],[f1999,f191])).
fof(f1999,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1998,f191])).
fof(f1998,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1984,f191])).
fof(f1984,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0))))) ) | $spl20),
  inference(superposition,[],[f103,f191])).
fof(f103,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),X0))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),X0) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(X0,sK0)),s('type.num.num',sK44(X0,sK0)),s('type.asm.addr'(sK0),sK45(X0,sK0)))) | s('type.asm.inst'(sK0),X0) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(X0,sK0)))) | s('type.asm.inst'(sK0),X0) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(X0,sK0)),s('type.fcp.cart'(bool,sK0),sK41(X0,sK0))))) )),
  inference(superposition,[],[f69,f79])).
fof(f1391,plain,(
  s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK33(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK34(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK35(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)))) | $spl50),
  inference(cnf_transformation,[],[f1391_D])).
fof(f1391_D,plain,(
  s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK33(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK34(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK35(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f1393,plain,(
  s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK37(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK38(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK39(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)))) | $spl52),
  inference(cnf_transformation,[],[f1393_D])).
fof(f1393_D,plain,(
  s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK37(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK38(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK39(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f1983,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) | s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK37(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK38(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK39(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)))) | s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK33(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK34(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK35(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0))))) ) | $spl20),
  inference(superposition,[],[f501,f191])).
fof(f501,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),X0))))),s('type.num.num',X1)))) | s('type.asm.arith'(sK0),X0) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(X0,sK0)),s('type.num.num',sK37(X0,sK0)),s('type.num.num',sK38(X0,sK0)),s('type.num.num',sK39(X0,sK0)))) | s('type.asm.arith'(sK0),X0) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(X0,sK0)),s('type.num.num',sK33(X0,sK0)),s('type.num.num',sK34(X0,sK0)),s('type.num.num',sK35(X0,sK0))))) )),
  inference(superposition,[],[f68,f78])).
fof(f78,plain,(
  ( ! [X0,X1] : (s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',sK36(X1,X0)),s('type.num.num',sK37(X1,X0)),s('type.num.num',sK38(X1,X0)),s('type.num.num',sK39(X1,X0)))) | s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',sK32(X1,X0)),s('type.num.num',sK33(X1,X0)),s('type.num.num',sK34(X1,X0)),s('type.num.num',sK35(X1,X0)))) | s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',sK28(X1,X0)),s('type.num.num',sK29(X1,X0)),s('type.num.num',sK30(X1,X0)),s('type.asm.reg_imm'(X0),sK31(X1,X0))))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1] : (s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',sK28(X1,X0)),s('type.num.num',sK29(X1,X0)),s('type.num.num',sK30(X1,X0)),s('type.asm.reg_imm'(X0),sK31(X1,X0)))) | s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',sK32(X1,X0)),s('type.num.num',sK33(X1,X0)),s('type.num.num',sK34(X1,X0)),s('type.num.num',sK35(X1,X0)))) | s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',sK36(X1,X0)),s('type.num.num',sK37(X1,X0)),s('type.num.num',sK38(X1,X0)),s('type.num.num',sK39(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36,sK37,sK38,sK39])],[f27])).
fof(f27,plain,(
  ! [X0,X1] : (? [X10,X11,X12,X13] : s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X10),s('type.num.num',X11),s('type.num.num',X12),s('type.asm.reg_imm'(X0),X13))) | ? [X6,X7,X8,X9] : s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',X6),s('type.num.num',X7),s('type.num.num',X8),s('type.num.num',X9))) | ? [X2,X3,X4,X5] : s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5))))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ! [X0] : ! [X1] : (? [X10,X11,X12,X13] : s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X10),s('type.num.num',X11),s('type.num.num',X12),s('type.asm.reg_imm'(X0),X13))) | ? [X6,X7,X8,X9] : s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',X6),s('type.num.num',X7),s('type.num.num',X8),s('type.num.num',X9))) | ? [X2,X3,X4,X5] : s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X25] : (? [X26,X9,X27,X28] : s('type.asm.arith'(X6),X25) = s('type.asm.arith'(X6),'const.asm.Binop_4'(s('type.asm.binop',X26),s('type.num.num',X9),s('type.num.num',X27),s('type.asm.reg_imm'(X6),X28))) | ? [X29,X9,X27,X30] : s('type.asm.arith'(X6),X25) = s('type.asm.arith'(X6),'const.asm.Shift_4'(s('type.asm.shift',X29),s('type.num.num',X9),s('type.num.num',X27),s('type.num.num',X30))) | ? [X9,X27,X30,X31] : s('type.asm.arith'(X6),X25) = s('type.asm.arith'(X6),'const.asm.AddCarry_4'(s('type.num.num',X9),s('type.num.num',X27),s('type.num.num',X30),s('type.num.num',X31))))),
  file('thm.stack_removeProof.good_syntax_inst_ind','thm.asm.arith_nchotomy')).
fof(f68,plain,(
  ( ! [X14,X12,X10,X13,X11] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X10),s('type.num.num',X11),s('type.num.num',X12),s('type.asm.reg_imm'(sK0),X13))))))),s('type.num.num',X14))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f1997,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1996,f191])).
fof(f1996,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1995,f191])).
fof(f1995,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1994,f191])).
fof(f1994,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1982,f150])).
fof(f1982,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f191,f79])).
fof(f191,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl20),
  inference(cnf_transformation,[],[f191_D])).
fof(f191_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1972,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2))))) ) | ($spl6 | $spl19 | $spl63)),
  inference(forward_demodulation,[],[f1971,f134])).
fof(f1971,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | ($spl6 | $spl19 | $spl63)),
  inference(subsumption_resolution,[],[f1970,f188])).
fof(f188,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl19),
  inference(cnf_transformation,[],[f188_D])).
fof(f188_D,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f1970,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | ($spl6 | $spl63)),
  inference(forward_demodulation,[],[f1969,f134])).
fof(f1969,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | ($spl6 | $spl63)),
  inference(subsumption_resolution,[],[f1950,f1416])).
fof(f1416,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl63),
  inference(cnf_transformation,[],[f1416_D])).
fof(f1416_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) <=> ~$spl63),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl63])])).
fof(f1950,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | $spl6),
  inference(superposition,[],[f328,f134])).
fof(f1968,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1))))) ) | ($spl6 | $spl19 | $spl23)),
  inference(subsumption_resolution,[],[f1967,f192])).
fof(f192,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl23),
  inference(cnf_transformation,[],[f192_D])).
fof(f192_D,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f1967,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1))))) ) | ($spl6 | $spl19)),
  inference(forward_demodulation,[],[f1966,f134])).
fof(f1966,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | ($spl6 | $spl19)),
  inference(forward_demodulation,[],[f1965,f134])).
fof(f1965,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | ($spl6 | $spl19)),
  inference(subsumption_resolution,[],[f1964,f188])).
fof(f1964,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl6),
  inference(forward_demodulation,[],[f1949,f134])).
fof(f1949,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl6),
  inference(superposition,[],[f103,f134])).
fof(f1387,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0)))) | $spl46),
  inference(cnf_transformation,[],[f1387_D])).
fof(f1387_D,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0)))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f1389,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0)))) | $spl48),
  inference(cnf_transformation,[],[f1389_D])).
fof(f1389_D,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0)))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f1948,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) | s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0)))) | s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))))) ) | $spl6),
  inference(superposition,[],[f501,f134])).
fof(f1926,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f1888,f297])).
fof(f1888,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl8),
  inference(backward_demodulation,[],[f1823,f119])).
fof(f1823,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) ) | $spl8),
  inference(superposition,[],[f598,f136])).
fof(f598,plain,(
  ( ! [X6,X8,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',X5),s('type.num.num',X6),s('type.asm.addr'(sK0),X7))))),s('type.num.num',X8)))) )),
  inference(resolution,[],[f585,f89])).
fof(f585,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',X1),s('type.num.num',X2),s('type.asm.addr'(sK0),X0))))),s('type.num.num',X3))))) )),
  inference(superposition,[],[f65,f96])).
fof(f96,plain,(
  ( ! [X0,X1] : (s('type.asm.addr'(X0),X1) = s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',sK47(X1,X0)),s('type.fcp.cart'(bool,X0),sK48(X1,X0))))) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1] : s('type.asm.addr'(X0),X1) = s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',sK47(X1,X0)),s('type.fcp.cart'(bool,X0),sK48(X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK47,sK48])],[f46])).
fof(f46,plain,(
  ! [X0,X1] : ? [X2,X3] : s('type.asm.addr'(X0),X1) = s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',X2),s('type.fcp.cart'(bool,X0),X3)))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0] : ! [X1] : ? [X2,X3] : s('type.asm.addr'(X0),X1) = s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',X2),s('type.fcp.cart'(bool,X0),X3)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X25] : ? [X9,X32] : s('type.asm.addr'(X6),X25) = s('type.asm.addr'(X6),'const.asm.Addr_2'(s('type.num.num',X9),s('type.fcp.cart'(bool,X6),X32)))),
  file('thm.stack_removeProof.good_syntax_inst_ind','thm.asm.addr_nchotomy')).
fof(f65,plain,(
  ( ! [X26,X24,X23,X27,X25] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',X23),s('type.num.num',X24),s('type.asm.addr'(sK0),'const.asm.Addr_2'(s('type.num.num',X25),s('type.fcp.cart'(bool,sK0),X26))))))),s('type.num.num',X27))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f1925,plain,(
  $false | $spl8),
  inference(trivial_inequality_removal,[],[f1897])).
fof(f1897,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl8),
  inference(superposition,[],[f117,f1823])).
fof(f1870,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl88),
  inference(cnf_transformation,[],[f1870_D])).
fof(f1870_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f1872,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl90),
  inference(cnf_transformation,[],[f1872_D])).
fof(f1872_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f1874,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl92),
  inference(cnf_transformation,[],[f1874_D])).
fof(f1874_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f1885,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl63 | $spl66)),
  inference(forward_demodulation,[],[f1884,f1421])).
fof(f1884,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl63 | $spl66)),
  inference(forward_demodulation,[],[f1883,f1421])).
fof(f1883,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl63 | $spl66)),
  inference(forward_demodulation,[],[f1882,f1421])).
fof(f1882,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl63 | $spl66)),
  inference(subsumption_resolution,[],[f1858,f1416])).
fof(f1858,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl66),
  inference(superposition,[],[f79,f1421])).
fof(f1804,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X1))))) ) | $spl86),
  inference(cnf_transformation,[],[f1804_D])).
fof(f1804_D,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X1))))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f1881,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X2))))) ) | ($spl63 | $spl66)),
  inference(subsumption_resolution,[],[f1880,f1416])).
fof(f1880,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X2))))) ) | $spl66),
  inference(forward_demodulation,[],[f1879,f1421])).
fof(f1879,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl66),
  inference(forward_demodulation,[],[f1878,f1421])).
fof(f1878,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl66),
  inference(forward_demodulation,[],[f1857,f1421])).
fof(f1857,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl66),
  inference(superposition,[],[f328,f1421])).
fof(f1877,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X1))))) ) | $spl66),
  inference(forward_demodulation,[],[f1876,f1421])).
fof(f1876,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0))))) ) | $spl66),
  inference(forward_demodulation,[],[f1875,f1421])).
fof(f1875,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0))))) ) | $spl66),
  inference(forward_demodulation,[],[f1856,f1421])).
fof(f1856,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0))))) ) | $spl66),
  inference(superposition,[],[f103,f1421])).
fof(f1855,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X0)))) | s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK37(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK38(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK39(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)))) | s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK33(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK34(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK35(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0))))) ) | $spl66),
  inference(superposition,[],[f501,f1421])).
fof(f1868,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl63 | $spl66)),
  inference(forward_demodulation,[],[f1867,f1421])).
fof(f1867,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl63 | $spl66)),
  inference(forward_demodulation,[],[f1866,f1421])).
fof(f1866,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl63 | $spl66)),
  inference(forward_demodulation,[],[f1865,f1421])).
fof(f1865,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl63 | $spl66)),
  inference(subsumption_resolution,[],[f1853,f1416])).
fof(f1853,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl66),
  inference(superposition,[],[f1421,f79])).
fof(f1419,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl64),
  inference(cnf_transformation,[],[f1419_D])).
fof(f1419_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f1421,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl66),
  inference(cnf_transformation,[],[f1421_D])).
fof(f1421_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f1423,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl68),
  inference(cnf_transformation,[],[f1423_D])).
fof(f1423_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f1572,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl63),
  inference(trivial_inequality_removal,[],[f1571])).
fof(f1571,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') != s('type.asm.inst'(sK0),'const.asm.Skip_0') | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl63),
  inference(superposition,[],[f1416,f79])).
fof(f1850,plain,(
  $false | ($spl7 | $spl20 | $spl66)),
  inference(subsumption_resolution,[],[f1703,f133])).
fof(f1703,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | ($spl20 | $spl66)),
  inference(forward_demodulation,[],[f1421,f191])).
fof(f1456,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | $spl70),
  inference(cnf_transformation,[],[f1456_D])).
fof(f1456_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f1458,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | $spl72),
  inference(cnf_transformation,[],[f1458_D])).
fof(f1458_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f1460,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | $spl74),
  inference(cnf_transformation,[],[f1460_D])).
fof(f1460_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f1847,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f1846,f136])).
fof(f1846,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f1845,f136])).
fof(f1845,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f1844,f136])).
fof(f1844,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(subsumption_resolution,[],[f1826,f150])).
fof(f1826,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | $spl8),
  inference(superposition,[],[f79,f136])).
fof(f1843,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2))))) ) | ($spl8 | $spl11)),
  inference(subsumption_resolution,[],[f1842,f150])).
fof(f1842,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2))))) ) | $spl8),
  inference(forward_demodulation,[],[f1841,f136])).
fof(f1841,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))))) ) | $spl8),
  inference(forward_demodulation,[],[f1840,f136])).
fof(f1840,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))))) ) | $spl8),
  inference(forward_demodulation,[],[f1825,f136])).
fof(f1825,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))))) ) | $spl8),
  inference(superposition,[],[f328,f136])).
fof(f1839,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1))))) ) | $spl8),
  inference(forward_demodulation,[],[f1838,f136])).
fof(f1838,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0))))) ) | $spl8),
  inference(forward_demodulation,[],[f1837,f136])).
fof(f1837,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0))))) ) | $spl8),
  inference(forward_demodulation,[],[f1824,f136])).
fof(f1824,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0))))) ) | $spl8),
  inference(superposition,[],[f103,f136])).
fof(f1836,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f1835,f136])).
fof(f1835,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f1834,f136])).
fof(f1834,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f1833,f136])).
fof(f1833,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(subsumption_resolution,[],[f1822,f150])).
fof(f1822,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | $spl8),
  inference(superposition,[],[f136,f79])).
fof(f134,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl6),
  inference(cnf_transformation,[],[f134_D])).
fof(f134_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f1816,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl20 | $spl63)),
  inference(forward_demodulation,[],[f1572,f191])).
fof(f1815,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl20 | $spl63)),
  inference(subsumption_resolution,[],[f1606,f1416])).
fof(f1606,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl20),
  inference(superposition,[],[f191,f79])).
fof(f1814,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl20 | $spl63)),
  inference(subsumption_resolution,[],[f1611,f1416])).
fof(f1611,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl20),
  inference(superposition,[],[f79,f191])).
fof(f136,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | $spl8),
  inference(cnf_transformation,[],[f136_D])).
fof(f136_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f1813,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl5),
  inference(subsumption_resolution,[],[f1812,f297])).
fof(f1812,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl5),
  inference(forward_demodulation,[],[f1811,f99])).
fof(f1811,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',sK3))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl5),
  inference(subsumption_resolution,[],[f1704,f131])).
fof(f131,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) | $spl5),
  inference(cnf_transformation,[],[f131_D])).
fof(f131_D,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f1704,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',sK3))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))),
  inference(superposition,[],[f119,f79])).
fof(f1810,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl5),
  inference(subsumption_resolution,[],[f1809,f131])).
fof(f1809,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))),
  inference(subsumption_resolution,[],[f1709,f90])).
fof(f90,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.stack_removeProof.good_syntax_inst_ind',aHL_FALSITY)).
fof(f1709,plain,(
  p(s(bool,'F_0')) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))),
  inference(superposition,[],[f103,f119])).
fof(f1808,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl11),
  inference(subsumption_resolution,[],[f1807,f150])).
fof(f1807,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2)),
  inference(subsumption_resolution,[],[f1710,f90])).
fof(f1710,plain,(
  p(s(bool,'F_0')) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2)),
  inference(superposition,[],[f328,f119])).
fof(f1796,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK37('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)))) | $spl82),
  inference(cnf_transformation,[],[f1796_D])).
fof(f1796_D,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK37('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)))) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f1798,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK33('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)))) | $spl84),
  inference(cnf_transformation,[],[f1798_D])).
fof(f1798_D,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK33('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)))) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f1803,plain,(
  ( ! [X1] : (s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK33('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK37('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X1))))) ) | $spl48),
  inference(forward_demodulation,[],[f1802,f1389])).
fof(f1802,plain,(
  ( ! [X1] : (s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK37('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X1)))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK33('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0))))) ) | $spl48),
  inference(forward_demodulation,[],[f1783,f1389])).
fof(f1783,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X1)))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK37('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK33('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0))))) ) | $spl48),
  inference(superposition,[],[f501,f1389])).
fof(f1794,plain,(
  ( ! [X1] : (s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK33('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK37('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1))))) ) | ($spl6 | $spl48)),
  inference(forward_demodulation,[],[f1793,f1389])).
fof(f1793,plain,(
  ( ! [X1] : (s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK37('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK33('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0))))) ) | ($spl6 | $spl48)),
  inference(forward_demodulation,[],[f1792,f1389])).
fof(f1792,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK37('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK33('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0))),sK0))))) ) | ($spl6 | $spl48)),
  inference(forward_demodulation,[],[f1783,f134])).
fof(f1781,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK28(sK42(sK2,sK0),sK0)),s('type.num.num',sK29(sK42(sK2,sK0),sK0)),s('type.num.num',sK30(sK42(sK2,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK31(sK42(sK2,sK0),sK0)))) | $spl80),
  inference(cnf_transformation,[],[f1781_D])).
fof(f1781_D,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK28(sK42(sK2,sK0),sK0)),s('type.num.num',sK29(sK42(sK2,sK0),sK0)),s('type.num.num',sK30(sK42(sK2,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK31(sK42(sK2,sK0),sK0)))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f1779,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0)))) | s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK28(sK42(sK2,sK0),sK0)),s('type.num.num',sK29(sK42(sK2,sK0),sK0)),s('type.num.num',sK30(sK42(sK2,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK31(sK42(sK2,sK0),sK0)))) | $spl47),
  inference(trivial_inequality_removal,[],[f1778])).
fof(f1778,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) != s('type.asm.arith'(sK0),sK42(sK2,sK0)) | s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0)))) | s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK28(sK42(sK2,sK0),sK0)),s('type.num.num',sK29(sK42(sK2,sK0),sK0)),s('type.num.num',sK30(sK42(sK2,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK31(sK42(sK2,sK0),sK0)))) | $spl47),
  inference(superposition,[],[f1386,f78])).
fof(f1386,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) != s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0)))) | $spl47),
  inference(cnf_transformation,[],[f1386_D])).
fof(f1386_D,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) != s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0)))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f1772,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK37('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)))) | $spl76),
  inference(cnf_transformation,[],[f1772_D])).
fof(f1772_D,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK37('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f1774,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK33('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)))) | $spl78),
  inference(cnf_transformation,[],[f1774_D])).
fof(f1774_D,plain,(
  s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK33('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f1770,plain,(
  ( ! [X1] : (s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK33('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK37('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1))))) ) | ($spl6 | $spl46)),
  inference(forward_demodulation,[],[f1769,f1387])).
fof(f1769,plain,(
  ( ! [X1] : (s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK37('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK33('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0))))) ) | ($spl6 | $spl46)),
  inference(forward_demodulation,[],[f1768,f1387])).
fof(f1768,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK37('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK33('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0))))) ) | ($spl6 | $spl46)),
  inference(forward_demodulation,[],[f1759,f134])).
fof(f1759,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))))),s('type.num.num',X1)))) | s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK37('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK33('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))),sK0))))) ) | $spl46),
  inference(superposition,[],[f501,f1387])).
fof(f1681,plain,(
  $false | $spl22),
  inference(subsumption_resolution,[],[f1640,f297])).
fof(f1640,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl22),
  inference(backward_demodulation,[],[f876,f119])).
fof(f876,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) ) | $spl22),
  inference(superposition,[],[f319,f193])).
fof(f319,plain,(
  ( ! [X6,X4,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',X4),s('type.fcp.cart'(bool,sK0),X5))))),s('type.num.num',X6)))) )),
  inference(resolution,[],[f66,f89])).
fof(f1680,plain,(
  $false | $spl22),
  inference(trivial_inequality_removal,[],[f1652])).
fof(f1652,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl22),
  inference(superposition,[],[f117,f876])).
fof(f1633,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1632,f191])).
fof(f1632,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1631,f191])).
fof(f1631,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1630,f191])).
fof(f1630,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1612,f150])).
fof(f1612,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f79,f191])).
fof(f1629,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2))))) ) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1628,f150])).
fof(f1628,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2))))) ) | $spl20),
  inference(forward_demodulation,[],[f1627,f191])).
fof(f1627,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1626,f191])).
fof(f1626,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1610,f191])).
fof(f1610,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl20),
  inference(superposition,[],[f328,f191])).
fof(f1625,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1))))) ) | $spl20),
  inference(forward_demodulation,[],[f1624,f191])).
fof(f1624,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1623,f191])).
fof(f1623,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1609,f191])).
fof(f1609,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0))))) ) | $spl20),
  inference(superposition,[],[f103,f191])).
fof(f1608,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) | s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK37(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK38(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK39(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)))) | s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK33(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK34(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK35(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0))))) ) | $spl20),
  inference(superposition,[],[f501,f191])).
fof(f1622,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1621,f191])).
fof(f1621,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1620,f191])).
fof(f1620,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1619,f191])).
fof(f1619,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1607,f150])).
fof(f1607,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f191,f79])).
fof(f193,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl22),
  inference(cnf_transformation,[],[f193_D])).
fof(f193_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f1605,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11 | $spl19)),
  inference(forward_demodulation,[],[f1488,f134])).
fof(f1488,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11 | $spl19)),
  inference(forward_demodulation,[],[f1487,f134])).
fof(f1487,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11 | $spl19)),
  inference(subsumption_resolution,[],[f1486,f188])).
fof(f1486,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f1485,f134])).
fof(f1485,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(subsumption_resolution,[],[f1474,f150])).
fof(f1474,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl6),
  inference(superposition,[],[f134,f79])).
fof(f1604,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1))))) ) | ($spl6 | $spl19)),
  inference(forward_demodulation,[],[f1493,f134])).
fof(f1493,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | ($spl6 | $spl19)),
  inference(forward_demodulation,[],[f1492,f134])).
fof(f1492,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | ($spl6 | $spl19)),
  inference(subsumption_resolution,[],[f1491,f188])).
fof(f1491,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl6),
  inference(forward_demodulation,[],[f1476,f134])).
fof(f1476,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl6),
  inference(superposition,[],[f103,f134])).
fof(f1603,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2))))) ) | ($spl6 | $spl19 | $spl63)),
  inference(subsumption_resolution,[],[f1498,f1416])).
fof(f1498,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | ($spl6 | $spl19)),
  inference(forward_demodulation,[],[f1497,f134])).
fof(f1497,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | ($spl6 | $spl19)),
  inference(subsumption_resolution,[],[f1496,f188])).
fof(f1496,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | $spl6),
  inference(forward_demodulation,[],[f1477,f134])).
fof(f1477,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | $spl6),
  inference(superposition,[],[f328,f134])).
fof(f1602,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11 | $spl19)),
  inference(forward_demodulation,[],[f1505,f134])).
fof(f1505,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11 | $spl19)),
  inference(forward_demodulation,[],[f1504,f134])).
fof(f1504,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11 | $spl19)),
  inference(subsumption_resolution,[],[f1503,f188])).
fof(f1503,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f1502,f134])).
fof(f1502,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(subsumption_resolution,[],[f1478,f150])).
fof(f1478,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl6),
  inference(superposition,[],[f79,f134])).
fof(f1601,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11 | $spl19)),
  inference(forward_demodulation,[],[f1547,f134])).
fof(f1547,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11 | $spl19)),
  inference(forward_demodulation,[],[f1546,f134])).
fof(f1546,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11 | $spl19)),
  inference(subsumption_resolution,[],[f1545,f188])).
fof(f1545,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f1544,f134])).
fof(f1544,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(subsumption_resolution,[],[f1533,f150])).
fof(f1533,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl6),
  inference(superposition,[],[f134,f79])).
fof(f1600,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1))))) ) | ($spl6 | $spl19)),
  inference(forward_demodulation,[],[f1552,f134])).
fof(f1552,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | ($spl6 | $spl19)),
  inference(forward_demodulation,[],[f1551,f134])).
fof(f1551,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | ($spl6 | $spl19)),
  inference(subsumption_resolution,[],[f1550,f188])).
fof(f1550,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl6),
  inference(forward_demodulation,[],[f1535,f134])).
fof(f1535,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl6),
  inference(superposition,[],[f103,f134])).
fof(f1599,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2))))) ) | ($spl6 | $spl19 | $spl63)),
  inference(subsumption_resolution,[],[f1557,f1416])).
fof(f1557,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | ($spl6 | $spl19)),
  inference(forward_demodulation,[],[f1556,f134])).
fof(f1556,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | ($spl6 | $spl19)),
  inference(subsumption_resolution,[],[f1555,f188])).
fof(f1555,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | $spl6),
  inference(forward_demodulation,[],[f1536,f134])).
fof(f1536,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | $spl6),
  inference(superposition,[],[f328,f134])).
fof(f1598,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11 | $spl19)),
  inference(forward_demodulation,[],[f1564,f134])).
fof(f1564,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11 | $spl19)),
  inference(forward_demodulation,[],[f1563,f134])).
fof(f1563,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11 | $spl19)),
  inference(subsumption_resolution,[],[f1562,f188])).
fof(f1562,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f1561,f134])).
fof(f1561,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(subsumption_resolution,[],[f1537,f150])).
fof(f1537,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl6),
  inference(superposition,[],[f79,f134])).
fof(f1597,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl19 | $spl63)),
  inference(forward_demodulation,[],[f1575,f134])).
fof(f1575,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl19 | $spl63)),
  inference(forward_demodulation,[],[f1574,f134])).
fof(f1574,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl19 | $spl63)),
  inference(subsumption_resolution,[],[f1573,f188])).
fof(f1573,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl63)),
  inference(forward_demodulation,[],[f1572,f134])).
fof(f1595,plain,(
  $false | ($spl6 | $spl11 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1588,f90])).
fof(f1588,plain,(
  p(s(bool,'F_0')) | ($spl6 | $spl11 | $spl19 | $spl21)),
  inference(superposition,[],[f1501,f119])).
fof(f1501,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2))))) ) | ($spl6 | $spl11 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1500,f150])).
fof(f1500,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2))))) ) | ($spl6 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1499,f134])).
fof(f1499,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | ($spl6 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1498,f190])).
fof(f190,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl21),
  inference(cnf_transformation,[],[f190_D])).
fof(f190_D,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f1554,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1))))) ) | ($spl6 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1553,f134])).
fof(f1553,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | ($spl6 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1552,f190])).
fof(f1534,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) | s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0)))) | s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))))) ) | $spl6),
  inference(superposition,[],[f501,f134])).
fof(f1524,plain,(
  $false | ($spl6 | $spl11 | $spl62)),
  inference(subsumption_resolution,[],[f1510,f150])).
fof(f1510,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | ($spl6 | $spl62)),
  inference(backward_demodulation,[],[f1417,f134])).
fof(f1495,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1))))) ) | ($spl6 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1494,f134])).
fof(f1494,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | ($spl6 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1493,f190])).
fof(f1475,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) | s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0)))) | s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))))) ) | $spl6),
  inference(superposition,[],[f501,f134])).
fof(f1417,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl62),
  inference(cnf_transformation,[],[f1417_D])).
fof(f1417_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f133,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl7),
  inference(cnf_transformation,[],[f133_D])).
fof(f133_D,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f1438,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl21),
  inference(superposition,[],[f190,f79])).
fof(f1471,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f1470,f136])).
fof(f1470,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f1469,f136])).
fof(f1469,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f1468,f136])).
fof(f1468,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(subsumption_resolution,[],[f1444,f150])).
fof(f1444,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | $spl8),
  inference(superposition,[],[f79,f136])).
fof(f1467,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2))))) ) | ($spl8 | $spl11)),
  inference(subsumption_resolution,[],[f1466,f150])).
fof(f1466,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2))))) ) | $spl8),
  inference(forward_demodulation,[],[f1465,f136])).
fof(f1465,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))))) ) | $spl8),
  inference(forward_demodulation,[],[f1464,f136])).
fof(f1464,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))))) ) | $spl8),
  inference(forward_demodulation,[],[f1443,f136])).
fof(f1443,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))))) ) | $spl8),
  inference(superposition,[],[f328,f136])).
fof(f1463,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1))))) ) | $spl8),
  inference(forward_demodulation,[],[f1462,f136])).
fof(f1462,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0))))) ) | $spl8),
  inference(forward_demodulation,[],[f1461,f136])).
fof(f1461,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0))))) ) | $spl8),
  inference(forward_demodulation,[],[f1442,f136])).
fof(f1442,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0))))) ) | $spl8),
  inference(superposition,[],[f103,f136])).
fof(f1454,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f1453,f136])).
fof(f1453,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f1452,f136])).
fof(f1452,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f1451,f136])).
fof(f1451,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(subsumption_resolution,[],[f1440,f150])).
fof(f1440,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0))),sK0)))) | $spl8),
  inference(superposition,[],[f136,f79])).
fof(f1432,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f377,f150])).
fof(f377,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | $spl5),
  inference(trivial_inequality_removal,[],[f375])).
fof(f375,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | $spl5),
  inference(superposition,[],[f131,f79])).
fof(f1431,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl5),
  inference(subsumption_resolution,[],[f1430,f131])).
fof(f1430,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))),
  inference(subsumption_resolution,[],[f405,f99])).
fof(f405,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',sK3))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))),
  inference(superposition,[],[f117,f79])).
fof(f1429,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl5),
  inference(subsumption_resolution,[],[f1428,f297])).
fof(f1428,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl5),
  inference(forward_demodulation,[],[f1427,f99])).
fof(f1427,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',sK3))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl5),
  inference(subsumption_resolution,[],[f416,f131])).
fof(f416,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',sK3))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))),
  inference(superposition,[],[f119,f79])).
fof(f1426,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl5),
  inference(subsumption_resolution,[],[f1425,f297])).
fof(f1425,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl5),
  inference(forward_demodulation,[],[f1424,f99])).
fof(f1424,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',sK3))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl5),
  inference(subsumption_resolution,[],[f1039,f131])).
fof(f1039,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',sK3))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))),
  inference(superposition,[],[f119,f79])).
fof(f1085,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl23),
  inference(superposition,[],[f192,f79])).
fof(f1090,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl19),
  inference(superposition,[],[f188,f79])).
fof(f1415,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0')),X0,'type.num.num'))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0)))) ) | $spl60),
  inference(cnf_transformation,[],[f1415_D])).
fof(f1415_D,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0')),X0,'type.num.num'))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0)))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f1414,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0')),X0,'type.num.num'))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f1153,f131])).
fof(f1153,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0')),X0,'type.num.num'))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))) ) | $spl0),
  inference(superposition,[],[f1098,f79])).
fof(f1098,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X0,'type.num.num'))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0)))) ) | $spl0),
  inference(resolution,[],[f128,f88])).
fof(f1413,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0')),X0,'type.num.num'))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0)))) ) | $spl58),
  inference(cnf_transformation,[],[f1413_D])).
fof(f1413_D,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0')),X0,'type.num.num'))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0)))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f1412,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0')),X0,'type.num.num'))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f1173,f131])).
fof(f1173,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X0),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0')),X0,'type.num.num'))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))) ) | $spl0),
  inference(superposition,[],[f1100,f79])).
fof(f1100,plain,(
  ( ! [X2] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X2),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X2,'type.num.num'))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X2)))) ) | $spl0),
  inference(resolution,[],[f128,f85])).
fof(f1399,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X1)))) ) | $spl54),
  inference(cnf_transformation,[],[f1399_D])).
fof(f1399_D,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X1)))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f1411,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | $spl5),
  inference(subsumption_resolution,[],[f1410,f91])).
fof(f1410,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | $spl5),
  inference(forward_demodulation,[],[f1409,f99])).
fof(f1409,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0')),X0,'type.num.num'))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | $spl5),
  inference(subsumption_resolution,[],[f1189,f131])).
fof(f1189,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0')),X0,'type.num.num'))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))) )),
  inference(superposition,[],[f1113,f79])).
fof(f1113,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X0,'type.num.num'))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0)))) )),
  inference(resolution,[],[f116,f88])).
fof(f116,plain,(
  ( ! [X4] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X4)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X4,'type.num.num')))))) )),
  inference(resolution,[],[f71,f81])).
fof(f81,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK46(X2,X1,X0))))) | ~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : ((! [X5] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,sK46(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK46(X2,X1,X0)))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK46])],[f58])).
fof(f58,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : (? [X4] : (! [X5] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(rectify,[],[f51])).
fof(f51,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : (? [X3] : (! [X4] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(ennf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) => ! [X2] : (! [X3] : (! [X4] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) => ! [X2] : (! [X3] : (! [X4] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X42] : (p(s(bool,'const.relation.WF_1'(s(fun(X6,fun(X6,bool)),X42)))) => ! [X7] : (! [X37] : (! [X41] : (p(s(bool,happ(s(fun(X6,bool),happ(s(fun(X6,fun(X6,bool)),X42),s(X6,X41))),s(X6,X37)))) => p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X41))))) => p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X37))))) => ! [X37] : p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X37))))))),
  file('thm.stack_removeProof.good_syntax_inst_ind','thm.relation.WF_INDUCTION_THM')).
fof(f1401,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0)))) ) | $spl56),
  inference(cnf_transformation,[],[f1401_D])).
fof(f1401_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0)))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f1408,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | $spl5),
  inference(subsumption_resolution,[],[f1407,f91])).
fof(f1407,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | $spl5),
  inference(forward_demodulation,[],[f1406,f99])).
fof(f1406,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0')),X0,'type.num.num'))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))))) ) | $spl5),
  inference(subsumption_resolution,[],[f1205,f131])).
fof(f1205,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0')),X0,'type.num.num'))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))) )),
  inference(superposition,[],[f1115,f79])).
fof(f1115,plain,(
  ( ! [X2] : (~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X2,'type.num.num'))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X2)))) )),
  inference(resolution,[],[f116,f85])).
fof(f1405,plain,(
  ( ! [X0] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0)))) ) | $spl11),
  inference(subsumption_resolution,[],[f1214,f150])).
fof(f1214,plain,(
  ( ! [X0] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0)))) )),
  inference(resolution,[],[f328,f1115])).
fof(f1404,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X1)))) ) | $spl11),
  inference(subsumption_resolution,[],[f1215,f150])).
fof(f1215,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X1)))) )),
  inference(resolution,[],[f328,f1113])).
fof(f1403,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl11),
  inference(subsumption_resolution,[],[f1402,f150])).
fof(f1402,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2)),
  inference(subsumption_resolution,[],[f1239,f90])).
fof(f1239,plain,(
  p(s(bool,'F_0')) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2)),
  inference(superposition,[],[f328,f119])).
fof(f1400,plain,(
  ( ! [X0] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0)))) ) | $spl5),
  inference(subsumption_resolution,[],[f1286,f131])).
fof(f1286,plain,(
  ( ! [X0] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0)))) )),
  inference(resolution,[],[f103,f1115])).
fof(f1398,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X1)))) ) | $spl5),
  inference(subsumption_resolution,[],[f1287,f131])).
fof(f1287,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X1)))) )),
  inference(resolution,[],[f103,f1113])).
fof(f1397,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl5),
  inference(subsumption_resolution,[],[f1396,f131])).
fof(f1396,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))),
  inference(subsumption_resolution,[],[f1311,f90])).
fof(f1311,plain,(
  p(s(bool,'F_0')) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))),
  inference(superposition,[],[f103,f119])).
fof(f1370,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK37(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK38(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK39(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)))) | s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK33(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK34(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0)),s('type.num.num',sK35(sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0),sK0))))) ) | $spl20),
  inference(superposition,[],[f501,f191])).
fof(f1369,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) | s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK36(sK42(sK2,sK0),sK0)),s('type.num.num',sK37(sK42(sK2,sK0),sK0)),s('type.num.num',sK38(sK42(sK2,sK0),sK0)),s('type.num.num',sK39(sK42(sK2,sK0),sK0)))) | s('type.asm.arith'(sK0),sK42(sK2,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK32(sK42(sK2,sK0),sK0)),s('type.num.num',sK33(sK42(sK2,sK0),sK0)),s('type.num.num',sK34(sK42(sK2,sK0),sK0)),s('type.num.num',sK35(sK42(sK2,sK0),sK0))))) ) | $spl6),
  inference(superposition,[],[f501,f134])).
fof(f1328,plain,(
  ( ! [X20] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X20))))) ) | $spl20),
  inference(forward_demodulation,[],[f1327,f191])).
fof(f1327,plain,(
  ( ! [X20] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X20)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1326,f191])).
fof(f1326,plain,(
  ( ! [X20] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X20)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1300,f191])).
fof(f1300,plain,(
  ( ! [X20] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X20)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0))))) ) | $spl20),
  inference(superposition,[],[f103,f191])).
fof(f1256,plain,(
  ( ! [X20] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X20))))) ) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1255,f150])).
fof(f1255,plain,(
  ( ! [X20] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X20))))) ) | $spl20),
  inference(forward_demodulation,[],[f1254,f191])).
fof(f1254,plain,(
  ( ! [X20] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X20)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1253,f191])).
fof(f1253,plain,(
  ( ! [X20] : (s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X20)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1228,f191])).
fof(f1228,plain,(
  ( ! [X20] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X20)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))))) ) | $spl20),
  inference(superposition,[],[f328,f191])).
fof(f1212,plain,(
  ( ! [X2,X0] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X2)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X2),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X0,'type.num.num')))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X2,'type.num.num')))))) ) | $spl44),
  inference(cnf_transformation,[],[f1212_D])).
fof(f1212_D,plain,(
  ( ! [X2,X0] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X2)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X2),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X0,'type.num.num')))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X2,'type.num.num')))))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f1198,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X2),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X0,'type.num.num')))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X2,'type.num.num'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X2))))) )),
  inference(resolution,[],[f1115,f80])).
fof(f80,plain,(
  ( ! [X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,sK46(X2,X1,X0))))) | ~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f59])).
fof(f1196,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X2)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X2),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X0,'type.num.num')))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X2,'type.num.num')))))) ) | $spl42),
  inference(cnf_transformation,[],[f1196_D])).
fof(f1196_D,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X2)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X2),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X0,'type.num.num')))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X2,'type.num.num')))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f1182,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X0))) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X1)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X2),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X0,'type.num.num')))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X2,'type.num.num'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X2))))) )),
  inference(resolution,[],[f1113,f80])).
fof(f128,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X1)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X1),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X1,'type.num.num')))))) ) | $spl0),
  inference(cnf_transformation,[],[f128_D])).
fof(f128_D,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X1)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X1),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X1,'type.num.num')))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f1074,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X1),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X1,'type.num.num'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X1))))) )),
  inference(subsumption_resolution,[],[f1044,f90])).
fof(f1044,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X1),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X1,'type.num.num'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X1))))) )),
  inference(superposition,[],[f80,f119])).
fof(f1036,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1035,f191])).
fof(f1035,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1034,f191])).
fof(f1034,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1033,f191])).
fof(f1033,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1022,f150])).
fof(f1022,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f79,f191])).
fof(f1032,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1031,f191])).
fof(f1031,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1030,f191])).
fof(f1030,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1029,f191])).
fof(f1029,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1020,f150])).
fof(f1020,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f191,f79])).
fof(f1000,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f964,f297])).
fof(f964,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl18),
  inference(backward_demodulation,[],[f816,f119])).
fof(f816,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) ) | $spl18),
  inference(superposition,[],[f598,f189])).
fof(f999,plain,(
  $false | $spl18),
  inference(trivial_inequality_removal,[],[f971])).
fof(f971,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl18),
  inference(superposition,[],[f117,f816])).
fof(f891,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl36),
  inference(cnf_transformation,[],[f891_D])).
fof(f891_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f893,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl38),
  inference(cnf_transformation,[],[f893_D])).
fof(f893_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f895,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl40),
  inference(cnf_transformation,[],[f895_D])).
fof(f895_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f899,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(forward_demodulation,[],[f898,f193])).
fof(f898,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(forward_demodulation,[],[f897,f193])).
fof(f897,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(forward_demodulation,[],[f896,f193])).
fof(f896,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(subsumption_resolution,[],[f879,f150])).
fof(f879,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl22),
  inference(superposition,[],[f79,f193])).
fof(f889,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(forward_demodulation,[],[f888,f193])).
fof(f888,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(forward_demodulation,[],[f887,f193])).
fof(f887,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(forward_demodulation,[],[f886,f193])).
fof(f886,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(subsumption_resolution,[],[f875,f150])).
fof(f875,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl22),
  inference(superposition,[],[f193,f79])).
fof(f189,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl18),
  inference(cnf_transformation,[],[f189_D])).
fof(f189_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f873,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11 | $spl21)),
  inference(subsumption_resolution,[],[f872,f150])).
fof(f872,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl21)),
  inference(forward_demodulation,[],[f871,f134])).
fof(f871,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | ($spl6 | $spl21)),
  inference(forward_demodulation,[],[f870,f134])).
fof(f870,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | ($spl6 | $spl21)),
  inference(forward_demodulation,[],[f869,f134])).
fof(f869,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | ($spl6 | $spl21)),
  inference(subsumption_resolution,[],[f867,f134])).
fof(f867,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | $spl21),
  inference(superposition,[],[f190,f79])).
fof(f864,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f863,f191])).
fof(f863,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f862,f191])).
fof(f862,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f861,f191])).
fof(f861,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f844,f150])).
fof(f844,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f79,f191])).
fof(f854,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f853,f191])).
fof(f853,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f852,f191])).
fof(f852,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f851,f191])).
fof(f851,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f842,f150])).
fof(f842,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f191,f79])).
fof(f830,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl24),
  inference(cnf_transformation,[],[f830_D])).
fof(f830_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f832,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl26),
  inference(cnf_transformation,[],[f832_D])).
fof(f832_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f834,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl28),
  inference(cnf_transformation,[],[f834_D])).
fof(f834_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f838,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(forward_demodulation,[],[f837,f189])).
fof(f837,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(forward_demodulation,[],[f836,f189])).
fof(f836,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(forward_demodulation,[],[f835,f189])).
fof(f835,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(subsumption_resolution,[],[f818,f150])).
fof(f818,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl18),
  inference(superposition,[],[f79,f189])).
fof(f828,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(forward_demodulation,[],[f827,f189])).
fof(f827,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(forward_demodulation,[],[f826,f189])).
fof(f826,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(forward_demodulation,[],[f825,f189])).
fof(f825,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(subsumption_resolution,[],[f815,f150])).
fof(f815,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.num.num',sK44('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0))),sK0)))) | $spl18),
  inference(superposition,[],[f189,f79])).
fof(f451,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X1),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X1,'type.num.num'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X1))))) )),
  inference(subsumption_resolution,[],[f421,f90])).
fof(f421,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X1),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X1,'type.num.num'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X1))))) )),
  inference(superposition,[],[f80,f119])).
fof(f372,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f371,f134])).
fof(f371,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f370,f134])).
fof(f370,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f369,f134])).
fof(f369,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(subsumption_resolution,[],[f358,f150])).
fof(f358,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl6),
  inference(superposition,[],[f79,f134])).
fof(f368,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f367,f134])).
fof(f367,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f366,f134])).
fof(f366,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f365,f134])).
fof(f365,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(subsumption_resolution,[],[f357,f150])).
fof(f357,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl6),
  inference(superposition,[],[f134,f79])).
fof(f132,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) | $spl4),
  inference(cnf_transformation,[],[f132_D])).
fof(f132_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f218,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))),
  inference(subsumption_resolution,[],[f211,f69])).
fof(f211,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',sK3)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))),
  inference(superposition,[],[f71,f79])).
fof(f342,plain,(
  $false | $spl4),
  inference(resolution,[],[f329,f71])).
fof(f329,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X2))))) ) | $spl4),
  inference(superposition,[],[f66,f132])).
fof(f241,plain,(
  $false | $spl2),
  inference(resolution,[],[f129,f71])).
fof(f153,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | $spl12),
  inference(cnf_transformation,[],[f153_D])).
fof(f153_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f155,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | $spl14),
  inference(cnf_transformation,[],[f155_D])).
fof(f155_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f157,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | $spl16),
  inference(cnf_transformation,[],[f157_D])).
fof(f157_D,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f237,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(forward_demodulation,[],[f236,f132])).
fof(f236,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(forward_demodulation,[],[f235,f132])).
fof(f235,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(forward_demodulation,[],[f234,f132])).
fof(f234,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(subsumption_resolution,[],[f223,f150])).
fof(f223,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | $spl4),
  inference(superposition,[],[f79,f132])).
fof(f233,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(forward_demodulation,[],[f232,f132])).
fof(f232,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(forward_demodulation,[],[f231,f132])).
fof(f231,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(forward_demodulation,[],[f230,f132])).
fof(f230,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(subsumption_resolution,[],[f221,f150])).
fof(f221,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | $spl4),
  inference(superposition,[],[f132,f79])).
fof(f219,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) | $spl7),
  inference(subsumption_resolution,[],[f218,f133])).
fof(f204,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X1),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X1,'type.num.num'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X1))))) )),
  inference(resolution,[],[f71,f80])).
fof(f203,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) | ($spl7 | $spl11)),
  inference(subsumption_resolution,[],[f202,f150])).
fof(f202,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | $spl7),
  inference(trivial_inequality_removal,[],[f200])).
fof(f200,plain,(
  s('type.asm.inst'(sK0),sK2) != s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | $spl7),
  inference(superposition,[],[f133,f79])).
fof(f197,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f196,f134])).
fof(f196,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f195,f134])).
fof(f195,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f194,f134])).
fof(f194,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(subsumption_resolution,[],[f177,f150])).
fof(f177,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl6),
  inference(superposition,[],[f79,f134])).
fof(f187,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f186,f134])).
fof(f186,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f185,f134])).
fof(f185,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f184,f134])).
fof(f184,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(subsumption_resolution,[],[f176,f150])).
fof(f176,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0))),sK0)))) | $spl6),
  inference(superposition,[],[f134,f79])).
fof(f175,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) | $spl11),
  inference(trivial_inequality_removal,[],[f174])).
fof(f174,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') != s('type.asm.inst'(sK0),'const.asm.Skip_0') | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) | $spl11),
  inference(superposition,[],[f150,f79])).
fof(f171,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f164,f69])).
fof(f164,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',sK3)))) | $spl10),
  inference(backward_demodulation,[],[f151,f71])).
fof(f151,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | $spl10),
  inference(cnf_transformation,[],[f151_D])).
fof(f151_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f160,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | $spl4),
  inference(forward_demodulation,[],[f159,f132])).
fof(f159,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | $spl4),
  inference(forward_demodulation,[],[f158,f132])).
fof(f158,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | $spl4),
  inference(forward_demodulation,[],[f140,f132])).
fof(f140,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | $spl4),
  inference(superposition,[],[f79,f132])).
fof(f149,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | $spl4),
  inference(forward_demodulation,[],[f148,f132])).
fof(f148,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | $spl4),
  inference(forward_demodulation,[],[f147,f132])).
fof(f147,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | $spl4),
  inference(forward_demodulation,[],[f138,f132])).
fof(f138,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK2) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.num.num',sK44('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.asm.addr'(sK0),sK45('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK41('const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))),sK0)))) | $spl4),
  inference(superposition,[],[f132,f79])).
fof(f130,plain,(
  s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))),
  inference(subsumption_resolution,[],[f121,f69])).
fof(f121,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.num.num',sK3)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK43(sK2,sK0)),s('type.num.num',sK44(sK2,sK0)),s('type.asm.addr'(sK0),sK45(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK42(sK2,sK0)))) | s('type.asm.inst'(sK0),sK2) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK40(sK2,sK0)),s('type.fcp.cart'(bool,sK0),sK41(sK2,sK0))))),
  inference(superposition,[],[f71,f79])).
fof(f114,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2))),s('type.num.num',X0)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),X1),s('type.num.num',sK3))),s('type.num.num',sK46(happ(s(fun('type.asm.inst'(sK0),fun('type.num.num',bool)),sK1),s('type.asm.inst'(sK0),sK2)),X1,'type.num.num'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.num.num',fun('type.num.num',bool)),X1))))) )),
  inference(resolution,[],[f71,f80])).
% SZS output end Proof for thm.stack_removeProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 105
% Passive clauses: 302
% Generated clauses: 2161
% Final active clauses: 53
% Final passive clauses: 131
% Input formulas: 20
% Initial clauses: 33
% 
% Selected by SInE selection: 17
% SInE iterations: 1
% 
% Duplicate literals: 7
% Trivial inequalities: 57
% Fw subsumption resolutions: 258
% Fw demodulations: 435
% Bw demodulations: 21
% 
% Simple tautologies: 4
% Forward subsumptions: 1029
% 
% Binary resolution: 135
% Forward superposition: 525
% Backward superposition: 602
% 
% Split clauses: 99
% Split components: 278
% SAT solver clauses: 116
% SAT solver unit clauses: 9
% SAT solver binary clauses: 10
% 
% Sat splits: 99
% Sat splitting refutations: 16
% 
% Memory used [KB]: 3454
% Time elapsed: 0.117 s
% ------------------------------
% ------------------------------
% Success in time 11.885 s
