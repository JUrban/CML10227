Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.ImplicitQueue
% (68114)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 100
% Passive clauses: 3848
% Generated clauses: 15266
% Final active clauses: 91
% Final passive clauses: 3568
% Input formulas: 21
% Initial clauses: 26
% 
% Duplicate literals: 691
% Trivial inequalities: 177
% Fw subsumption resolutions: 1733
% Fw demodulations: 920
% Bw demodulations: 3
% 
% Simple tautologies: 231
% Equational tautologies: 79
% Forward subsumptions: 6240
% Fw demodulations to eq. taut.: 1
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 202
% Factoring: 3
% Forward superposition: 5465
% Backward superposition: 5419
% Self superposition: 281
% Equality factoring: 200
% Equality resolution: 16
% 
% Split clauses: 413
% Split components: 851
% SAT solver clauses: 1120
% SAT solver unit clauses: 18
% SAT solver binary clauses: 189
% 
% Sat splits: 413
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 1115
% TWLsolver calls for satisfiability: 146
% 
% Memory used [KB]: 13304
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.ImplicitQueue
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ImplicitQueue
% SZS output start Proof for thm.ImplicitQueue
fof(f3194,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f3193,f2563,f2564,f92,f120,f70,f98,f96,f2714,f3170,f3086,f3087,f82,f112,f75,f105,f74,f104,f69,f97,f95])).
fof(f95,plain,(
  s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK1))) = s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK2))) | $spl0),
  inference(cnf_transformation,[],[f95_D])).
fof(f95_D,plain,(
  s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK1))) = s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK2))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f97,plain,(
  s('type.ImplicitQueue.times'(sK0),sK1) = s('type.ImplicitQueue.times'(sK0),sK2) | $spl2),
  inference(cnf_transformation,[],[f97_D])).
fof(f97_D,plain,(
  s('type.ImplicitQueue.times'(sK0),sK1) = s('type.ImplicitQueue.times'(sK0),sK2) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f69,plain,(
  s('type.ImplicitQueue.times'(sK0),sK1) = s('type.ImplicitQueue.times'(sK0),sK2) | s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK1))) = s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK2)))),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  (s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK1))) = s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK2))) | s('type.ImplicitQueue.times'(sK0),sK1) = s('type.ImplicitQueue.times'(sK0),sK2)) & (s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK1))) != s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK2))) | s('type.ImplicitQueue.times'(sK0),sK1) != s('type.ImplicitQueue.times'(sK0),sK2))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f64])).
fof(f64,plain,(
  ? [X0,X1,X2] : ((s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X1))) = s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X2))) | s('type.ImplicitQueue.times'(X0),X1) = s('type.ImplicitQueue.times'(X0),X2)) & (s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X1))) != s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X2))) | s('type.ImplicitQueue.times'(X0),X1) != s('type.ImplicitQueue.times'(X0),X2)))),
  inference(nnf_transformation,[],[f59])).
fof(f59,plain,(
  ? [X0,X1,X2] : (s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X1))) = s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X2))) <~> s('type.ImplicitQueue.times'(X0),X1) = s('type.ImplicitQueue.times'(X0),X2))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2] : (s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X1))) = s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X2))) <=> s('type.ImplicitQueue.times'(X0),X1) = s('type.ImplicitQueue.times'(X0),X2))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2] : (s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X1))) = s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X2))) <=> s('type.ImplicitQueue.times'(X0),X1) = s('type.ImplicitQueue.times'(X0),X2))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (s('type.ImplicitQueue.digit'(X6),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X6),X7))) = s('type.ImplicitQueue.digit'(X6),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X6),X8))) <=> s('type.ImplicitQueue.times'(X6),X7) = s('type.ImplicitQueue.times'(X6),X8))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (s('type.ImplicitQueue.digit'(X6),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X6),X7))) = s('type.ImplicitQueue.digit'(X6),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X6),X8))) <=> s('type.ImplicitQueue.times'(X6),X7) = s('type.ImplicitQueue.times'(X6),X8))),
  file('thm.ImplicitQueue.digit_|49||49||split|0','thm.ImplicitQueue.digit_|49||49||split|0')).
fof(f104,plain,(
  ( ! [X0,X1] : (s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X1))) = s('type.ImplicitQueue.digit'(X0),happ(s(fun('type.ImplicitQueue.times'(X0),'type.ImplicitQueue.digit'(X0)),'const.ImplicitQueue.One_0'),s('type.ImplicitQueue.times'(X0),X1)))) ) | $spl10),
  inference(cnf_transformation,[],[f104_D])).
fof(f104_D,plain,(
  ( ! [X0,X1] : (s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X1))) = s('type.ImplicitQueue.digit'(X0),happ(s(fun('type.ImplicitQueue.times'(X0),'type.ImplicitQueue.digit'(X0)),'const.ImplicitQueue.One_0'),s('type.ImplicitQueue.times'(X0),X1)))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f74,plain,(
  ( ! [X0,X1] : (s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X1))) = s('type.ImplicitQueue.digit'(X0),happ(s(fun('type.ImplicitQueue.times'(X0),'type.ImplicitQueue.digit'(X0)),'const.ImplicitQueue.One_0'),s('type.ImplicitQueue.times'(X0),X1)))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X1))) = s('type.ImplicitQueue.digit'(X0),happ(s(fun('type.ImplicitQueue.times'(X0),'type.ImplicitQueue.digit'(X0)),'const.ImplicitQueue.One_0'),s('type.ImplicitQueue.times'(X0),X1)))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ! [X0] : ! [X1] : s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X1))) = s('type.ImplicitQueue.digit'(X0),happ(s(fun('type.ImplicitQueue.times'(X0),'type.ImplicitQueue.digit'(X0)),'const.ImplicitQueue.One_0'),s('type.ImplicitQueue.times'(X0),X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X9] : s('type.ImplicitQueue.digit'(X6),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X6),X9))) = s('type.ImplicitQueue.digit'(X6),happ(s(fun('type.ImplicitQueue.times'(X6),'type.ImplicitQueue.digit'(X6)),'const.ImplicitQueue.One_0'),s('type.ImplicitQueue.times'(X6),X9)))),
  file('thm.ImplicitQueue.digit_|49||49||split|0','ARITY_0_1_const.ImplicitQueue.One')).
fof(f105,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))) ) | $spl12),
  inference(cnf_transformation,[],[f105_D])).
fof(f105_D,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f75,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X7,X10] : s(X6,X7) = s(X6,'const.ind_type.FCONS_3'(s(X6,X7),s(fun('type.num.num',X6),X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.ImplicitQueue.digit_|49||49||split|0','thm.ind_type.FCONS|split|0')).
fof(f112,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))) ) | $spl26),
  inference(cnf_transformation,[],[f112_D])).
fof(f112_D,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f82,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0] : ! [X1,X2,X3] : s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X9,X21,X22] : s(X6,'const.ind_type.FCONS_3'(s(X6,X9),s(fun('type.num.num',X6),X21),s('type.num.num',X22))) = s(X6,happ(s(fun('type.num.num',X6),happ(s(fun(fun('type.num.num',X6),fun('type.num.num',X6)),happ(s(fun(X6,fun(fun('type.num.num',X6),fun('type.num.num',X6))),'const.ind_type.FCONS_0'),s(X6,X9))),s(fun('type.num.num',X6),X21))),s('type.num.num',X22)))),
  file('thm.ImplicitQueue.digit_|49||49||split|0','ARITY_0_3_const.ind_type.FCONS')).
fof(f3087,plain,(
  ( ! [X4,X5] : (s('type.ImplicitQueue.times'(sK0),'const.ind_type.FCONS_3'(s('type.ImplicitQueue.times'(sK0),sK1),s(fun('type.num.num','type.ImplicitQueue.times'(sK0)),X4),s('type.num.num',X5))) = s('type.ImplicitQueue.times'(sK0),'const.ind_type.FCONS_3'(s('type.ImplicitQueue.times'(sK0),sK2),s(fun('type.num.num','type.ImplicitQueue.times'(sK0)),X4),s('type.num.num',X5)))) ) | $spl622),
  inference(cnf_transformation,[],[f3087_D])).
fof(f3087_D,plain,(
  ( ! [X4,X5] : (s('type.ImplicitQueue.times'(sK0),'const.ind_type.FCONS_3'(s('type.ImplicitQueue.times'(sK0),sK1),s(fun('type.num.num','type.ImplicitQueue.times'(sK0)),X4),s('type.num.num',X5))) = s('type.ImplicitQueue.times'(sK0),'const.ind_type.FCONS_3'(s('type.ImplicitQueue.times'(sK0),sK2),s(fun('type.num.num','type.ImplicitQueue.times'(sK0)),X4),s('type.num.num',X5)))) ) <=> ~$spl622),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl622])])).
fof(f3086,plain,(
  ( ! [X4,X5] : (s('type.ImplicitQueue.times'(sK0),'const.ind_type.FCONS_3'(s('type.ImplicitQueue.times'(sK0),sK1),s(fun('type.num.num','type.ImplicitQueue.times'(sK0)),X4),s('type.num.num',X5))) = s('type.ImplicitQueue.times'(sK0),'const.ind_type.FCONS_3'(s('type.ImplicitQueue.times'(sK0),sK2),s(fun('type.num.num','type.ImplicitQueue.times'(sK0)),X4),s('type.num.num',X5)))) ) | ($spl26 | $spl550)),
  inference(forward_demodulation,[],[f2977,f112])).
fof(f2977,plain,(
  ( ! [X4,X5] : (s('type.ImplicitQueue.times'(sK0),'const.ind_type.FCONS_3'(s('type.ImplicitQueue.times'(sK0),sK2),s(fun('type.num.num','type.ImplicitQueue.times'(sK0)),X4),s('type.num.num',X5))) = s('type.ImplicitQueue.times'(sK0),happ(s(fun('type.num.num','type.ImplicitQueue.times'(sK0)),happ(s(fun(fun('type.num.num','type.ImplicitQueue.times'(sK0)),fun('type.num.num','type.ImplicitQueue.times'(sK0))),happ(s(fun('type.ImplicitQueue.times'(sK0),fun(fun('type.num.num','type.ImplicitQueue.times'(sK0)),fun('type.num.num','type.ImplicitQueue.times'(sK0)))),'const.ind_type.FCONS_0'),s('type.ImplicitQueue.times'(sK0),sK1))),s(fun('type.num.num','type.ImplicitQueue.times'(sK0)),X4))),s('type.num.num',X5)))) ) | ($spl26 | $spl550)),
  inference(superposition,[],[f112,f2564])).
fof(f3170,plain,(
  $false | ($spl3 | $spl12 | $spl622)),
  inference(subsumption_resolution,[],[f3169,f98])).
fof(f3169,plain,(
  s('type.ImplicitQueue.times'(sK0),sK1) = s('type.ImplicitQueue.times'(sK0),sK2) | ($spl12 | $spl622)),
  inference(forward_demodulation,[],[f3145,f105])).
fof(f3145,plain,(
  ( ! [X2] : (s('type.ImplicitQueue.times'(sK0),sK2) = s('type.ImplicitQueue.times'(sK0),'const.ind_type.FCONS_3'(s('type.ImplicitQueue.times'(sK0),sK1),s(fun('type.num.num','type.ImplicitQueue.times'(sK0)),X2),s('type.num.num','const.num.|48|_0')))) ) | ($spl12 | $spl622)),
  inference(superposition,[],[f3087,f105])).
fof(f2714,plain,(
  s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK1))) = s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK2))) | ($spl10 | $spl550)),
  inference(forward_demodulation,[],[f2669,f104])).
fof(f2669,plain,(
  s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK2))) = s('type.ImplicitQueue.digit'(sK0),happ(s(fun('type.ImplicitQueue.times'(sK0),'type.ImplicitQueue.digit'(sK0)),'const.ImplicitQueue.One_0'),s('type.ImplicitQueue.times'(sK0),sK1))) | ($spl10 | $spl550)),
  inference(superposition,[],[f104,f2564])).
fof(f96,plain,(
  s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK1))) != s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK2))) | $spl1),
  inference(cnf_transformation,[],[f96_D])).
fof(f96_D,plain,(
  s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK1))) != s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK2))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f98,plain,(
  s('type.ImplicitQueue.times'(sK0),sK1) != s('type.ImplicitQueue.times'(sK0),sK2) | $spl3),
  inference(cnf_transformation,[],[f98_D])).
fof(f98_D,plain,(
  s('type.ImplicitQueue.times'(sK0),sK1) != s('type.ImplicitQueue.times'(sK0),sK2) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f70,plain,(
  s('type.ImplicitQueue.times'(sK0),sK1) != s('type.ImplicitQueue.times'(sK0),sK2) | s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK1))) != s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK2)))),
  inference(cnf_transformation,[],[f65])).
fof(f120,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun('type.ImplicitQueue.times'(X1),X0),X4),s('type.ImplicitQueue.times'(X1),X2))) = s(X0,'const.ImplicitQueue.digit_CASE_4'(s('type.ImplicitQueue.digit'(X1),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X1),X2))),s(X0,X3),s(fun('type.ImplicitQueue.times'(X1),X0),X4),s(fun('type.ImplicitQueue.times'(X1),fun('type.ImplicitQueue.times'(X1),X0)),X5)))) ) | $spl42),
  inference(cnf_transformation,[],[f120_D])).
fof(f120_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun('type.ImplicitQueue.times'(X1),X0),X4),s('type.ImplicitQueue.times'(X1),X2))) = s(X0,'const.ImplicitQueue.digit_CASE_4'(s('type.ImplicitQueue.digit'(X1),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X1),X2))),s(X0,X3),s(fun('type.ImplicitQueue.times'(X1),X0),X4),s(fun('type.ImplicitQueue.times'(X1),fun('type.ImplicitQueue.times'(X1),X0)),X5)))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f92,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun('type.ImplicitQueue.times'(X1),X0),X4),s('type.ImplicitQueue.times'(X1),X2))) = s(X0,'const.ImplicitQueue.digit_CASE_4'(s('type.ImplicitQueue.digit'(X1),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X1),X2))),s(X0,X3),s(fun('type.ImplicitQueue.times'(X1),X0),X4),s(fun('type.ImplicitQueue.times'(X1),fun('type.ImplicitQueue.times'(X1),X0)),X5)))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun('type.ImplicitQueue.times'(X1),X0),X4),s('type.ImplicitQueue.times'(X1),X2))) = s(X0,'const.ImplicitQueue.digit_CASE_4'(s('type.ImplicitQueue.digit'(X1),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X1),X2))),s(X0,X3),s(fun('type.ImplicitQueue.times'(X1),X0),X4),s(fun('type.ImplicitQueue.times'(X1),fun('type.ImplicitQueue.times'(X1),X0)),X5)))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : s(X0,happ(s(fun('type.ImplicitQueue.times'(X1),X0),X4),s('type.ImplicitQueue.times'(X1),X2))) = s(X0,'const.ImplicitQueue.digit_CASE_4'(s('type.ImplicitQueue.digit'(X1),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X1),X2))),s(X0,X3),s(fun('type.ImplicitQueue.times'(X1),X0),X4),s(fun('type.ImplicitQueue.times'(X1),fun('type.ImplicitQueue.times'(X1),X0)),X5)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X11,X6] : ! [X7,X12,X10,X13] : s(X11,happ(s(fun('type.ImplicitQueue.times'(X6),X11),X10),s('type.ImplicitQueue.times'(X6),X7))) = s(X11,'const.ImplicitQueue.digit_CASE_4'(s('type.ImplicitQueue.digit'(X6),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X6),X7))),s(X11,X12),s(fun('type.ImplicitQueue.times'(X6),X11),X10),s(fun('type.ImplicitQueue.times'(X6),fun('type.ImplicitQueue.times'(X6),X11)),X13)))),
  file('thm.ImplicitQueue.digit_|49||49||split|0','thm.ImplicitQueue.digit_case_def|split|1')).
fof(f2564,plain,(
  ( ! [X0,X1] : (s(X0,happ(s(fun('type.ImplicitQueue.times'(sK0),X0),X1),s('type.ImplicitQueue.times'(sK0),sK1))) = s(X0,happ(s(fun('type.ImplicitQueue.times'(sK0),X0),X1),s('type.ImplicitQueue.times'(sK0),sK2)))) ) | $spl550),
  inference(cnf_transformation,[],[f2564_D])).
fof(f2564_D,plain,(
  ( ! [X0,X1] : (s(X0,happ(s(fun('type.ImplicitQueue.times'(sK0),X0),X1),s('type.ImplicitQueue.times'(sK0),sK1))) = s(X0,happ(s(fun('type.ImplicitQueue.times'(sK0),X0),X1),s('type.ImplicitQueue.times'(sK0),sK2)))) ) <=> ~$spl550),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl550])])).
fof(f2563,plain,(
  ( ! [X0,X1] : (s(X0,happ(s(fun('type.ImplicitQueue.times'(sK0),X0),X1),s('type.ImplicitQueue.times'(sK0),sK1))) = s(X0,happ(s(fun('type.ImplicitQueue.times'(sK0),X0),X1),s('type.ImplicitQueue.times'(sK0),sK2)))) ) | ($spl0 | $spl42)),
  inference(forward_demodulation,[],[f2442,f120])).
fof(f2442,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,happ(s(fun('type.ImplicitQueue.times'(sK0),X0),X1),s('type.ImplicitQueue.times'(sK0),sK2))) = s(X0,'const.ImplicitQueue.digit_CASE_4'(s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK1))),s(X0,X2),s(fun('type.ImplicitQueue.times'(sK0),X0),X1),s(fun('type.ImplicitQueue.times'(sK0),fun('type.ImplicitQueue.times'(sK0),X0)),X3)))) ) | ($spl0 | $spl42)),
  inference(superposition,[],[f120,f95])).
fof(f3193,plain,(
  $false | ($spl1 | $spl2)),
  inference(trivial_inequality_removal,[],[f3192])).
fof(f3192,plain,(
  s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK1))) != s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),sK1))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f96,f97])).
% SZS output end Proof for thm.ImplicitQueue
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 48
% Passive clauses: 315
% Generated clauses: 3079
% Final active clauses: 40
% Final passive clauses: 249
% Input formulas: 21
% Initial clauses: 26
% 
% Duplicate literals: 148
% Trivial inequalities: 12
% Fw subsumption resolutions: 74
% Fw demodulations: 157
% Bw demodulations: 17
% Condensations: 272
% 
% Simple tautologies: 33
% Equational tautologies: 28
% Forward subsumptions: 1493
% Bw demodulations to eq. taut.: 7
% 
% Binary resolution: 87
% Factoring: 1
% Forward superposition: 982
% Backward superposition: 843
% Self superposition: 77
% Equality factoring: 50
% Equality resolution: 1
% 
% Split clauses: 6
% Split components: 12
% SAT solver clauses: 573
% SAT solver unit clauses: 39
% SAT solver binary clauses: 23
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 6
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 571
% TWLsolver calls for satisfiability: 110
% 
% Memory used [KB]: 5373
% Time elapsed: 0.162 s
% ------------------------------
% ------------------------------
% Success in time 0.8 s
