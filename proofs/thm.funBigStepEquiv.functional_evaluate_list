Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.funBigStepEquiv
% (55580)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 38
% Passive clauses: 773
% Generated clauses: 6305
% Final active clauses: 36
% Final passive clauses: 682
% Input formulas: 13
% Initial clauses: 16
% 
% Duplicate literals: 583
% Trivial inequalities: 75
% Fw subsumption resolutions: 884
% Fw demodulations: 7
% 
% Simple tautologies: 169
% Equational tautologies: 110
% Forward subsumptions: 2643
% 
% Binary resolution: 33
% Forward superposition: 2158
% Backward superposition: 1911
% Self superposition: 360
% Equality factoring: 326
% Equality resolution: 8
% 
% Split clauses: 365
% Split components: 732
% SAT solver clauses: 1113
% SAT solver unit clauses: 240
% SAT solver binary clauses: 383
% 
% Sat splits: 365
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1111
% TWLsolver calls for satisfiability: 34
% 
% Memory used [KB]: 2942
% Time elapsed: 0.640 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.funBigStepEquiv
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.funBigStepEquiv
% SZS output start Proof for thm.funBigStepEquiv
fof(f2197,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2141,f90,f46,f66,f45,f65,f168,f293,f81,f88,f42,f61,f59,f1391,f1146,f92,f538,f554,f1409,f77,f80,f49,f67,f51,f70,f43,f63,f1897,f1903,f41,f60,f58,f76,f79,f52,f69])).
fof(f69,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3)))) | s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) != s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2),s('type.semanticPrimitives.state'(X0),X4)))) ) | $spl14),
  inference(cnf_transformation,[],[f69_D])).
fof(f69_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3)))) | s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) != s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2),s('type.semanticPrimitives.state'(X0),X4)))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f52,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3)))) | s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) != s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2),s('type.semanticPrimitives.state'(X0),X4)))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3)))) | s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2),s('type.semanticPrimitives.state'(X0),X4)))) & (s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) != s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2),s('type.semanticPrimitives.state'(X0),X4))) | p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3))))))),
  inference(nnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3)))) <=> s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2),s('type.semanticPrimitives.state'(X0),X4))))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3)))) <=> s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2),s('type.semanticPrimitives.state'(X0),X4))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : ! [X11,X10,X9,X17] : (p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X11),s('type.semanticPrimitives.state'(X6),X17),s('type.list.list'('type.ast.exp'),X10),s('type.pair.prod'('type.semanticPrimitives.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X9)))) <=> s('type.pair.prod'('type.semanticPrimitives.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X9) = s('type.pair.prod'('type.semanticPrimitives.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X11),s('type.list.list'('type.ast.exp'),X10),s('type.semanticPrimitives.state'(X6),X17))))),
  file('thm.funBigStepEquiv.functional_evaluate_list','thm.interp.evaluate_run_eval_list')).
fof(f79,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) != s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X4),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2))) | p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3))))) ) | $spl28),
  inference(cnf_transformation,[],[f79_D])).
fof(f79_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) != s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X4),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2))) | p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f76,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) != s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X4),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2))) | p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3))))) ) | ($spl10 | $spl14)),
  inference(backward_demodulation,[],[f67,f69])).
fof(f58,plain,(
  s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))) = s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(sK0),sK2),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.list.list'('type.ast.exp'),sK4))) | $spl0),
  inference(cnf_transformation,[],[f58_D])).
fof(f58_D,plain,(
  s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))) = s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(sK0),sK2),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.list.list'('type.ast.exp'),sK4))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f60,plain,(
  p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3)))))) | $spl2),
  inference(cnf_transformation,[],[f60_D])).
fof(f60_D,plain,(
  p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f41,plain,(
  p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3)))))) | s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))) = s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(sK0),sK2),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.list.list'('type.ast.exp'),sK4)))),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  (s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))) = s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(sK0),sK2),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.list.list'('type.ast.exp'),sK4))) | p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))))))) & (s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))) != s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(sK0),sK2),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.list.list'('type.ast.exp'),sK4))) | ~p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f36])).
fof(f36,plain,(
  ? [X0,X1,X2,X3,X4,X5] : ((s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),X3))) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X2),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.list.list'('type.ast.exp'),X4))) | p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.list.list'('type.ast.exp'),X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),X3))))))) & (s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),X3))) != s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X2),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.list.list'('type.ast.exp'),X4))) | ~p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.list.list'('type.ast.exp'),X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),X3))))))))),
  inference(nnf_transformation,[],[f34])).
fof(f34,plain,(
  ? [X0,X1,X2,X3,X4,X5] : (s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),X3))) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X2),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.list.list'('type.ast.exp'),X4))) <~> p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.list.list'('type.ast.exp'),X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),X3)))))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : (s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),X3))) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X2),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.list.list'('type.ast.exp'),X4))) <=> p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.list.list'('type.ast.exp'),X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),X3)))))))),
  inference(flattening,[],[f15])).
fof(f15,plain,(
  ~! [X0] : ! [X1,X2,X3,X4,X5] : (s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),X3))) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X2),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.list.list'('type.ast.exp'),X4))) <=> p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.list.list'('type.ast.exp'),X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),X3)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10,X11] : (s('type.pair.prod'('type.semanticPrimitives.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X6),X7),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),X9))) = s('type.pair.prod'('type.semanticPrimitives.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X6),X8),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X11),s('type.list.list'('type.ast.exp'),X10))) <=> p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X11),s('type.semanticPrimitives.state'(X6),X8),s('type.list.list'('type.ast.exp'),X10),s('type.pair.prod'('type.semanticPrimitives.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X6),X7),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),X9)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10,X11] : (s('type.pair.prod'('type.semanticPrimitives.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X6),X7),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),X9))) = s('type.pair.prod'('type.semanticPrimitives.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X6),X8),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X11),s('type.list.list'('type.ast.exp'),X10))) <=> p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X11),s('type.semanticPrimitives.state'(X6),X8),s('type.list.list'('type.ast.exp'),X10),s('type.pair.prod'('type.semanticPrimitives.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X6),X7),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),X9)))))))),
  file('thm.funBigStepEquiv.functional_evaluate_list','thm.funBigStepEquiv.functional_evaluate_list')).
fof(f1903,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X0) != s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))) | p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X0))))) ) | $spl216),
  inference(cnf_transformation,[],[f1903_D])).
fof(f1903_D,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X0) != s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))) | p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X0))))) ) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f1897,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X0) != s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))) | p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X0))))) ) | ($spl0 | $spl28)),
  inference(superposition,[],[f79,f58])).
fof(f63,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f63_D])).
fof(f63_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f43,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.funBigStepEquiv.functional_evaluate_list',aHL_TRUTH)).
fof(f70,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2),s('type.semanticPrimitives.state'(X0),X4))) | ~p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3))))) ) | $spl16),
  inference(cnf_transformation,[],[f70_D])).
fof(f70_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2),s('type.semanticPrimitives.state'(X0),X4))) | ~p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f51,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2),s('type.semanticPrimitives.state'(X0),X4))) | ~p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f67,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X2),s('type.list.list'('type.ast.exp'),X3))) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X2),s('type.list.list'('type.ast.exp'),X3),s('type.semanticPrimitives.state'(X0),X1)))) ) | $spl10),
  inference(cnf_transformation,[],[f67_D])).
fof(f67_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X2),s('type.list.list'('type.ast.exp'),X3))) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X2),s('type.list.list'('type.ast.exp'),X3),s('type.semanticPrimitives.state'(X0),X1)))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f49,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X2),s('type.list.list'('type.ast.exp'),X3))) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X2),s('type.list.list'('type.ast.exp'),X3),s('type.semanticPrimitives.state'(X0),X1)))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1,X2,X3] : s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X2),s('type.list.list'('type.ast.exp'),X3))) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X2),s('type.list.list'('type.ast.exp'),X3),s('type.semanticPrimitives.state'(X0),X1)))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X2),s('type.list.list'('type.ast.exp'),X3))) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X2),s('type.list.list'('type.ast.exp'),X3),s('type.semanticPrimitives.state'(X0),X1)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X13] : ! [X8,X11,X14] : s('type.pair.prod'('type.semanticPrimitives.state'(X13),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X13),X8),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X11),s('type.list.list'('type.ast.exp'),X14))) = s('type.pair.prod'('type.semanticPrimitives.state'(X13),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.interp.run_eval_list_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X11),s('type.list.list'('type.ast.exp'),X14),s('type.semanticPrimitives.state'(X13),X8)))),
  file('thm.funBigStepEquiv.functional_evaluate_list','thm.funBigStepEquiv.evaluate_eq_run_eval_list|split|0')).
fof(f80,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3)))) | s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X4),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2)))) ) | $spl30),
  inference(cnf_transformation,[],[f80_D])).
fof(f80_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3)))) | s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X4),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2)))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f77,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3) = s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(X0),X4),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.list.list'('type.ast.exp'),X2))) | ~p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.state'(X0),X4),s('type.list.list'('type.ast.exp'),X2),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),X3))))) ) | ($spl10 | $spl16)),
  inference(backward_demodulation,[],[f67,f70])).
fof(f1409,plain,(
  $false | ($spl3 | $spl4 | $spl36)),
  inference(subsumption_resolution,[],[f1408,f63])).
fof(f1408,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl36)),
  inference(forward_demodulation,[],[f61,f92])).
fof(f554,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.bigStep.evaluate_list_5'(s(bool,X0),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3)))))) ) | $spl66),
  inference(cnf_transformation,[],[f554_D])).
fof(f554_D,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.bigStep.evaluate_list_5'(s(bool,X0),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3)))))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f538,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.bigStep.evaluate_list_5'(s(bool,X0),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3)))))) ) | ($spl32 | $spl52)),
  inference(duplicate_literal_removal,[],[f537])).
fof(f537,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.bigStep.evaluate_list_5'(s(bool,X0),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3)))))) ) | ($spl32 | $spl52)),
  inference(condensation,[],[f335])).
fof(f335,plain,(
  ( ! [X6,X8,X7] : (s(bool,X6) = s(bool,X7) | s(bool,X6) = s(bool,X8) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,'const.bigStep.evaluate_list_5'(s(bool,X6),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3)))))) ) | ($spl32 | $spl52)),
  inference(superposition,[],[f293,f88])).
fof(f92,plain,(
  s(bool,'T_0') = s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))))) | $spl36),
  inference(cnf_transformation,[],[f92_D])).
fof(f92_D,plain,(
  s(bool,'T_0') = s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f1146,plain,(
  s(bool,'T_0') = s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))))) | $spl66),
  inference(condensation,[],[f1145])).
fof(f1145,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3)))))) ) | $spl66),
  inference(trivial_inequality_removal,[],[f1133])).
fof(f1133,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,X0) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3)))))) ) | $spl66),
  inference(equality_factoring,[],[f554])).
fof(f1391,plain,(
  $false | ($spl1 | $spl4 | $spl30 | $spl36)),
  inference(subsumption_resolution,[],[f1390,f59])).
fof(f1390,plain,(
  s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))) = s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(sK0),sK2),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.list.list'('type.ast.exp'),sK4))) | ($spl4 | $spl30 | $spl36)),
  inference(subsumption_resolution,[],[f1362,f63])).
fof(f1362,plain,(
  ~p(s(bool,'T_0')) | s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))) = s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(sK0),sK2),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.list.list'('type.ast.exp'),sK4))) | ($spl30 | $spl36)),
  inference(superposition,[],[f80,f92])).
fof(f59,plain,(
  s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))) != s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(sK0),sK2),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.list.list'('type.ast.exp'),sK4))) | $spl1),
  inference(cnf_transformation,[],[f59_D])).
fof(f59_D,plain,(
  s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))) != s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(sK0),sK2),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.list.list'('type.ast.exp'),sK4))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f61,plain,(
  ~p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3)))))) | $spl3),
  inference(cnf_transformation,[],[f61_D])).
fof(f61_D,plain,(
  ~p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3)))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f42,plain,(
  ~p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3)))))) | s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))) != s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.funBigStep.evaluate_3'(s('type.semanticPrimitives.state'(sK0),sK2),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.list.list'('type.ast.exp'),sK4)))),
  inference(cnf_transformation,[],[f37])).
fof(f88,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl32),
  inference(cnf_transformation,[],[f88_D])).
fof(f88_D,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f81,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(superposition,[],[f66,f66])).
fof(f293,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,'const.bigStep.evaluate_list_5'(s(bool,X0),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | $spl52),
  inference(cnf_transformation,[],[f293_D])).
fof(f293_D,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,'const.bigStep.evaluate_list_5'(s(bool,X0),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f168,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,'const.bigStep.evaluate_list_5'(s(bool,X0),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl32 | $spl36)),
  inference(superposition,[],[f92,f88])).
fof(f65,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f65_D])).
fof(f65_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f45,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.funBigStepEquiv.functional_evaluate_list',aHL_FALSITY)).
fof(f66,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f66_D])).
fof(f66_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f46,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.funBigStepEquiv.functional_evaluate_list',aHL_BOOL_CASES)).
fof(f90,plain,(
  s(bool,'T_0') = s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))))) | ($spl2 | $spl7 | $spl8)),
  inference(subsumption_resolution,[],[f85,f65])).
fof(f85,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3))))) | ($spl2 | $spl8)),
  inference(superposition,[],[f60,f66])).
fof(f2141,plain,(
  p(s(bool,'const.bigStep.evaluate_list_5'(s(bool,'T_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.list.list'('type.ast.exp'),sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),sK3)))))) | $spl216),
  inference(equality_resolution,[],[f1903])).
% SZS output end Proof for thm.funBigStepEquiv
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 41
% Passive clauses: 146
% Generated clauses: 2224
% Final active clauses: 15
% Final passive clauses: 31
% Input formulas: 13
% Initial clauses: 16
% 
% Duplicate literals: 299
% Trivial inequalities: 45
% Fw subsumption resolutions: 162
% Fw demodulations: 34
% Bw demodulations: 82
% Condensations: 300
% 
% Simple tautologies: 60
% Equational tautologies: 25
% Forward subsumptions: 793
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 18
% Forward superposition: 449
% Backward superposition: 367
% Self superposition: 97
% Equality factoring: 76
% Equality resolution: 6
% 
% Split clauses: 50
% Split components: 100
% SAT solver clauses: 333
% SAT solver unit clauses: 23
% SAT solver binary clauses: 47
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 50
% Sat splitting refutations: 41
% 
% TWLsolver clauses: 324
% TWLsolver calls for satisfiability: 68
% 
% Memory used [KB]: 2174
% Time elapsed: 0.199 s
% ------------------------------
% ------------------------------
% Success in time 0.88 s
