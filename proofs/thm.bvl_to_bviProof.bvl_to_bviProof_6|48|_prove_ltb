Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvl_to_bviProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvl_to_bviProof
% SZS output start Proof for thm.bvl_to_bviProof
fof(f2255,plain,(
  $false),
  inference(equality_resolution,[],[f778])).
fof(f778,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',sK1),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',sK0),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) != s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',X0),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',X1),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0')))))) )),
  inference(superposition,[],[f74,f109])).
fof(f109,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',X1),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',X0),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),sK7(X1,X0)),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),sK8(X1,X0)),s('type.num.num',sK9(X1,X0))))))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1] : s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',X1),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',X0),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),sK7(X1,X0)),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),sK8(X1,X0)),s('type.num.num',sK9(X1,X0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7,sK8,sK9])],[f46])).
fof(f46,plain,(
  ! [X0,X1] : ? [X2,X3,X4] : s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',X1),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',X0),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),X3),s('type.num.num',X4)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X11,X12] : ? [X13,X14,X7] : s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',X12),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',X11),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),X13),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),X14),s('type.num.num',X7)))))),
  file('thm.bvl_to_bviProof.bvl_to_bviProof_6|48|_prove_ltb','thm.bvl_to_bviProof.bvl_to_bviProof_59_prove_ltb')).
fof(f74,plain,(
  ( ! [X4,X2,X3] : (s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',sK1),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',sK0),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) != s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),X3),s('type.num.num',X4)))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X2,X3,X4] : s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',sK1),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',sK0),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) != s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),X3),s('type.num.num',X4)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f48])).
fof(f48,plain,(
  ? [X0,X1] : ! [X2,X3,X4] : s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',X1),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',X0),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) != s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),X3),s('type.num.num',X4)))))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1] : ? [X2,X3,X4] : s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',X1),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',X0),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),X3),s('type.num.num',X4)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ? [X8,X9,X10] : s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',X7),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',X6),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),X9),s('type.num.num',X10)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ? [X8,X9,X10] : s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.bvl_to_bvi.compile_exps_2'(s('type.num.num',X7),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',X6),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))) = s('type.pair.prod'('type.list.list'('type.bvi.exp'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num')),'const.pair.,_2'(s('type.list.list'('type.bvi.exp'),X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvi.exp'))),X9),s('type.num.num',X10)))))),
  file('thm.bvl_to_bviProof.bvl_to_bviProof_6|48|_prove_ltb','thm.bvl_to_bviProof.bvl_to_bviProof_6|48|_prove_ltb')).
% SZS output end Proof for thm.bvl_to_bviProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 68
% Passive clauses: 328
% Generated clauses: 2111
% Final active clauses: 65
% Final passive clauses: 206
% Input formulas: 21
% Initial clauses: 37
% 
% Duplicate literals: 180
% Trivial inequalities: 139
% Fw subsumption resolutions: 140
% Fw demodulations: 85
% Bw demodulations: 3
% 
% Simple tautologies: 81
% Equational tautologies: 16
% Forward subsumptions: 1114
% 
% Binary resolution: 51
% Forward superposition: 793
% Backward superposition: 602
% Self superposition: 26
% Equality factoring: 28
% Equality resolution: 9
% 
% Split clauses: 53
% Split components: 111
% SAT solver clauses: 81
% SAT solver unit clauses: 4
% SAT solver binary clauses: 30
% 
% Sat splits: 53
% 
% TWLsolver clauses: 81
% TWLsolver calls for satisfiability: 27
% 
% Memory used [KB]: 1791
% Time elapsed: 0.047 s
% ------------------------------
% ------------------------------
% Success in time 0.045 s
