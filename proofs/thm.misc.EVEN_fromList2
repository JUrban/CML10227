Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.misc
% (141264)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 244
% Passive clauses: 4656
% Generated clauses: 29304
% Final active clauses: 187
% Final passive clauses: 3809
% Input formulas: 80
% Initial clauses: 127
% 
% Duplicate literals: 747
% Trivial inequalities: 521
% Fw subsumption resolutions: 2334
% Fw demodulations: 6036
% Bw demodulations: 34
% 
% Simple tautologies: 493
% Equational tautologies: 52
% Forward subsumptions: 14433
% Fw demodulations to eq. taut.: 5
% Bw demodulations to eq. taut.: 13
% 
% Binary resolution: 162
% Factoring: 1
% Forward superposition: 10112
% Backward superposition: 8729
% Self superposition: 266
% Equality factoring: 118
% Equality resolution: 45
% 
% Split clauses: 230
% Split components: 464
% SAT solver clauses: 481
% SAT solver unit clauses: 9
% SAT solver binary clauses: 95
% 
% Sat splits: 230
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 479
% TWLsolver calls for satisfiability: 125
% 
% Memory used [KB]: 25713
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.misc
% (141284)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 195
% Passive clauses: 1357
% Generated clauses: 18774
% Final active clauses: 171
% Final passive clauses: 1131
% Input formulas: 80
% Initial clauses: 127
% 
% Duplicate literals: 189
% Trivial inequalities: 286
% Fw subsumption resolutions: 1205
% Fw demodulations: 3973
% Bw demodulations: 55
% Condensations: 312
% Global subsumptions: 9
% 
% Simple tautologies: 260
% Equational tautologies: 12
% Forward subsumptions: 9310
% Fw demodulations to eq. taut.: 3
% 
% Binary resolution: 167
% Factoring: 1
% Forward superposition: 6659
% Backward superposition: 4162
% Self superposition: 162
% Equality factoring: 24
% Equality resolution: 35
% 
% Split clauses: 44
% Split components: 88
% SAT solver clauses: 1954
% SAT solver unit clauses: 180
% SAT solver binary clauses: 54
% SAT solver learnt clauses: 18
% 
% Sat splits: 44
% 
% TWLsolver clauses: 1918
% TWLsolver calls for satisfiability: 483
% 
% Memory used [KB]: 26993
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.misc
% (141316)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1147
% Passive clauses: 10949
% Generated clauses: 294097
% Final active clauses: 327
% Final passive clauses: 2334
% Input formulas: 80
% Initial clauses: 127
% Discarded non-redundant clauses: 91
% 
% Duplicate literals: 6617
% Trivial inequalities: 3699
% Fw subsumption resolutions: 17960
% Fw demodulations: 69320
% Bw demodulations: 7086
% Condensations: 11461
% Global subsumptions: 314
% 
% Simple tautologies: 2416
% Equational tautologies: 958
% Forward subsumptions: 169754
% Fw demodulations to eq. taut.: 178
% Bw demodulations to eq. taut.: 756
% 
% Unit resulting resolution: 12560
% Factoring: 1
% Forward superposition: 77775
% Backward superposition: 74282
% Self superposition: 831
% Equality factoring: 498
% Equality resolution: 193
% 
% Split clauses: 287
% Split components: 574
% SAT solver clauses: 12128
% SAT solver unit clauses: 1163
% SAT solver binary clauses: 5008
% 
% Sat splits: 287
% Sat splitting refutations: 289
% 
% Memory used [KB]: 96075
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.misc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.misc
% SZS output start Proof for thm.misc
fof(f19651,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f255,f256,f257,f258,f259,f296,f260,f262,f276,f294,f278,f279,f311,f312,f313,f314,f315,f317,f348,f318,f330,f347,f331,f332,f350,f389,f385,f377,f414,f417,f418,f419,f420,f421,f422,f424,f438,f468,f469,f470,f471,f472,f474,f475,f487,f514,f515,f516,f517,f518,f459,f519,f521,f535,f458,f562,f563,f668,f674,f682,f691,f726,f727,f303,f797,f798,f820,f821,f827,f945,f950,f958,f967,f297,f1024,f1025,f1026,f1059,f1028,f1063,f1065,f1055,f1054,f1119,f1120,f1121,f1122,f1123,f1124,f1125,f1160,f1153,f1152,f1161,f1179,f1180,f829,f1224,f1226,f1227,f1229,f1231,f1245,f1285,f1336,f1335,f1341,f1340,f1344,f1346,f1565,f1569,f1568,f1567,f1552,f1553,f1574,f1658,f1659,f1671,f1669,f1725,f1727,f1728,f1729,f1732,f1744,f2101,f2102,f2132,f2131,f2119,f2120,f2141,f2139,f2391,f2390,f2396,f2549,f2551,f2552,f2554,f2556,f2570,f2589,f2646,f2648,f2649,f2651,f2653,f2667,f2696,f2793,f2792,f2798,f2822,f2823,f2884,f2886,f2887,f2888,f2891,f2903,f3223,f3234,f3241,f3249,f3257,f3277,f3306,f3308,f3311,f3322,f3330,f3337,f3341,f3375,f2679,f2678,f3386,f2675,f2674,f3387,f2574,f2573,f3388,f3421,f3420,f3424,f745,f3429,f3430,f3431,f3432,f3433,f656,f3722,f3714,f3756,f3758,f4124,f4134,f4141,f4149,f4157,f4177,f4206,f4207,f4209,f4220,f4228,f4235,f4239,f4273,f4547,f4557,f4564,f4572,f4580,f4600,f4633,f4644,f4652,f4659,f4663,f4697,f3224,f4708,f4710,f4711,f4713,f4715,f4729,f4775,f4804,f4806,f4807,f4809,f4811,f4825,f4871,f6390,f6393,f6397,f6401,f6407,f6420,f6423,f6429,f6435,f6439,f6443,f6449,f6456,f6533,f6541,f6543,f6545,f6590,f6534,f6597,f6598,f6599,f6603,f6606,f6610,f6614,f6620,f6633,f6636,f6642,f6648,f6652,f6656,f6662,f6669,f2949,f6757,f6758,f1186,f6993,f6995,f6996,f6998,f6992,f7000,f7002,f6997,f7004,f7005,f7006,f7008,f7042,f7084,f7085,f7086,f7087,f7153,f7404,f7156,f7157,f7162,f7405,f7410,f7411,f7413,f7416,f7419,f7420,f7422,f7423,f7425,f7428,f7429,f7441,f7443,f7447,f7448,f7449,f7450,f7451,f7453,f7457,f7458,f7459,f7461,f7464,f7465,f7467,f7468,f7480,f7481,f7485,f7486,f7495,f7497,f7498,f7500,f7502,f7516,f6994,f8109,f7606,f7607,f3802,f3803,f3779,f3780,f305,f8114,f8116,f8117,f8118,f8121,f8133,f506,f8164,f8165,f8166,f8192,f8193,f744,f8389,f8391,f8392,f8393,f8396,f8408,f8412,f8414,f8415,f8417,f8419,f8433,f8438,f8440,f8441,f8443,f8445,f8459,f8464,f8466,f8467,f8469,f8471,f8485,f8497,f8498,f8690,f8710,f8711,f8717,f8720,f8523,f8524,f8535,f8536,f8733,f8539,f8540,f8736,f8735,f8543,f8544,f8739,f8601,f8602,f8802,f8804,f8805,f8806,f8809,f8821,f8826,f8828,f8829,f8831,f8833,f8847,f8853,f8855,f8856,f8857,f8860,f8872,f8878,f8880,f8881,f8883,f8885,f8899,f8911,f8912,f9094,f9110,f9111,f9116,f9118,f9117,f8937,f8938,f8949,f8950,f9127,f8732,f8957,f8958,f9128,f8738,f9165,f9166,f9017,f9018,f9228,f9738,f9739,f9761,f9759,f9762,f9763,f9906,f10019,f10018,f10023,f2394,f10164,f10176,f10180,f10184,f10258,f10261,f10266,f10271,f10343,f10346,f10600,f10602,f10603,f10635,f10641,f236,f220,f218,f10735,f199,f10734,f10736,f10738,f10739,f10741,f10743,f10751,f10888,f10892,f10898,f10903,f10907,f10923,f10769,f10930,f10932,f10933,f10935,f10937,f10945,f11025,f11043,f11045,f11046,f11047,f11050,f11060,f11311,f2796,f11660,f11661,f10345,f12090,f12092,f12093,f12094,f12097,f12107,f8631,f12111,f12113,f12114,f12116,f12118,f12127,f8644,f12131,f12133,f12134,f12136,f12138,f12147,f8651,f12151,f12153,f12154,f12156,f12158,f12167,f8658,f12178,f12179,f12373,f8691,f12389,f12390,f6546,f12396,f12397,f8719,f8718,f12205,f12206,f3309,f12281,f12282,f12531,f12533,f12534,f12535,f12538,f12548,f9047,f12553,f12555,f12556,f12558,f12560,f12569,f9057,f12574,f12576,f12577,f12578,f12581,f12591,f9063,f12597,f12599,f12600,f12602,f12604,f12613,f9072,f12624,f12625,f12808,f9095,f12820,f12821,f6544,f12651,f12652,f3307,f8683,f12868,f12869,f6542,f12729,f12730,f1572,f13128,f13130,f13131,f13132,f13135,f13145,f13188,f13346,f13348,f13349,f13351,f13353,f13362,f13413,f13572,f13574,f13575,f13577,f13579,f13588,f13953,f13963,f13971,f13979,f13989,f14011,f14064,f9181,f14065,f8776,f14070,f14075,f14083,f14091,f14103,f14126,f14136,f14449,f14459,f14467,f14475,f14485,f14507,f14561,f14562,f14563,f14564,f14569,f14574,f14582,f14590,f14602,f14625,f14635,f11349,f14648,f14650,f14651,f14652,f14655,f14665,f14762,f14763,f14791,f14858,f14859,f6764,f9904,f15265,f15267,f15362,f15364,f15904,f16082,f16083,f16084,f16085,f16175,f15266,f16475,f6999,f16655,f16656,f16657,f16658,f16748,f15363,f17118,f17119,f17170,f17171,f17173,f18606,f18628,f18630,f18633,f18635,f18638,f18691,f1783,f18713,f18629,f18714,f18631,f18716,f18634,f18717,f18636,f18719,f18639,f18720,f18723,f18725,f18728,f18730,f18744,f18748,f18758,f18765,f18769,f18772,f18774,f18778,f18786,f18787,f18813,f18816,f18818,f18821,f18823,f18837,f18841,f18850,f18749,f669,f18857,f18861,f18864,f18866,f18870,f18878,f13639,f18879,f18788,f19393,f19394,f7001,f19555,f19556,f1064,f7007,f19564,f19566,f19567,f295,f19569,f299,f19571,f298,f19580,f19621,f300,f19632])).
fof(f19632,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f19631,f237])).
fof(f237,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.misc.EVEN_fromList2',aHL_FALSITY)).
fof(f19631,plain,(
  p(s(bool,'F_0')) | $spl48),
  inference(forward_demodulation,[],[f19630,f271])).
fof(f271,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))),
  inference(resolution,[],[f173,f229])).
fof(f229,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f102])).
fof(f102,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.misc.EVEN_fromList2','thm.bool.EQ_CLAUSES|split|3')).
fof(f173,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2))))),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))) & ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f120])).
fof(f120,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.misc.fromList2_1'(s('type.list.list'(X0),X1)))))))) & ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))))),
  inference(ennf_transformation,[],[f83])).
fof(f83,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.misc.fromList2_1'(s('type.list.list'(X0),X1)))))))) => p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))))),
  inference(flattening,[],[f82])).
fof(f82,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.misc.fromList2_1'(s('type.list.list'(X0),X1)))))))) => p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.misc.fromList2_1'(s('type.list.list'(X6),X7)))))))) => p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.misc.fromList2_1'(s('type.list.list'(X6),X7)))))))) => p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X8)))))),
  file('thm.misc.EVEN_fromList2','thm.misc.EVEN_fromList2')).
fof(f19630,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | $spl48),
  inference(subsumption_resolution,[],[f19595,f238])).
fof(f238,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.misc.EVEN_fromList2',aHL_TRUTH)).
fof(f19595,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | $spl48),
  inference(superposition,[],[f9142,f328])).
fof(f328,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))),
  inference(resolution,[],[f172,f233])).
fof(f233,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f166])).
fof(f166,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.misc.EVEN_fromList2','thm.bool.EQ_CLAUSES|split|1')).
fof(f172,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1))))))))),
  inference(cnf_transformation,[],[f135])).
fof(f9142,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.misc.fromList2_1'(s('type.list.list'(X0),X1)))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2))))) ) | $spl48),
  inference(subsumption_resolution,[],[f9141,f202])).
fof(f202,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f146])).
fof(f146,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f130])).
fof(f130,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0] : ((p(s(bool,'F_0')) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X11] : ((p(s(bool,'F_0')) => p(s(bool,X11))) <=> p(s(bool,'T_0')))),
  file('thm.misc.EVEN_fromList2','thm.bool.IMP_CLAUSES|split|2')).
fof(f9141,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.misc.fromList2_1'(s('type.list.list'(X0),X1)))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2))))) ) | $spl48),
  inference(forward_demodulation,[],[f9140,f1346])).
fof(f9140,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.misc.fromList2_1'(s('type.list.list'(X0),X1)))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))) )),
  inference(subsumption_resolution,[],[f9139,f218])).
fof(f9139,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.misc.fromList2_1'(s('type.list.list'(X0),X1)))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f9138,f7511])).
fof(f7511,plain,(
  ( ! [X45,X44] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X44,X45),s(fun(X44,bool),'const.pred_set.EMPTY_0')))) )),
  inference(resolution,[],[f239,f229])).
fof(f239,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0,X1] : ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),
  inference(flattening,[],[f110])).
fof(f110,plain,(
  ! [X0] : ! [X1] : ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),
  inference(rectify,[],[f65])).
fof(f65,axiom,(
  ! [X6] : ! [X12] : ~p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),'const.pred_set.EMPTY_0'))))),
  file('thm.misc.EVEN_fromList2','thm.pred_set.NOT_IN_EMPTY')).
fof(f9138,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3('const.sptree.LN_0','const.num.|48|_0',X1,X0)),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0')))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.misc.fromList2_1'(s('type.list.list'(X0),X1)))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f8972,f240])).
fof(f240,plain,(
  ( ! [X0] : (s(fun('type.num.num',bool),'const.pred_set.EMPTY_0') = s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.sptree.LN_0')))) )),
  inference(cnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0] : s(fun('type.num.num',bool),'const.pred_set.EMPTY_0') = s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.sptree.LN_0')))),
  inference(rectify,[],[f66])).
fof(f66,axiom,(
  ! [X6] : s(fun('type.num.num',bool),'const.pred_set.EMPTY_0') = s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.sptree.LN_0')))),
  file('thm.misc.EVEN_fromList2','thm.sptree.domain_def|split|0')).
fof(f8972,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.misc.fromList2_1'(s('type.list.list'(X0),X1)))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3('const.sptree.LN_0','const.num.|48|_0',X1,X0)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.sptree.LN_0')))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f174,f241])).
fof(f241,plain,(
  ( ! [X0,X1] : (s('type.sptree.spt'(X0),'const.misc.fromList2_1'(s('type.list.list'(X0),X1))) = s('type.sptree.spt'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.sptree.spt'(X0)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X0,fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),happ(s(fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'(X0),'const.sptree.LN_0'))),s('type.list.list'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0,X1] : s('type.sptree.spt'(X0),'const.misc.fromList2_1'(s('type.list.list'(X0),X1))) = s('type.sptree.spt'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.sptree.spt'(X0)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X0,fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),happ(s(fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'(X0),'const.sptree.LN_0'))),s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f113])).
fof(f113,plain,(
  ! [X0] : ! [X1] : s('type.sptree.spt'(X0),'const.misc.fromList2_1'(s('type.list.list'(X0),X1))) = s('type.sptree.spt'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.sptree.spt'(X0)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X0,fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),happ(s(fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'(X0),'const.sptree.LN_0'))),s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X6] : ! [X7] : s('type.sptree.spt'(X6),'const.misc.fromList2_1'(s('type.list.list'(X6),X7))) = s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'(X6),'const.sptree.LN_0'))),s('type.list.list'(X6),X7)))))),
  file('thm.misc.EVEN_fromList2','thm.misc.fromList2_def')).
fof(f174,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.sptree.spt'(X0)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X0,fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),happ(s(fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X0),X3))),s('type.list.list'(X0),X1)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X3,X2,X1,X0)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),X3)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X3,X2,X1,X0)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),X3)))))) & ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X3,X2,X1,X0)))))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.sptree.spt'(X0)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X0,fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),happ(s(fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X0),X3))),s('type.list.list'(X0),X1)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3])],[f136])).
fof(f136,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | ? [X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),X3)))))) & ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5))))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.sptree.spt'(X0)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X0,fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),happ(s(fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X0),X3))),s('type.list.list'(X0),X1)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4))))))),
  inference(rectify,[],[f122])).
fof(f122,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),X3)))))) & ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4))))) | ! [X5] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.sptree.spt'(X0)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X0,fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),happ(s(fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X0),X3))),s('type.list.list'(X0),X1)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5))))))),
  inference(flattening,[],[f121])).
fof(f121,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),X3)))))) & ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4)))))) | ! [X5] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.sptree.spt'(X0)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X0,fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),happ(s(fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X0),X3))),s('type.list.list'(X0),X1)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5))))))),
  inference(ennf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0,X1,X2,X3] : ((p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) & ! [X4] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),X3)))))) => p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4)))))) => ! [X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.sptree.spt'(X0)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X0,fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),happ(s(fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X0),X3))),s('type.list.list'(X0),X1)))))))))) => p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5))))))),
  inference(flattening,[],[f84])).
fof(f84,plain,(
  ! [X0] : ! [X1,X2,X3] : ((p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) & ! [X4] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),X3)))))) => p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4)))))) => ! [X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.sptree.spt'(X0)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X0,fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),happ(s(fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X0),X3))),s('type.list.list'(X0),X1)))))))))) => p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5))))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : ! [X7,X8,X11] : ((p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X8)))) & ! [X12] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),X11)))))) => p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X12)))))) => ! [X12] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X12),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num',X8))),s('type.sptree.spt'(X6),X11))),s('type.list.list'(X6),X7)))))))))) => p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X12))))))),
  file('thm.misc.EVEN_fromList2','thm.misc.misc_43_prove_ltb')).
fof(f300,plain,(
  ( ! [X23] : (p(s(bool,X23))) ) | $spl12),
  inference(cnf_transformation,[],[f300_D])).
fof(f300_D,plain,(
  ( ! [X23] : (p(s(bool,X23))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f19621,plain,(
  ( ! [X10,X7,X5,X9] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X9),'const.misc.fromList2_1'(s('type.list.list'(X9),X10)))))))) ) | $spl234),
  inference(cnf_transformation,[],[f19621_D])).
fof(f19621_D,plain,(
  ( ! [X10,X7,X5,X9] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X9),'const.misc.fromList2_1'(s('type.list.list'(X9),X10)))))))) ) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f19580,plain,(
  ( ! [X74,X72,X71,X75,X73] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X71)))) | p(s(bool,X72)) | ~p(s(bool,X73)) | s(bool,X73) != s(bool,'const.bool.IN_2'(s('type.num.num',X71),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X74),'const.misc.fromList2_1'(s('type.list.list'(X74),X75)))))))) ) | $spl48),
  inference(resolution,[],[f9142,f251])).
fof(f251,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f182])).
fof(f182,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f138])).
fof(f138,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f123])).
fof(f123,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X12,X15,X13,X16] : ((s(bool,X12) = s(bool,X15) & (p(s(bool,X15)) => s(bool,X13) = s(bool,X16))) => ((p(s(bool,X12)) => p(s(bool,X13))) <=> (p(s(bool,X15)) => p(s(bool,X16)))))),
  file('thm.misc.EVEN_fromList2','thm.bool.IMP_CONG')).
fof(f298,plain,(
  ( ! [X14,X16] : (~p(s(bool,X14)) | s(bool,X14) != s(bool,X16)) ) | $spl8),
  inference(cnf_transformation,[],[f298_D])).
fof(f298_D,plain,(
  ( ! [X14,X16] : (~p(s(bool,X14)) | s(bool,X14) != s(bool,X16)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f19571,plain,(
  ( ! [X47,X45,X50,X48,X46,X49] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X45)))) | ~p(s(bool,X46)) | ~p(s(bool,X47)) | s(bool,X47) != s(bool,'const.bool.IN_2'(s('type.num.num',X45),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X48),'const.misc.fromList2_1'(s('type.list.list'(X48),X49))))))) | s(bool,X46) != s(bool,X50)) ) | $spl48),
  inference(resolution,[],[f9142,f185])).
fof(f185,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f139])).
fof(f299,plain,(
  ( ! [X25] : (~p(s(bool,X25))) ) | $spl10),
  inference(cnf_transformation,[],[f299_D])).
fof(f299_D,plain,(
  ( ! [X25] : (~p(s(bool,X25))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f19569,plain,(
  ( ! [X39,X37,X35,X38,X36,X40] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X35)))) | p(s(bool,X36)) | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X37) != s(bool,'const.bool.IN_2'(s('type.num.num',X35),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X39),'const.misc.fromList2_1'(s('type.list.list'(X39),X40)))))))) ) | $spl48),
  inference(resolution,[],[f9142,f184])).
fof(f184,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f139])).
fof(f295,plain,(
  ( ! [X10,X8] : (p(s(bool,X8)) | s(bool,X8) != s(bool,X10)) ) | $spl2),
  inference(cnf_transformation,[],[f295_D])).
fof(f295_D,plain,(
  ( ! [X10,X8] : (p(s(bool,X8)) | s(bool,X8) != s(bool,X10)) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f19567,plain,(
  ( ! [X28,X26,X24,X23,X27,X25] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X23)))) | p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,X26) | s(bool,X25) != s(bool,'const.bool.IN_2'(s('type.num.num',X23),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X27),'const.misc.fromList2_1'(s('type.list.list'(X27),X28)))))))) ) | $spl48),
  inference(resolution,[],[f9142,f183])).
fof(f183,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f139])).
fof(f19566,plain,(
  ( ! [X21,X19,X17,X22,X20,X18] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X17)))) | ~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X19) != s(bool,'const.bool.IN_2'(s('type.num.num',X17),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X20),'const.misc.fromList2_1'(s('type.list.list'(X20),X21))))))) | s(bool,X18) != s(bool,X22)) ) | $spl48),
  inference(resolution,[],[f9142,f181])).
fof(f181,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f139])).
fof(f19564,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,X8) | s(bool,X7) != s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X9),'const.misc.fromList2_1'(s('type.list.list'(X9),X10)))))))) ) | $spl48),
  inference(resolution,[],[f9142,f179])).
fof(f179,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f139])).
fof(f7007,plain,(
  ( ! [X37,X35,X34] : (s(bool,X37) = s(bool,'const.bool.IN_2'(s(X34,X35),s(fun(X34,bool),'const.pred_set.EMPTY_0'))) | s(bool,'T_0') = s(bool,X37)) ) | $spl122),
  inference(cnf_transformation,[],[f7007_D])).
fof(f7007_D,plain,(
  ( ! [X37,X35,X34] : (s(bool,X37) = s(bool,'const.bool.IN_2'(s(X34,X35),s(fun(X34,bool),'const.pred_set.EMPTY_0'))) | s(bool,'T_0') = s(bool,X37)) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f1064,plain,(
  ( ! [X25] : (s(bool,'T_0') != s(bool,X25)) ) | $spl40),
  inference(cnf_transformation,[],[f1064_D])).
fof(f1064_D,plain,(
  ( ! [X25] : (s(bool,'T_0') != s(bool,X25)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f19556,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,'T_0') != s(bool,X50) | s(bool,'T_0') = s(bool,X51) | s(bool,X51) = s(bool,'const.bool.IN_2'(s(X48,X49),s(fun(X48,bool),'const.pred_set.EMPTY_0')))) ) | ($spl82 | $spl192)),
  inference(subsumption_resolution,[],[f19515,f10943])).
fof(f10943,plain,(
  ( ! [X39] : (s(bool,'F_0') != s(bool,X39) | s(bool,'T_0') != s(bool,X39)) )),
  inference(resolution,[],[f228,f232])).
fof(f232,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f166])).
fof(f228,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f164])).
fof(f19515,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,'T_0') != s(bool,X50) | s(bool,'F_0') = s(bool,X50) | s(bool,'T_0') = s(bool,X51) | s(bool,X51) = s(bool,'const.bool.IN_2'(s(X48,X49),s(fun(X48,bool),'const.pred_set.EMPTY_0')))) ) | ($spl82 | $spl192)),
  inference(superposition,[],[f14725,f2901])).
fof(f2901,plain,(
  ( ! [X61,X60] : (s(bool,'T_0') = s(bool,X60) | s(bool,X60) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) ) | $spl82),
  inference(resolution,[],[f2823,f233])).
fof(f14725,plain,(
  ( ! [X59,X57,X58] : (s(bool,X59) != s(bool,'const.bool.IN_2'(s(X57,X58),s(fun(X57,bool),'const.pred_set.EMPTY_0'))) | s(bool,'F_0') = s(bool,X59)) ) | $spl192),
  inference(subsumption_resolution,[],[f14701,f237])).
fof(f14701,plain,(
  ( ! [X59,X57,X58] : (p(s(bool,'F_0')) | s(bool,X59) != s(bool,'const.bool.IN_2'(s(X57,X58),s(fun(X57,bool),'const.pred_set.EMPTY_0'))) | s(bool,'F_0') = s(bool,X59)) ) | $spl192),
  inference(superposition,[],[f11349,f7511])).
fof(f19555,plain,(
  ( ! [X39,X37,X38,X36] : (s(bool,'T_0') != s(bool,X38) | s(bool,X39) = s(bool,'const.bool.IN_2'(s(X36,X37),s(fun(X36,bool),'const.pred_set.EMPTY_0'))) | s(bool,'T_0') = s(bool,X39)) ) | ($spl82 | $spl192)),
  inference(subsumption_resolution,[],[f19512,f10943])).
fof(f19512,plain,(
  ( ! [X39,X37,X38,X36] : (s(bool,'T_0') != s(bool,X38) | s(bool,'F_0') = s(bool,X38) | s(bool,X39) = s(bool,'const.bool.IN_2'(s(X36,X37),s(fun(X36,bool),'const.pred_set.EMPTY_0'))) | s(bool,'T_0') = s(bool,X39)) ) | ($spl82 | $spl192)),
  inference(superposition,[],[f14725,f2901])).
fof(f7001,plain,(
  ( ! [X37] : (s(bool,'T_0') = s(bool,X37)) ) | $spl118),
  inference(cnf_transformation,[],[f7001_D])).
fof(f7001_D,plain,(
  ( ! [X37] : (s(bool,'T_0') = s(bool,X37)) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f19394,plain,(
  ( ! [X39,X41,X42,X40] : (s(bool,X39) = s(bool,'const.bool.IN_2'(s(X41,X42),s(fun(X41,bool),'const.pred_set.EMPTY_0'))) | s(bool,'T_0') = s(bool,X40) | s(bool,'T_0') = s(bool,X39)) ) | $spl82),
  inference(subsumption_resolution,[],[f19336,f250])).
fof(f250,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.misc.EVEN_fromList2',aHL_BOOL_CASES)).
fof(f19336,plain,(
  ( ! [X39,X41,X42,X40] : (s(bool,'F_0') != s(bool,X40) | s(bool,X39) = s(bool,'const.bool.IN_2'(s(X41,X42),s(fun(X41,bool),'const.pred_set.EMPTY_0'))) | s(bool,'T_0') = s(bool,X40) | s(bool,'T_0') = s(bool,X39)) ) | $spl82),
  inference(superposition,[],[f13194,f2901])).
fof(f13194,plain,(
  ( ! [X54,X55,X53] : (s(bool,'F_0') != s(bool,X55) | s(bool,X55) = s(bool,'const.bool.IN_2'(s(X53,X54),s(fun(X53,bool),'const.pred_set.EMPTY_0')))) )),
  inference(subsumption_resolution,[],[f13177,f237])).
fof(f13177,plain,(
  ( ! [X54,X55,X53] : (p(s(bool,'F_0')) | s(bool,X55) = s(bool,'const.bool.IN_2'(s(X53,X54),s(fun(X53,bool),'const.pred_set.EMPTY_0'))) | s(bool,'F_0') != s(bool,X55)) )),
  inference(superposition,[],[f10938,f7511])).
fof(f10938,plain,(
  ( ! [X33,X32] : (p(s(bool,X33)) | s(bool,X32) = s(bool,X33) | s(bool,'F_0') != s(bool,X32)) )),
  inference(resolution,[],[f228,f192])).
fof(f192,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f127])).
fof(f127,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X9,X10] : ((p(s(bool,X9)) => p(s(bool,X10))) => ((p(s(bool,X10)) => p(s(bool,X9))) => s(bool,X9) = s(bool,X10)))),
  file('thm.misc.EVEN_fromList2','thm.bool.IMP_ANTISYM_AX')).
fof(f19393,plain,(
  ( ! [X37,X35,X38,X36] : (s(bool,X35) = s(bool,'const.bool.IN_2'(s(X37,X38),s(fun(X37,bool),'const.pred_set.EMPTY_0'))) | s(bool,'T_0') = s(bool,X35) | s(bool,'T_0') = s(bool,X36)) ) | $spl82),
  inference(subsumption_resolution,[],[f19335,f250])).
fof(f19335,plain,(
  ( ! [X37,X35,X38,X36] : (s(bool,'F_0') != s(bool,X36) | s(bool,X35) = s(bool,'const.bool.IN_2'(s(X37,X38),s(fun(X37,bool),'const.pred_set.EMPTY_0'))) | s(bool,'T_0') = s(bool,X35) | s(bool,'T_0') = s(bool,X36)) ) | $spl82),
  inference(superposition,[],[f13194,f2901])).
fof(f18788,plain,(
  ( ! [X261,X263,X264] : (s(bool,X261) = s(bool,X263) | s(bool,'F_0') = s(bool,X264) | s(bool,X261) = s(bool,X264) | p(s(bool,X263))) ) | $spl232),
  inference(cnf_transformation,[],[f18788_D])).
fof(f18788_D,plain,(
  ( ! [X261,X263,X264] : (s(bool,X261) = s(bool,X263) | s(bool,'F_0') = s(bool,X264) | s(bool,X261) = s(bool,X264) | p(s(bool,X263))) ) <=> ~$spl232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl232])])).
fof(f18879,plain,(
  ( ! [X261,X263,X262,X264] : (p(s(bool,X262)) | s(bool,X261) = s(bool,X263) | p(s(bool,X263)) | s(bool,X261) = s(bool,X264) | s(bool,'F_0') = s(bool,X264)) )),
  inference(subsumption_resolution,[],[f18245,f229])).
fof(f18245,plain,(
  ( ! [X261,X263,X262,X264] : (s(bool,'F_0') != s(bool,X262) | p(s(bool,X262)) | s(bool,X261) = s(bool,X263) | p(s(bool,X263)) | s(bool,X261) = s(bool,X264) | s(bool,'F_0') = s(bool,X264)) )),
  inference(superposition,[],[f1232,f13585])).
fof(f13585,plain,(
  ( ! [X52,X53] : (s(bool,X52) = s(bool,X53) | s(bool,'F_0') = s(bool,X52) | s(bool,'F_0') = s(bool,X53)) )),
  inference(resolution,[],[f11051,f229])).
fof(f11051,plain,(
  ( ! [X33,X32] : (~p(s(bool,X33)) | s(bool,X32) = s(bool,X33) | s(bool,'F_0') = s(bool,X32)) )),
  inference(resolution,[],[f229,f195])).
fof(f195,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f128])).
fof(f1232,plain,(
  ( ! [X41,X42,X40] : (s(bool,X40) != s(bool,X41) | p(s(bool,X40)) | s(bool,X41) = s(bool,X42) | p(s(bool,X42))) )),
  inference(resolution,[],[f277,f192])).
fof(f277,plain,(
  ( ! [X37,X36] : (~p(s(bool,X36)) | p(s(bool,X37)) | s(bool,X36) != s(bool,X37)) )),
  inference(resolution,[],[f173,f251])).
fof(f13639,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) != s(bool,X3) | ~p(s(bool,X3)) | s(bool,'F_0') = s(bool,X0)) ) | $spl198),
  inference(cnf_transformation,[],[f13639_D])).
fof(f13639_D,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) != s(bool,X3) | ~p(s(bool,X3)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f18878,plain,(
  ( ! [X243,X244,X242,X245] : (p(s(bool,X243)) | ~p(s(bool,X244)) | s(bool,X242) != s(bool,X244) | s(bool,X242) = s(bool,X245) | s(bool,'F_0') = s(bool,X245)) )),
  inference(subsumption_resolution,[],[f18240,f237])).
fof(f18240,plain,(
  ( ! [X243,X244,X242,X245] : (p(s(bool,'F_0')) | p(s(bool,X243)) | ~p(s(bool,X244)) | s(bool,X242) != s(bool,X244) | s(bool,X242) = s(bool,X245) | s(bool,'F_0') = s(bool,X245)) )),
  inference(superposition,[],[f251,f13585])).
fof(f18870,plain,(
  ( ! [X158,X156,X159,X157,X155] : (~p(s(bool,X156)) | ~p(s(bool,X157)) | s(bool,X155) != s(bool,X157) | s(bool,X156) != s(bool,X158) | s(bool,X155) = s(bool,X159) | s(bool,'F_0') = s(bool,X159)) )),
  inference(subsumption_resolution,[],[f18208,f237])).
fof(f18208,plain,(
  ( ! [X158,X156,X159,X157,X155] : (p(s(bool,'F_0')) | ~p(s(bool,X156)) | ~p(s(bool,X157)) | s(bool,X155) != s(bool,X157) | s(bool,X156) != s(bool,X158) | s(bool,X155) = s(bool,X159) | s(bool,'F_0') = s(bool,X159)) )),
  inference(superposition,[],[f185,f13585])).
fof(f18866,plain,(
  ( ! [X118,X116,X119,X117,X115] : (p(s(bool,X116)) | ~p(s(bool,X117)) | ~p(s(bool,X118)) | s(bool,X115) != s(bool,X117) | s(bool,X115) = s(bool,X119) | s(bool,'F_0') = s(bool,X119)) )),
  inference(subsumption_resolution,[],[f18200,f237])).
fof(f18200,plain,(
  ( ! [X118,X116,X119,X117,X115] : (p(s(bool,'F_0')) | p(s(bool,X116)) | ~p(s(bool,X117)) | ~p(s(bool,X118)) | s(bool,X115) != s(bool,X117) | s(bool,X115) = s(bool,X119) | s(bool,'F_0') = s(bool,X119)) )),
  inference(superposition,[],[f184,f13585])).
fof(f18864,plain,(
  ( ! [X94,X92,X90,X93,X91] : (p(s(bool,X91)) | ~p(s(bool,X92)) | s(bool,X91) != s(bool,X93) | s(bool,X90) != s(bool,X92) | s(bool,X90) = s(bool,X94) | s(bool,'F_0') = s(bool,X94)) )),
  inference(subsumption_resolution,[],[f18195,f237])).
fof(f18195,plain,(
  ( ! [X94,X92,X90,X93,X91] : (p(s(bool,'F_0')) | p(s(bool,X91)) | ~p(s(bool,X92)) | s(bool,X91) != s(bool,X93) | s(bool,X90) != s(bool,X92) | s(bool,X90) = s(bool,X94) | s(bool,'F_0') = s(bool,X94)) )),
  inference(superposition,[],[f183,f13585])).
fof(f18861,plain,(
  ( ! [X59,X57,X58,X56,X55] : (~p(s(bool,X56)) | ~p(s(bool,X57)) | s(bool,X55) != s(bool,X57) | s(bool,X56) != s(bool,X58) | s(bool,X55) = s(bool,X59) | s(bool,'F_0') = s(bool,X59)) )),
  inference(subsumption_resolution,[],[f18188,f237])).
fof(f18188,plain,(
  ( ! [X59,X57,X58,X56,X55] : (p(s(bool,'F_0')) | ~p(s(bool,X56)) | ~p(s(bool,X57)) | s(bool,X55) != s(bool,X57) | s(bool,X56) != s(bool,X58) | s(bool,X55) = s(bool,X59) | s(bool,'F_0') = s(bool,X59)) )),
  inference(superposition,[],[f181,f13585])).
fof(f18857,plain,(
  ( ! [X24,X23,X21,X22,X20] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X20) != s(bool,X22) | s(bool,X20) = s(bool,X24) | s(bool,'F_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f18181,f237])).
fof(f18181,plain,(
  ( ! [X24,X23,X21,X22,X20] : (p(s(bool,'F_0')) | p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X20) != s(bool,X22) | s(bool,X20) = s(bool,X24) | s(bool,'F_0') = s(bool,X24)) )),
  inference(superposition,[],[f179,f13585])).
fof(f669,plain,(
  ( ! [X22] : (s(bool,'F_0') != s(bool,X22)) ) | $spl32),
  inference(cnf_transformation,[],[f669_D])).
fof(f669_D,plain,(
  ( ! [X22] : (s(bool,'F_0') != s(bool,X22)) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f18749,plain,(
  ( ! [X310,X312] : (s(bool,'T_0') != s(bool,X310) | s(bool,'F_0') = s(bool,X312) | s(bool,X310) = s(bool,X312)) ) | $spl230),
  inference(cnf_transformation,[],[f18749_D])).
fof(f18749_D,plain,(
  ( ! [X310,X312] : (s(bool,'T_0') != s(bool,X310) | s(bool,'F_0') = s(bool,X312) | s(bool,X310) = s(bool,X312)) ) <=> ~$spl230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl230])])).
fof(f18850,plain,(
  ( ! [X350,X349,X348] : (s(bool,'T_0') != s(bool,X348) | s(bool,'F_0') != s(bool,X349) | s(bool,X348) = s(bool,X350) | s(bool,'F_0') = s(bool,X350)) ) | $spl86),
  inference(subsumption_resolution,[],[f18162,f10943])).
fof(f18162,plain,(
  ( ! [X350,X349,X348] : (s(bool,'T_0') != s(bool,X348) | s(bool,'F_0') != s(bool,X349) | s(bool,'T_0') = s(bool,X349) | s(bool,X348) = s(bool,X350) | s(bool,'F_0') = s(bool,X350)) ) | $spl86),
  inference(superposition,[],[f4822,f13585])).
fof(f4822,plain,(
  ( ! [X62,X63] : (s(bool,'T_0') != s(bool,X63) | s(bool,X62) != s(bool,X63) | s(bool,'T_0') = s(bool,X62)) ) | $spl86),
  inference(resolution,[],[f3224,f232])).
fof(f18841,plain,(
  ( ! [X310,X312,X311] : (s(bool,'T_0') != s(bool,X310) | p(s(bool,X311)) | s(bool,X310) = s(bool,X312) | s(bool,'F_0') = s(bool,X312)) )),
  inference(subsumption_resolution,[],[f18150,f229])).
fof(f18150,plain,(
  ( ! [X310,X312,X311] : (s(bool,'T_0') != s(bool,X310) | s(bool,'F_0') != s(bool,X311) | p(s(bool,X311)) | s(bool,X310) = s(bool,X312) | s(bool,'F_0') = s(bool,X312)) )),
  inference(superposition,[],[f1242,f13585])).
fof(f1242,plain,(
  ( ! [X62,X63] : (s(bool,'T_0') != s(bool,X63) | s(bool,X62) != s(bool,X63) | p(s(bool,X62))) )),
  inference(resolution,[],[f277,f232])).
fof(f18837,plain,(
  ( ! [X285,X283,X284,X286] : (s(bool,X283) != s(bool,X284) | p(s(bool,X285)) | ~p(s(bool,X284)) | s(bool,X283) = s(bool,X286) | s(bool,'F_0') = s(bool,X286)) )),
  inference(subsumption_resolution,[],[f18143,f237])).
fof(f18143,plain,(
  ( ! [X285,X283,X284,X286] : (s(bool,X283) != s(bool,X284) | p(s(bool,X285)) | ~p(s(bool,X284)) | p(s(bool,'F_0')) | s(bool,X283) = s(bool,X286) | s(bool,'F_0') = s(bool,X286)) )),
  inference(superposition,[],[f251,f13585])).
fof(f18823,plain,(
  ( ! [X196,X194,X192,X195,X193] : (s(bool,X192) != s(bool,X193) | ~p(s(bool,X194)) | ~p(s(bool,X193)) | s(bool,X194) != s(bool,X195) | s(bool,X192) = s(bool,X196) | s(bool,'F_0') = s(bool,X196)) )),
  inference(subsumption_resolution,[],[f18110,f237])).
fof(f18110,plain,(
  ( ! [X196,X194,X192,X195,X193] : (s(bool,X192) != s(bool,X193) | p(s(bool,'F_0')) | ~p(s(bool,X194)) | ~p(s(bool,X193)) | s(bool,X194) != s(bool,X195) | s(bool,X192) = s(bool,X196) | s(bool,'F_0') = s(bool,X196)) )),
  inference(superposition,[],[f185,f13585])).
fof(f18821,plain,(
  ( ! [X158,X161,X159,X157,X160] : (s(bool,X157) != s(bool,X158) | p(s(bool,X159)) | ~p(s(bool,X158)) | ~p(s(bool,X160)) | s(bool,X157) = s(bool,X161) | s(bool,'F_0') = s(bool,X161)) )),
  inference(subsumption_resolution,[],[f18103,f237])).
fof(f18103,plain,(
  ( ! [X158,X161,X159,X157,X160] : (s(bool,X157) != s(bool,X158) | p(s(bool,X159)) | ~p(s(bool,X158)) | ~p(s(bool,X160)) | p(s(bool,'F_0')) | s(bool,X157) = s(bool,X161) | s(bool,'F_0') = s(bool,X161)) )),
  inference(superposition,[],[f184,f13585])).
fof(f18818,plain,(
  ( ! [X125,X123,X126,X124,X122] : (s(bool,X122) != s(bool,X123) | p(s(bool,X124)) | ~p(s(bool,X123)) | s(bool,X124) != s(bool,X125) | s(bool,X122) = s(bool,X126) | s(bool,'F_0') = s(bool,X126)) )),
  inference(subsumption_resolution,[],[f18096,f237])).
fof(f18096,plain,(
  ( ! [X125,X123,X126,X124,X122] : (s(bool,X122) != s(bool,X123) | p(s(bool,X124)) | ~p(s(bool,X123)) | p(s(bool,'F_0')) | s(bool,X124) != s(bool,X125) | s(bool,X122) = s(bool,X126) | s(bool,'F_0') = s(bool,X126)) )),
  inference(superposition,[],[f183,f13585])).
fof(f18816,plain,(
  ( ! [X101,X99,X97,X100,X98] : (s(bool,X97) != s(bool,X98) | ~p(s(bool,X99)) | ~p(s(bool,X98)) | s(bool,X99) != s(bool,X100) | s(bool,X97) = s(bool,X101) | s(bool,'F_0') = s(bool,X101)) )),
  inference(subsumption_resolution,[],[f18091,f237])).
fof(f18091,plain,(
  ( ! [X101,X99,X97,X100,X98] : (s(bool,X97) != s(bool,X98) | p(s(bool,'F_0')) | ~p(s(bool,X99)) | ~p(s(bool,X98)) | s(bool,X99) != s(bool,X100) | s(bool,X97) = s(bool,X101) | s(bool,'F_0') = s(bool,X101)) )),
  inference(superposition,[],[f181,f13585])).
fof(f18813,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s(bool,X47) != s(bool,X48) | p(s(bool,X49)) | ~p(s(bool,X48)) | s(bool,X49) != s(bool,X50) | s(bool,X47) = s(bool,X51) | s(bool,'F_0') = s(bool,X51)) )),
  inference(subsumption_resolution,[],[f18081,f237])).
fof(f18081,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s(bool,X47) != s(bool,X48) | p(s(bool,X49)) | ~p(s(bool,X48)) | p(s(bool,'F_0')) | s(bool,X49) != s(bool,X50) | s(bool,X47) = s(bool,X51) | s(bool,'F_0') = s(bool,X51)) )),
  inference(superposition,[],[f179,f13585])).
fof(f18787,plain,(
  ( ! [X261,X263,X262,X264] : (p(s(bool,X262)) | s(bool,X261) = s(bool,X263) | p(s(bool,X263)) | s(bool,X261) = s(bool,X264) | s(bool,'F_0') = s(bool,X264)) )),
  inference(subsumption_resolution,[],[f17984,f229])).
fof(f17984,plain,(
  ( ! [X261,X263,X262,X264] : (s(bool,'F_0') != s(bool,X262) | p(s(bool,X262)) | s(bool,X261) = s(bool,X263) | p(s(bool,X263)) | s(bool,X261) = s(bool,X264) | s(bool,'F_0') = s(bool,X264)) )),
  inference(superposition,[],[f1232,f13585])).
fof(f18786,plain,(
  ( ! [X243,X244,X242,X245] : (p(s(bool,X243)) | ~p(s(bool,X244)) | s(bool,X242) != s(bool,X244) | s(bool,X242) = s(bool,X245) | s(bool,'F_0') = s(bool,X245)) )),
  inference(subsumption_resolution,[],[f17979,f237])).
fof(f17979,plain,(
  ( ! [X243,X244,X242,X245] : (p(s(bool,'F_0')) | p(s(bool,X243)) | ~p(s(bool,X244)) | s(bool,X242) != s(bool,X244) | s(bool,X242) = s(bool,X245) | s(bool,'F_0') = s(bool,X245)) )),
  inference(superposition,[],[f251,f13585])).
fof(f18778,plain,(
  ( ! [X158,X156,X159,X157,X155] : (~p(s(bool,X156)) | ~p(s(bool,X157)) | s(bool,X155) != s(bool,X157) | s(bool,X156) != s(bool,X158) | s(bool,X155) = s(bool,X159) | s(bool,'F_0') = s(bool,X159)) )),
  inference(subsumption_resolution,[],[f17947,f237])).
fof(f17947,plain,(
  ( ! [X158,X156,X159,X157,X155] : (p(s(bool,'F_0')) | ~p(s(bool,X156)) | ~p(s(bool,X157)) | s(bool,X155) != s(bool,X157) | s(bool,X156) != s(bool,X158) | s(bool,X155) = s(bool,X159) | s(bool,'F_0') = s(bool,X159)) )),
  inference(superposition,[],[f185,f13585])).
fof(f18774,plain,(
  ( ! [X118,X116,X119,X117,X115] : (p(s(bool,X116)) | ~p(s(bool,X117)) | ~p(s(bool,X118)) | s(bool,X115) != s(bool,X117) | s(bool,X115) = s(bool,X119) | s(bool,'F_0') = s(bool,X119)) )),
  inference(subsumption_resolution,[],[f17939,f237])).
fof(f17939,plain,(
  ( ! [X118,X116,X119,X117,X115] : (p(s(bool,'F_0')) | p(s(bool,X116)) | ~p(s(bool,X117)) | ~p(s(bool,X118)) | s(bool,X115) != s(bool,X117) | s(bool,X115) = s(bool,X119) | s(bool,'F_0') = s(bool,X119)) )),
  inference(superposition,[],[f184,f13585])).
fof(f18772,plain,(
  ( ! [X94,X92,X90,X93,X91] : (p(s(bool,X91)) | ~p(s(bool,X92)) | s(bool,X91) != s(bool,X93) | s(bool,X90) != s(bool,X92) | s(bool,X90) = s(bool,X94) | s(bool,'F_0') = s(bool,X94)) )),
  inference(subsumption_resolution,[],[f17934,f237])).
fof(f17934,plain,(
  ( ! [X94,X92,X90,X93,X91] : (p(s(bool,'F_0')) | p(s(bool,X91)) | ~p(s(bool,X92)) | s(bool,X91) != s(bool,X93) | s(bool,X90) != s(bool,X92) | s(bool,X90) = s(bool,X94) | s(bool,'F_0') = s(bool,X94)) )),
  inference(superposition,[],[f183,f13585])).
fof(f18769,plain,(
  ( ! [X59,X57,X58,X56,X55] : (~p(s(bool,X56)) | ~p(s(bool,X57)) | s(bool,X55) != s(bool,X57) | s(bool,X56) != s(bool,X58) | s(bool,X55) = s(bool,X59) | s(bool,'F_0') = s(bool,X59)) )),
  inference(subsumption_resolution,[],[f17927,f237])).
fof(f17927,plain,(
  ( ! [X59,X57,X58,X56,X55] : (p(s(bool,'F_0')) | ~p(s(bool,X56)) | ~p(s(bool,X57)) | s(bool,X55) != s(bool,X57) | s(bool,X56) != s(bool,X58) | s(bool,X55) = s(bool,X59) | s(bool,'F_0') = s(bool,X59)) )),
  inference(superposition,[],[f181,f13585])).
fof(f18765,plain,(
  ( ! [X24,X23,X21,X22,X20] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X20) != s(bool,X22) | s(bool,X20) = s(bool,X24) | s(bool,'F_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f17920,f237])).
fof(f17920,plain,(
  ( ! [X24,X23,X21,X22,X20] : (p(s(bool,'F_0')) | p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X20) != s(bool,X22) | s(bool,X20) = s(bool,X24) | s(bool,'F_0') = s(bool,X24)) )),
  inference(superposition,[],[f179,f13585])).
fof(f18758,plain,(
  ( ! [X350,X349,X348] : (s(bool,'T_0') != s(bool,X348) | s(bool,'F_0') != s(bool,X349) | s(bool,X348) = s(bool,X350) | s(bool,'F_0') = s(bool,X350)) ) | $spl86),
  inference(subsumption_resolution,[],[f17901,f10943])).
fof(f17901,plain,(
  ( ! [X350,X349,X348] : (s(bool,'T_0') != s(bool,X348) | s(bool,'F_0') != s(bool,X349) | s(bool,'T_0') = s(bool,X349) | s(bool,X348) = s(bool,X350) | s(bool,'F_0') = s(bool,X350)) ) | $spl86),
  inference(superposition,[],[f4822,f13585])).
fof(f18748,plain,(
  ( ! [X310,X312,X311] : (s(bool,'T_0') != s(bool,X310) | p(s(bool,X311)) | s(bool,X310) = s(bool,X312) | s(bool,'F_0') = s(bool,X312)) )),
  inference(subsumption_resolution,[],[f17889,f229])).
fof(f17889,plain,(
  ( ! [X310,X312,X311] : (s(bool,'T_0') != s(bool,X310) | s(bool,'F_0') != s(bool,X311) | p(s(bool,X311)) | s(bool,X310) = s(bool,X312) | s(bool,'F_0') = s(bool,X312)) )),
  inference(superposition,[],[f1242,f13585])).
fof(f18744,plain,(
  ( ! [X285,X283,X284,X286] : (s(bool,X283) != s(bool,X284) | p(s(bool,X285)) | ~p(s(bool,X284)) | s(bool,X283) = s(bool,X286) | s(bool,'F_0') = s(bool,X286)) )),
  inference(subsumption_resolution,[],[f17882,f237])).
fof(f17882,plain,(
  ( ! [X285,X283,X284,X286] : (s(bool,X283) != s(bool,X284) | p(s(bool,X285)) | ~p(s(bool,X284)) | p(s(bool,'F_0')) | s(bool,X283) = s(bool,X286) | s(bool,'F_0') = s(bool,X286)) )),
  inference(superposition,[],[f251,f13585])).
fof(f18730,plain,(
  ( ! [X196,X194,X192,X195,X193] : (s(bool,X192) != s(bool,X193) | ~p(s(bool,X194)) | ~p(s(bool,X193)) | s(bool,X194) != s(bool,X195) | s(bool,X192) = s(bool,X196) | s(bool,'F_0') = s(bool,X196)) )),
  inference(subsumption_resolution,[],[f17849,f237])).
fof(f17849,plain,(
  ( ! [X196,X194,X192,X195,X193] : (s(bool,X192) != s(bool,X193) | p(s(bool,'F_0')) | ~p(s(bool,X194)) | ~p(s(bool,X193)) | s(bool,X194) != s(bool,X195) | s(bool,X192) = s(bool,X196) | s(bool,'F_0') = s(bool,X196)) )),
  inference(superposition,[],[f185,f13585])).
fof(f18728,plain,(
  ( ! [X158,X161,X159,X157,X160] : (s(bool,X157) != s(bool,X158) | p(s(bool,X159)) | ~p(s(bool,X158)) | ~p(s(bool,X160)) | s(bool,X157) = s(bool,X161) | s(bool,'F_0') = s(bool,X161)) )),
  inference(subsumption_resolution,[],[f17842,f237])).
fof(f17842,plain,(
  ( ! [X158,X161,X159,X157,X160] : (s(bool,X157) != s(bool,X158) | p(s(bool,X159)) | ~p(s(bool,X158)) | ~p(s(bool,X160)) | p(s(bool,'F_0')) | s(bool,X157) = s(bool,X161) | s(bool,'F_0') = s(bool,X161)) )),
  inference(superposition,[],[f184,f13585])).
fof(f18725,plain,(
  ( ! [X125,X123,X126,X124,X122] : (s(bool,X122) != s(bool,X123) | p(s(bool,X124)) | ~p(s(bool,X123)) | s(bool,X124) != s(bool,X125) | s(bool,X122) = s(bool,X126) | s(bool,'F_0') = s(bool,X126)) )),
  inference(subsumption_resolution,[],[f17835,f237])).
fof(f17835,plain,(
  ( ! [X125,X123,X126,X124,X122] : (s(bool,X122) != s(bool,X123) | p(s(bool,X124)) | ~p(s(bool,X123)) | p(s(bool,'F_0')) | s(bool,X124) != s(bool,X125) | s(bool,X122) = s(bool,X126) | s(bool,'F_0') = s(bool,X126)) )),
  inference(superposition,[],[f183,f13585])).
fof(f18723,plain,(
  ( ! [X101,X99,X97,X100,X98] : (s(bool,X97) != s(bool,X98) | ~p(s(bool,X99)) | ~p(s(bool,X98)) | s(bool,X99) != s(bool,X100) | s(bool,X97) = s(bool,X101) | s(bool,'F_0') = s(bool,X101)) )),
  inference(subsumption_resolution,[],[f17830,f237])).
fof(f17830,plain,(
  ( ! [X101,X99,X97,X100,X98] : (s(bool,X97) != s(bool,X98) | p(s(bool,'F_0')) | ~p(s(bool,X99)) | ~p(s(bool,X98)) | s(bool,X99) != s(bool,X100) | s(bool,X97) = s(bool,X101) | s(bool,'F_0') = s(bool,X101)) )),
  inference(superposition,[],[f181,f13585])).
fof(f18720,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s(bool,X47) != s(bool,X48) | p(s(bool,X49)) | ~p(s(bool,X48)) | s(bool,X49) != s(bool,X50) | s(bool,X47) = s(bool,X51) | s(bool,'F_0') = s(bool,X51)) )),
  inference(subsumption_resolution,[],[f17820,f237])).
fof(f17820,plain,(
  ( ! [X47,X50,X48,X51,X49] : (s(bool,X47) != s(bool,X48) | p(s(bool,X49)) | ~p(s(bool,X48)) | p(s(bool,'F_0')) | s(bool,X49) != s(bool,X50) | s(bool,X47) = s(bool,X51) | s(bool,'F_0') = s(bool,X51)) )),
  inference(superposition,[],[f179,f13585])).
fof(f18639,plain,(
  ( ! [X516,X518,X521,X517,X519] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X521)))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X516,X517,X518,X519)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X517)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X521),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X519),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),fun(X519,'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X519),fun(X519,'type.pair.prod'('type.num.num','type.sptree.spt'(X519))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X519),fun(X519,'type.sptree.spt'(X519)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X519,fun('type.sptree.spt'(X519),'type.sptree.spt'(X519)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X519),'type.sptree.spt'(X519)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),happ(s(fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.,_0'),s('type.num.num',X517))),s('type.sptree.spt'(X519),X516))),s('type.list.list'(X519),X518))))))))))) ) | $spl228),
  inference(cnf_transformation,[],[f18639_D])).
fof(f18639_D,plain,(
  ( ! [X516,X518,X521,X517,X519] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X521)))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X516,X517,X518,X519)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X517)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X521),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X519),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),fun(X519,'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X519),fun(X519,'type.pair.prod'('type.num.num','type.sptree.spt'(X519))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X519),fun(X519,'type.sptree.spt'(X519)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X519,fun('type.sptree.spt'(X519),'type.sptree.spt'(X519)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X519),'type.sptree.spt'(X519)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),happ(s(fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.,_0'),s('type.num.num',X517))),s('type.sptree.spt'(X519),X516))),s('type.list.list'(X519),X518))))))))))) ) <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f18719,plain,(
  ( ! [X520,X516,X518,X521,X517,X519] : (~p(s(bool,X520)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X521)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X521),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X519),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),fun(X519,'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X519),fun(X519,'type.pair.prod'('type.num.num','type.sptree.spt'(X519))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X519),fun(X519,'type.sptree.spt'(X519)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X519,fun('type.sptree.spt'(X519),'type.sptree.spt'(X519)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X519),'type.sptree.spt'(X519)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),happ(s(fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.,_0'),s('type.num.num',X517))),s('type.sptree.spt'(X519),X516))),s('type.list.list'(X519),X518)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X517)))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X516,X517,X518,X519))))) )),
  inference(subsumption_resolution,[],[f17802,f228])).
fof(f17802,plain,(
  ( ! [X520,X516,X518,X521,X517,X519] : (~p(s(bool,X520)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X521)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X521),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X519),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),fun(X519,'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X519),fun(X519,'type.pair.prod'('type.num.num','type.sptree.spt'(X519))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X519),fun(X519,'type.sptree.spt'(X519)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X519,fun('type.sptree.spt'(X519),'type.sptree.spt'(X519)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X519),'type.sptree.spt'(X519)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),happ(s(fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.,_0'),s('type.num.num',X517))),s('type.sptree.spt'(X519),X516))),s('type.list.list'(X519),X518)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X517)))) | s(bool,'F_0') = s(bool,X520) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X516,X517,X518,X519))))) )),
  inference(superposition,[],[f175,f13585])).
fof(f175,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.sptree.spt'(X0)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X0,fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),happ(s(fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X0),X3))),s('type.list.list'(X0),X1)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X3,X2,X1,X0))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f137])).
fof(f18636,plain,(
  ( ! [X472,X474,X475,X473,X470] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X472)))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X470))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X474,X470,X475,X473))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X472),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X473),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),fun(X473,'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X473),fun(X473,'type.pair.prod'('type.num.num','type.sptree.spt'(X473))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X473),fun(X473,'type.sptree.spt'(X473)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X473,fun('type.sptree.spt'(X473),'type.sptree.spt'(X473)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X473),'type.sptree.spt'(X473)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),happ(s(fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.,_0'),s('type.num.num',X470))),s('type.sptree.spt'(X473),X474))),s('type.list.list'(X473),X475))))))))))) ) | $spl226),
  inference(cnf_transformation,[],[f18636_D])).
fof(f18636_D,plain,(
  ( ! [X472,X474,X475,X473,X470] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X472)))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X470))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X474,X470,X475,X473))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X472),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X473),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),fun(X473,'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X473),fun(X473,'type.pair.prod'('type.num.num','type.sptree.spt'(X473))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X473),fun(X473,'type.sptree.spt'(X473)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X473,fun('type.sptree.spt'(X473),'type.sptree.spt'(X473)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X473),'type.sptree.spt'(X473)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),happ(s(fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.,_0'),s('type.num.num',X470))),s('type.sptree.spt'(X473),X474))),s('type.list.list'(X473),X475))))))))))) ) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f18717,plain,(
  ( ! [X472,X474,X471,X475,X473,X470] : (~p(s(bool,X471)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X472)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X472),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X473),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),fun(X473,'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X473),fun(X473,'type.pair.prod'('type.num.num','type.sptree.spt'(X473))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X473),fun(X473,'type.sptree.spt'(X473)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X473,fun('type.sptree.spt'(X473),'type.sptree.spt'(X473)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X473),'type.sptree.spt'(X473)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),happ(s(fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.,_0'),s('type.num.num',X470))),s('type.sptree.spt'(X473),X474))),s('type.list.list'(X473),X475)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X474,X470,X475,X473))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X470)))) )),
  inference(subsumption_resolution,[],[f17780,f228])).
fof(f17780,plain,(
  ( ! [X472,X474,X471,X475,X473,X470] : (~p(s(bool,X471)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X472)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X472),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X473),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),fun(X473,'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X473),fun(X473,'type.pair.prod'('type.num.num','type.sptree.spt'(X473))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X473),fun(X473,'type.sptree.spt'(X473)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X473,fun('type.sptree.spt'(X473),'type.sptree.spt'(X473)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X473),'type.sptree.spt'(X473)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),happ(s(fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.,_0'),s('type.num.num',X470))),s('type.sptree.spt'(X473),X474))),s('type.list.list'(X473),X475)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X474,X470,X475,X473))))) | s(bool,'F_0') = s(bool,X471) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X470)))) )),
  inference(superposition,[],[f175,f13585])).
fof(f18634,plain,(
  ( ! [X461,X463,X460,X462,X458] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X460)))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X458))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X462,X458,X463,X461)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X461),X462)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X460),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X461),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),fun(X461,'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X461),fun(X461,'type.pair.prod'('type.num.num','type.sptree.spt'(X461))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X461),fun(X461,'type.sptree.spt'(X461)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X461,fun('type.sptree.spt'(X461),'type.sptree.spt'(X461)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X461),'type.sptree.spt'(X461)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),happ(s(fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.,_0'),s('type.num.num',X458))),s('type.sptree.spt'(X461),X462))),s('type.list.list'(X461),X463))))))))))) ) | $spl224),
  inference(cnf_transformation,[],[f18634_D])).
fof(f18634_D,plain,(
  ( ! [X461,X463,X460,X462,X458] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X460)))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X458))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X462,X458,X463,X461)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X461),X462)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X460),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X461),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),fun(X461,'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X461),fun(X461,'type.pair.prod'('type.num.num','type.sptree.spt'(X461))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X461),fun(X461,'type.sptree.spt'(X461)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X461,fun('type.sptree.spt'(X461),'type.sptree.spt'(X461)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X461),'type.sptree.spt'(X461)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),happ(s(fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.,_0'),s('type.num.num',X458))),s('type.sptree.spt'(X461),X462))),s('type.list.list'(X461),X463))))))))))) ) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f18716,plain,(
  ( ! [X461,X463,X459,X460,X462,X458] : (~p(s(bool,X459)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X460)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X460),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X461),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),fun(X461,'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X461),fun(X461,'type.pair.prod'('type.num.num','type.sptree.spt'(X461))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X461),fun(X461,'type.sptree.spt'(X461)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X461,fun('type.sptree.spt'(X461),'type.sptree.spt'(X461)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X461),'type.sptree.spt'(X461)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),happ(s(fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.,_0'),s('type.num.num',X458))),s('type.sptree.spt'(X461),X462))),s('type.list.list'(X461),X463)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X462,X458,X463,X461)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X461),X462)))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X458)))) )),
  inference(subsumption_resolution,[],[f17778,f228])).
fof(f17778,plain,(
  ( ! [X461,X463,X459,X460,X462,X458] : (~p(s(bool,X459)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X460)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X460),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X461),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),fun(X461,'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X461),fun(X461,'type.pair.prod'('type.num.num','type.sptree.spt'(X461))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X461),fun(X461,'type.sptree.spt'(X461)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X461,fun('type.sptree.spt'(X461),'type.sptree.spt'(X461)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X461),'type.sptree.spt'(X461)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),happ(s(fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.,_0'),s('type.num.num',X458))),s('type.sptree.spt'(X461),X462))),s('type.list.list'(X461),X463)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X462,X458,X463,X461)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X461),X462)))))) | s(bool,'F_0') = s(bool,X459) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X458)))) )),
  inference(superposition,[],[f174,f13585])).
fof(f18631,plain,(
  ( ! [X441,X443,X444,X440,X442] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X440)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X440),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X441),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),fun(X441,'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X441),fun(X441,'type.pair.prod'('type.num.num','type.sptree.spt'(X441))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X441),fun(X441,'type.sptree.spt'(X441)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X441,fun('type.sptree.spt'(X441),'type.sptree.spt'(X441)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X441),'type.sptree.spt'(X441)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),happ(s(fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.,_0'),s('type.num.num',X442))),s('type.sptree.spt'(X441),X443))),s('type.list.list'(X441),X444))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X443,X442,X444,X441))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X442))))) ) | $spl222),
  inference(cnf_transformation,[],[f18631_D])).
fof(f18631_D,plain,(
  ( ! [X441,X443,X444,X440,X442] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X440)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X440),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X441),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),fun(X441,'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X441),fun(X441,'type.pair.prod'('type.num.num','type.sptree.spt'(X441))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X441),fun(X441,'type.sptree.spt'(X441)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X441,fun('type.sptree.spt'(X441),'type.sptree.spt'(X441)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X441),'type.sptree.spt'(X441)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),happ(s(fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.,_0'),s('type.num.num',X442))),s('type.sptree.spt'(X441),X443))),s('type.list.list'(X441),X444))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X443,X442,X444,X441))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X442))))) ) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f18714,plain,(
  ( ! [X445,X441,X443,X444,X440,X442] : (~p(s(bool,X445)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X440)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X443,X442,X444,X441))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X442)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X440),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X441),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),fun(X441,'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X441),fun(X441,'type.pair.prod'('type.num.num','type.sptree.spt'(X441))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X441),fun(X441,'type.sptree.spt'(X441)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X441,fun('type.sptree.spt'(X441),'type.sptree.spt'(X441)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X441),'type.sptree.spt'(X441)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),happ(s(fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.,_0'),s('type.num.num',X442))),s('type.sptree.spt'(X441),X443))),s('type.list.list'(X441),X444)))))))))) )),
  inference(subsumption_resolution,[],[f17774,f228])).
fof(f17774,plain,(
  ( ! [X445,X441,X443,X444,X440,X442] : (~p(s(bool,X445)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X440)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X443,X442,X444,X441))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X442)))) | s(bool,'F_0') = s(bool,X445) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X440),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X441),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),fun(X441,'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X441),fun(X441,'type.pair.prod'('type.num.num','type.sptree.spt'(X441))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X441),fun(X441,'type.sptree.spt'(X441)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X441,fun('type.sptree.spt'(X441),'type.sptree.spt'(X441)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X441),'type.sptree.spt'(X441)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),happ(s(fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.,_0'),s('type.num.num',X442))),s('type.sptree.spt'(X441),X443))),s('type.list.list'(X441),X444)))))))))) )),
  inference(superposition,[],[f175,f13585])).
fof(f18629,plain,(
  ( ! [X436,X438,X434,X437,X435] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X434)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X434),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X435),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),fun(X435,'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X435),fun(X435,'type.pair.prod'('type.num.num','type.sptree.spt'(X435))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X435),fun(X435,'type.sptree.spt'(X435)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X435,fun('type.sptree.spt'(X435),'type.sptree.spt'(X435)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X435),'type.sptree.spt'(X435)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),happ(s(fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.,_0'),s('type.num.num',X436))),s('type.sptree.spt'(X435),X437))),s('type.list.list'(X435),X438))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X437,X436,X438,X435)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X435),X437)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X436))))) ) | $spl220),
  inference(cnf_transformation,[],[f18629_D])).
fof(f18629_D,plain,(
  ( ! [X436,X438,X434,X437,X435] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X434)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X434),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X435),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),fun(X435,'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X435),fun(X435,'type.pair.prod'('type.num.num','type.sptree.spt'(X435))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X435),fun(X435,'type.sptree.spt'(X435)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X435,fun('type.sptree.spt'(X435),'type.sptree.spt'(X435)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X435),'type.sptree.spt'(X435)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),happ(s(fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.,_0'),s('type.num.num',X436))),s('type.sptree.spt'(X435),X437))),s('type.list.list'(X435),X438))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X437,X436,X438,X435)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X435),X437)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X436))))) ) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f18713,plain,(
  ( ! [X436,X438,X434,X437,X439,X435] : (~p(s(bool,X439)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X434)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X437,X436,X438,X435)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X435),X437)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X436)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X434),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X435),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),fun(X435,'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X435),fun(X435,'type.pair.prod'('type.num.num','type.sptree.spt'(X435))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X435),fun(X435,'type.sptree.spt'(X435)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X435,fun('type.sptree.spt'(X435),'type.sptree.spt'(X435)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X435),'type.sptree.spt'(X435)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),happ(s(fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.,_0'),s('type.num.num',X436))),s('type.sptree.spt'(X435),X437))),s('type.list.list'(X435),X438)))))))))) )),
  inference(subsumption_resolution,[],[f17773,f228])).
fof(f17773,plain,(
  ( ! [X436,X438,X434,X437,X439,X435] : (~p(s(bool,X439)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X434)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X437,X436,X438,X435)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X435),X437)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X436)))) | s(bool,'F_0') = s(bool,X439) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X434),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X435),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),fun(X435,'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X435),fun(X435,'type.pair.prod'('type.num.num','type.sptree.spt'(X435))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X435),fun(X435,'type.sptree.spt'(X435)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X435,fun('type.sptree.spt'(X435),'type.sptree.spt'(X435)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X435),'type.sptree.spt'(X435)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),happ(s(fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.,_0'),s('type.num.num',X436))),s('type.sptree.spt'(X435),X437))),s('type.list.list'(X435),X438)))))))))) )),
  inference(superposition,[],[f174,f13585])).
fof(f1783,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X0) != s(bool,X3) | p(s(bool,X3)) | s(bool,'F_0') = s(bool,X1)) ) | $spl62),
  inference(cnf_transformation,[],[f1783_D])).
fof(f1783_D,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X0) != s(bool,X3) | p(s(bool,X3)) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f18691,plain,(
  ( ! [X271,X273,X270,X272] : (~p(s(bool,X271)) | s(bool,X270) != s(bool,X272) | p(s(bool,X273)) | s(bool,X272) != s(bool,X273) | s(bool,'F_0') = s(bool,X270)) ) | $spl44),
  inference(subsumption_resolution,[],[f17705,f228])).
fof(f17705,plain,(
  ( ! [X271,X273,X270,X272] : (~p(s(bool,X271)) | s(bool,X270) != s(bool,X272) | p(s(bool,X273)) | s(bool,X272) != s(bool,X273) | s(bool,'F_0') = s(bool,X271) | s(bool,'F_0') = s(bool,X270)) ) | $spl44),
  inference(superposition,[],[f1285,f13585])).
fof(f18638,plain,(
  ( ! [X520,X516,X518,X521,X517,X519] : (~p(s(bool,X520)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X521)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X521),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X519),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),fun(X519,'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X519),fun(X519,'type.pair.prod'('type.num.num','type.sptree.spt'(X519))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X519),fun(X519,'type.sptree.spt'(X519)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X519,fun('type.sptree.spt'(X519),'type.sptree.spt'(X519)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X519),'type.sptree.spt'(X519)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),happ(s(fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.,_0'),s('type.num.num',X517))),s('type.sptree.spt'(X519),X516))),s('type.list.list'(X519),X518)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X517)))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X516,X517,X518,X519))))) )),
  inference(subsumption_resolution,[],[f17630,f228])).
fof(f17630,plain,(
  ( ! [X520,X516,X518,X521,X517,X519] : (~p(s(bool,X520)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X521)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X521),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X519),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),fun(X519,'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X519),fun(X519,'type.pair.prod'('type.num.num','type.sptree.spt'(X519))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X519),fun(X519,'type.sptree.spt'(X519)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X519,fun('type.sptree.spt'(X519),'type.sptree.spt'(X519)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X519),'type.sptree.spt'(X519)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X519)),happ(s(fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X519),'type.pair.prod'('type.num.num','type.sptree.spt'(X519)))),'const.pair.,_0'),s('type.num.num',X517))),s('type.sptree.spt'(X519),X516))),s('type.list.list'(X519),X518)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X517)))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X516,X517,X518,X519)))) | s(bool,'F_0') = s(bool,X520)) )),
  inference(superposition,[],[f175,f13585])).
fof(f18635,plain,(
  ( ! [X472,X474,X471,X475,X473,X470] : (~p(s(bool,X471)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X472)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X472),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X473),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),fun(X473,'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X473),fun(X473,'type.pair.prod'('type.num.num','type.sptree.spt'(X473))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X473),fun(X473,'type.sptree.spt'(X473)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X473,fun('type.sptree.spt'(X473),'type.sptree.spt'(X473)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X473),'type.sptree.spt'(X473)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),happ(s(fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.,_0'),s('type.num.num',X470))),s('type.sptree.spt'(X473),X474))),s('type.list.list'(X473),X475)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X474,X470,X475,X473))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X470)))) )),
  inference(subsumption_resolution,[],[f17608,f228])).
fof(f17608,plain,(
  ( ! [X472,X474,X471,X475,X473,X470] : (~p(s(bool,X471)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X472)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X472),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X473),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),fun(X473,'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X473),fun(X473,'type.pair.prod'('type.num.num','type.sptree.spt'(X473))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X473),fun(X473,'type.sptree.spt'(X473)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X473,fun('type.sptree.spt'(X473),'type.sptree.spt'(X473)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X473),'type.sptree.spt'(X473)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X473)),happ(s(fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X473),'type.pair.prod'('type.num.num','type.sptree.spt'(X473)))),'const.pair.,_0'),s('type.num.num',X470))),s('type.sptree.spt'(X473),X474))),s('type.list.list'(X473),X475)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X474,X470,X475,X473))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X470))) | s(bool,'F_0') = s(bool,X471)) )),
  inference(superposition,[],[f175,f13585])).
fof(f18633,plain,(
  ( ! [X461,X463,X459,X460,X462,X458] : (~p(s(bool,X459)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X460)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X460),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X461),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),fun(X461,'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X461),fun(X461,'type.pair.prod'('type.num.num','type.sptree.spt'(X461))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X461),fun(X461,'type.sptree.spt'(X461)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X461,fun('type.sptree.spt'(X461),'type.sptree.spt'(X461)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X461),'type.sptree.spt'(X461)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),happ(s(fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.,_0'),s('type.num.num',X458))),s('type.sptree.spt'(X461),X462))),s('type.list.list'(X461),X463)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X462,X458,X463,X461)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X461),X462)))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X458)))) )),
  inference(subsumption_resolution,[],[f17606,f228])).
fof(f17606,plain,(
  ( ! [X461,X463,X459,X460,X462,X458] : (~p(s(bool,X459)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X460)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X460),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X461),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),fun(X461,'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X461),fun(X461,'type.pair.prod'('type.num.num','type.sptree.spt'(X461))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X461),fun(X461,'type.sptree.spt'(X461)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X461,fun('type.sptree.spt'(X461),'type.sptree.spt'(X461)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X461),'type.sptree.spt'(X461)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X461)),happ(s(fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X461),'type.pair.prod'('type.num.num','type.sptree.spt'(X461)))),'const.pair.,_0'),s('type.num.num',X458))),s('type.sptree.spt'(X461),X462))),s('type.list.list'(X461),X463)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X462,X458,X463,X461)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X461),X462)))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X458))) | s(bool,'F_0') = s(bool,X459)) )),
  inference(superposition,[],[f174,f13585])).
fof(f18630,plain,(
  ( ! [X445,X441,X443,X444,X440,X442] : (~p(s(bool,X445)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X440)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X443,X442,X444,X441))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X442)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X440),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X441),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),fun(X441,'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X441),fun(X441,'type.pair.prod'('type.num.num','type.sptree.spt'(X441))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X441),fun(X441,'type.sptree.spt'(X441)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X441,fun('type.sptree.spt'(X441),'type.sptree.spt'(X441)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X441),'type.sptree.spt'(X441)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),happ(s(fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.,_0'),s('type.num.num',X442))),s('type.sptree.spt'(X441),X443))),s('type.list.list'(X441),X444)))))))))) )),
  inference(subsumption_resolution,[],[f17602,f228])).
fof(f17602,plain,(
  ( ! [X445,X441,X443,X444,X440,X442] : (~p(s(bool,X445)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X440)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X443,X442,X444,X441))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X442)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X440),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X441),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),fun(X441,'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X441),fun(X441,'type.pair.prod'('type.num.num','type.sptree.spt'(X441))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X441),fun(X441,'type.sptree.spt'(X441)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X441,fun('type.sptree.spt'(X441),'type.sptree.spt'(X441)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X441),'type.sptree.spt'(X441)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X441)),happ(s(fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X441),'type.pair.prod'('type.num.num','type.sptree.spt'(X441)))),'const.pair.,_0'),s('type.num.num',X442))),s('type.sptree.spt'(X441),X443))),s('type.list.list'(X441),X444))))))))) | s(bool,'F_0') = s(bool,X445)) )),
  inference(superposition,[],[f175,f13585])).
fof(f18628,plain,(
  ( ! [X436,X438,X434,X437,X439,X435] : (~p(s(bool,X439)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X434)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X437,X436,X438,X435)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X435),X437)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X436)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X434),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X435),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),fun(X435,'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X435),fun(X435,'type.pair.prod'('type.num.num','type.sptree.spt'(X435))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X435),fun(X435,'type.sptree.spt'(X435)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X435,fun('type.sptree.spt'(X435),'type.sptree.spt'(X435)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X435),'type.sptree.spt'(X435)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),happ(s(fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.,_0'),s('type.num.num',X436))),s('type.sptree.spt'(X435),X437))),s('type.list.list'(X435),X438)))))))))) )),
  inference(subsumption_resolution,[],[f17601,f228])).
fof(f17601,plain,(
  ( ! [X436,X438,X434,X437,X439,X435] : (~p(s(bool,X439)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X434)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X437,X436,X438,X435)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X435),X437)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X436)))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s('type.num.num',X434),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X435),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),fun(X435,'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X435),fun(X435,'type.pair.prod'('type.num.num','type.sptree.spt'(X435))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X435),fun(X435,'type.sptree.spt'(X435)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X435,fun('type.sptree.spt'(X435),'type.sptree.spt'(X435)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X435),'type.sptree.spt'(X435)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X435)),happ(s(fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X435),'type.pair.prod'('type.num.num','type.sptree.spt'(X435)))),'const.pair.,_0'),s('type.num.num',X436))),s('type.sptree.spt'(X435),X437))),s('type.list.list'(X435),X438))))))))) | s(bool,'F_0') = s(bool,X439)) )),
  inference(superposition,[],[f174,f13585])).
fof(f18606,plain,(
  ( ! [X271,X273,X270,X272] : (~p(s(bool,X271)) | s(bool,X270) != s(bool,X272) | p(s(bool,X273)) | s(bool,X272) != s(bool,X273) | s(bool,'F_0') = s(bool,X270)) ) | $spl44),
  inference(subsumption_resolution,[],[f17533,f228])).
fof(f17533,plain,(
  ( ! [X271,X273,X270,X272] : (~p(s(bool,X271)) | s(bool,X270) != s(bool,X272) | p(s(bool,X273)) | s(bool,X272) != s(bool,X273) | s(bool,'F_0') = s(bool,X270) | s(bool,'F_0') = s(bool,X271)) ) | $spl44),
  inference(superposition,[],[f1285,f13585])).
fof(f17173,plain,(
  $false | $spl32),
  inference(trivial_inequality_removal,[],[f17156])).
fof(f17156,plain,(
  s(bool,'F_0') != s(bool,'F_0') | $spl32),
  inference(superposition,[],[f669,f7511])).
fof(f17171,plain,(
  $false | $spl32),
  inference(trivial_inequality_removal,[],[f17168])).
fof(f17168,plain,(
  s(bool,'F_0') != s(bool,'F_0') | $spl32),
  inference(superposition,[],[f669,f271])).
fof(f17170,plain,(
  $false | $spl32),
  inference(equality_resolution,[],[f669])).
fof(f17119,plain,(
  ( ! [X77] : (s(bool,X77) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2))) | s(bool,'T_0') != s(bool,X77)) ) | $spl218),
  inference(cnf_transformation,[],[f17119_D])).
fof(f17119_D,plain,(
  ( ! [X77] : (s(bool,X77) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2))) | s(bool,'T_0') != s(bool,X77)) ) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f17118,plain,(
  ( ! [X76,X77] : (s(bool,'F_0') != s(bool,X76) | s(bool,X77) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2))) | s(bool,'T_0') != s(bool,X77)) ) | ($spl82 | $spl190)),
  inference(subsumption_resolution,[],[f17093,f10943])).
fof(f17093,plain,(
  ( ! [X76,X77] : (s(bool,'F_0') != s(bool,X76) | s(bool,X77) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2))) | s(bool,'T_0') != s(bool,X77) | s(bool,'T_0') = s(bool,X76)) ) | ($spl82 | $spl190)),
  inference(superposition,[],[f13360,f2959])).
fof(f2959,plain,(
  ( ! [X41] : (s(bool,X41) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X41)) ) | $spl82),
  inference(subsumption_resolution,[],[f2940,f237])).
fof(f2940,plain,(
  ( ! [X41] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,X41) | s(bool,X41) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) ) | $spl82),
  inference(superposition,[],[f2823,f271])).
fof(f13360,plain,(
  ( ! [X54,X55] : (s(bool,'F_0') != s(bool,X54) | s(bool,X54) != s(bool,X55) | s(bool,'T_0') != s(bool,X55)) ) | $spl190),
  inference(resolution,[],[f11025,f232])).
fof(f15363,plain,(
  ( ! [X15] : (s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X15)) ) | $spl208),
  inference(cnf_transformation,[],[f15363_D])).
fof(f15363_D,plain,(
  ( ! [X15] : (s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X15)) ) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f16748,plain,(
  ( ! [X248,X247] : (s(bool,'T_0') != s(bool,X247) | s(bool,X248) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X248)) ) | ($spl86 | $spl181)),
  inference(subsumption_resolution,[],[f16448,f10943])).
fof(f16448,plain,(
  ( ! [X248,X247] : (s(bool,'T_0') != s(bool,X247) | s(bool,X248) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X248) | s(bool,'F_0') = s(bool,X247)) ) | ($spl86 | $spl181)),
  inference(superposition,[],[f4822,f13654])).
fof(f13654,plain,(
  ( ! [X60] : (s(bool,X60) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'F_0') = s(bool,X60)) ) | $spl181),
  inference(subsumption_resolution,[],[f13629,f238])).
fof(f13629,plain,(
  ( ! [X60] : (~p(s(bool,'T_0')) | s(bool,X60) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'F_0') = s(bool,X60)) ) | $spl181),
  inference(superposition,[],[f11051,f10326])).
fof(f10326,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl181),
  inference(trivial_inequality_removal,[],[f10320])).
fof(f10320,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl181),
  inference(superposition,[],[f9905,f250])).
fof(f9905,plain,(
  s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl181),
  inference(cnf_transformation,[],[f9905_D])).
fof(f9905_D,plain,(
  s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl181),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl181])])).
fof(f16658,plain,(
  ( ! [X17,X15,X18,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X18,X16))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X16),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.sptree.spt'(X16)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X16,fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),happ(s(fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.sptree.spt'(X16),X17))),s('type.list.list'(X16),X18))))))))))) ) | $spl216),
  inference(cnf_transformation,[],[f16658_D])).
fof(f16658_D,plain,(
  ( ! [X17,X15,X18,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X18,X16))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X16),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.sptree.spt'(X16)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X16,fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),happ(s(fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.sptree.spt'(X16),X17))),s('type.list.list'(X16),X18))))))))))) ) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f16657,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~p(s(bool,X14)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X16),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.sptree.spt'(X16)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X16,fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),happ(s(fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.sptree.spt'(X16),X17))),s('type.list.list'(X16),X18)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X18,X16)))))) ) | $spl181),
  inference(subsumption_resolution,[],[f16361,f228])).
fof(f16361,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~p(s(bool,X14)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X16),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.sptree.spt'(X16)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X16,fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),happ(s(fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.sptree.spt'(X16),X17))),s('type.list.list'(X16),X18)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X18,X16))))) | s(bool,'F_0') = s(bool,X14)) ) | $spl181),
  inference(superposition,[],[f175,f13654])).
fof(f16656,plain,(
  ( ! [X6,X8,X7,X5] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X8,X6)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),X7)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.sptree.spt'(X6),X7))),s('type.list.list'(X6),X8))))))))))) ) | $spl214),
  inference(cnf_transformation,[],[f16656_D])).
fof(f16656_D,plain,(
  ( ! [X6,X8,X7,X5] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X8,X6)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),X7)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.sptree.spt'(X6),X7))),s('type.list.list'(X6),X8))))))))))) ) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f16655,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,X4)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.sptree.spt'(X6),X7))),s('type.list.list'(X6),X8)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X8,X6)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),X7))))))) ) | $spl181),
  inference(subsumption_resolution,[],[f16359,f228])).
fof(f16359,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,X4)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.sptree.spt'(X6),X7))),s('type.list.list'(X6),X8)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X8,X6)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),X7)))))) | s(bool,'F_0') = s(bool,X4)) ) | $spl181),
  inference(superposition,[],[f174,f13654])).
fof(f6999,plain,(
  ( ! [X28] : (s(bool,'F_0') = s(bool,X28)) ) | $spl116),
  inference(cnf_transformation,[],[f6999_D])).
fof(f6999_D,plain,(
  ( ! [X28] : (s(bool,'F_0') = s(bool,X28)) ) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f16475,plain,(
  ( ! [X206,X205] : (s(bool,X206) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'F_0') = s(bool,X205) | s(bool,'T_0') = s(bool,X206)) ) | $spl181),
  inference(duplicate_literal_removal,[],[f16312])).
fof(f16312,plain,(
  ( ! [X206,X205] : (s(bool,X206) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'F_0') = s(bool,X205) | s(bool,'T_0') = s(bool,X206) | s(bool,'F_0') = s(bool,X205)) ) | $spl181),
  inference(superposition,[],[f1742,f13654])).
fof(f1742,plain,(
  ( ! [X61,X60] : (s(bool,X60) != s(bool,X61) | s(bool,'F_0') = s(bool,X61) | s(bool,'T_0') = s(bool,X60)) )),
  inference(resolution,[],[f1240,f233])).
fof(f1240,plain,(
  ( ! [X59,X58] : (p(s(bool,X58)) | s(bool,X58) != s(bool,X59) | s(bool,'F_0') = s(bool,X59)) )),
  inference(resolution,[],[f277,f229])).
fof(f15266,plain,(
  ( ! [X15] : (s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X15)) ) | $spl206),
  inference(cnf_transformation,[],[f15266_D])).
fof(f15266_D,plain,(
  ( ! [X15] : (s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X15)) ) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f16175,plain,(
  ( ! [X248,X247] : (s(bool,'T_0') != s(bool,X247) | s(bool,X248) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X248)) ) | ($spl86 | $spl178)),
  inference(subsumption_resolution,[],[f15879,f10943])).
fof(f15879,plain,(
  ( ! [X248,X247] : (s(bool,'T_0') != s(bool,X247) | s(bool,X248) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X248) | s(bool,'F_0') = s(bool,X247)) ) | ($spl86 | $spl178)),
  inference(superposition,[],[f4822,f13653])).
fof(f13653,plain,(
  ( ! [X59] : (s(bool,X59) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,X59)) ) | $spl178),
  inference(subsumption_resolution,[],[f13628,f238])).
fof(f13628,plain,(
  ( ! [X59] : (~p(s(bool,'T_0')) | s(bool,X59) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,X59)) ) | $spl178),
  inference(superposition,[],[f11051,f10017])).
fof(f10017,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl178),
  inference(equality_resolution,[],[f9904])).
fof(f16085,plain,(
  ( ! [X17,X15,X18,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X18,X16))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X16),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.sptree.spt'(X16)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X16,fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),happ(s(fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.sptree.spt'(X16),X17))),s('type.list.list'(X16),X18))))))))))) ) | $spl212),
  inference(cnf_transformation,[],[f16085_D])).
fof(f16085_D,plain,(
  ( ! [X17,X15,X18,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X18,X16))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X16),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.sptree.spt'(X16)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X16,fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),happ(s(fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.sptree.spt'(X16),X17))),s('type.list.list'(X16),X18))))))))))) ) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f16084,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~p(s(bool,X14)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X16),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.sptree.spt'(X16)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X16,fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),happ(s(fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.sptree.spt'(X16),X17))),s('type.list.list'(X16),X18)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X18,X16)))))) ) | $spl178),
  inference(subsumption_resolution,[],[f15792,f228])).
fof(f15792,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~p(s(bool,X14)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X15),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X16),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.sptree.spt'(X16)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X16,fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),happ(s(fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.sptree.spt'(X16),X17))),s('type.list.list'(X16),X18)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X18,X16))))) | s(bool,'F_0') = s(bool,X14)) ) | $spl178),
  inference(superposition,[],[f175,f13653])).
fof(f16083,plain,(
  ( ! [X6,X8,X7,X5] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X8,X6)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),X7)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.sptree.spt'(X6),X7))),s('type.list.list'(X6),X8))))))))))) ) | $spl210),
  inference(cnf_transformation,[],[f16083_D])).
fof(f16083_D,plain,(
  ( ! [X6,X8,X7,X5] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X8,X6)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),X7)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.sptree.spt'(X6),X7))),s('type.list.list'(X6),X8))))))))))) ) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f16082,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,X4)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.sptree.spt'(X6),X7))),s('type.list.list'(X6),X8)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X8,X6)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),X7))))))) ) | $spl178),
  inference(subsumption_resolution,[],[f15790,f228])).
fof(f15790,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,X4)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.sptree.spt'(X6),X7))),s('type.list.list'(X6),X8)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X8,X6)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),X7)))))) | s(bool,'F_0') = s(bool,X4)) ) | $spl178),
  inference(superposition,[],[f174,f13653])).
fof(f15904,plain,(
  ( ! [X206,X205] : (s(bool,X206) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,X205) | s(bool,'T_0') = s(bool,X206)) ) | $spl178),
  inference(duplicate_literal_removal,[],[f15743])).
fof(f15743,plain,(
  ( ! [X206,X205] : (s(bool,X206) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,X205) | s(bool,'T_0') = s(bool,X206) | s(bool,'F_0') = s(bool,X205)) ) | $spl178),
  inference(superposition,[],[f1742,f13653])).
fof(f15364,plain,(
  ( ! [X17,X18] : (s(bool,X17) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,X17)) ) | ($spl82 | $spl181 | $spl190)),
  inference(subsumption_resolution,[],[f15316,f250])).
fof(f15316,plain,(
  ( ! [X17,X18] : (s(bool,'F_0') != s(bool,X18) | s(bool,X17) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,X17)) ) | ($spl82 | $spl181 | $spl190)),
  inference(superposition,[],[f13424,f2901])).
fof(f13424,plain,(
  ( ! [X60] : (s(bool,'F_0') != s(bool,X60) | s(bool,X60) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl181 | $spl190)),
  inference(subsumption_resolution,[],[f13403,f238])).
fof(f13403,plain,(
  ( ! [X60] : (~p(s(bool,'T_0')) | s(bool,X60) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'F_0') != s(bool,X60)) ) | ($spl181 | $spl190)),
  inference(superposition,[],[f11025,f10326])).
fof(f15362,plain,(
  ( ! [X15,X16] : (s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,X16)) ) | ($spl82 | $spl181 | $spl190)),
  inference(subsumption_resolution,[],[f15315,f250])).
fof(f15315,plain,(
  ( ! [X15,X16] : (s(bool,'F_0') != s(bool,X16) | s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,X16)) ) | ($spl82 | $spl181 | $spl190)),
  inference(superposition,[],[f13424,f2901])).
fof(f15267,plain,(
  ( ! [X17,X18] : (s(bool,X17) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,X17)) ) | ($spl82 | $spl178 | $spl190)),
  inference(subsumption_resolution,[],[f15219,f250])).
fof(f15219,plain,(
  ( ! [X17,X18] : (s(bool,'F_0') != s(bool,X18) | s(bool,X17) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,X17)) ) | ($spl82 | $spl178 | $spl190)),
  inference(superposition,[],[f13423,f2901])).
fof(f13423,plain,(
  ( ! [X59] : (s(bool,'F_0') != s(bool,X59) | s(bool,X59) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl178 | $spl190)),
  inference(subsumption_resolution,[],[f13402,f238])).
fof(f13402,plain,(
  ( ! [X59] : (~p(s(bool,'T_0')) | s(bool,X59) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') != s(bool,X59)) ) | ($spl178 | $spl190)),
  inference(superposition,[],[f11025,f10017])).
fof(f15265,plain,(
  ( ! [X15,X16] : (s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,X16)) ) | ($spl82 | $spl178 | $spl190)),
  inference(subsumption_resolution,[],[f15218,f250])).
fof(f15218,plain,(
  ( ! [X15,X16] : (s(bool,'F_0') != s(bool,X16) | s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,X16)) ) | ($spl82 | $spl178 | $spl190)),
  inference(superposition,[],[f13423,f2901])).
fof(f9904,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl178),
  inference(cnf_transformation,[],[f9904_D])).
fof(f9904_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f6764,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl111),
  inference(cnf_transformation,[],[f6764_D])).
fof(f6764_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl111),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl111])])).
fof(f14859,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) ) | $spl34),
  inference(superposition,[],[f14788,f247])).
fof(f247,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f170])).
fof(f170,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X8))),
  file('thm.misc.EVEN_fromList2','thm.numeral.numeral_distrib|split|17')).
fof(f14788,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) ) | $spl34),
  inference(trivial_inequality_removal,[],[f14781])).
fof(f14781,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) ) | $spl34),
  inference(superposition,[],[f11542,f247])).
fof(f11542,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))) ) | $spl34),
  inference(forward_demodulation,[],[f11434,f744])).
fof(f11434,plain,(
  ( ! [X6] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f176,f248])).
fof(f248,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f171])).
fof(f171,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X8))),
  file('thm.misc.EVEN_fromList2','thm.numeral.numeral_distrib|split|18')).
fof(f176,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X8] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X8))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))),
  file('thm.misc.EVEN_fromList2','thm.numeral.numeral_distrib|split|33')).
fof(f14858,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl34),
  inference(superposition,[],[f14788,f249])).
fof(f249,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f171])).
fof(f14791,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl205),
  inference(cnf_transformation,[],[f14791_D])).
fof(f14791_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl205),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl205])])).
fof(f14763,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) ) | $spl34),
  inference(superposition,[],[f11542,f247])).
fof(f14762,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl34),
  inference(superposition,[],[f11542,f249])).
fof(f14665,plain,(
  ( ! [X61,X62,X60,X63] : (s(bool,X60) != s(bool,X61) | s(bool,'F_0') = s(bool,X60) | p(s(bool,X62)) | p(s(bool,X63)) | s(bool,X61) != s(bool,X63)) ) | $spl192),
  inference(resolution,[],[f11349,f251])).
fof(f14655,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X35) != s(bool,X36) | s(bool,'F_0') = s(bool,X35) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X37) | s(bool,X38) != s(bool,X39)) ) | $spl192),
  inference(resolution,[],[f11349,f185])).
fof(f14652,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s(bool,X20) != s(bool,X21) | s(bool,'F_0') = s(bool,X20) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X21) != s(bool,X24)) ) | $spl192),
  inference(resolution,[],[f11349,f184])).
fof(f14651,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,X15) != s(bool,X16) | s(bool,'F_0') = s(bool,X15) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl192),
  inference(resolution,[],[f11349,f183])).
fof(f14650,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,X10) != s(bool,X11) | s(bool,'F_0') = s(bool,X10) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X12) | s(bool,X13) != s(bool,X14)) ) | $spl192),
  inference(resolution,[],[f11349,f181])).
fof(f14648,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,'F_0') = s(bool,X0) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) ) | $spl192),
  inference(resolution,[],[f11349,f179])).
fof(f11349,plain,(
  ( ! [X2,X0] : (p(s(bool,X2)) | s(bool,X0) != s(bool,X2) | s(bool,'F_0') = s(bool,X0)) ) | $spl192),
  inference(cnf_transformation,[],[f11349_D])).
fof(f11349_D,plain,(
  ( ! [X2,X0] : (p(s(bool,X2)) | s(bool,X0) != s(bool,X2) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f14635,plain,(
  ( ! [X218,X216,X217] : (s(bool,X216) != s(bool,X217) | p(s(bool,X217)) | p(s(bool,X218)) | s(bool,'F_0') = s(bool,X216)) ) | $spl48),
  inference(subsumption_resolution,[],[f14634,f232])).
fof(f14634,plain,(
  ( ! [X218,X216,X217] : (s(bool,'T_0') = s(bool,X218) | s(bool,X216) != s(bool,X217) | p(s(bool,X217)) | p(s(bool,X218)) | s(bool,'F_0') = s(bool,X216)) ) | $spl48),
  inference(forward_demodulation,[],[f14386,f1346])).
fof(f14386,plain,(
  ( ! [X218,X216,X217] : (s(bool,X216) != s(bool,X217) | p(s(bool,X217)) | s(bool,X218) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,X218)) | s(bool,'F_0') = s(bool,X216)) ) | $spl48),
  inference(superposition,[],[f1232,f13655])).
fof(f13655,plain,(
  ( ! [X61] : (s(bool,X61) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,X61)) ) | $spl48),
  inference(subsumption_resolution,[],[f13630,f238])).
fof(f13630,plain,(
  ( ! [X61] : (~p(s(bool,'T_0')) | s(bool,X61) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,X61)) ) | $spl48),
  inference(superposition,[],[f11051,f1346])).
fof(f14625,plain,(
  ( ! [X198,X196,X197] : (s(bool,X196) != s(bool,X197) | p(s(bool,X198)) | p(s(bool,X197)) | s(bool,'F_0') = s(bool,X196)) ) | $spl48),
  inference(subsumption_resolution,[],[f14624,f238])).
fof(f14624,plain,(
  ( ! [X198,X196,X197] : (~p(s(bool,'T_0')) | s(bool,X196) != s(bool,X197) | p(s(bool,X198)) | p(s(bool,X197)) | s(bool,'F_0') = s(bool,X196)) ) | $spl48),
  inference(forward_demodulation,[],[f14379,f1346])).
fof(f14379,plain,(
  ( ! [X198,X196,X197] : (s(bool,X196) != s(bool,X197) | p(s(bool,X198)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | p(s(bool,X197)) | s(bool,'F_0') = s(bool,X196)) ) | $spl48),
  inference(superposition,[],[f251,f13655])).
fof(f14602,plain,(
  ( ! [X146,X144,X145,X143] : (s(bool,X143) != s(bool,X144) | p(s(bool,X144)) | ~p(s(bool,X145)) | s(bool,X145) != s(bool,X146) | s(bool,'F_0') = s(bool,X143)) ) | $spl48),
  inference(subsumption_resolution,[],[f14601,f202])).
fof(f14601,plain,(
  ( ! [X146,X144,X145,X143] : (~p(s(bool,'T_0')) | s(bool,X143) != s(bool,X144) | p(s(bool,X144)) | ~p(s(bool,X145)) | s(bool,X145) != s(bool,X146) | s(bool,'F_0') = s(bool,X143)) ) | $spl48),
  inference(forward_demodulation,[],[f14346,f1346])).
fof(f14346,plain,(
  ( ! [X146,X144,X145,X143] : (s(bool,X143) != s(bool,X144) | p(s(bool,X144)) | ~p(s(bool,X145)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | s(bool,X145) != s(bool,X146) | s(bool,'F_0') = s(bool,X143)) ) | $spl48),
  inference(superposition,[],[f185,f13655])).
fof(f14590,plain,(
  ( ! [X109,X107,X110,X108] : (s(bool,X107) != s(bool,X108) | p(s(bool,X109)) | ~p(s(bool,X110)) | p(s(bool,X108)) | s(bool,'F_0') = s(bool,X107)) ) | $spl48),
  inference(subsumption_resolution,[],[f14589,f202])).
fof(f14589,plain,(
  ( ! [X109,X107,X110,X108] : (~p(s(bool,'T_0')) | s(bool,X107) != s(bool,X108) | p(s(bool,X109)) | ~p(s(bool,X110)) | p(s(bool,X108)) | s(bool,'F_0') = s(bool,X107)) ) | $spl48),
  inference(forward_demodulation,[],[f14337,f1346])).
fof(f14337,plain,(
  ( ! [X109,X107,X110,X108] : (s(bool,X107) != s(bool,X108) | p(s(bool,X109)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,X110)) | p(s(bool,X108)) | s(bool,'F_0') = s(bool,X107)) ) | $spl48),
  inference(superposition,[],[f184,f13655])).
fof(f14582,plain,(
  ( ! [X80,X81,X79,X82] : (s(bool,X79) != s(bool,X80) | p(s(bool,X81)) | p(s(bool,X80)) | s(bool,X81) != s(bool,X82) | s(bool,'F_0') = s(bool,X79)) ) | $spl48),
  inference(subsumption_resolution,[],[f14581,f238])).
fof(f14581,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | s(bool,X79) != s(bool,X80) | p(s(bool,X81)) | p(s(bool,X80)) | s(bool,X81) != s(bool,X82) | s(bool,'F_0') = s(bool,X79)) ) | $spl48),
  inference(forward_demodulation,[],[f14330,f1346])).
fof(f14330,plain,(
  ( ! [X80,X81,X79,X82] : (s(bool,X79) != s(bool,X80) | p(s(bool,X81)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | p(s(bool,X80)) | s(bool,X81) != s(bool,X82) | s(bool,'F_0') = s(bool,X79)) ) | $spl48),
  inference(superposition,[],[f183,f13655])).
fof(f14574,plain,(
  ( ! [X61,X59,X62,X60] : (s(bool,X59) != s(bool,X60) | p(s(bool,X60)) | ~p(s(bool,X61)) | s(bool,X61) != s(bool,X62) | s(bool,'F_0') = s(bool,X59)) ) | $spl48),
  inference(subsumption_resolution,[],[f14573,f202])).
fof(f14573,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'T_0')) | s(bool,X59) != s(bool,X60) | p(s(bool,X60)) | ~p(s(bool,X61)) | s(bool,X61) != s(bool,X62) | s(bool,'F_0') = s(bool,X59)) ) | $spl48),
  inference(forward_demodulation,[],[f14325,f1346])).
fof(f14325,plain,(
  ( ! [X61,X59,X62,X60] : (s(bool,X59) != s(bool,X60) | p(s(bool,X60)) | ~p(s(bool,X61)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | s(bool,X61) != s(bool,X62) | s(bool,'F_0') = s(bool,X59)) ) | $spl48),
  inference(superposition,[],[f181,f13655])).
fof(f14569,plain,(
  ( ! [X30,X28,X29,X27] : (s(bool,X27) != s(bool,X28) | p(s(bool,X29)) | p(s(bool,X28)) | s(bool,X29) != s(bool,X30) | s(bool,'F_0') = s(bool,X27)) ) | $spl48),
  inference(subsumption_resolution,[],[f14568,f238])).
fof(f14568,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,'T_0')) | s(bool,X27) != s(bool,X28) | p(s(bool,X29)) | p(s(bool,X28)) | s(bool,X29) != s(bool,X30) | s(bool,'F_0') = s(bool,X27)) ) | $spl48),
  inference(forward_demodulation,[],[f14317,f1346])).
fof(f14317,plain,(
  ( ! [X30,X28,X29,X27] : (s(bool,X27) != s(bool,X28) | p(s(bool,X29)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | p(s(bool,X28)) | s(bool,X29) != s(bool,X30) | s(bool,'F_0') = s(bool,X27)) ) | $spl48),
  inference(superposition,[],[f179,f13655])).
fof(f14564,plain,(
  ( ! [X14,X17,X15,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X16,'const.num.|48|_0',X17,X15))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X14),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X15),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.sptree.spt'(X15)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X15,fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),happ(s(fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'(X15),X16))),s('type.list.list'(X15),X17))))))))))) ) | $spl202),
  inference(cnf_transformation,[],[f14564_D])).
fof(f14564_D,plain,(
  ( ! [X14,X17,X15,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X16,'const.num.|48|_0',X17,X15))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X14),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X15),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.sptree.spt'(X15)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X15,fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),happ(s(fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'(X15),X16))),s('type.list.list'(X15),X17))))))))))) ) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f14563,plain,(
  ( ! [X14,X17,X15,X13,X16] : (~p(s(bool,X13)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X14),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X15),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.sptree.spt'(X15)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X15,fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),happ(s(fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'(X15),X16))),s('type.list.list'(X15),X17)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X16,'const.num.|48|_0',X17,X15)))))) ) | $spl48),
  inference(subsumption_resolution,[],[f14314,f228])).
fof(f14314,plain,(
  ( ! [X14,X17,X15,X13,X16] : (~p(s(bool,X13)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X14),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X15),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.sptree.spt'(X15)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X15,fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),happ(s(fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'(X15),X16))),s('type.list.list'(X15),X17)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X16,'const.num.|48|_0',X17,X15))))) | s(bool,'F_0') = s(bool,X13)) ) | $spl48),
  inference(superposition,[],[f175,f13655])).
fof(f14562,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X6,'const.num.|48|_0',X7,X5)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X5),X6)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X5),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),fun(X5,'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X5),fun(X5,'type.pair.prod'('type.num.num','type.sptree.spt'(X5))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X5),fun(X5,'type.sptree.spt'(X5)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X5,fun('type.sptree.spt'(X5),'type.sptree.spt'(X5)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X5),'type.sptree.spt'(X5)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),happ(s(fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.,_0'),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'(X5),X6))),s('type.list.list'(X5),X7))))))))))) ) | $spl200),
  inference(cnf_transformation,[],[f14562_D])).
fof(f14562_D,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X6,'const.num.|48|_0',X7,X5)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X5),X6)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X5),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),fun(X5,'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X5),fun(X5,'type.pair.prod'('type.num.num','type.sptree.spt'(X5))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X5),fun(X5,'type.sptree.spt'(X5)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X5,fun('type.sptree.spt'(X5),'type.sptree.spt'(X5)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X5),'type.sptree.spt'(X5)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),happ(s(fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.,_0'),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'(X5),X6))),s('type.list.list'(X5),X7))))))))))) ) <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f14561,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,X3)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X5),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),fun(X5,'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X5),fun(X5,'type.pair.prod'('type.num.num','type.sptree.spt'(X5))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X5),fun(X5,'type.sptree.spt'(X5)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X5,fun('type.sptree.spt'(X5),'type.sptree.spt'(X5)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X5),'type.sptree.spt'(X5)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),happ(s(fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.,_0'),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'(X5),X6))),s('type.list.list'(X5),X7)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X6,'const.num.|48|_0',X7,X5)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X5),X6))))))) ) | $spl48),
  inference(subsumption_resolution,[],[f14312,f228])).
fof(f14312,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,X3)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X5),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),fun(X5,'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X5),fun(X5,'type.pair.prod'('type.num.num','type.sptree.spt'(X5))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X5),fun(X5,'type.sptree.spt'(X5)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X5,fun('type.sptree.spt'(X5),'type.sptree.spt'(X5)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X5),'type.sptree.spt'(X5)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),happ(s(fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.,_0'),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'(X5),X6))),s('type.list.list'(X5),X7)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X6,'const.num.|48|_0',X7,X5)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X5),X6)))))) | s(bool,'F_0') = s(bool,X3)) ) | $spl48),
  inference(superposition,[],[f174,f13655])).
fof(f14507,plain,(
  ( ! [X187,X185,X186] : (p(s(bool,X186)) | p(s(bool,X187)) | s(bool,X185) != s(bool,X187) | s(bool,'F_0') = s(bool,X185)) ) | $spl48),
  inference(subsumption_resolution,[],[f14506,f238])).
fof(f14506,plain,(
  ( ! [X187,X185,X186] : (~p(s(bool,'T_0')) | p(s(bool,X186)) | p(s(bool,X187)) | s(bool,X185) != s(bool,X187) | s(bool,'F_0') = s(bool,X185)) ) | $spl48),
  inference(forward_demodulation,[],[f14259,f1346])).
fof(f14259,plain,(
  ( ! [X187,X185,X186] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | p(s(bool,X186)) | p(s(bool,X187)) | s(bool,X185) != s(bool,X187) | s(bool,'F_0') = s(bool,X185)) ) | $spl48),
  inference(superposition,[],[f251,f13655])).
fof(f14485,plain,(
  ( ! [X134,X132,X135,X133] : (p(s(bool,X133)) | ~p(s(bool,X134)) | s(bool,X132) != s(bool,X133) | s(bool,X134) != s(bool,X135) | s(bool,'F_0') = s(bool,X132)) ) | $spl48),
  inference(subsumption_resolution,[],[f14484,f202])).
fof(f14484,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'T_0')) | p(s(bool,X133)) | ~p(s(bool,X134)) | s(bool,X132) != s(bool,X133) | s(bool,X134) != s(bool,X135) | s(bool,'F_0') = s(bool,X132)) ) | $spl48),
  inference(forward_demodulation,[],[f14225,f1346])).
fof(f14225,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | p(s(bool,X133)) | ~p(s(bool,X134)) | s(bool,X132) != s(bool,X133) | s(bool,X134) != s(bool,X135) | s(bool,'F_0') = s(bool,X132)) ) | $spl48),
  inference(superposition,[],[f185,f13655])).
fof(f14475,plain,(
  ( ! [X103,X101,X102,X100] : (p(s(bool,X101)) | ~p(s(bool,X102)) | p(s(bool,X103)) | s(bool,X100) != s(bool,X103) | s(bool,'F_0') = s(bool,X100)) ) | $spl48),
  inference(subsumption_resolution,[],[f14474,f202])).
fof(f14474,plain,(
  ( ! [X103,X101,X102,X100] : (~p(s(bool,'T_0')) | p(s(bool,X101)) | ~p(s(bool,X102)) | p(s(bool,X103)) | s(bool,X100) != s(bool,X103) | s(bool,'F_0') = s(bool,X100)) ) | $spl48),
  inference(forward_demodulation,[],[f14217,f1346])).
fof(f14217,plain,(
  ( ! [X103,X101,X102,X100] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | p(s(bool,X101)) | ~p(s(bool,X102)) | p(s(bool,X103)) | s(bool,X100) != s(bool,X103) | s(bool,'F_0') = s(bool,X100)) ) | $spl48),
  inference(superposition,[],[f184,f13655])).
fof(f14467,plain,(
  ( ! [X80,X83,X81,X82] : (p(s(bool,X81)) | p(s(bool,X82)) | s(bool,X81) != s(bool,X83) | s(bool,X80) != s(bool,X82) | s(bool,'F_0') = s(bool,X80)) ) | $spl48),
  inference(subsumption_resolution,[],[f14466,f238])).
fof(f14466,plain,(
  ( ! [X80,X83,X81,X82] : (~p(s(bool,'T_0')) | p(s(bool,X81)) | p(s(bool,X82)) | s(bool,X81) != s(bool,X83) | s(bool,X80) != s(bool,X82) | s(bool,'F_0') = s(bool,X80)) ) | $spl48),
  inference(forward_demodulation,[],[f14212,f1346])).
fof(f14212,plain,(
  ( ! [X80,X83,X81,X82] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | p(s(bool,X81)) | p(s(bool,X82)) | s(bool,X81) != s(bool,X83) | s(bool,X80) != s(bool,X82) | s(bool,'F_0') = s(bool,X80)) ) | $spl48),
  inference(superposition,[],[f183,f13655])).
fof(f14459,plain,(
  ( ! [X54,X52,X55,X53] : (p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X53) | s(bool,X54) != s(bool,X55) | s(bool,'F_0') = s(bool,X52)) ) | $spl48),
  inference(subsumption_resolution,[],[f14458,f202])).
fof(f14458,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,'T_0')) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X53) | s(bool,X54) != s(bool,X55) | s(bool,'F_0') = s(bool,X52)) ) | $spl48),
  inference(forward_demodulation,[],[f14205,f1346])).
fof(f14205,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X53) | s(bool,X54) != s(bool,X55) | s(bool,'F_0') = s(bool,X52)) ) | $spl48),
  inference(superposition,[],[f181,f13655])).
fof(f14449,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26) | s(bool,'F_0') = s(bool,X24)) ) | $spl48),
  inference(subsumption_resolution,[],[f14448,f238])).
fof(f14448,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26) | s(bool,'F_0') = s(bool,X24)) ) | $spl48),
  inference(forward_demodulation,[],[f14198,f1346])).
fof(f14198,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26) | s(bool,'F_0') = s(bool,X24)) ) | $spl48),
  inference(superposition,[],[f179,f13655])).
fof(f14136,plain,(
  ( ! [X218,X216,X217] : (s(bool,X216) != s(bool,X217) | p(s(bool,X217)) | p(s(bool,X218)) | s(bool,'F_0') = s(bool,X216)) ) | $spl34),
  inference(subsumption_resolution,[],[f14135,f232])).
fof(f14135,plain,(
  ( ! [X218,X216,X217] : (s(bool,'T_0') = s(bool,X218) | s(bool,X216) != s(bool,X217) | p(s(bool,X217)) | p(s(bool,X218)) | s(bool,'F_0') = s(bool,X216)) ) | $spl34),
  inference(forward_demodulation,[],[f13895,f744])).
fof(f13895,plain,(
  ( ! [X218,X216,X217] : (s(bool,X216) != s(bool,X217) | p(s(bool,X217)) | s(bool,X218) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | p(s(bool,X218)) | s(bool,'F_0') = s(bool,X216)) ) | $spl34),
  inference(superposition,[],[f1232,f13651])).
fof(f13651,plain,(
  ( ! [X56] : (s(bool,X56) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X56)) ) | $spl34),
  inference(subsumption_resolution,[],[f13626,f238])).
fof(f13626,plain,(
  ( ! [X56] : (~p(s(bool,'T_0')) | s(bool,X56) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X56)) ) | $spl34),
  inference(superposition,[],[f11051,f744])).
fof(f14126,plain,(
  ( ! [X198,X196,X197] : (s(bool,X196) != s(bool,X197) | p(s(bool,X198)) | p(s(bool,X197)) | s(bool,'F_0') = s(bool,X196)) ) | $spl34),
  inference(subsumption_resolution,[],[f14125,f238])).
fof(f14125,plain,(
  ( ! [X198,X196,X197] : (~p(s(bool,'T_0')) | s(bool,X196) != s(bool,X197) | p(s(bool,X198)) | p(s(bool,X197)) | s(bool,'F_0') = s(bool,X196)) ) | $spl34),
  inference(forward_demodulation,[],[f13888,f744])).
fof(f13888,plain,(
  ( ! [X198,X196,X197] : (s(bool,X196) != s(bool,X197) | p(s(bool,X198)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X197)) | s(bool,'F_0') = s(bool,X196)) ) | $spl34),
  inference(superposition,[],[f251,f13651])).
fof(f14103,plain,(
  ( ! [X146,X144,X145,X143] : (s(bool,X143) != s(bool,X144) | p(s(bool,X144)) | ~p(s(bool,X145)) | s(bool,X145) != s(bool,X146) | s(bool,'F_0') = s(bool,X143)) ) | $spl34),
  inference(subsumption_resolution,[],[f14102,f202])).
fof(f14102,plain,(
  ( ! [X146,X144,X145,X143] : (~p(s(bool,'T_0')) | s(bool,X143) != s(bool,X144) | p(s(bool,X144)) | ~p(s(bool,X145)) | s(bool,X145) != s(bool,X146) | s(bool,'F_0') = s(bool,X143)) ) | $spl34),
  inference(forward_demodulation,[],[f13855,f744])).
fof(f13855,plain,(
  ( ! [X146,X144,X145,X143] : (s(bool,X143) != s(bool,X144) | p(s(bool,X144)) | ~p(s(bool,X145)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,X145) != s(bool,X146) | s(bool,'F_0') = s(bool,X143)) ) | $spl34),
  inference(superposition,[],[f185,f13651])).
fof(f14091,plain,(
  ( ! [X109,X107,X110,X108] : (s(bool,X107) != s(bool,X108) | p(s(bool,X109)) | ~p(s(bool,X110)) | p(s(bool,X108)) | s(bool,'F_0') = s(bool,X107)) ) | $spl34),
  inference(subsumption_resolution,[],[f14090,f202])).
fof(f14090,plain,(
  ( ! [X109,X107,X110,X108] : (~p(s(bool,'T_0')) | s(bool,X107) != s(bool,X108) | p(s(bool,X109)) | ~p(s(bool,X110)) | p(s(bool,X108)) | s(bool,'F_0') = s(bool,X107)) ) | $spl34),
  inference(forward_demodulation,[],[f13846,f744])).
fof(f13846,plain,(
  ( ! [X109,X107,X110,X108] : (s(bool,X107) != s(bool,X108) | p(s(bool,X109)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X110)) | p(s(bool,X108)) | s(bool,'F_0') = s(bool,X107)) ) | $spl34),
  inference(superposition,[],[f184,f13651])).
fof(f14083,plain,(
  ( ! [X80,X81,X79,X82] : (s(bool,X79) != s(bool,X80) | p(s(bool,X81)) | p(s(bool,X80)) | s(bool,X81) != s(bool,X82) | s(bool,'F_0') = s(bool,X79)) ) | $spl34),
  inference(subsumption_resolution,[],[f14082,f238])).
fof(f14082,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | s(bool,X79) != s(bool,X80) | p(s(bool,X81)) | p(s(bool,X80)) | s(bool,X81) != s(bool,X82) | s(bool,'F_0') = s(bool,X79)) ) | $spl34),
  inference(forward_demodulation,[],[f13839,f744])).
fof(f13839,plain,(
  ( ! [X80,X81,X79,X82] : (s(bool,X79) != s(bool,X80) | p(s(bool,X81)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X80)) | s(bool,X81) != s(bool,X82) | s(bool,'F_0') = s(bool,X79)) ) | $spl34),
  inference(superposition,[],[f183,f13651])).
fof(f14075,plain,(
  ( ! [X61,X59,X62,X60] : (s(bool,X59) != s(bool,X60) | p(s(bool,X60)) | ~p(s(bool,X61)) | s(bool,X61) != s(bool,X62) | s(bool,'F_0') = s(bool,X59)) ) | $spl34),
  inference(subsumption_resolution,[],[f14074,f202])).
fof(f14074,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'T_0')) | s(bool,X59) != s(bool,X60) | p(s(bool,X60)) | ~p(s(bool,X61)) | s(bool,X61) != s(bool,X62) | s(bool,'F_0') = s(bool,X59)) ) | $spl34),
  inference(forward_demodulation,[],[f13834,f744])).
fof(f13834,plain,(
  ( ! [X61,X59,X62,X60] : (s(bool,X59) != s(bool,X60) | p(s(bool,X60)) | ~p(s(bool,X61)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,X61) != s(bool,X62) | s(bool,'F_0') = s(bool,X59)) ) | $spl34),
  inference(superposition,[],[f181,f13651])).
fof(f14070,plain,(
  ( ! [X30,X28,X29,X27] : (s(bool,X27) != s(bool,X28) | p(s(bool,X29)) | p(s(bool,X28)) | s(bool,X29) != s(bool,X30) | s(bool,'F_0') = s(bool,X27)) ) | $spl34),
  inference(subsumption_resolution,[],[f14069,f238])).
fof(f14069,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,'T_0')) | s(bool,X27) != s(bool,X28) | p(s(bool,X29)) | p(s(bool,X28)) | s(bool,X29) != s(bool,X30) | s(bool,'F_0') = s(bool,X27)) ) | $spl34),
  inference(forward_demodulation,[],[f13826,f744])).
fof(f13826,plain,(
  ( ! [X30,X28,X29,X27] : (s(bool,X27) != s(bool,X28) | p(s(bool,X29)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X28)) | s(bool,X29) != s(bool,X30) | s(bool,'F_0') = s(bool,X27)) ) | $spl34),
  inference(superposition,[],[f179,f13651])).
fof(f8776,plain,(
  ( ! [X47,X45,X48,X46] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X47,'const.arithmetic.ZERO_0',X48,X46))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X45),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X46),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.sptree.spt'(X46)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X46,fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),happ(s(fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X46),X47))),s('type.list.list'(X46),X48))))))))))) ) | $spl154),
  inference(cnf_transformation,[],[f8776_D])).
fof(f8776_D,plain,(
  ( ! [X47,X45,X48,X46] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X45)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X47,'const.arithmetic.ZERO_0',X48,X46))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X45),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X46),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.sptree.spt'(X46)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X46,fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),happ(s(fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X46),X47))),s('type.list.list'(X46),X48))))))))))) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f14065,plain,(
  ( ! [X14,X17,X15,X13,X16] : (~p(s(bool,X13)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X14),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X15),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.sptree.spt'(X15)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X15,fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),happ(s(fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X15),X16))),s('type.list.list'(X15),X17)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X16,'const.arithmetic.ZERO_0',X17,X15)))))) ) | $spl34),
  inference(subsumption_resolution,[],[f13823,f228])).
fof(f13823,plain,(
  ( ! [X14,X17,X15,X13,X16] : (~p(s(bool,X13)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X14),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X15),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.sptree.spt'(X15)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X15,fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),happ(s(fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X15),X16))),s('type.list.list'(X15),X17)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X16,'const.arithmetic.ZERO_0',X17,X15))))) | s(bool,'F_0') = s(bool,X13)) ) | $spl34),
  inference(superposition,[],[f175,f13651])).
fof(f9181,plain,(
  ( ! [X47,X45,X48,X46] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X45)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X47,'const.arithmetic.ZERO_0',X48,X46)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X46),X47)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X45),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X46),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.sptree.spt'(X46)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X46,fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),happ(s(fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X46),X47))),s('type.list.list'(X46),X48))))))))))) ) | $spl172),
  inference(cnf_transformation,[],[f9181_D])).
fof(f9181_D,plain,(
  ( ! [X47,X45,X48,X46] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X45)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X47,'const.arithmetic.ZERO_0',X48,X46)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X46),X47)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X45),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X46),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.sptree.spt'(X46)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X46,fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),happ(s(fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X46),X47))),s('type.list.list'(X46),X48))))))))))) ) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f14064,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,X3)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X5),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),fun(X5,'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X5),fun(X5,'type.pair.prod'('type.num.num','type.sptree.spt'(X5))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X5),fun(X5,'type.sptree.spt'(X5)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X5,fun('type.sptree.spt'(X5),'type.sptree.spt'(X5)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X5),'type.sptree.spt'(X5)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),happ(s(fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X5),X6))),s('type.list.list'(X5),X7)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X6,'const.arithmetic.ZERO_0',X7,X5)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X5),X6))))))) ) | $spl34),
  inference(subsumption_resolution,[],[f13821,f228])).
fof(f13821,plain,(
  ( ! [X6,X4,X7,X5,X3] : (~p(s(bool,X3)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X4)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X4),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X5),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),fun(X5,'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X5),fun(X5,'type.pair.prod'('type.num.num','type.sptree.spt'(X5))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X5),fun(X5,'type.sptree.spt'(X5)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X5,fun('type.sptree.spt'(X5),'type.sptree.spt'(X5)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X5),'type.sptree.spt'(X5)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X5)),happ(s(fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X5),'type.pair.prod'('type.num.num','type.sptree.spt'(X5)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X5),X6))),s('type.list.list'(X5),X7)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X6,'const.arithmetic.ZERO_0',X7,X5)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X5),X6)))))) | s(bool,'F_0') = s(bool,X3)) ) | $spl34),
  inference(superposition,[],[f174,f13651])).
fof(f14011,plain,(
  ( ! [X187,X185,X186] : (p(s(bool,X186)) | p(s(bool,X187)) | s(bool,X185) != s(bool,X187) | s(bool,'F_0') = s(bool,X185)) ) | $spl34),
  inference(subsumption_resolution,[],[f14010,f238])).
fof(f14010,plain,(
  ( ! [X187,X185,X186] : (~p(s(bool,'T_0')) | p(s(bool,X186)) | p(s(bool,X187)) | s(bool,X185) != s(bool,X187) | s(bool,'F_0') = s(bool,X185)) ) | $spl34),
  inference(forward_demodulation,[],[f13767,f744])).
fof(f13767,plain,(
  ( ! [X187,X185,X186] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X186)) | p(s(bool,X187)) | s(bool,X185) != s(bool,X187) | s(bool,'F_0') = s(bool,X185)) ) | $spl34),
  inference(superposition,[],[f251,f13651])).
fof(f13989,plain,(
  ( ! [X134,X132,X135,X133] : (p(s(bool,X133)) | ~p(s(bool,X134)) | s(bool,X132) != s(bool,X133) | s(bool,X134) != s(bool,X135) | s(bool,'F_0') = s(bool,X132)) ) | $spl34),
  inference(subsumption_resolution,[],[f13988,f202])).
fof(f13988,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'T_0')) | p(s(bool,X133)) | ~p(s(bool,X134)) | s(bool,X132) != s(bool,X133) | s(bool,X134) != s(bool,X135) | s(bool,'F_0') = s(bool,X132)) ) | $spl34),
  inference(forward_demodulation,[],[f13733,f744])).
fof(f13733,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X133)) | ~p(s(bool,X134)) | s(bool,X132) != s(bool,X133) | s(bool,X134) != s(bool,X135) | s(bool,'F_0') = s(bool,X132)) ) | $spl34),
  inference(superposition,[],[f185,f13651])).
fof(f13979,plain,(
  ( ! [X103,X101,X102,X100] : (p(s(bool,X101)) | ~p(s(bool,X102)) | p(s(bool,X103)) | s(bool,X100) != s(bool,X103) | s(bool,'F_0') = s(bool,X100)) ) | $spl34),
  inference(subsumption_resolution,[],[f13978,f202])).
fof(f13978,plain,(
  ( ! [X103,X101,X102,X100] : (~p(s(bool,'T_0')) | p(s(bool,X101)) | ~p(s(bool,X102)) | p(s(bool,X103)) | s(bool,X100) != s(bool,X103) | s(bool,'F_0') = s(bool,X100)) ) | $spl34),
  inference(forward_demodulation,[],[f13725,f744])).
fof(f13725,plain,(
  ( ! [X103,X101,X102,X100] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X101)) | ~p(s(bool,X102)) | p(s(bool,X103)) | s(bool,X100) != s(bool,X103) | s(bool,'F_0') = s(bool,X100)) ) | $spl34),
  inference(superposition,[],[f184,f13651])).
fof(f13971,plain,(
  ( ! [X80,X83,X81,X82] : (p(s(bool,X81)) | p(s(bool,X82)) | s(bool,X81) != s(bool,X83) | s(bool,X80) != s(bool,X82) | s(bool,'F_0') = s(bool,X80)) ) | $spl34),
  inference(subsumption_resolution,[],[f13970,f238])).
fof(f13970,plain,(
  ( ! [X80,X83,X81,X82] : (~p(s(bool,'T_0')) | p(s(bool,X81)) | p(s(bool,X82)) | s(bool,X81) != s(bool,X83) | s(bool,X80) != s(bool,X82) | s(bool,'F_0') = s(bool,X80)) ) | $spl34),
  inference(forward_demodulation,[],[f13720,f744])).
fof(f13720,plain,(
  ( ! [X80,X83,X81,X82] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X81)) | p(s(bool,X82)) | s(bool,X81) != s(bool,X83) | s(bool,X80) != s(bool,X82) | s(bool,'F_0') = s(bool,X80)) ) | $spl34),
  inference(superposition,[],[f183,f13651])).
fof(f13963,plain,(
  ( ! [X54,X52,X55,X53] : (p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X53) | s(bool,X54) != s(bool,X55) | s(bool,'F_0') = s(bool,X52)) ) | $spl34),
  inference(subsumption_resolution,[],[f13962,f202])).
fof(f13962,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,'T_0')) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X53) | s(bool,X54) != s(bool,X55) | s(bool,'F_0') = s(bool,X52)) ) | $spl34),
  inference(forward_demodulation,[],[f13713,f744])).
fof(f13713,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X53) | s(bool,X54) != s(bool,X55) | s(bool,'F_0') = s(bool,X52)) ) | $spl34),
  inference(superposition,[],[f181,f13651])).
fof(f13953,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26) | s(bool,'F_0') = s(bool,X24)) ) | $spl34),
  inference(subsumption_resolution,[],[f13952,f238])).
fof(f13952,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26) | s(bool,'F_0') = s(bool,X24)) ) | $spl34),
  inference(forward_demodulation,[],[f13706,f744])).
fof(f13706,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26) | s(bool,'F_0') = s(bool,X24)) ) | $spl34),
  inference(superposition,[],[f179,f13651])).
fof(f13588,plain,(
  ( ! [X61,X59,X60,X58] : (s(bool,X58) = s(bool,X59) | s(bool,'F_0') = s(bool,X58) | p(s(bool,X60)) | ~p(s(bool,X61)) | s(bool,X59) != s(bool,X61)) )),
  inference(resolution,[],[f11051,f251])).
fof(f13579,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X35) = s(bool,X36) | s(bool,'F_0') = s(bool,X35) | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X38) | s(bool,X37) != s(bool,X39)) )),
  inference(resolution,[],[f11051,f185])).
fof(f13577,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,X25) = s(bool,X26) | s(bool,'F_0') = s(bool,X25) | p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X26) != s(bool,X28)) )),
  inference(resolution,[],[f11051,f184])).
fof(f13575,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,X15) = s(bool,X16) | s(bool,'F_0') = s(bool,X15) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) )),
  inference(resolution,[],[f11051,f183])).
fof(f13574,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,X10) = s(bool,X11) | s(bool,'F_0') = s(bool,X10) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,X14)) )),
  inference(resolution,[],[f11051,f181])).
fof(f13572,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X0) | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) )),
  inference(resolution,[],[f11051,f179])).
fof(f13413,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X1) != s(bool,X3) | ~p(s(bool,X3)) | s(bool,'F_0') != s(bool,X0)) ) | $spl196),
  inference(cnf_transformation,[],[f13413_D])).
fof(f13413_D,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X1) != s(bool,X3) | ~p(s(bool,X3)) | s(bool,'F_0') != s(bool,X0)) ) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f13362,plain,(
  ( ! [X61,X59,X60,X58] : (s(bool,X58) != s(bool,X59) | s(bool,'F_0') != s(bool,X58) | p(s(bool,X60)) | ~p(s(bool,X61)) | s(bool,X59) != s(bool,X61)) ) | $spl190),
  inference(resolution,[],[f11025,f251])).
fof(f13353,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X35) != s(bool,X36) | s(bool,'F_0') != s(bool,X35) | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X38) | s(bool,X37) != s(bool,X39)) ) | $spl190),
  inference(resolution,[],[f11025,f185])).
fof(f13351,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,X25) != s(bool,X26) | s(bool,'F_0') != s(bool,X25) | p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X26) != s(bool,X28)) ) | $spl190),
  inference(resolution,[],[f11025,f184])).
fof(f13349,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,X15) != s(bool,X16) | s(bool,'F_0') != s(bool,X15) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl190),
  inference(resolution,[],[f11025,f183])).
fof(f13348,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,X10) != s(bool,X11) | s(bool,'F_0') != s(bool,X10) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,X14)) ) | $spl190),
  inference(resolution,[],[f11025,f181])).
fof(f13346,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,'F_0') != s(bool,X0) | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) ) | $spl190),
  inference(resolution,[],[f11025,f179])).
fof(f13188,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | s(bool,'F_0') != s(bool,X0)) ) | $spl194),
  inference(cnf_transformation,[],[f13188_D])).
fof(f13188_D,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | s(bool,'F_0') != s(bool,X0)) ) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f13145,plain,(
  ( ! [X61,X62,X60,X63] : (s(bool,X60) = s(bool,X61) | s(bool,'F_0') != s(bool,X60) | p(s(bool,X62)) | p(s(bool,X63)) | s(bool,X61) != s(bool,X63)) )),
  inference(resolution,[],[f10938,f251])).
fof(f13135,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X35) = s(bool,X36) | s(bool,'F_0') != s(bool,X35) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X37) | s(bool,X38) != s(bool,X39)) )),
  inference(resolution,[],[f10938,f185])).
fof(f13132,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s(bool,X20) = s(bool,X21) | s(bool,'F_0') != s(bool,X20) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X21) != s(bool,X24)) )),
  inference(resolution,[],[f10938,f184])).
fof(f13131,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,X15) = s(bool,X16) | s(bool,'F_0') != s(bool,X15) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) )),
  inference(resolution,[],[f10938,f183])).
fof(f13130,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,X10) = s(bool,X11) | s(bool,'F_0') != s(bool,X10) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X12) | s(bool,X13) != s(bool,X14)) )),
  inference(resolution,[],[f10938,f181])).
fof(f13128,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'F_0') != s(bool,X0) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) )),
  inference(resolution,[],[f10938,f179])).
fof(f1572,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6))))) ) | $spl54),
  inference(cnf_transformation,[],[f1572_D])).
fof(f1572_D,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6))))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f12730,plain,(
  ( ! [X52,X50,X53,X51,X49] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X49)))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X50)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X50),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X51),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.sptree.spt'(X51)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X51,fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),happ(s(fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X51),X52))),s('type.list.list'(X51),X53)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X52,'const.arithmetic.ZERO_0',X53,X51)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X51),X52)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49)))) )),
  inference(superposition,[],[f174,f246])).
fof(f246,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f170])).
fof(f12729,plain,(
  ( ! [X47,X45,X48,X46,X44] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X44)))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X45)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X45),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X46),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.sptree.spt'(X46)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X46,fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),happ(s(fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X46),X47))),s('type.list.list'(X46),X48)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X47,'const.arithmetic.ZERO_0',X48,X46)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X46),X47)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))) )),
  inference(superposition,[],[f174,f248])).
fof(f6542,plain,(
  ( ! [X405,X407,X409,X404,X406] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X409)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X404,X405,X406,X407)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X407),X404))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X405)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X409),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X407),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),fun(X407,'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X407),fun(X407,'type.pair.prod'('type.num.num','type.sptree.spt'(X407))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X407),fun(X407,'type.sptree.spt'(X407)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X407,fun('type.sptree.spt'(X407),'type.sptree.spt'(X407)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X407),'type.sptree.spt'(X407)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),happ(s(fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.,_0'),s('type.num.num',X405))),s('type.sptree.spt'(X407),X404))),s('type.list.list'(X407),X406))))))))))) ) | $spl104),
  inference(cnf_transformation,[],[f6542_D])).
fof(f6542_D,plain,(
  ( ! [X405,X407,X409,X404,X406] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X409)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X404,X405,X406,X407)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X407),X404))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X405)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X409),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X407),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),fun(X407,'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X407),fun(X407,'type.pair.prod'('type.num.num','type.sptree.spt'(X407))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X407),fun(X407,'type.sptree.spt'(X407)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X407,fun('type.sptree.spt'(X407),'type.sptree.spt'(X407)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X407),'type.sptree.spt'(X407)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),happ(s(fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.,_0'),s('type.num.num',X405))),s('type.sptree.spt'(X407),X404))),s('type.list.list'(X407),X406))))))))))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f12869,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (p(s(bool,X65)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X66)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X66),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X64),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X64)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X64)),fun(X64,'type.pair.prod'('type.num.num','type.sptree.spt'(X64)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X64),fun(X64,'type.pair.prod'('type.num.num','type.sptree.spt'(X64))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X64),'type.pair.prod'('type.num.num','type.sptree.spt'(X64)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X64),fun(X64,'type.sptree.spt'(X64)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X64,fun('type.sptree.spt'(X64),'type.sptree.spt'(X64)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X64),'type.sptree.spt'(X64)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X64)),happ(s(fun('type.sptree.spt'(X64),'type.pair.prod'('type.num.num','type.sptree.spt'(X64))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X64),'type.pair.prod'('type.num.num','type.sptree.spt'(X64)))),'const.pair.,_0'),s('type.num.num',X62))),s('type.sptree.spt'(X64),X61))),s('type.list.list'(X64),X63)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X62)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X61,X62,X63,X64)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X64),X61)))))) ) | $spl82),
  inference(subsumption_resolution,[],[f12718,f232])).
fof(f12718,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (p(s(bool,X65)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X66)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X66),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X64),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X64)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X64)),fun(X64,'type.pair.prod'('type.num.num','type.sptree.spt'(X64)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X64),fun(X64,'type.pair.prod'('type.num.num','type.sptree.spt'(X64))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X64),'type.pair.prod'('type.num.num','type.sptree.spt'(X64)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X64),fun(X64,'type.sptree.spt'(X64)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X64,fun('type.sptree.spt'(X64),'type.sptree.spt'(X64)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X64),'type.sptree.spt'(X64)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X64)),happ(s(fun('type.sptree.spt'(X64),'type.pair.prod'('type.num.num','type.sptree.spt'(X64))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X64),'type.pair.prod'('type.num.num','type.sptree.spt'(X64)))),'const.pair.,_0'),s('type.num.num',X62))),s('type.sptree.spt'(X64),X61))),s('type.list.list'(X64),X63)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X62)))) | s(bool,'T_0') = s(bool,X65) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X61,X62,X63,X64)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X64),X61)))))) ) | $spl82),
  inference(superposition,[],[f174,f2901])).
fof(f12868,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (p(s(bool,X59)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X60)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X60),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X58),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X58)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X58)),fun(X58,'type.pair.prod'('type.num.num','type.sptree.spt'(X58)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X58),fun(X58,'type.pair.prod'('type.num.num','type.sptree.spt'(X58))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X58),'type.pair.prod'('type.num.num','type.sptree.spt'(X58)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X58),fun(X58,'type.sptree.spt'(X58)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X58,fun('type.sptree.spt'(X58),'type.sptree.spt'(X58)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X58),'type.sptree.spt'(X58)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X58)),happ(s(fun('type.sptree.spt'(X58),'type.pair.prod'('type.num.num','type.sptree.spt'(X58))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X58),'type.pair.prod'('type.num.num','type.sptree.spt'(X58)))),'const.pair.,_0'),s('type.num.num',X56))),s('type.sptree.spt'(X58),X55))),s('type.list.list'(X58),X57)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X56)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X55,X56,X57,X58)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X58),X55)))))) ) | $spl82),
  inference(subsumption_resolution,[],[f12717,f232])).
fof(f12717,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (p(s(bool,X59)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X60)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X60),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X58),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X58)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X58)),fun(X58,'type.pair.prod'('type.num.num','type.sptree.spt'(X58)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X58),fun(X58,'type.pair.prod'('type.num.num','type.sptree.spt'(X58))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X58),'type.pair.prod'('type.num.num','type.sptree.spt'(X58)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X58),fun(X58,'type.sptree.spt'(X58)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X58,fun('type.sptree.spt'(X58),'type.sptree.spt'(X58)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X58),'type.sptree.spt'(X58)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X58)),happ(s(fun('type.sptree.spt'(X58),'type.pair.prod'('type.num.num','type.sptree.spt'(X58))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X58),'type.pair.prod'('type.num.num','type.sptree.spt'(X58)))),'const.pair.,_0'),s('type.num.num',X56))),s('type.sptree.spt'(X58),X55))),s('type.list.list'(X58),X57)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X56)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X55,X56,X57,X58)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X58),X55))))) | s(bool,'T_0') = s(bool,X59)) ) | $spl82),
  inference(superposition,[],[f174,f2901])).
fof(f8683,plain,(
  ( ! [X44] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X44)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))) ) | $spl134),
  inference(cnf_transformation,[],[f8683_D])).
fof(f8683_D,plain,(
  ( ! [X44] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X44)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f3307,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.sptree.spt'(X14)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X14,fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),happ(s(fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s('type.num.num',X15))),s('type.sptree.spt'(X14),X16))),s('type.list.list'(X14),X17)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X16,X15,X17,X14)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),X16))))))) ) | $spl88),
  inference(cnf_transformation,[],[f3307_D])).
fof(f3307_D,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.sptree.spt'(X14)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X14,fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),happ(s(fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s('type.num.num',X15))),s('type.sptree.spt'(X14),X16))),s('type.list.list'(X14),X17)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X16,X15,X17,X14)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),X16))))))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f12652,plain,(
  ( ! [X30,X28,X31,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.sptree.spt'(X28)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X28,fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),happ(s(fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s('type.num.num',X29))),s('type.sptree.spt'(X28),X30))),s('type.list.list'(X28),X31)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X30,X29,X31,X28)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),X30)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X29)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))) )),
  inference(superposition,[],[f174,f246])).
fof(f12651,plain,(
  ( ! [X26,X24,X23,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X23),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.sptree.spt'(X23)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X23,fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),happ(s(fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s('type.num.num',X24))),s('type.sptree.spt'(X23),X25))),s('type.list.list'(X23),X26)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X22)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X25,X24,X26,X23)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X23),X25)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X24)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))) )),
  inference(superposition,[],[f174,f248])).
fof(f6544,plain,(
  ( ! [X428,X430,X429,X425,X427] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X425),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X427),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),fun(X427,'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X427),fun(X427,'type.pair.prod'('type.num.num','type.sptree.spt'(X427))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X427),fun(X427,'type.sptree.spt'(X427)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X427,fun('type.sptree.spt'(X427),'type.sptree.spt'(X427)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X427),'type.sptree.spt'(X427)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),happ(s(fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.,_0'),s('type.num.num',X428))),s('type.sptree.spt'(X427),X429))),s('type.list.list'(X427),X430)))))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X425))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X428)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X429,X428,X430,X427)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X427),X429))))))) ) | $spl106),
  inference(cnf_transformation,[],[f6544_D])).
fof(f6544_D,plain,(
  ( ! [X428,X430,X429,X425,X427] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X425),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X427),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),fun(X427,'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X427),fun(X427,'type.pair.prod'('type.num.num','type.sptree.spt'(X427))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X427),fun(X427,'type.sptree.spt'(X427)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X427,fun('type.sptree.spt'(X427),'type.sptree.spt'(X427)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X427),'type.sptree.spt'(X427)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),happ(s(fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.,_0'),s('type.num.num',X428))),s('type.sptree.spt'(X427),X429))),s('type.list.list'(X427),X430)))))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X425))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X428)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X429,X428,X430,X427)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X427),X429))))))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f12821,plain,(
  ( ! [X94,X92,X95,X93,X91,X96] : (p(s(bool,X92)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X91),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X93),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X93)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X93)),fun(X93,'type.pair.prod'('type.num.num','type.sptree.spt'(X93)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X93),fun(X93,'type.pair.prod'('type.num.num','type.sptree.spt'(X93))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X93),'type.pair.prod'('type.num.num','type.sptree.spt'(X93)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X93),fun(X93,'type.sptree.spt'(X93)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X93,fun('type.sptree.spt'(X93),'type.sptree.spt'(X93)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X93),'type.sptree.spt'(X93)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X93)),happ(s(fun('type.sptree.spt'(X93),'type.pair.prod'('type.num.num','type.sptree.spt'(X93))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X93),'type.pair.prod'('type.num.num','type.sptree.spt'(X93)))),'const.pair.,_0'),s('type.num.num',X94))),s('type.sptree.spt'(X93),X95))),s('type.list.list'(X93),X96)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X95,X94,X96,X93)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X93),X95)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X94)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X91)))) ) | $spl82),
  inference(subsumption_resolution,[],[f12644,f232])).
fof(f12644,plain,(
  ( ! [X94,X92,X95,X93,X91,X96] : (p(s(bool,X92)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X91),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X93),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X93)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X93)),fun(X93,'type.pair.prod'('type.num.num','type.sptree.spt'(X93)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X93),fun(X93,'type.pair.prod'('type.num.num','type.sptree.spt'(X93))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X93),'type.pair.prod'('type.num.num','type.sptree.spt'(X93)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X93),fun(X93,'type.sptree.spt'(X93)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X93,fun('type.sptree.spt'(X93),'type.sptree.spt'(X93)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X93),'type.sptree.spt'(X93)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X93)),happ(s(fun('type.sptree.spt'(X93),'type.pair.prod'('type.num.num','type.sptree.spt'(X93))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X93),'type.pair.prod'('type.num.num','type.sptree.spt'(X93)))),'const.pair.,_0'),s('type.num.num',X94))),s('type.sptree.spt'(X93),X95))),s('type.list.list'(X93),X96)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X95,X94,X96,X93)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X93),X95)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X94)))) | s(bool,'T_0') = s(bool,X92) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X91)))) ) | $spl82),
  inference(superposition,[],[f174,f2901])).
fof(f12820,plain,(
  ( ! [X90,X88,X87,X85,X89,X86] : (p(s(bool,X86)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X85),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X87),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X87)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X87)),fun(X87,'type.pair.prod'('type.num.num','type.sptree.spt'(X87)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X87),fun(X87,'type.pair.prod'('type.num.num','type.sptree.spt'(X87))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X87),'type.pair.prod'('type.num.num','type.sptree.spt'(X87)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X87),fun(X87,'type.sptree.spt'(X87)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X87,fun('type.sptree.spt'(X87),'type.sptree.spt'(X87)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X87),'type.sptree.spt'(X87)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X87)),happ(s(fun('type.sptree.spt'(X87),'type.pair.prod'('type.num.num','type.sptree.spt'(X87))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X87),'type.pair.prod'('type.num.num','type.sptree.spt'(X87)))),'const.pair.,_0'),s('type.num.num',X88))),s('type.sptree.spt'(X87),X89))),s('type.list.list'(X87),X90)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X89,X88,X90,X87)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X87),X89)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X88)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X85)))) ) | $spl82),
  inference(subsumption_resolution,[],[f12643,f232])).
fof(f12643,plain,(
  ( ! [X90,X88,X87,X85,X89,X86] : (p(s(bool,X86)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X85),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X87),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X87)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X87)),fun(X87,'type.pair.prod'('type.num.num','type.sptree.spt'(X87)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X87),fun(X87,'type.pair.prod'('type.num.num','type.sptree.spt'(X87))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X87),'type.pair.prod'('type.num.num','type.sptree.spt'(X87)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X87),fun(X87,'type.sptree.spt'(X87)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X87,fun('type.sptree.spt'(X87),'type.sptree.spt'(X87)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X87),'type.sptree.spt'(X87)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X87)),happ(s(fun('type.sptree.spt'(X87),'type.pair.prod'('type.num.num','type.sptree.spt'(X87))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X87),'type.pair.prod'('type.num.num','type.sptree.spt'(X87)))),'const.pair.,_0'),s('type.num.num',X88))),s('type.sptree.spt'(X87),X89))),s('type.list.list'(X87),X90)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X89,X88,X90,X87)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X87),X89)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X88)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X85))) | s(bool,'T_0') = s(bool,X86)) ) | $spl82),
  inference(superposition,[],[f174,f2901])).
fof(f9095,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.sptree.spt'(X14)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X14,fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),happ(s(fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s('type.num.num',X15))),s('type.sptree.spt'(X14),X16))),s('type.list.list'(X14),X17)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X16,X15,X17,X14)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),X16))))))) ) | $spl164),
  inference(cnf_transformation,[],[f9095_D])).
fof(f9095_D,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.sptree.spt'(X14)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X14,fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),happ(s(fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s('type.num.num',X15))),s('type.sptree.spt'(X14),X16))),s('type.list.list'(X14),X17)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X16,X15,X17,X14)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),X16))))))) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f12808,plain,(
  ( ! [X28,X26,X29,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X26),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.sptree.spt'(X26)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X26,fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),happ(s(fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s('type.num.num',X27))),s('type.sptree.spt'(X26),X28))),s('type.list.list'(X26),X29)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X28,X27,X29,X26)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X26),X28)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27))))) ) | $spl82),
  inference(subsumption_resolution,[],[f12632,f232])).
fof(f12632,plain,(
  ( ! [X28,X26,X29,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X26),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.sptree.spt'(X26)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X26,fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),happ(s(fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s('type.num.num',X27))),s('type.sptree.spt'(X26),X28))),s('type.list.list'(X26),X29)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X28,X27,X29,X26)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X26),X28)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27)))) | s(bool,'T_0') = s(bool,X25)) ) | $spl82),
  inference(superposition,[],[f174,f2959])).
fof(f12625,plain,(
  ( ! [X52,X50,X53,X51,X49] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X49)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X50),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.sptree.spt'(X50)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X50,fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),happ(s(fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s('type.num.num',X51))),s('type.sptree.spt'(X50),X52))),s('type.list.list'(X50),X53)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X52,X51,X53,X50)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X50),X52)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X51)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49)))) )),
  inference(superposition,[],[f174,f246])).
fof(f12624,plain,(
  ( ! [X47,X45,X48,X46,X44] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X44)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X45),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X45)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X45)),fun(X45,'type.pair.prod'('type.num.num','type.sptree.spt'(X45)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X45),fun(X45,'type.pair.prod'('type.num.num','type.sptree.spt'(X45))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X45),'type.pair.prod'('type.num.num','type.sptree.spt'(X45)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X45),fun(X45,'type.sptree.spt'(X45)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X45,fun('type.sptree.spt'(X45),'type.sptree.spt'(X45)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X45),'type.sptree.spt'(X45)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X45)),happ(s(fun('type.sptree.spt'(X45),'type.pair.prod'('type.num.num','type.sptree.spt'(X45))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X45),'type.pair.prod'('type.num.num','type.sptree.spt'(X45)))),'const.pair.,_0'),s('type.num.num',X46))),s('type.sptree.spt'(X45),X47))),s('type.list.list'(X45),X48)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X47,X46,X48,X45)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X45),X47)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X46)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))) )),
  inference(superposition,[],[f174,f248])).
fof(f9072,plain,(
  ( ! [X24,X21,X19,X22,X20,X18] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X18)))) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X20))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X21,X20,X22,X19)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),X21)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.sptree.spt'(X19)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X19,fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),happ(s(fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s('type.num.num',X20))),s('type.sptree.spt'(X19),X21))),s('type.list.list'(X19),X22))))))))))) ) | $spl162),
  inference(cnf_transformation,[],[f9072_D])).
fof(f9072_D,plain,(
  ( ! [X24,X21,X19,X22,X20,X18] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X18)))) | ~p(s(bool,X24)) | s(bool,X24) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X20))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X21,X20,X22,X19)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),X21)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.sptree.spt'(X19)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X19,fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),happ(s(fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s('type.num.num',X20))),s('type.sptree.spt'(X19),X21))),s('type.list.list'(X19),X22))))))))))) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f12613,plain,(
  ( ! [X127,X125,X130,X128,X126,X124,X129] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X124)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X124),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X125),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X125)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X125)),fun(X125,'type.pair.prod'('type.num.num','type.sptree.spt'(X125)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X125),fun(X125,'type.pair.prod'('type.num.num','type.sptree.spt'(X125))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X125),'type.pair.prod'('type.num.num','type.sptree.spt'(X125)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X125),fun(X125,'type.sptree.spt'(X125)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X125,fun('type.sptree.spt'(X125),'type.sptree.spt'(X125)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X125),'type.sptree.spt'(X125)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X125)),happ(s(fun('type.sptree.spt'(X125),'type.pair.prod'('type.num.num','type.sptree.spt'(X125))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X125),'type.pair.prod'('type.num.num','type.sptree.spt'(X125)))),'const.pair.,_0'),s('type.num.num',X126))),s('type.sptree.spt'(X125),X127))),s('type.list.list'(X125),X128)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X127,X126,X128,X125)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X125),X127)))))) | p(s(bool,X129)) | ~p(s(bool,X130)) | s(bool,X130) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X126)))) )),
  inference(resolution,[],[f174,f251])).
fof(f12604,plain,(
  ( ! [X80,X78,X76,X74,X81,X79,X77,X75] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X74)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X74),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X75),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X75)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X75)),fun(X75,'type.pair.prod'('type.num.num','type.sptree.spt'(X75)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X75),fun(X75,'type.pair.prod'('type.num.num','type.sptree.spt'(X75))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X75),'type.pair.prod'('type.num.num','type.sptree.spt'(X75)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X75),fun(X75,'type.sptree.spt'(X75)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X75,fun('type.sptree.spt'(X75),'type.sptree.spt'(X75)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X75),'type.sptree.spt'(X75)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X75)),happ(s(fun('type.sptree.spt'(X75),'type.pair.prod'('type.num.num','type.sptree.spt'(X75))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X75),'type.pair.prod'('type.num.num','type.sptree.spt'(X75)))),'const.pair.,_0'),s('type.num.num',X76))),s('type.sptree.spt'(X75),X77))),s('type.list.list'(X75),X78)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X77,X76,X78,X75)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X75),X77)))))) | ~p(s(bool,X79)) | ~p(s(bool,X80)) | s(bool,X80) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X76))) | s(bool,X79) != s(bool,X81)) )),
  inference(resolution,[],[f174,f185])).
fof(f12602,plain,(
  ( ! [X61,X59,X64,X62,X60,X58,X65,X63] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X58)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X58),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X59),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X59)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X59)),fun(X59,'type.pair.prod'('type.num.num','type.sptree.spt'(X59)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X59),fun(X59,'type.pair.prod'('type.num.num','type.sptree.spt'(X59))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X59),'type.pair.prod'('type.num.num','type.sptree.spt'(X59)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X59),fun(X59,'type.sptree.spt'(X59)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X59,fun('type.sptree.spt'(X59),'type.sptree.spt'(X59)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X59),'type.sptree.spt'(X59)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X59)),happ(s(fun('type.sptree.spt'(X59),'type.pair.prod'('type.num.num','type.sptree.spt'(X59))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X59),'type.pair.prod'('type.num.num','type.sptree.spt'(X59)))),'const.pair.,_0'),s('type.num.num',X60))),s('type.sptree.spt'(X59),X61))),s('type.list.list'(X59),X62)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X61,X60,X62,X59)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X59),X61)))))) | p(s(bool,X63)) | ~p(s(bool,X64)) | ~p(s(bool,X65)) | s(bool,X64) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X60)))) )),
  inference(resolution,[],[f174,f184])).
fof(f12600,plain,(
  ( ! [X47,X45,X43,X48,X46,X44,X42,X49] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X42)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X42),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X43),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),fun(X43,'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X43),fun(X43,'type.pair.prod'('type.num.num','type.sptree.spt'(X43))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X43),fun(X43,'type.sptree.spt'(X43)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X43,fun('type.sptree.spt'(X43),'type.sptree.spt'(X43)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X43),'type.sptree.spt'(X43)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),happ(s(fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.,_0'),s('type.num.num',X44))),s('type.sptree.spt'(X43),X45))),s('type.list.list'(X43),X46)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X45,X44,X46,X43)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X43),X45)))))) | p(s(bool,X47)) | ~p(s(bool,X48)) | s(bool,X47) != s(bool,X49) | s(bool,X48) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X44)))) )),
  inference(resolution,[],[f174,f183])).
fof(f12599,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X34,X40] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X34)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X34),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X35),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),fun(X35,'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X35),fun(X35,'type.pair.prod'('type.num.num','type.sptree.spt'(X35))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X35),fun(X35,'type.sptree.spt'(X35)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X35,fun('type.sptree.spt'(X35),'type.sptree.spt'(X35)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X35),'type.sptree.spt'(X35)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),happ(s(fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.,_0'),s('type.num.num',X36))),s('type.sptree.spt'(X35),X37))),s('type.list.list'(X35),X38)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X37,X36,X38,X35)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X35),X37)))))) | ~p(s(bool,X39)) | ~p(s(bool,X40)) | s(bool,X40) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X36))) | s(bool,X39) != s(bool,X41)) )),
  inference(resolution,[],[f174,f181])).
fof(f12597,plain,(
  ( ! [X24,X23,X21,X19,X25,X22,X20,X18] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X18)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.sptree.spt'(X19)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X19,fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),happ(s(fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s('type.num.num',X20))),s('type.sptree.spt'(X19),X21))),s('type.list.list'(X19),X22)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X21,X20,X22,X19)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),X21)))))) | p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,X25) | s(bool,X24) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X20)))) )),
  inference(resolution,[],[f174,f179])).
fof(f9063,plain,(
  ( ! [X14,X17,X15,X20,X18,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14)))) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X17,X16,X18,X15)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X15),X17))))) | p(s(bool,X20)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X16)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X14),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X15),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.sptree.spt'(X15)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X15,fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),happ(s(fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s('type.num.num',X16))),s('type.sptree.spt'(X15),X17))),s('type.list.list'(X15),X18))))))))))) ) | $spl160),
  inference(cnf_transformation,[],[f9063_D])).
fof(f9063_D,plain,(
  ( ! [X14,X17,X15,X20,X18,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14)))) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X17,X16,X18,X15)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X15),X17))))) | p(s(bool,X20)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X16)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X14),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X15),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.sptree.spt'(X15)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X15,fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),happ(s(fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s('type.num.num',X16))),s('type.sptree.spt'(X15),X17))),s('type.list.list'(X15),X18))))))))))) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f12591,plain,(
  ( ! [X127,X125,X130,X128,X126,X131,X129] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X125)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X125),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X126),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X126)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X126)),fun(X126,'type.pair.prod'('type.num.num','type.sptree.spt'(X126)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X126),fun(X126,'type.pair.prod'('type.num.num','type.sptree.spt'(X126))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X126),'type.pair.prod'('type.num.num','type.sptree.spt'(X126)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X126),fun(X126,'type.sptree.spt'(X126)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X126,fun('type.sptree.spt'(X126),'type.sptree.spt'(X126)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X126),'type.sptree.spt'(X126)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X126)),happ(s(fun('type.sptree.spt'(X126),'type.pair.prod'('type.num.num','type.sptree.spt'(X126))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X126),'type.pair.prod'('type.num.num','type.sptree.spt'(X126)))),'const.pair.,_0'),s('type.num.num',X127))),s('type.sptree.spt'(X126),X128))),s('type.list.list'(X126),X129)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X127)))) | p(s(bool,X130)) | p(s(bool,X131)) | s(bool,X131) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X128,X127,X129,X126)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X126),X128)))))) )),
  inference(resolution,[],[f174,f251])).
fof(f12581,plain,(
  ( ! [X70,X76,X74,X72,X71,X77,X75,X73] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X70)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X70),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X71),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X71)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X71)),fun(X71,'type.pair.prod'('type.num.num','type.sptree.spt'(X71)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X71),fun(X71,'type.pair.prod'('type.num.num','type.sptree.spt'(X71))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X71),'type.pair.prod'('type.num.num','type.sptree.spt'(X71)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X71),fun(X71,'type.sptree.spt'(X71)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X71,fun('type.sptree.spt'(X71),'type.sptree.spt'(X71)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X71),'type.sptree.spt'(X71)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X71)),happ(s(fun('type.sptree.spt'(X71),'type.pair.prod'('type.num.num','type.sptree.spt'(X71))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X71),'type.pair.prod'('type.num.num','type.sptree.spt'(X71)))),'const.pair.,_0'),s('type.num.num',X72))),s('type.sptree.spt'(X71),X73))),s('type.list.list'(X71),X74)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X72)))) | p(s(bool,X75)) | ~p(s(bool,X76)) | s(bool,X75) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X73,X72,X74,X71)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X71),X73))))) | s(bool,X76) != s(bool,X77)) )),
  inference(resolution,[],[f174,f185])).
fof(f12578,plain,(
  ( ! [X47,X52,X50,X48,X46,X53,X51,X49] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X46)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X46),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X47),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X47)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X47)),fun(X47,'type.pair.prod'('type.num.num','type.sptree.spt'(X47)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X47),fun(X47,'type.pair.prod'('type.num.num','type.sptree.spt'(X47))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X47),'type.pair.prod'('type.num.num','type.sptree.spt'(X47)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X47),fun(X47,'type.sptree.spt'(X47)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X47,fun('type.sptree.spt'(X47),'type.sptree.spt'(X47)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X47),'type.sptree.spt'(X47)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X47)),happ(s(fun('type.sptree.spt'(X47),'type.pair.prod'('type.num.num','type.sptree.spt'(X47))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X47),'type.pair.prod'('type.num.num','type.sptree.spt'(X47)))),'const.pair.,_0'),s('type.num.num',X48))),s('type.sptree.spt'(X47),X49))),s('type.list.list'(X47),X50)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X48)))) | p(s(bool,X51)) | ~p(s(bool,X52)) | p(s(bool,X53)) | s(bool,X53) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X49,X48,X50,X47)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X47),X49)))))) )),
  inference(resolution,[],[f174,f184])).
fof(f12577,plain,(
  ( ! [X39,X45,X43,X41,X38,X44,X42,X40] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X38)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X38),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X39),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X39)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X39)),fun(X39,'type.pair.prod'('type.num.num','type.sptree.spt'(X39)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X39),fun(X39,'type.pair.prod'('type.num.num','type.sptree.spt'(X39))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X39),'type.pair.prod'('type.num.num','type.sptree.spt'(X39)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X39),fun(X39,'type.sptree.spt'(X39)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X39,fun('type.sptree.spt'(X39),'type.sptree.spt'(X39)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X39),'type.sptree.spt'(X39)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X39)),happ(s(fun('type.sptree.spt'(X39),'type.pair.prod'('type.num.num','type.sptree.spt'(X39))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X39),'type.pair.prod'('type.num.num','type.sptree.spt'(X39)))),'const.pair.,_0'),s('type.num.num',X40))),s('type.sptree.spt'(X39),X41))),s('type.list.list'(X39),X42)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X40)))) | p(s(bool,X43)) | p(s(bool,X44)) | s(bool,X43) != s(bool,X45) | s(bool,X44) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X41,X40,X42,X39)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X39),X41)))))) )),
  inference(resolution,[],[f174,f183])).
fof(f12576,plain,(
  ( ! [X30,X37,X35,X33,X31,X36,X34,X32] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X30)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X30),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X31),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X31)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X31)),fun(X31,'type.pair.prod'('type.num.num','type.sptree.spt'(X31)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X31),fun(X31,'type.pair.prod'('type.num.num','type.sptree.spt'(X31))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X31),'type.pair.prod'('type.num.num','type.sptree.spt'(X31)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X31),fun(X31,'type.sptree.spt'(X31)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X31,fun('type.sptree.spt'(X31),'type.sptree.spt'(X31)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X31),'type.sptree.spt'(X31)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X31)),happ(s(fun('type.sptree.spt'(X31),'type.pair.prod'('type.num.num','type.sptree.spt'(X31))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X31),'type.pair.prod'('type.num.num','type.sptree.spt'(X31)))),'const.pair.,_0'),s('type.num.num',X32))),s('type.sptree.spt'(X31),X33))),s('type.list.list'(X31),X34)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X32)))) | p(s(bool,X35)) | ~p(s(bool,X36)) | s(bool,X35) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X33,X32,X34,X31)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X31),X33))))) | s(bool,X36) != s(bool,X37)) )),
  inference(resolution,[],[f174,f181])).
fof(f12574,plain,(
  ( ! [X14,X21,X19,X17,X15,X20,X18,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X14),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X15),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.sptree.spt'(X15)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X15,fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),happ(s(fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s('type.num.num',X16))),s('type.sptree.spt'(X15),X17))),s('type.list.list'(X15),X18)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X16)))) | p(s(bool,X19)) | p(s(bool,X20)) | s(bool,X19) != s(bool,X21) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X17,X16,X18,X15)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X15),X17)))))) )),
  inference(resolution,[],[f174,f179])).
fof(f9057,plain,(
  ( ! [X10,X8,X7,X13,X11,X9] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | s(bool,X13) != s(bool,'const.bool.IN_2'(s('type.num.num',X7),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X11),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X11)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X11)),fun(X11,'type.pair.prod'('type.num.num','type.sptree.spt'(X11)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X11),fun(X11,'type.pair.prod'('type.num.num','type.sptree.spt'(X11))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X11),'type.pair.prod'('type.num.num','type.sptree.spt'(X11)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X11),fun(X11,'type.sptree.spt'(X11)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X11,fun('type.sptree.spt'(X11),'type.sptree.spt'(X11)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X11),'type.sptree.spt'(X11)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X11)),happ(s(fun('type.sptree.spt'(X11),'type.pair.prod'('type.num.num','type.sptree.spt'(X11))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X11),'type.pair.prod'('type.num.num','type.sptree.spt'(X11)))),'const.pair.,_0'),s('type.num.num',X9))),s('type.sptree.spt'(X11),X8))),s('type.list.list'(X11),X10))))))))) | ~p(s(bool,X13)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X8,X9,X10,X11)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X11),X8)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9))))) ) | $spl158),
  inference(cnf_transformation,[],[f9057_D])).
fof(f9057_D,plain,(
  ( ! [X10,X8,X7,X13,X11,X9] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | s(bool,X13) != s(bool,'const.bool.IN_2'(s('type.num.num',X7),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X11),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X11)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X11)),fun(X11,'type.pair.prod'('type.num.num','type.sptree.spt'(X11)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X11),fun(X11,'type.pair.prod'('type.num.num','type.sptree.spt'(X11))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X11),'type.pair.prod'('type.num.num','type.sptree.spt'(X11)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X11),fun(X11,'type.sptree.spt'(X11)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X11,fun('type.sptree.spt'(X11),'type.sptree.spt'(X11)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X11),'type.sptree.spt'(X11)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X11)),happ(s(fun('type.sptree.spt'(X11),'type.pair.prod'('type.num.num','type.sptree.spt'(X11))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X11),'type.pair.prod'('type.num.num','type.sptree.spt'(X11)))),'const.pair.,_0'),s('type.num.num',X9))),s('type.sptree.spt'(X11),X8))),s('type.list.list'(X11),X10))))))))) | ~p(s(bool,X13)) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X8,X9,X10,X11)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X11),X8)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9))))) ) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f12569,plain,(
  ( ! [X118,X116,X114,X119,X117,X115,X113] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X113)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X114,X115,X116,X117)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X117),X114)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X115)))) | p(s(bool,X118)) | ~p(s(bool,X119)) | s(bool,X119) != s(bool,'const.bool.IN_2'(s('type.num.num',X113),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X117),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X117)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X117)),fun(X117,'type.pair.prod'('type.num.num','type.sptree.spt'(X117)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X117),fun(X117,'type.pair.prod'('type.num.num','type.sptree.spt'(X117))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X117),'type.pair.prod'('type.num.num','type.sptree.spt'(X117)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X117),fun(X117,'type.sptree.spt'(X117)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X117,fun('type.sptree.spt'(X117),'type.sptree.spt'(X117)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X117),'type.sptree.spt'(X117)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X117)),happ(s(fun('type.sptree.spt'(X117),'type.pair.prod'('type.num.num','type.sptree.spt'(X117))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X117),'type.pair.prod'('type.num.num','type.sptree.spt'(X117)))),'const.pair.,_0'),s('type.num.num',X115))),s('type.sptree.spt'(X117),X114))),s('type.list.list'(X117),X116)))))))))) )),
  inference(resolution,[],[f174,f251])).
fof(f12560,plain,(
  ( ! [X70,X68,X66,X64,X69,X67,X65,X63] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X63)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X64,X65,X66,X67)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X67),X64)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X65)))) | ~p(s(bool,X68)) | ~p(s(bool,X69)) | s(bool,X69) != s(bool,'const.bool.IN_2'(s('type.num.num',X63),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X67),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X67)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X67)),fun(X67,'type.pair.prod'('type.num.num','type.sptree.spt'(X67)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X67),fun(X67,'type.pair.prod'('type.num.num','type.sptree.spt'(X67))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X67),'type.pair.prod'('type.num.num','type.sptree.spt'(X67)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X67),fun(X67,'type.sptree.spt'(X67)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X67,fun('type.sptree.spt'(X67),'type.sptree.spt'(X67)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X67),'type.sptree.spt'(X67)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X67)),happ(s(fun('type.sptree.spt'(X67),'type.pair.prod'('type.num.num','type.sptree.spt'(X67))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X67),'type.pair.prod'('type.num.num','type.sptree.spt'(X67)))),'const.pair.,_0'),s('type.num.num',X65))),s('type.sptree.spt'(X67),X64))),s('type.list.list'(X67),X66))))))))) | s(bool,X68) != s(bool,X70)) )),
  inference(resolution,[],[f174,f185])).
fof(f12558,plain,(
  ( ! [X47,X54,X52,X50,X48,X53,X51,X49] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X47)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X48,X49,X50,X51)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X51),X48)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X49)))) | p(s(bool,X52)) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X53) != s(bool,'const.bool.IN_2'(s('type.num.num',X47),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X51),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.sptree.spt'(X51)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X51,fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),happ(s(fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s('type.num.num',X49))),s('type.sptree.spt'(X51),X48))),s('type.list.list'(X51),X50)))))))))) )),
  inference(resolution,[],[f174,f184])).
fof(f12556,plain,(
  ( ! [X37,X35,X33,X31,X38,X36,X34,X32] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X31)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X32,X33,X34,X35)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X35),X32)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X33)))) | p(s(bool,X36)) | ~p(s(bool,X37)) | s(bool,X36) != s(bool,X38) | s(bool,X37) != s(bool,'const.bool.IN_2'(s('type.num.num',X31),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X35),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),fun(X35,'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X35),fun(X35,'type.pair.prod'('type.num.num','type.sptree.spt'(X35))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X35),fun(X35,'type.sptree.spt'(X35)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X35,fun('type.sptree.spt'(X35),'type.sptree.spt'(X35)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X35),'type.sptree.spt'(X35)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),happ(s(fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.,_0'),s('type.num.num',X33))),s('type.sptree.spt'(X35),X32))),s('type.list.list'(X35),X34)))))))))) )),
  inference(resolution,[],[f174,f183])).
fof(f12555,plain,(
  ( ! [X30,X28,X26,X24,X23,X29,X27,X25] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X23)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X24,X25,X26,X27)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X27),X24)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X25)))) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X29) != s(bool,'const.bool.IN_2'(s('type.num.num',X23),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X27),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X27)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X27)),fun(X27,'type.pair.prod'('type.num.num','type.sptree.spt'(X27)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X27),fun(X27,'type.pair.prod'('type.num.num','type.sptree.spt'(X27))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X27),'type.pair.prod'('type.num.num','type.sptree.spt'(X27)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X27),fun(X27,'type.sptree.spt'(X27)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X27,fun('type.sptree.spt'(X27),'type.sptree.spt'(X27)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X27),'type.sptree.spt'(X27)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X27)),happ(s(fun('type.sptree.spt'(X27),'type.pair.prod'('type.num.num','type.sptree.spt'(X27))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X27),'type.pair.prod'('type.num.num','type.sptree.spt'(X27)))),'const.pair.,_0'),s('type.num.num',X25))),s('type.sptree.spt'(X27),X24))),s('type.list.list'(X27),X26))))))))) | s(bool,X28) != s(bool,X30)) )),
  inference(resolution,[],[f174,f181])).
fof(f12553,plain,(
  ( ! [X14,X12,X10,X8,X7,X13,X11,X9] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X8,X9,X10,X11)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X11),X8)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9)))) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X13) != s(bool,'const.bool.IN_2'(s('type.num.num',X7),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X11),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X11)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X11)),fun(X11,'type.pair.prod'('type.num.num','type.sptree.spt'(X11)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X11),fun(X11,'type.pair.prod'('type.num.num','type.sptree.spt'(X11))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X11),'type.pair.prod'('type.num.num','type.sptree.spt'(X11)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X11),fun(X11,'type.sptree.spt'(X11)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X11,fun('type.sptree.spt'(X11),'type.sptree.spt'(X11)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X11),'type.sptree.spt'(X11)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X11)),happ(s(fun('type.sptree.spt'(X11),'type.pair.prod'('type.num.num','type.sptree.spt'(X11))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X11),'type.pair.prod'('type.num.num','type.sptree.spt'(X11)))),'const.pair.,_0'),s('type.num.num',X9))),s('type.sptree.spt'(X11),X8))),s('type.list.list'(X11),X10)))))))))) )),
  inference(resolution,[],[f174,f179])).
fof(f9047,plain,(
  ( ! [X30,X28,X33,X31,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X27),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.sptree.spt'(X28)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X28,fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),happ(s(fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s('type.num.num',X29))),s('type.sptree.spt'(X28),X30))),s('type.list.list'(X28),X31)))))))))) | p(s(bool,X33)) | s(bool,X33) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X29)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X30,X29,X31,X28)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),X30))))))) ) | $spl156),
  inference(cnf_transformation,[],[f9047_D])).
fof(f9047_D,plain,(
  ( ! [X30,X28,X33,X31,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X27),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.sptree.spt'(X28)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X28,fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),happ(s(fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s('type.num.num',X29))),s('type.sptree.spt'(X28),X30))),s('type.list.list'(X28),X31)))))))))) | p(s(bool,X33)) | s(bool,X33) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X29)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X30,X29,X31,X28)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),X30))))))) ) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f12548,plain,(
  ( ! [X144,X142,X140,X138,X143,X141,X139] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X138),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X139),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X139)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X139)),fun(X139,'type.pair.prod'('type.num.num','type.sptree.spt'(X139)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X139),fun(X139,'type.pair.prod'('type.num.num','type.sptree.spt'(X139))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X139),'type.pair.prod'('type.num.num','type.sptree.spt'(X139)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X139),fun(X139,'type.sptree.spt'(X139)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X139,fun('type.sptree.spt'(X139),'type.sptree.spt'(X139)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X139),'type.sptree.spt'(X139)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X139)),happ(s(fun('type.sptree.spt'(X139),'type.pair.prod'('type.num.num','type.sptree.spt'(X139))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X139),'type.pair.prod'('type.num.num','type.sptree.spt'(X139)))),'const.pair.,_0'),s('type.num.num',X140))),s('type.sptree.spt'(X139),X141))),s('type.list.list'(X139),X142)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X141,X140,X142,X139)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X139),X141)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X140)))) | p(s(bool,X143)) | p(s(bool,X144)) | s(bool,X144) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X138)))) )),
  inference(resolution,[],[f174,f251])).
fof(f12538,plain,(
  ( ! [X90,X88,X87,X85,X83,X89,X86,X84] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X83),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X84),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),fun(X84,'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X84),fun(X84,'type.pair.prod'('type.num.num','type.sptree.spt'(X84))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X84),fun(X84,'type.sptree.spt'(X84)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X84,fun('type.sptree.spt'(X84),'type.sptree.spt'(X84)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X84),'type.sptree.spt'(X84)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),happ(s(fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.,_0'),s('type.num.num',X85))),s('type.sptree.spt'(X84),X86))),s('type.list.list'(X84),X87)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X86,X85,X87,X84)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X84),X86)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X85)))) | p(s(bool,X88)) | ~p(s(bool,X89)) | s(bool,X88) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X83))) | s(bool,X89) != s(bool,X90)) )),
  inference(resolution,[],[f174,f185])).
fof(f12535,plain,(
  ( ! [X61,X59,X66,X64,X62,X60,X65,X63] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X59),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X60),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X60)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X60)),fun(X60,'type.pair.prod'('type.num.num','type.sptree.spt'(X60)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X60),fun(X60,'type.pair.prod'('type.num.num','type.sptree.spt'(X60))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X60),'type.pair.prod'('type.num.num','type.sptree.spt'(X60)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X60),fun(X60,'type.sptree.spt'(X60)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X60,fun('type.sptree.spt'(X60),'type.sptree.spt'(X60)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X60),'type.sptree.spt'(X60)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X60)),happ(s(fun('type.sptree.spt'(X60),'type.pair.prod'('type.num.num','type.sptree.spt'(X60))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X60),'type.pair.prod'('type.num.num','type.sptree.spt'(X60)))),'const.pair.,_0'),s('type.num.num',X61))),s('type.sptree.spt'(X60),X62))),s('type.list.list'(X60),X63)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X62,X61,X63,X60)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X60),X62)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X61)))) | p(s(bool,X64)) | ~p(s(bool,X65)) | p(s(bool,X66)) | s(bool,X66) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X59)))) )),
  inference(resolution,[],[f174,f184])).
fof(f12534,plain,(
  ( ! [X57,X54,X52,X58,X56,X55,X53,X51] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X51),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X52),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X52)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X52)),fun(X52,'type.pair.prod'('type.num.num','type.sptree.spt'(X52)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X52),fun(X52,'type.pair.prod'('type.num.num','type.sptree.spt'(X52))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X52),'type.pair.prod'('type.num.num','type.sptree.spt'(X52)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X52),fun(X52,'type.sptree.spt'(X52)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X52,fun('type.sptree.spt'(X52),'type.sptree.spt'(X52)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X52),'type.sptree.spt'(X52)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X52)),happ(s(fun('type.sptree.spt'(X52),'type.pair.prod'('type.num.num','type.sptree.spt'(X52))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X52),'type.pair.prod'('type.num.num','type.sptree.spt'(X52)))),'const.pair.,_0'),s('type.num.num',X53))),s('type.sptree.spt'(X52),X54))),s('type.list.list'(X52),X55)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X54,X53,X55,X52)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X52),X54)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X53)))) | p(s(bool,X56)) | p(s(bool,X57)) | s(bool,X56) != s(bool,X58) | s(bool,X57) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X51)))) )),
  inference(resolution,[],[f174,f183])).
fof(f12533,plain,(
  ( ! [X47,X45,X43,X50,X48,X46,X44,X49] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X43),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X44),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X44)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X44)),fun(X44,'type.pair.prod'('type.num.num','type.sptree.spt'(X44)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X44),fun(X44,'type.pair.prod'('type.num.num','type.sptree.spt'(X44))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X44),'type.pair.prod'('type.num.num','type.sptree.spt'(X44)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X44),fun(X44,'type.sptree.spt'(X44)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X44,fun('type.sptree.spt'(X44),'type.sptree.spt'(X44)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X44),'type.sptree.spt'(X44)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X44)),happ(s(fun('type.sptree.spt'(X44),'type.pair.prod'('type.num.num','type.sptree.spt'(X44))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X44),'type.pair.prod'('type.num.num','type.sptree.spt'(X44)))),'const.pair.,_0'),s('type.num.num',X45))),s('type.sptree.spt'(X44),X46))),s('type.list.list'(X44),X47)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X46,X45,X47,X44)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X44),X46)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X45)))) | p(s(bool,X48)) | ~p(s(bool,X49)) | s(bool,X48) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X43))) | s(bool,X49) != s(bool,X50)) )),
  inference(resolution,[],[f174,f181])).
fof(f12531,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X27),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.sptree.spt'(X28)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X28,fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),happ(s(fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s('type.num.num',X29))),s('type.sptree.spt'(X28),X30))),s('type.list.list'(X28),X31)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X30,X29,X31,X28)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),X30)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X29)))) | p(s(bool,X32)) | p(s(bool,X33)) | s(bool,X32) != s(bool,X34) | s(bool,X33) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27)))) )),
  inference(resolution,[],[f174,f179])).
fof(f12282,plain,(
  ( ! [X52,X50,X53,X51,X49] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X49)))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X50)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X50),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X51),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.sptree.spt'(X51)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X51,fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),happ(s(fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X51),X52))),s('type.list.list'(X51),X53)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X52,'const.arithmetic.ZERO_0',X53,X51))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49)))) )),
  inference(superposition,[],[f175,f246])).
fof(f12281,plain,(
  ( ! [X47,X45,X48,X46,X44] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X44)))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X45)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X45),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X46),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.sptree.spt'(X46)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X46,fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),happ(s(fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X46),X47))),s('type.list.list'(X46),X48)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X47,'const.arithmetic.ZERO_0',X48,X46))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))) )),
  inference(superposition,[],[f175,f248])).
fof(f3309,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X24),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),fun(X24,'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X24),fun(X24,'type.pair.prod'('type.num.num','type.sptree.spt'(X24))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X24),fun(X24,'type.sptree.spt'(X24)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X24,fun('type.sptree.spt'(X24),'type.sptree.spt'(X24)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X24),'type.sptree.spt'(X24)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),happ(s(fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.,_0'),s('type.num.num',X25))),s('type.sptree.spt'(X24),X26))),s('type.list.list'(X24),X27)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X25)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X26,X25,X27,X24)))))) ) | $spl90),
  inference(cnf_transformation,[],[f3309_D])).
fof(f3309_D,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X24),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),fun(X24,'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X24),fun(X24,'type.pair.prod'('type.num.num','type.sptree.spt'(X24))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X24),fun(X24,'type.sptree.spt'(X24)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X24,fun('type.sptree.spt'(X24),'type.sptree.spt'(X24)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X24),'type.sptree.spt'(X24)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),happ(s(fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.,_0'),s('type.num.num',X25))),s('type.sptree.spt'(X24),X26))),s('type.list.list'(X24),X27)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X25)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X26,X25,X27,X24)))))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f12206,plain,(
  ( ! [X30,X28,X31,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.sptree.spt'(X28)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X28,fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),happ(s(fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s('type.num.num',X29))),s('type.sptree.spt'(X28),X30))),s('type.list.list'(X28),X31)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X30,X29,X31,X28))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X29)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))) )),
  inference(superposition,[],[f175,f246])).
fof(f12205,plain,(
  ( ! [X26,X24,X23,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X23),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.sptree.spt'(X23)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X23,fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),happ(s(fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s('type.num.num',X24))),s('type.sptree.spt'(X23),X25))),s('type.list.list'(X23),X26)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X22)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X25,X24,X26,X23))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X24)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))) )),
  inference(superposition,[],[f175,f248])).
fof(f8718,plain,(
  ( ! [X4,X2,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X3,X2,X4,X1)))))) ) | $spl138),
  inference(cnf_transformation,[],[f8718_D])).
fof(f8718_D,plain,(
  ( ! [X4,X2,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X3,X2,X4,X1)))))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f8719,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) ) | $spl140),
  inference(cnf_transformation,[],[f8719_D])).
fof(f8719_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f12397,plain,(
  ( ! [X6,X8,X7,X5,X9] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num',X7))),s('type.sptree.spt'(X6),X8))),s('type.list.list'(X6),X9)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X8,X7,X9,X6))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X5)) )),
  inference(forward_demodulation,[],[f12202,f176])).
fof(f12202,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num',X7))),s('type.sptree.spt'(X6),X8))),s('type.list.list'(X6),X9)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X8,X7,X9,X6))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X5)) )),
  inference(superposition,[],[f175,f247])).
fof(f12396,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X3,X2,X4,X1))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f12201,f176])).
fof(f12201,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X3,X2,X4,X1))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(superposition,[],[f175,f249])).
fof(f6546,plain,(
  ( ! [X441,X440,X442,X437,X439] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X437),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X439),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),fun(X439,'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X439),fun(X439,'type.pair.prod'('type.num.num','type.sptree.spt'(X439))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X439),fun(X439,'type.sptree.spt'(X439)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X439,fun('type.sptree.spt'(X439),'type.sptree.spt'(X439)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X439),'type.sptree.spt'(X439)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),happ(s(fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.,_0'),s('type.num.num',X440))),s('type.sptree.spt'(X439),X441))),s('type.list.list'(X439),X442)))))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X437))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X440)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X441,X440,X442,X439)))))) ) | $spl108),
  inference(cnf_transformation,[],[f6546_D])).
fof(f6546_D,plain,(
  ( ! [X441,X440,X442,X437,X439] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X437),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X439),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),fun(X439,'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X439),fun(X439,'type.pair.prod'('type.num.num','type.sptree.spt'(X439))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X439),fun(X439,'type.sptree.spt'(X439)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X439,fun('type.sptree.spt'(X439),'type.sptree.spt'(X439)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X439),'type.sptree.spt'(X439)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),happ(s(fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.,_0'),s('type.num.num',X440))),s('type.sptree.spt'(X439),X441))),s('type.list.list'(X439),X442)))))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X437))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X440)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X441,X440,X442,X439)))))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f12390,plain,(
  ( ! [X94,X92,X95,X93,X91,X96] : (p(s(bool,X92)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X91),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X93),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X93)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X93)),fun(X93,'type.pair.prod'('type.num.num','type.sptree.spt'(X93)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X93),fun(X93,'type.pair.prod'('type.num.num','type.sptree.spt'(X93))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X93),'type.pair.prod'('type.num.num','type.sptree.spt'(X93)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X93),fun(X93,'type.sptree.spt'(X93)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X93,fun('type.sptree.spt'(X93),'type.sptree.spt'(X93)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X93),'type.sptree.spt'(X93)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X93)),happ(s(fun('type.sptree.spt'(X93),'type.pair.prod'('type.num.num','type.sptree.spt'(X93))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X93),'type.pair.prod'('type.num.num','type.sptree.spt'(X93)))),'const.pair.,_0'),s('type.num.num',X94))),s('type.sptree.spt'(X93),X95))),s('type.list.list'(X93),X96)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X95,X94,X96,X93))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X94)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X91)))) ) | $spl82),
  inference(subsumption_resolution,[],[f12198,f232])).
fof(f12198,plain,(
  ( ! [X94,X92,X95,X93,X91,X96] : (p(s(bool,X92)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X91),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X93),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X93)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X93)),fun(X93,'type.pair.prod'('type.num.num','type.sptree.spt'(X93)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X93),fun(X93,'type.pair.prod'('type.num.num','type.sptree.spt'(X93))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X93),'type.pair.prod'('type.num.num','type.sptree.spt'(X93)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X93),fun(X93,'type.sptree.spt'(X93)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X93,fun('type.sptree.spt'(X93),'type.sptree.spt'(X93)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X93),'type.sptree.spt'(X93)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X93)),happ(s(fun('type.sptree.spt'(X93),'type.pair.prod'('type.num.num','type.sptree.spt'(X93))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X93),'type.pair.prod'('type.num.num','type.sptree.spt'(X93)))),'const.pair.,_0'),s('type.num.num',X94))),s('type.sptree.spt'(X93),X95))),s('type.list.list'(X93),X96)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X95,X94,X96,X93))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X94)))) | s(bool,'T_0') = s(bool,X92) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X91)))) ) | $spl82),
  inference(superposition,[],[f175,f2901])).
fof(f12389,plain,(
  ( ! [X90,X88,X87,X85,X89,X86] : (p(s(bool,X86)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X85),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X87),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X87)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X87)),fun(X87,'type.pair.prod'('type.num.num','type.sptree.spt'(X87)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X87),fun(X87,'type.pair.prod'('type.num.num','type.sptree.spt'(X87))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X87),'type.pair.prod'('type.num.num','type.sptree.spt'(X87)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X87),fun(X87,'type.sptree.spt'(X87)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X87,fun('type.sptree.spt'(X87),'type.sptree.spt'(X87)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X87),'type.sptree.spt'(X87)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X87)),happ(s(fun('type.sptree.spt'(X87),'type.pair.prod'('type.num.num','type.sptree.spt'(X87))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X87),'type.pair.prod'('type.num.num','type.sptree.spt'(X87)))),'const.pair.,_0'),s('type.num.num',X88))),s('type.sptree.spt'(X87),X89))),s('type.list.list'(X87),X90)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X89,X88,X90,X87))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X88)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X85)))) ) | $spl82),
  inference(subsumption_resolution,[],[f12197,f232])).
fof(f12197,plain,(
  ( ! [X90,X88,X87,X85,X89,X86] : (p(s(bool,X86)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X85),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X87),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X87)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X87)),fun(X87,'type.pair.prod'('type.num.num','type.sptree.spt'(X87)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X87),fun(X87,'type.pair.prod'('type.num.num','type.sptree.spt'(X87))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X87),'type.pair.prod'('type.num.num','type.sptree.spt'(X87)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X87),fun(X87,'type.sptree.spt'(X87)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X87,fun('type.sptree.spt'(X87),'type.sptree.spt'(X87)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X87),'type.sptree.spt'(X87)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X87)),happ(s(fun('type.sptree.spt'(X87),'type.pair.prod'('type.num.num','type.sptree.spt'(X87))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X87),'type.pair.prod'('type.num.num','type.sptree.spt'(X87)))),'const.pair.,_0'),s('type.num.num',X88))),s('type.sptree.spt'(X87),X89))),s('type.list.list'(X87),X90)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X89,X88,X90,X87))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X88)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X85))) | s(bool,'T_0') = s(bool,X86)) ) | $spl82),
  inference(superposition,[],[f175,f2901])).
fof(f8691,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.sptree.spt'(X14)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X14,fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),happ(s(fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s('type.num.num',X15))),s('type.sptree.spt'(X14),X16))),s('type.list.list'(X14),X17)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X16,X15,X17,X14)))))) ) | $spl136),
  inference(cnf_transformation,[],[f8691_D])).
fof(f8691_D,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.sptree.spt'(X14)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X14,fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),happ(s(fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s('type.num.num',X15))),s('type.sptree.spt'(X14),X16))),s('type.list.list'(X14),X17)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X16,X15,X17,X14)))))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f12373,plain,(
  ( ! [X28,X26,X29,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X26),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.sptree.spt'(X26)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X26,fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),happ(s(fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s('type.num.num',X27))),s('type.sptree.spt'(X26),X28))),s('type.list.list'(X26),X29)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X28,X27,X29,X26))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27))))) ) | $spl82),
  inference(subsumption_resolution,[],[f12186,f232])).
fof(f12186,plain,(
  ( ! [X28,X26,X29,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X26),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.sptree.spt'(X26)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X26,fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),happ(s(fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s('type.num.num',X27))),s('type.sptree.spt'(X26),X28))),s('type.list.list'(X26),X29)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X28,X27,X29,X26))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27)))) | s(bool,'T_0') = s(bool,X25)) ) | $spl82),
  inference(superposition,[],[f175,f2959])).
fof(f12179,plain,(
  ( ! [X52,X50,X53,X51,X49] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X49)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X50),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.sptree.spt'(X50)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X50,fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),happ(s(fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s('type.num.num',X51))),s('type.sptree.spt'(X50),X52))),s('type.list.list'(X50),X53)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X52,X51,X53,X50))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X51)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49)))) )),
  inference(superposition,[],[f175,f246])).
fof(f12178,plain,(
  ( ! [X47,X45,X48,X46,X44] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X44)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X45),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X45)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X45)),fun(X45,'type.pair.prod'('type.num.num','type.sptree.spt'(X45)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X45),fun(X45,'type.pair.prod'('type.num.num','type.sptree.spt'(X45))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X45),'type.pair.prod'('type.num.num','type.sptree.spt'(X45)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X45),fun(X45,'type.sptree.spt'(X45)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X45,fun('type.sptree.spt'(X45),'type.sptree.spt'(X45)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X45),'type.sptree.spt'(X45)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X45)),happ(s(fun('type.sptree.spt'(X45),'type.pair.prod'('type.num.num','type.sptree.spt'(X45))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X45),'type.pair.prod'('type.num.num','type.sptree.spt'(X45)))),'const.pair.,_0'),s('type.num.num',X46))),s('type.sptree.spt'(X45),X47))),s('type.list.list'(X45),X48)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X47,X46,X48,X45))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X46)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))) )),
  inference(superposition,[],[f175,f248])).
fof(f8658,plain,(
  ( ! [X12,X10,X15,X13,X11,X9] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9)))) | ~p(s(bool,X15)) | s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X11))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X12,X11,X13,X10))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X9),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X10),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.sptree.spt'(X10)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X10,fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),happ(s(fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s('type.num.num',X11))),s('type.sptree.spt'(X10),X12))),s('type.list.list'(X10),X13))))))))))) ) | $spl132),
  inference(cnf_transformation,[],[f8658_D])).
fof(f8658_D,plain,(
  ( ! [X12,X10,X15,X13,X11,X9] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9)))) | ~p(s(bool,X15)) | s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X11))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X12,X11,X13,X10))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X9),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X10),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.sptree.spt'(X10)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X10,fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),happ(s(fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s('type.num.num',X11))),s('type.sptree.spt'(X10),X12))),s('type.list.list'(X10),X13))))))))))) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f12167,plain,(
  ( ! [X121,X118,X116,X120,X119,X117,X115] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X115)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X115),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X116),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X116)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X116)),fun(X116,'type.pair.prod'('type.num.num','type.sptree.spt'(X116)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X116),fun(X116,'type.pair.prod'('type.num.num','type.sptree.spt'(X116))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X116),'type.pair.prod'('type.num.num','type.sptree.spt'(X116)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X116),fun(X116,'type.sptree.spt'(X116)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X116,fun('type.sptree.spt'(X116),'type.sptree.spt'(X116)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X116),'type.sptree.spt'(X116)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X116)),happ(s(fun('type.sptree.spt'(X116),'type.pair.prod'('type.num.num','type.sptree.spt'(X116))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X116),'type.pair.prod'('type.num.num','type.sptree.spt'(X116)))),'const.pair.,_0'),s('type.num.num',X117))),s('type.sptree.spt'(X116),X118))),s('type.list.list'(X116),X119)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X118,X117,X119,X116))))) | p(s(bool,X120)) | ~p(s(bool,X121)) | s(bool,X121) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X117)))) )),
  inference(resolution,[],[f175,f251])).
fof(f12158,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67,X65] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X65)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X65),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X66),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X66)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X66)),fun(X66,'type.pair.prod'('type.num.num','type.sptree.spt'(X66)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X66),fun(X66,'type.pair.prod'('type.num.num','type.sptree.spt'(X66))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X66),'type.pair.prod'('type.num.num','type.sptree.spt'(X66)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X66),fun(X66,'type.sptree.spt'(X66)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X66,fun('type.sptree.spt'(X66),'type.sptree.spt'(X66)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X66),'type.sptree.spt'(X66)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X66)),happ(s(fun('type.sptree.spt'(X66),'type.pair.prod'('type.num.num','type.sptree.spt'(X66))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X66),'type.pair.prod'('type.num.num','type.sptree.spt'(X66)))),'const.pair.,_0'),s('type.num.num',X67))),s('type.sptree.spt'(X66),X68))),s('type.list.list'(X66),X69)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X68,X67,X69,X66))))) | ~p(s(bool,X70)) | ~p(s(bool,X71)) | s(bool,X71) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X67))) | s(bool,X70) != s(bool,X72)) )),
  inference(resolution,[],[f175,f185])).
fof(f12156,plain,(
  ( ! [X54,X52,X50,X56,X55,X53,X51,X49] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X49)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X49),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X50),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.sptree.spt'(X50)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X50,fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),happ(s(fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s('type.num.num',X51))),s('type.sptree.spt'(X50),X52))),s('type.list.list'(X50),X53)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X52,X51,X53,X50))))) | p(s(bool,X54)) | ~p(s(bool,X55)) | ~p(s(bool,X56)) | s(bool,X55) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X51)))) )),
  inference(resolution,[],[f175,f184])).
fof(f12154,plain,(
  ( ! [X39,X37,X35,X33,X38,X36,X34,X40] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X33)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X33),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X34),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X34)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X34)),fun(X34,'type.pair.prod'('type.num.num','type.sptree.spt'(X34)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X34),fun(X34,'type.pair.prod'('type.num.num','type.sptree.spt'(X34))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X34),'type.pair.prod'('type.num.num','type.sptree.spt'(X34)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X34),fun(X34,'type.sptree.spt'(X34)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X34,fun('type.sptree.spt'(X34),'type.sptree.spt'(X34)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X34),'type.sptree.spt'(X34)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X34)),happ(s(fun('type.sptree.spt'(X34),'type.pair.prod'('type.num.num','type.sptree.spt'(X34))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X34),'type.pair.prod'('type.num.num','type.sptree.spt'(X34)))),'const.pair.,_0'),s('type.num.num',X35))),s('type.sptree.spt'(X34),X36))),s('type.list.list'(X34),X37)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X36,X35,X37,X34))))) | p(s(bool,X38)) | ~p(s(bool,X39)) | s(bool,X38) != s(bool,X40) | s(bool,X39) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X35)))) )),
  inference(resolution,[],[f175,f183])).
fof(f12153,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X25,X32] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X25)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X25),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X26),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.sptree.spt'(X26)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X26,fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),happ(s(fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s('type.num.num',X27))),s('type.sptree.spt'(X26),X28))),s('type.list.list'(X26),X29)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X28,X27,X29,X26))))) | ~p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X31) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27))) | s(bool,X30) != s(bool,X32)) )),
  inference(resolution,[],[f175,f181])).
fof(f12151,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X9),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X10),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.sptree.spt'(X10)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X10,fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),happ(s(fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s('type.num.num',X11))),s('type.sptree.spt'(X10),X12))),s('type.list.list'(X10),X13)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X12,X11,X13,X10))))) | p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,X14) != s(bool,X16) | s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X11)))) )),
  inference(resolution,[],[f175,f179])).
fof(f8651,plain,(
  ( ! [X12,X10,X15,X13,X11,X9] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9)))) | s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X12,X11,X13,X10)))) | ~p(s(bool,X15)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X11)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X9),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X10),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.sptree.spt'(X10)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X10,fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),happ(s(fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s('type.num.num',X11))),s('type.sptree.spt'(X10),X12))),s('type.list.list'(X10),X13))))))))))) ) | $spl130),
  inference(cnf_transformation,[],[f8651_D])).
fof(f8651_D,plain,(
  ( ! [X12,X10,X15,X13,X11,X9] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9)))) | s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X12,X11,X13,X10)))) | ~p(s(bool,X15)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X11)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X9),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X10),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.sptree.spt'(X10)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X10,fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),happ(s(fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s('type.num.num',X11))),s('type.sptree.spt'(X10),X12))),s('type.list.list'(X10),X13))))))))))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f12147,plain,(
  ( ! [X121,X118,X116,X120,X119,X117,X115] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X115)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X115),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X116),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X116)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X116)),fun(X116,'type.pair.prod'('type.num.num','type.sptree.spt'(X116)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X116),fun(X116,'type.pair.prod'('type.num.num','type.sptree.spt'(X116))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X116),'type.pair.prod'('type.num.num','type.sptree.spt'(X116)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X116),fun(X116,'type.sptree.spt'(X116)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X116,fun('type.sptree.spt'(X116),'type.sptree.spt'(X116)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X116),'type.sptree.spt'(X116)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X116)),happ(s(fun('type.sptree.spt'(X116),'type.pair.prod'('type.num.num','type.sptree.spt'(X116))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X116),'type.pair.prod'('type.num.num','type.sptree.spt'(X116)))),'const.pair.,_0'),s('type.num.num',X117))),s('type.sptree.spt'(X116),X118))),s('type.list.list'(X116),X119)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X117)))) | p(s(bool,X120)) | ~p(s(bool,X121)) | s(bool,X121) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X118,X117,X119,X116))))) )),
  inference(resolution,[],[f175,f251])).
fof(f12138,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67,X65] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X65)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X65),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X66),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X66)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X66)),fun(X66,'type.pair.prod'('type.num.num','type.sptree.spt'(X66)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X66),fun(X66,'type.pair.prod'('type.num.num','type.sptree.spt'(X66))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X66),'type.pair.prod'('type.num.num','type.sptree.spt'(X66)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X66),fun(X66,'type.sptree.spt'(X66)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X66,fun('type.sptree.spt'(X66),'type.sptree.spt'(X66)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X66),'type.sptree.spt'(X66)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X66)),happ(s(fun('type.sptree.spt'(X66),'type.pair.prod'('type.num.num','type.sptree.spt'(X66))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X66),'type.pair.prod'('type.num.num','type.sptree.spt'(X66)))),'const.pair.,_0'),s('type.num.num',X67))),s('type.sptree.spt'(X66),X68))),s('type.list.list'(X66),X69)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X67)))) | ~p(s(bool,X70)) | ~p(s(bool,X71)) | s(bool,X71) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X68,X67,X69,X66)))) | s(bool,X70) != s(bool,X72)) )),
  inference(resolution,[],[f175,f185])).
fof(f12136,plain,(
  ( ! [X54,X52,X50,X56,X55,X53,X51,X49] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X49)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X49),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X50),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.sptree.spt'(X50)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X50,fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),happ(s(fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s('type.num.num',X51))),s('type.sptree.spt'(X50),X52))),s('type.list.list'(X50),X53)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X51)))) | p(s(bool,X54)) | ~p(s(bool,X55)) | ~p(s(bool,X56)) | s(bool,X55) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X52,X51,X53,X50))))) )),
  inference(resolution,[],[f175,f184])).
fof(f12134,plain,(
  ( ! [X39,X37,X35,X33,X38,X36,X34,X40] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X33)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X33),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X34),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X34)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X34)),fun(X34,'type.pair.prod'('type.num.num','type.sptree.spt'(X34)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X34),fun(X34,'type.pair.prod'('type.num.num','type.sptree.spt'(X34))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X34),'type.pair.prod'('type.num.num','type.sptree.spt'(X34)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X34),fun(X34,'type.sptree.spt'(X34)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X34,fun('type.sptree.spt'(X34),'type.sptree.spt'(X34)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X34),'type.sptree.spt'(X34)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X34)),happ(s(fun('type.sptree.spt'(X34),'type.pair.prod'('type.num.num','type.sptree.spt'(X34))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X34),'type.pair.prod'('type.num.num','type.sptree.spt'(X34)))),'const.pair.,_0'),s('type.num.num',X35))),s('type.sptree.spt'(X34),X36))),s('type.list.list'(X34),X37)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X35)))) | p(s(bool,X38)) | ~p(s(bool,X39)) | s(bool,X38) != s(bool,X40) | s(bool,X39) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X36,X35,X37,X34))))) )),
  inference(resolution,[],[f175,f183])).
fof(f12133,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X25,X32] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X25)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X25),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X26),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.sptree.spt'(X26)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X26,fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),happ(s(fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s('type.num.num',X27))),s('type.sptree.spt'(X26),X28))),s('type.list.list'(X26),X29)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27)))) | ~p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X31) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X28,X27,X29,X26)))) | s(bool,X30) != s(bool,X32)) )),
  inference(resolution,[],[f175,f181])).
fof(f12131,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X9),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X10),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.sptree.spt'(X10)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X10,fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),happ(s(fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s('type.num.num',X11))),s('type.sptree.spt'(X10),X12))),s('type.list.list'(X10),X13)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X11)))) | p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,X14) != s(bool,X16) | s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X12,X11,X13,X10))))) )),
  inference(resolution,[],[f175,f179])).
fof(f8644,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | s(bool,X6) != s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X4),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X4)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X4)),fun(X4,'type.pair.prod'('type.num.num','type.sptree.spt'(X4)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X4),fun(X4,'type.pair.prod'('type.num.num','type.sptree.spt'(X4))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X4),'type.pair.prod'('type.num.num','type.sptree.spt'(X4)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X4),fun(X4,'type.sptree.spt'(X4)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X4,fun('type.sptree.spt'(X4),'type.sptree.spt'(X4)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X4),'type.sptree.spt'(X4)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X4)),happ(s(fun('type.sptree.spt'(X4),'type.pair.prod'('type.num.num','type.sptree.spt'(X4))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X4),'type.pair.prod'('type.num.num','type.sptree.spt'(X4)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X4),X1))),s('type.list.list'(X4),X3))))))))) | ~p(s(bool,X6)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X1,X2,X3,X4))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2))))) ) | $spl128),
  inference(cnf_transformation,[],[f8644_D])).
fof(f8644_D,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | s(bool,X6) != s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X4),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X4)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X4)),fun(X4,'type.pair.prod'('type.num.num','type.sptree.spt'(X4)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X4),fun(X4,'type.pair.prod'('type.num.num','type.sptree.spt'(X4))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X4),'type.pair.prod'('type.num.num','type.sptree.spt'(X4)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X4),fun(X4,'type.sptree.spt'(X4)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X4,fun('type.sptree.spt'(X4),'type.sptree.spt'(X4)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X4),'type.sptree.spt'(X4)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X4)),happ(s(fun('type.sptree.spt'(X4),'type.pair.prod'('type.num.num','type.sptree.spt'(X4))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X4),'type.pair.prod'('type.num.num','type.sptree.spt'(X4)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X4),X1))),s('type.list.list'(X4),X3))))))))) | ~p(s(bool,X6)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X1,X2,X3,X4))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2))))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f12127,plain,(
  ( ! [X111,X109,X107,X112,X110,X108,X106] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X106)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X107,X108,X109,X110))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X108)))) | p(s(bool,X111)) | ~p(s(bool,X112)) | s(bool,X112) != s(bool,'const.bool.IN_2'(s('type.num.num',X106),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X110),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X110)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X110)),fun(X110,'type.pair.prod'('type.num.num','type.sptree.spt'(X110)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X110),fun(X110,'type.pair.prod'('type.num.num','type.sptree.spt'(X110))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X110),'type.pair.prod'('type.num.num','type.sptree.spt'(X110)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X110),fun(X110,'type.sptree.spt'(X110)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X110,fun('type.sptree.spt'(X110),'type.sptree.spt'(X110)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X110),'type.sptree.spt'(X110)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X110)),happ(s(fun('type.sptree.spt'(X110),'type.pair.prod'('type.num.num','type.sptree.spt'(X110))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X110),'type.pair.prod'('type.num.num','type.sptree.spt'(X110)))),'const.pair.,_0'),s('type.num.num',X108))),s('type.sptree.spt'(X110),X107))),s('type.list.list'(X110),X109)))))))))) )),
  inference(resolution,[],[f175,f251])).
fof(f12118,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X56,X63] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X56)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X57,X58,X59,X60))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X58)))) | ~p(s(bool,X61)) | ~p(s(bool,X62)) | s(bool,X62) != s(bool,'const.bool.IN_2'(s('type.num.num',X56),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X60),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X60)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X60)),fun(X60,'type.pair.prod'('type.num.num','type.sptree.spt'(X60)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X60),fun(X60,'type.pair.prod'('type.num.num','type.sptree.spt'(X60))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X60),'type.pair.prod'('type.num.num','type.sptree.spt'(X60)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X60),fun(X60,'type.sptree.spt'(X60)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X60,fun('type.sptree.spt'(X60),'type.sptree.spt'(X60)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X60),'type.sptree.spt'(X60)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X60)),happ(s(fun('type.sptree.spt'(X60),'type.pair.prod'('type.num.num','type.sptree.spt'(X60))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X60),'type.pair.prod'('type.num.num','type.sptree.spt'(X60)))),'const.pair.,_0'),s('type.num.num',X58))),s('type.sptree.spt'(X60),X57))),s('type.list.list'(X60),X59))))))))) | s(bool,X61) != s(bool,X63)) )),
  inference(resolution,[],[f175,f185])).
fof(f12116,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42,X40] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X40)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X41,X42,X43,X44))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X42)))) | p(s(bool,X45)) | ~p(s(bool,X46)) | ~p(s(bool,X47)) | s(bool,X46) != s(bool,'const.bool.IN_2'(s('type.num.num',X40),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X44),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X44)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X44)),fun(X44,'type.pair.prod'('type.num.num','type.sptree.spt'(X44)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X44),fun(X44,'type.pair.prod'('type.num.num','type.sptree.spt'(X44))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X44),'type.pair.prod'('type.num.num','type.sptree.spt'(X44)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X44),fun(X44,'type.sptree.spt'(X44)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X44,fun('type.sptree.spt'(X44),'type.sptree.spt'(X44)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X44),'type.sptree.spt'(X44)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X44)),happ(s(fun('type.sptree.spt'(X44),'type.pair.prod'('type.num.num','type.sptree.spt'(X44))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X44),'type.pair.prod'('type.num.num','type.sptree.spt'(X44)))),'const.pair.,_0'),s('type.num.num',X42))),s('type.sptree.spt'(X44),X41))),s('type.list.list'(X44),X43)))))))))) )),
  inference(resolution,[],[f175,f184])).
fof(f12114,plain,(
  ( ! [X30,X28,X26,X24,X31,X29,X27,X25] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X24)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X25,X26,X27,X28))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X26)))) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X29) != s(bool,X31) | s(bool,X30) != s(bool,'const.bool.IN_2'(s('type.num.num',X24),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.sptree.spt'(X28)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X28,fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),happ(s(fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s('type.num.num',X26))),s('type.sptree.spt'(X28),X25))),s('type.list.list'(X28),X27)))))))))) )),
  inference(resolution,[],[f175,f183])).
fof(f12113,plain,(
  ( ! [X23,X21,X19,X17,X22,X20,X18,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X16)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X17,X18,X19,X20))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X18)))) | ~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.bool.IN_2'(s('type.num.num',X16),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X20),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X20)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X20)),fun(X20,'type.pair.prod'('type.num.num','type.sptree.spt'(X20)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X20),fun(X20,'type.pair.prod'('type.num.num','type.sptree.spt'(X20))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X20),'type.pair.prod'('type.num.num','type.sptree.spt'(X20)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X20),fun(X20,'type.sptree.spt'(X20)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X20,fun('type.sptree.spt'(X20),'type.sptree.spt'(X20)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X20),'type.sptree.spt'(X20)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X20)),happ(s(fun('type.sptree.spt'(X20),'type.pair.prod'('type.num.num','type.sptree.spt'(X20))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X20),'type.pair.prod'('type.num.num','type.sptree.spt'(X20)))),'const.pair.,_0'),s('type.num.num',X18))),s('type.sptree.spt'(X20),X17))),s('type.list.list'(X20),X19))))))))) | s(bool,X21) != s(bool,X23)) )),
  inference(resolution,[],[f175,f181])).
fof(f12111,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X1,X2,X3,X4))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | p(s(bool,X5)) | ~p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | s(bool,X6) != s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X4),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X4)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X4)),fun(X4,'type.pair.prod'('type.num.num','type.sptree.spt'(X4)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X4),fun(X4,'type.pair.prod'('type.num.num','type.sptree.spt'(X4))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X4),'type.pair.prod'('type.num.num','type.sptree.spt'(X4)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X4),fun(X4,'type.sptree.spt'(X4)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X4,fun('type.sptree.spt'(X4),'type.sptree.spt'(X4)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X4),'type.sptree.spt'(X4)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X4)),happ(s(fun('type.sptree.spt'(X4),'type.pair.prod'('type.num.num','type.sptree.spt'(X4))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X4),'type.pair.prod'('type.num.num','type.sptree.spt'(X4)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X4),X1))),s('type.list.list'(X4),X3)))))))))) )),
  inference(resolution,[],[f175,f179])).
fof(f8631,plain,(
  ( ! [X24,X21,X19,X22,X20,X18] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.sptree.spt'(X19)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X19,fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),happ(s(fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s('type.num.num',X20))),s('type.sptree.spt'(X19),X21))),s('type.list.list'(X19),X22)))))))))) | p(s(bool,X24)) | s(bool,X24) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X18))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X20)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X21,X20,X22,X19)))))) ) | $spl126),
  inference(cnf_transformation,[],[f8631_D])).
fof(f8631_D,plain,(
  ( ! [X24,X21,X19,X22,X20,X18] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.sptree.spt'(X19)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X19,fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),happ(s(fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s('type.num.num',X20))),s('type.sptree.spt'(X19),X21))),s('type.list.list'(X19),X22)))))))))) | p(s(bool,X24)) | s(bool,X24) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X18))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X20)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X21,X20,X22,X19)))))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f12107,plain,(
  ( ! [X134,X132,X130,X135,X133,X131,X129] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X129),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X130),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X130)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X130)),fun(X130,'type.pair.prod'('type.num.num','type.sptree.spt'(X130)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X130),fun(X130,'type.pair.prod'('type.num.num','type.sptree.spt'(X130))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X130),'type.pair.prod'('type.num.num','type.sptree.spt'(X130)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X130),fun(X130,'type.sptree.spt'(X130)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X130,fun('type.sptree.spt'(X130),'type.sptree.spt'(X130)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X130),'type.sptree.spt'(X130)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X130)),happ(s(fun('type.sptree.spt'(X130),'type.pair.prod'('type.num.num','type.sptree.spt'(X130))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X130),'type.pair.prod'('type.num.num','type.sptree.spt'(X130)))),'const.pair.,_0'),s('type.num.num',X131))),s('type.sptree.spt'(X130),X132))),s('type.list.list'(X130),X133)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X132,X131,X133,X130))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X131)))) | p(s(bool,X134)) | p(s(bool,X135)) | s(bool,X135) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X129)))) )),
  inference(resolution,[],[f175,f251])).
fof(f12097,plain,(
  ( ! [X80,X78,X76,X74,X81,X79,X77,X75] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X74),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X75),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X75)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X75)),fun(X75,'type.pair.prod'('type.num.num','type.sptree.spt'(X75)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X75),fun(X75,'type.pair.prod'('type.num.num','type.sptree.spt'(X75))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X75),'type.pair.prod'('type.num.num','type.sptree.spt'(X75)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X75),fun(X75,'type.sptree.spt'(X75)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X75,fun('type.sptree.spt'(X75),'type.sptree.spt'(X75)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X75),'type.sptree.spt'(X75)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X75)),happ(s(fun('type.sptree.spt'(X75),'type.pair.prod'('type.num.num','type.sptree.spt'(X75))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X75),'type.pair.prod'('type.num.num','type.sptree.spt'(X75)))),'const.pair.,_0'),s('type.num.num',X76))),s('type.sptree.spt'(X75),X77))),s('type.list.list'(X75),X78)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X77,X76,X78,X75))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X76)))) | p(s(bool,X79)) | ~p(s(bool,X80)) | s(bool,X79) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X74))) | s(bool,X80) != s(bool,X81)) )),
  inference(resolution,[],[f175,f185])).
fof(f12094,plain,(
  ( ! [X57,X54,X52,X50,X56,X55,X53,X51] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X50),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X51),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.sptree.spt'(X51)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X51,fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),happ(s(fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s('type.num.num',X52))),s('type.sptree.spt'(X51),X53))),s('type.list.list'(X51),X54)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X53,X52,X54,X51))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X52)))) | p(s(bool,X55)) | ~p(s(bool,X56)) | p(s(bool,X57)) | s(bool,X57) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X50)))) )),
  inference(resolution,[],[f175,f184])).
fof(f12093,plain,(
  ( ! [X47,X45,X43,X48,X46,X44,X42,X49] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X42),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X43),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),fun(X43,'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X43),fun(X43,'type.pair.prod'('type.num.num','type.sptree.spt'(X43))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X43),fun(X43,'type.sptree.spt'(X43)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X43,fun('type.sptree.spt'(X43),'type.sptree.spt'(X43)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X43),'type.sptree.spt'(X43)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),happ(s(fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.,_0'),s('type.num.num',X44))),s('type.sptree.spt'(X43),X45))),s('type.list.list'(X43),X46)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X45,X44,X46,X43))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X44)))) | p(s(bool,X47)) | p(s(bool,X48)) | s(bool,X47) != s(bool,X49) | s(bool,X48) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X42)))) )),
  inference(resolution,[],[f175,f183])).
fof(f12092,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X34,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X34),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X35),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),fun(X35,'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X35),fun(X35,'type.pair.prod'('type.num.num','type.sptree.spt'(X35))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X35),fun(X35,'type.sptree.spt'(X35)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X35,fun('type.sptree.spt'(X35),'type.sptree.spt'(X35)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X35),'type.sptree.spt'(X35)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),happ(s(fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.,_0'),s('type.num.num',X36))),s('type.sptree.spt'(X35),X37))),s('type.list.list'(X35),X38)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X37,X36,X38,X35))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X36)))) | p(s(bool,X39)) | ~p(s(bool,X40)) | s(bool,X39) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X34))) | s(bool,X40) != s(bool,X41)) )),
  inference(resolution,[],[f175,f181])).
fof(f12090,plain,(
  ( ! [X24,X23,X21,X19,X25,X22,X20,X18] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.sptree.spt'(X19)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X19,fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),happ(s(fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s('type.num.num',X20))),s('type.sptree.spt'(X19),X21))),s('type.list.list'(X19),X22)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X21,X20,X22,X19))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X20)))) | p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X23) != s(bool,X25) | s(bool,X24) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X18)))) )),
  inference(resolution,[],[f175,f179])).
fof(f10345,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl184),
  inference(cnf_transformation,[],[f10345_D])).
fof(f10345_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f11661,plain,(
  ( ! [X6] : (s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl82 | $spl181)),
  inference(subsumption_resolution,[],[f11644,f250])).
fof(f11644,plain,(
  ( ! [X6] : (s(bool,'F_0') != s(bool,X6) | s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl82 | $spl181)),
  inference(superposition,[],[f9905,f2901])).
fof(f11660,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X5)) ) | ($spl82 | $spl181)),
  inference(subsumption_resolution,[],[f11643,f250])).
fof(f11643,plain,(
  ( ! [X5] : (s(bool,'F_0') != s(bool,X5) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X5)) ) | ($spl82 | $spl181)),
  inference(superposition,[],[f9905,f2901])).
fof(f2796,plain,(
  ( ! [X17,X18] : (s(bool,'F_0') != s(bool,X17) | p(s(bool,X18)) | s(bool,X17) = s(bool,X18)) ) | $spl80),
  inference(cnf_transformation,[],[f2796_D])).
fof(f2796_D,plain,(
  ( ! [X17,X18] : (s(bool,'F_0') != s(bool,X17) | p(s(bool,X18)) | s(bool,X17) = s(bool,X18)) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f11311,plain,(
  ( ! [X189,X190,X188] : (s(bool,'F_0') != s(bool,X189) | p(s(bool,X188)) | s(bool,X189) = s(bool,X190) | p(s(bool,X190))) )),
  inference(duplicate_literal_removal,[],[f11276])).
fof(f11276,plain,(
  ( ! [X189,X190,X188] : (s(bool,'F_0') != s(bool,X189) | p(s(bool,X188)) | s(bool,X189) = s(bool,X190) | p(s(bool,X190)) | p(s(bool,X188))) )),
  inference(superposition,[],[f1232,f229])).
fof(f11060,plain,(
  ( ! [X45,X43,X44] : (s(bool,'F_0') = s(bool,X43) | p(s(bool,X44)) | p(s(bool,X45)) | s(bool,X43) != s(bool,X45)) )),
  inference(resolution,[],[f229,f251])).
fof(f11050,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'F_0') = s(bool,X28) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X29) | s(bool,X30) != s(bool,X31)) )),
  inference(resolution,[],[f229,f185])).
fof(f11047,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'F_0') = s(bool,X16) | p(s(bool,X17)) | ~p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X16) != s(bool,X19)) )),
  inference(resolution,[],[f229,f184])).
fof(f11046,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') = s(bool,X12) | p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) )),
  inference(resolution,[],[f229,f183])).
fof(f11045,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') = s(bool,X8) | p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X9) | s(bool,X10) != s(bool,X11)) )),
  inference(resolution,[],[f229,f181])).
fof(f11043,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) )),
  inference(resolution,[],[f229,f179])).
fof(f11025,plain,(
  ( ! [X2,X0] : (~p(s(bool,X2)) | s(bool,X0) != s(bool,X2) | s(bool,'F_0') != s(bool,X0)) ) | $spl190),
  inference(cnf_transformation,[],[f11025_D])).
fof(f11025_D,plain,(
  ( ! [X2,X0] : (~p(s(bool,X2)) | s(bool,X0) != s(bool,X2) | s(bool,'F_0') != s(bool,X0)) ) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f10945,plain,(
  ( ! [X43,X41,X42] : (s(bool,'F_0') != s(bool,X41) | p(s(bool,X42)) | ~p(s(bool,X43)) | s(bool,X41) != s(bool,X43)) )),
  inference(resolution,[],[f228,f251])).
fof(f10937,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'F_0') != s(bool,X28) | ~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X30) | s(bool,X29) != s(bool,X31)) )),
  inference(resolution,[],[f228,f185])).
fof(f10935,plain,(
  ( ! [X23,X21,X22,X20] : (s(bool,'F_0') != s(bool,X20) | p(s(bool,X21)) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X20) != s(bool,X22)) )),
  inference(resolution,[],[f228,f184])).
fof(f10933,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,X12) | p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) )),
  inference(resolution,[],[f228,f183])).
fof(f10932,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,X8) | ~p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X10) | s(bool,X9) != s(bool,X11)) )),
  inference(resolution,[],[f228,f181])).
fof(f10930,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) )),
  inference(resolution,[],[f228,f179])).
fof(f10769,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,'F_0') != s(bool,X1)) ) | $spl188),
  inference(cnf_transformation,[],[f10769_D])).
fof(f10769_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,'F_0') != s(bool,X1)) ) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f10923,plain,(
  ( ! [X116,X115] : (s(bool,'F_0') != s(bool,X116) | p(s(bool,X115)) | ~p(s(bool,X116))) )),
  inference(forward_demodulation,[],[f10922,f271])).
fof(f10922,plain,(
  ( ! [X116,X115] : (p(s(bool,X115)) | ~p(s(bool,X116)) | s(bool,X116) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) )),
  inference(subsumption_resolution,[],[f10851,f237])).
fof(f10851,plain,(
  ( ! [X116,X115] : (p(s(bool,'F_0')) | p(s(bool,X115)) | ~p(s(bool,X116)) | s(bool,X116) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) )),
  inference(superposition,[],[f251,f271])).
fof(f10907,plain,(
  ( ! [X94,X95,X96] : (s(bool,'F_0') != s(bool,X95) | ~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X94) != s(bool,X96)) )),
  inference(forward_demodulation,[],[f10906,f271])).
fof(f10906,plain,(
  ( ! [X94,X95,X96] : (~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X95) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2))) | s(bool,X94) != s(bool,X96)) )),
  inference(subsumption_resolution,[],[f10822,f237])).
fof(f10822,plain,(
  ( ! [X94,X95,X96] : (p(s(bool,'F_0')) | ~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X95) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2))) | s(bool,X94) != s(bool,X96)) )),
  inference(superposition,[],[f185,f271])).
fof(f10903,plain,(
  ( ! [X70,X72,X71] : (s(bool,'F_0') != s(bool,X71) | p(s(bool,X70)) | ~p(s(bool,X71)) | ~p(s(bool,X72))) )),
  inference(forward_demodulation,[],[f10902,f271])).
fof(f10902,plain,(
  ( ! [X70,X72,X71] : (p(s(bool,X70)) | ~p(s(bool,X71)) | ~p(s(bool,X72)) | s(bool,X71) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) )),
  inference(subsumption_resolution,[],[f10814,f237])).
fof(f10814,plain,(
  ( ! [X70,X72,X71] : (p(s(bool,'F_0')) | p(s(bool,X70)) | ~p(s(bool,X71)) | ~p(s(bool,X72)) | s(bool,X71) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) )),
  inference(superposition,[],[f184,f271])).
fof(f10898,plain,(
  ( ! [X57,X56,X55] : (s(bool,'F_0') != s(bool,X56) | p(s(bool,X55)) | ~p(s(bool,X56)) | s(bool,X55) != s(bool,X57)) )),
  inference(forward_demodulation,[],[f10897,f271])).
fof(f10897,plain,(
  ( ! [X57,X56,X55] : (p(s(bool,X55)) | ~p(s(bool,X56)) | s(bool,X55) != s(bool,X57) | s(bool,X56) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) )),
  inference(subsumption_resolution,[],[f10809,f237])).
fof(f10809,plain,(
  ( ! [X57,X56,X55] : (p(s(bool,'F_0')) | p(s(bool,X55)) | ~p(s(bool,X56)) | s(bool,X55) != s(bool,X57) | s(bool,X56) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) )),
  inference(superposition,[],[f183,f271])).
fof(f10892,plain,(
  ( ! [X35,X36,X34] : (s(bool,'F_0') != s(bool,X35) | ~p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X34) != s(bool,X36)) )),
  inference(forward_demodulation,[],[f10891,f271])).
fof(f10891,plain,(
  ( ! [X35,X36,X34] : (~p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X35) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2))) | s(bool,X34) != s(bool,X36)) )),
  inference(subsumption_resolution,[],[f10802,f237])).
fof(f10802,plain,(
  ( ! [X35,X36,X34] : (p(s(bool,'F_0')) | ~p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X35) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2))) | s(bool,X34) != s(bool,X36)) )),
  inference(superposition,[],[f181,f271])).
fof(f10888,plain,(
  ( ! [X14,X15,X13] : (s(bool,'F_0') != s(bool,X14) | p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X13) != s(bool,X15)) )),
  inference(forward_demodulation,[],[f10887,f271])).
fof(f10887,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X14) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) )),
  inference(subsumption_resolution,[],[f10795,f237])).
fof(f10795,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,'F_0')) | p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X14) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) )),
  inference(superposition,[],[f179,f271])).
fof(f10751,plain,(
  ( ! [X26,X27] : (p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,'F_0') != s(bool,X27)) )),
  inference(resolution,[],[f237,f251])).
fof(f10743,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,'F_0') != s(bool,X22) | s(bool,X21) != s(bool,X23)) )),
  inference(resolution,[],[f237,f185])).
fof(f10741,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,'F_0') != s(bool,X16)) )),
  inference(resolution,[],[f237,f184])).
fof(f10739,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,'F_0') != s(bool,X10)) )),
  inference(resolution,[],[f237,f183])).
fof(f10738,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,'F_0') != s(bool,X7) | s(bool,X6) != s(bool,X8)) )),
  inference(resolution,[],[f237,f181])).
fof(f10736,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,'F_0') != s(bool,X1)) )),
  inference(resolution,[],[f237,f179])).
fof(f10734,plain,(
  ~p(s(bool,'F_0')) | $spl187),
  inference(cnf_transformation,[],[f10734_D])).
fof(f10734_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl187),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl187])])).
fof(f199,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | ~p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f144])).
fof(f144,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | (~p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(ennf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f91])).
fof(f91,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X11] : ((p(s(bool,X11)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X11)))),
  file('thm.misc.EVEN_fromList2','thm.bool.IMP_CLAUSES|split|4')).
fof(f10735,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(subsumption_resolution,[],[f203,f202])).
fof(f203,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))) )),
  inference(cnf_transformation,[],[f147])).
fof(f218,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | ~p(s(bool,X0)) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,'F_0')) & p(s(bool,X0)))))),
  inference(flattening,[],[f156])).
fof(f156,plain,(
  ! [X0] : (((~p(s(bool,'F_0')) | ~p(s(bool,X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,'F_0')) & p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0] : ((p(s(bool,'F_0')) & p(s(bool,X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X11] : ((p(s(bool,'F_0')) & p(s(bool,X11))) <=> p(s(bool,'F_0')))),
  file('thm.misc.EVEN_fromList2','thm.bool.AND_CLAUSES|split|2')).
fof(f220,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f159])).
fof(f159,plain,(
  ! [X0] : ((~p(s(bool,X0)) | ~p(s(bool,'F_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,X0)) & p(s(bool,'F_0')))))),
  inference(flattening,[],[f158])).
fof(f158,plain,(
  ! [X0] : (((~p(s(bool,X0)) | ~p(s(bool,'F_0'))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,X0)) & p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0] : ((p(s(bool,X0)) & p(s(bool,'F_0'))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X11] : ((p(s(bool,X11)) & p(s(bool,'F_0'))) <=> p(s(bool,'F_0')))),
  file('thm.misc.EVEN_fromList2','thm.bool.AND_CLAUSES|split|3')).
fof(f236,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0] : (~p(s(bool,'F_0')) | p(s(bool,X0)))),
  inference(ennf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0] : (p(s(bool,'F_0')) => p(s(bool,X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X11] : (p(s(bool,'F_0')) => p(s(bool,X11)))),
  file('thm.misc.EVEN_fromList2','thm.bool.FALSITY')).
fof(f10641,plain,(
  $false | ($spl118 | $spl181)),
  inference(subsumption_resolution,[],[f10368,f7001])).
fof(f10368,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl118 | $spl181)),
  inference(backward_demodulation,[],[f7001,f9905])).
fof(f10635,plain,(
  $false | $spl118),
  inference(subsumption_resolution,[],[f10358,f238])).
fof(f10358,plain,(
  ~p(s(bool,'T_0')) | $spl118),
  inference(backward_demodulation,[],[f7001,f237])).
fof(f10603,plain,(
  $false | $spl118),
  inference(trivial_inequality_removal,[],[f10591])).
fof(f10591,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl118),
  inference(superposition,[],[f730,f7001])).
fof(f730,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(superposition,[],[f273,f271])).
fof(f273,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))),
  inference(resolution,[],[f173,f232])).
fof(f10602,plain,(
  $false | $spl118),
  inference(trivial_inequality_removal,[],[f10594])).
fof(f10594,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl118),
  inference(superposition,[],[f7513,f7001])).
fof(f7513,plain,(
  ( ! [X48,X49] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X48,X49),s(fun(X48,bool),'const.pred_set.EMPTY_0')))) )),
  inference(resolution,[],[f239,f232])).
fof(f10600,plain,(
  $false | $spl118),
  inference(trivial_inequality_removal,[],[f10598])).
fof(f10598,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl118),
  inference(superposition,[],[f273,f7001])).
fof(f10346,plain,(
  ( ! [X6] : (s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl82 | $spl181)),
  inference(subsumption_resolution,[],[f10323,f250])).
fof(f10323,plain,(
  ( ! [X6] : (s(bool,'F_0') != s(bool,X6) | s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl82 | $spl181)),
  inference(superposition,[],[f9905,f2901])).
fof(f10343,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X5)) ) | ($spl82 | $spl181)),
  inference(subsumption_resolution,[],[f10322,f250])).
fof(f10322,plain,(
  ( ! [X5] : (s(bool,'F_0') != s(bool,X5) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X5)) ) | ($spl82 | $spl181)),
  inference(superposition,[],[f9905,f2901])).
fof(f10271,plain,(
  $false | ($spl48 | $spl180)),
  inference(subsumption_resolution,[],[f10270,f238])).
fof(f10270,plain,(
  ~p(s(bool,'T_0')) | ($spl48 | $spl180)),
  inference(forward_demodulation,[],[f10269,f1346])).
fof(f10269,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | $spl180),
  inference(forward_demodulation,[],[f10268,f176])).
fof(f10268,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl180),
  inference(subsumption_resolution,[],[f10119,f730])).
fof(f10119,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl180),
  inference(superposition,[],[f235,f9906])).
fof(f235,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.misc.EVEN_fromList2','thm.bool.EQ_CLAUSES|split|0')).
fof(f10266,plain,(
  $false | ($spl48 | $spl180)),
  inference(subsumption_resolution,[],[f10265,f238])).
fof(f10265,plain,(
  ~p(s(bool,'T_0')) | ($spl48 | $spl180)),
  inference(forward_demodulation,[],[f10264,f1346])).
fof(f10264,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | $spl180),
  inference(forward_demodulation,[],[f10263,f176])).
fof(f10263,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl180),
  inference(subsumption_resolution,[],[f10115,f730])).
fof(f10115,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl180),
  inference(superposition,[],[f233,f9906])).
fof(f10261,plain,(
  $false | ($spl48 | $spl180)),
  inference(subsumption_resolution,[],[f10260,f238])).
fof(f10260,plain,(
  ~p(s(bool,'T_0')) | ($spl48 | $spl180)),
  inference(forward_demodulation,[],[f10259,f1346])).
fof(f10259,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | $spl180),
  inference(forward_demodulation,[],[f10156,f176])).
fof(f10156,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl180),
  inference(trivial_inequality_removal,[],[f10110])).
fof(f10110,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl180),
  inference(superposition,[],[f230,f9906])).
fof(f230,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f104])).
fof(f104,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.misc.EVEN_fromList2','thm.bool.EQ_CLAUSES|split|2')).
fof(f10258,plain,(
  $false | ($spl48 | $spl180)),
  inference(subsumption_resolution,[],[f10257,f238])).
fof(f10257,plain,(
  ~p(s(bool,'T_0')) | ($spl48 | $spl180)),
  inference(forward_demodulation,[],[f10256,f1346])).
fof(f10256,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | $spl180),
  inference(forward_demodulation,[],[f10157,f176])).
fof(f10157,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl180),
  inference(trivial_inequality_removal,[],[f10107])).
fof(f10107,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl180),
  inference(superposition,[],[f228,f9906])).
fof(f10184,plain,(
  $false | ($spl48 | $spl180)),
  inference(subsumption_resolution,[],[f10183,f730])).
fof(f10183,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl48 | $spl180)),
  inference(forward_demodulation,[],[f10049,f1346])).
fof(f10049,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) | $spl180),
  inference(superposition,[],[f176,f9906])).
fof(f10180,plain,(
  $false | ($spl48 | $spl180)),
  inference(subsumption_resolution,[],[f10179,f238])).
fof(f10179,plain,(
  ~p(s(bool,'T_0')) | ($spl48 | $spl180)),
  inference(forward_demodulation,[],[f10178,f1346])).
fof(f10178,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | $spl180),
  inference(forward_demodulation,[],[f10177,f176])).
fof(f10177,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl180),
  inference(subsumption_resolution,[],[f10042,f730])).
fof(f10042,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl180),
  inference(superposition,[],[f9906,f235])).
fof(f10176,plain,(
  $false | ($spl48 | $spl180)),
  inference(subsumption_resolution,[],[f10175,f238])).
fof(f10175,plain,(
  ~p(s(bool,'T_0')) | ($spl48 | $spl180)),
  inference(forward_demodulation,[],[f10174,f1346])).
fof(f10174,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | $spl180),
  inference(forward_demodulation,[],[f10173,f176])).
fof(f10173,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl180),
  inference(subsumption_resolution,[],[f10041,f730])).
fof(f10041,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl180),
  inference(superposition,[],[f9906,f233])).
fof(f10164,plain,(
  $false | ($spl48 | $spl180)),
  inference(subsumption_resolution,[],[f10163,f730])).
fof(f10163,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl48 | $spl180)),
  inference(forward_demodulation,[],[f10036,f1346])).
fof(f10036,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) | $spl180),
  inference(superposition,[],[f9906,f176])).
fof(f2394,plain,(
  ( ! [X12] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))) ) | $spl72),
  inference(cnf_transformation,[],[f2394_D])).
fof(f2394_D,plain,(
  ( ! [X12] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f10023,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl182),
  inference(cnf_transformation,[],[f10023_D])).
fof(f10023_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f10018,plain,(
  ( ! [X13] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))) ) | $spl178),
  inference(trivial_inequality_removal,[],[f10016])).
fof(f10016,plain,(
  ( ! [X13] : (s('type.num.num',X13) != s('type.num.num',X13) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))) ) | $spl178),
  inference(superposition,[],[f9904,f246])).
fof(f10019,plain,(
  ( ! [X12] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))) ) | $spl178),
  inference(trivial_inequality_removal,[],[f10015])).
fof(f10015,plain,(
  ( ! [X12] : (s('type.num.num',X12) != s('type.num.num',X12) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))) ) | $spl178),
  inference(superposition,[],[f9904,f248])).
fof(f9906,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl180),
  inference(cnf_transformation,[],[f9906_D])).
fof(f9906_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f9763,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) )),
  inference(superposition,[],[f7886,f247])).
fof(f7886,plain,(
  ( ! [X13] : (s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X13)))) )),
  inference(superposition,[],[f176,f250])).
fof(f9762,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(superposition,[],[f7886,f249])).
fof(f9759,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl174),
  inference(cnf_transformation,[],[f9759_D])).
fof(f9759_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f9761,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl177),
  inference(cnf_transformation,[],[f9761_D])).
fof(f9761_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl177),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl177])])).
fof(f9739,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) ) | $spl151),
  inference(superposition,[],[f9394,f247])).
fof(f9394,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl151),
  inference(superposition,[],[f9380,f243])).
fof(f243,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X8,X17] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))) <=> s('type.num.num',X8) = s('type.num.num',X17))),
  file('thm.misc.EVEN_fromList2','thm.numeral.numeral_distrib|split|19')).
fof(f9380,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl151),
  inference(trivial_inequality_removal,[],[f9373])).
fof(f9373,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl151),
  inference(superposition,[],[f8738,f247])).
fof(f9738,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl151),
  inference(superposition,[],[f9394,f249])).
fof(f9228,plain,(
  $false | $spl72),
  inference(equality_resolution,[],[f9208])).
fof(f9208,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) ) | $spl72),
  inference(trivial_inequality_removal,[],[f9201])).
fof(f9201,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) ) | $spl72),
  inference(superposition,[],[f2394,f247])).
fof(f9018,plain,(
  ( ! [X52,X50,X53,X51,X49] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X49)))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X50)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X50),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X51),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.sptree.spt'(X51)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X51,fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),happ(s(fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X51),X52))),s('type.list.list'(X51),X53)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X52,'const.arithmetic.ZERO_0',X53,X51)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X51),X52)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49)))) )),
  inference(superposition,[],[f174,f246])).
fof(f9017,plain,(
  ( ! [X47,X45,X48,X46,X44] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X44)))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X45)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X45),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X46),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.sptree.spt'(X46)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X46,fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),happ(s(fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X46),X47))),s('type.list.list'(X46),X48)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X47,'const.arithmetic.ZERO_0',X48,X46)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X46),X47)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))) )),
  inference(superposition,[],[f174,f248])).
fof(f9166,plain,(
  ( ! [X70,X68,X66,X71,X69,X67] : (p(s(bool,X70)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X71)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X71),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X69),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X69)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X69)),fun(X69,'type.pair.prod'('type.num.num','type.sptree.spt'(X69)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X69),fun(X69,'type.pair.prod'('type.num.num','type.sptree.spt'(X69))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X69),'type.pair.prod'('type.num.num','type.sptree.spt'(X69)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X69),fun(X69,'type.sptree.spt'(X69)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X69,fun('type.sptree.spt'(X69),'type.sptree.spt'(X69)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X69),'type.sptree.spt'(X69)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X69)),happ(s(fun('type.sptree.spt'(X69),'type.pair.prod'('type.num.num','type.sptree.spt'(X69))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X69),'type.pair.prod'('type.num.num','type.sptree.spt'(X69)))),'const.pair.,_0'),s('type.num.num',X67))),s('type.sptree.spt'(X69),X66))),s('type.list.list'(X69),X68)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X67)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X66,X67,X68,X69)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X69),X66)))))) ) | $spl82),
  inference(subsumption_resolution,[],[f9006,f232])).
fof(f9006,plain,(
  ( ! [X70,X68,X66,X71,X69,X67] : (p(s(bool,X70)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X71)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X71),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X69),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X69)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X69)),fun(X69,'type.pair.prod'('type.num.num','type.sptree.spt'(X69)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X69),fun(X69,'type.pair.prod'('type.num.num','type.sptree.spt'(X69))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X69),'type.pair.prod'('type.num.num','type.sptree.spt'(X69)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X69),fun(X69,'type.sptree.spt'(X69)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X69,fun('type.sptree.spt'(X69),'type.sptree.spt'(X69)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X69),'type.sptree.spt'(X69)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X69)),happ(s(fun('type.sptree.spt'(X69),'type.pair.prod'('type.num.num','type.sptree.spt'(X69))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X69),'type.pair.prod'('type.num.num','type.sptree.spt'(X69)))),'const.pair.,_0'),s('type.num.num',X67))),s('type.sptree.spt'(X69),X66))),s('type.list.list'(X69),X68)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X67)))) | s(bool,'T_0') = s(bool,X70) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X66,X67,X68,X69)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X69),X66)))))) ) | $spl82),
  inference(superposition,[],[f174,f2901])).
fof(f9165,plain,(
  ( ! [X61,X64,X62,X60,X65,X63] : (p(s(bool,X64)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X65)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X65),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X63),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X63)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X63)),fun(X63,'type.pair.prod'('type.num.num','type.sptree.spt'(X63)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X63),fun(X63,'type.pair.prod'('type.num.num','type.sptree.spt'(X63))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X63),'type.pair.prod'('type.num.num','type.sptree.spt'(X63)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X63),fun(X63,'type.sptree.spt'(X63)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X63,fun('type.sptree.spt'(X63),'type.sptree.spt'(X63)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X63),'type.sptree.spt'(X63)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X63)),happ(s(fun('type.sptree.spt'(X63),'type.pair.prod'('type.num.num','type.sptree.spt'(X63))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X63),'type.pair.prod'('type.num.num','type.sptree.spt'(X63)))),'const.pair.,_0'),s('type.num.num',X61))),s('type.sptree.spt'(X63),X60))),s('type.list.list'(X63),X62)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X61)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X60,X61,X62,X63)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X63),X60)))))) ) | $spl82),
  inference(subsumption_resolution,[],[f9005,f232])).
fof(f9005,plain,(
  ( ! [X61,X64,X62,X60,X65,X63] : (p(s(bool,X64)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X65)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X65),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X63),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X63)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X63)),fun(X63,'type.pair.prod'('type.num.num','type.sptree.spt'(X63)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X63),fun(X63,'type.pair.prod'('type.num.num','type.sptree.spt'(X63))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X63),'type.pair.prod'('type.num.num','type.sptree.spt'(X63)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X63),fun(X63,'type.sptree.spt'(X63)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X63,fun('type.sptree.spt'(X63),'type.sptree.spt'(X63)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X63),'type.sptree.spt'(X63)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X63)),happ(s(fun('type.sptree.spt'(X63),'type.pair.prod'('type.num.num','type.sptree.spt'(X63))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X63),'type.pair.prod'('type.num.num','type.sptree.spt'(X63)))),'const.pair.,_0'),s('type.num.num',X61))),s('type.sptree.spt'(X63),X60))),s('type.list.list'(X63),X62)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X61)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X60,X61,X62,X63)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X63),X60))))) | s(bool,'T_0') = s(bool,X64)) ) | $spl82),
  inference(superposition,[],[f174,f2901])).
fof(f8738,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl151),
  inference(cnf_transformation,[],[f8738_D])).
fof(f8738_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl151),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl151])])).
fof(f9128,plain,(
  ( ! [X26,X24,X23,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X22),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X23),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.sptree.spt'(X23)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X23,fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),happ(s(fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s('type.num.num',X24))),s('type.sptree.spt'(X23),X25))),s('type.list.list'(X23),X26)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X24)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X25,X24,X26,X23)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X23),X25)))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X22))))) ) | $spl170),
  inference(cnf_transformation,[],[f9128_D])).
fof(f9128_D,plain,(
  ( ! [X26,X24,X23,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X22),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X23),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.sptree.spt'(X23)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X23,fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),happ(s(fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s('type.num.num',X24))),s('type.sptree.spt'(X23),X25))),s('type.list.list'(X23),X26)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X24)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X25,X24,X26,X23)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X23),X25)))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X22))))) ) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f8958,plain,(
  ( ! [X30,X28,X31,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X27),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.sptree.spt'(X28)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X28,fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),happ(s(fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s('type.num.num',X29))),s('type.sptree.spt'(X28),X30))),s('type.list.list'(X28),X31)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X30,X29,X31,X28)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),X30)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X29)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f174,f246])).
fof(f8957,plain,(
  ( ! [X26,X24,X23,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X22),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X23),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.sptree.spt'(X23)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X23,fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),happ(s(fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s('type.num.num',X24))),s('type.sptree.spt'(X23),X25))),s('type.list.list'(X23),X26)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X22)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X25,X24,X26,X23)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X23),X25)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X24)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f174,f248])).
fof(f8732,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl143),
  inference(cnf_transformation,[],[f8732_D])).
fof(f8732_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl143),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl143])])).
fof(f9127,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X3,X2,X4,X1)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),X3)))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) ) | $spl168),
  inference(cnf_transformation,[],[f9127_D])).
fof(f9127_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X3,X2,X4,X1)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),X3)))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f8950,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num',X7))),s('type.sptree.spt'(X6),X8))),s('type.list.list'(X6),X9)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X8,X7,X9,X6)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),X8)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f174,f246])).
fof(f8949,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X3,X2,X4,X1)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),X3)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f174,f248])).
fof(f8938,plain,(
  ( ! [X30,X28,X31,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.sptree.spt'(X28)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X28,fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),happ(s(fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s('type.num.num',X29))),s('type.sptree.spt'(X28),X30))),s('type.list.list'(X28),X31)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X30,X29,X31,X28)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),X30)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X29)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))) )),
  inference(superposition,[],[f174,f246])).
fof(f8937,plain,(
  ( ! [X26,X24,X23,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X23),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.sptree.spt'(X23)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X23,fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),happ(s(fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s('type.num.num',X24))),s('type.sptree.spt'(X23),X25))),s('type.list.list'(X23),X26)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X22)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X25,X24,X26,X23)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X23),X25)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X24)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))) )),
  inference(superposition,[],[f174,f248])).
fof(f9117,plain,(
  ( ! [X4,X2,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X3,X2,X4,X1)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),X3))))))) ) | $spl166),
  inference(cnf_transformation,[],[f9117_D])).
fof(f9117_D,plain,(
  ( ! [X4,X2,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X3,X2,X4,X1)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),X3))))))) ) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f9118,plain,(
  ( ! [X6,X8,X7,X5,X9] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num',X7))),s('type.sptree.spt'(X6),X8))),s('type.list.list'(X6),X9)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X8,X7,X9,X6)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),X8)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X5)) )),
  inference(forward_demodulation,[],[f8934,f176])).
fof(f8934,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num',X7))),s('type.sptree.spt'(X6),X8))),s('type.list.list'(X6),X9)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X8,X7,X9,X6)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),X8)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X5)) )),
  inference(superposition,[],[f174,f247])).
fof(f9116,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X3,X2,X4,X1)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),X3)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f8933,f176])).
fof(f8933,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X3,X2,X4,X1)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),X3)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(superposition,[],[f174,f249])).
fof(f9111,plain,(
  ( ! [X92,X90,X88,X93,X91,X89] : (p(s(bool,X89)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X88),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X90),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X90)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X90)),fun(X90,'type.pair.prod'('type.num.num','type.sptree.spt'(X90)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X90),fun(X90,'type.pair.prod'('type.num.num','type.sptree.spt'(X90))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X90),'type.pair.prod'('type.num.num','type.sptree.spt'(X90)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X90),fun(X90,'type.sptree.spt'(X90)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X90,fun('type.sptree.spt'(X90),'type.sptree.spt'(X90)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X90),'type.sptree.spt'(X90)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X90)),happ(s(fun('type.sptree.spt'(X90),'type.pair.prod'('type.num.num','type.sptree.spt'(X90))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X90),'type.pair.prod'('type.num.num','type.sptree.spt'(X90)))),'const.pair.,_0'),s('type.num.num',X91))),s('type.sptree.spt'(X90),X92))),s('type.list.list'(X90),X93)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X92,X91,X93,X90)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X90),X92)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X91)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X88)))) ) | $spl82),
  inference(subsumption_resolution,[],[f8930,f232])).
fof(f8930,plain,(
  ( ! [X92,X90,X88,X93,X91,X89] : (p(s(bool,X89)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X88),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X90),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X90)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X90)),fun(X90,'type.pair.prod'('type.num.num','type.sptree.spt'(X90)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X90),fun(X90,'type.pair.prod'('type.num.num','type.sptree.spt'(X90))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X90),'type.pair.prod'('type.num.num','type.sptree.spt'(X90)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X90),fun(X90,'type.sptree.spt'(X90)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X90,fun('type.sptree.spt'(X90),'type.sptree.spt'(X90)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X90),'type.sptree.spt'(X90)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X90)),happ(s(fun('type.sptree.spt'(X90),'type.pair.prod'('type.num.num','type.sptree.spt'(X90))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X90),'type.pair.prod'('type.num.num','type.sptree.spt'(X90)))),'const.pair.,_0'),s('type.num.num',X91))),s('type.sptree.spt'(X90),X92))),s('type.list.list'(X90),X93)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X92,X91,X93,X90)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X90),X92)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X91)))) | s(bool,'T_0') = s(bool,X89) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X88)))) ) | $spl82),
  inference(superposition,[],[f174,f2901])).
fof(f9110,plain,(
  ( ! [X87,X85,X83,X86,X84,X82] : (p(s(bool,X83)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X82),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X84),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),fun(X84,'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X84),fun(X84,'type.pair.prod'('type.num.num','type.sptree.spt'(X84))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X84),fun(X84,'type.sptree.spt'(X84)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X84,fun('type.sptree.spt'(X84),'type.sptree.spt'(X84)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X84),'type.sptree.spt'(X84)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),happ(s(fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.,_0'),s('type.num.num',X85))),s('type.sptree.spt'(X84),X86))),s('type.list.list'(X84),X87)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X86,X85,X87,X84)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X84),X86)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X85)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X82)))) ) | $spl82),
  inference(subsumption_resolution,[],[f8929,f232])).
fof(f8929,plain,(
  ( ! [X87,X85,X83,X86,X84,X82] : (p(s(bool,X83)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X82),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X84),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),fun(X84,'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X84),fun(X84,'type.pair.prod'('type.num.num','type.sptree.spt'(X84))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X84),fun(X84,'type.sptree.spt'(X84)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X84,fun('type.sptree.spt'(X84),'type.sptree.spt'(X84)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X84),'type.sptree.spt'(X84)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),happ(s(fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.,_0'),s('type.num.num',X85))),s('type.sptree.spt'(X84),X86))),s('type.list.list'(X84),X87)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X86,X85,X87,X84)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X84),X86)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X85)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X82))) | s(bool,'T_0') = s(bool,X83)) ) | $spl82),
  inference(superposition,[],[f174,f2901])).
fof(f9094,plain,(
  ( ! [X14,X17,X15,X13,X16] : (p(s(bool,X13)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.sptree.spt'(X14)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X14,fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),happ(s(fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s('type.num.num',X15))),s('type.sptree.spt'(X14),X16))),s('type.list.list'(X14),X17)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X16,X15,X17,X14)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),X16)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15))))) ) | $spl82),
  inference(subsumption_resolution,[],[f8916,f232])).
fof(f8916,plain,(
  ( ! [X14,X17,X15,X13,X16] : (p(s(bool,X13)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.sptree.spt'(X14)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X14,fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),happ(s(fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s('type.num.num',X15))),s('type.sptree.spt'(X14),X16))),s('type.list.list'(X14),X17)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X16,X15,X17,X14)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),X16)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | s(bool,'T_0') = s(bool,X13)) ) | $spl82),
  inference(superposition,[],[f174,f2959])).
fof(f8912,plain,(
  ( ! [X52,X50,X53,X51,X49] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X49)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X50),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.sptree.spt'(X50)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X50,fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),happ(s(fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s('type.num.num',X51))),s('type.sptree.spt'(X50),X52))),s('type.list.list'(X50),X53)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X52,X51,X53,X50)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X50),X52)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X51)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49)))) )),
  inference(superposition,[],[f174,f246])).
fof(f8911,plain,(
  ( ! [X47,X45,X48,X46,X44] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X44)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X45),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X45)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X45)),fun(X45,'type.pair.prod'('type.num.num','type.sptree.spt'(X45)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X45),fun(X45,'type.pair.prod'('type.num.num','type.sptree.spt'(X45))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X45),'type.pair.prod'('type.num.num','type.sptree.spt'(X45)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X45),fun(X45,'type.sptree.spt'(X45)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X45,fun('type.sptree.spt'(X45),'type.sptree.spt'(X45)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X45),'type.sptree.spt'(X45)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X45)),happ(s(fun('type.sptree.spt'(X45),'type.pair.prod'('type.num.num','type.sptree.spt'(X45))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X45),'type.pair.prod'('type.num.num','type.sptree.spt'(X45)))),'const.pair.,_0'),s('type.num.num',X46))),s('type.sptree.spt'(X45),X47))),s('type.list.list'(X45),X48)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X47,X46,X48,X45)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X45),X47)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X46)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))) )),
  inference(superposition,[],[f174,f248])).
fof(f8899,plain,(
  ( ! [X154,X152,X151,X149,X155,X153,X150] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X149)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X149),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X150),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X150)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X150)),fun(X150,'type.pair.prod'('type.num.num','type.sptree.spt'(X150)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X150),fun(X150,'type.pair.prod'('type.num.num','type.sptree.spt'(X150))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X150),'type.pair.prod'('type.num.num','type.sptree.spt'(X150)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X150),fun(X150,'type.sptree.spt'(X150)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X150,fun('type.sptree.spt'(X150),'type.sptree.spt'(X150)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X150),'type.sptree.spt'(X150)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X150)),happ(s(fun('type.sptree.spt'(X150),'type.pair.prod'('type.num.num','type.sptree.spt'(X150))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X150),'type.pair.prod'('type.num.num','type.sptree.spt'(X150)))),'const.pair.,_0'),s('type.num.num',X151))),s('type.sptree.spt'(X150),X152))),s('type.list.list'(X150),X153)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X152,X151,X153,X150)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X150),X152)))))) | p(s(bool,X154)) | ~p(s(bool,X155)) | s(bool,X155) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X151)))) )),
  inference(resolution,[],[f174,f251])).
fof(f8885,plain,(
  ( ! [X80,X78,X76,X74,X81,X79,X77,X75] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X74)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X74),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X75),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X75)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X75)),fun(X75,'type.pair.prod'('type.num.num','type.sptree.spt'(X75)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X75),fun(X75,'type.pair.prod'('type.num.num','type.sptree.spt'(X75))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X75),'type.pair.prod'('type.num.num','type.sptree.spt'(X75)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X75),fun(X75,'type.sptree.spt'(X75)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X75,fun('type.sptree.spt'(X75),'type.sptree.spt'(X75)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X75),'type.sptree.spt'(X75)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X75)),happ(s(fun('type.sptree.spt'(X75),'type.pair.prod'('type.num.num','type.sptree.spt'(X75))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X75),'type.pair.prod'('type.num.num','type.sptree.spt'(X75)))),'const.pair.,_0'),s('type.num.num',X76))),s('type.sptree.spt'(X75),X77))),s('type.list.list'(X75),X78)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X77,X76,X78,X75)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X75),X77)))))) | ~p(s(bool,X79)) | ~p(s(bool,X80)) | s(bool,X80) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X76))) | s(bool,X79) != s(bool,X81)) )),
  inference(resolution,[],[f174,f185])).
fof(f8883,plain,(
  ( ! [X61,X59,X64,X62,X60,X58,X65,X63] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X58)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X58),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X59),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X59)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X59)),fun(X59,'type.pair.prod'('type.num.num','type.sptree.spt'(X59)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X59),fun(X59,'type.pair.prod'('type.num.num','type.sptree.spt'(X59))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X59),'type.pair.prod'('type.num.num','type.sptree.spt'(X59)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X59),fun(X59,'type.sptree.spt'(X59)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X59,fun('type.sptree.spt'(X59),'type.sptree.spt'(X59)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X59),'type.sptree.spt'(X59)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X59)),happ(s(fun('type.sptree.spt'(X59),'type.pair.prod'('type.num.num','type.sptree.spt'(X59))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X59),'type.pair.prod'('type.num.num','type.sptree.spt'(X59)))),'const.pair.,_0'),s('type.num.num',X60))),s('type.sptree.spt'(X59),X61))),s('type.list.list'(X59),X62)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X61,X60,X62,X59)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X59),X61)))))) | p(s(bool,X63)) | ~p(s(bool,X64)) | ~p(s(bool,X65)) | s(bool,X64) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X60)))) )),
  inference(resolution,[],[f174,f184])).
fof(f8881,plain,(
  ( ! [X47,X45,X43,X48,X46,X44,X42,X49] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X42)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X42),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X43),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),fun(X43,'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X43),fun(X43,'type.pair.prod'('type.num.num','type.sptree.spt'(X43))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X43),fun(X43,'type.sptree.spt'(X43)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X43,fun('type.sptree.spt'(X43),'type.sptree.spt'(X43)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X43),'type.sptree.spt'(X43)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),happ(s(fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.,_0'),s('type.num.num',X44))),s('type.sptree.spt'(X43),X45))),s('type.list.list'(X43),X46)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X45,X44,X46,X43)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X43),X45)))))) | p(s(bool,X47)) | ~p(s(bool,X48)) | s(bool,X47) != s(bool,X49) | s(bool,X48) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X44)))) )),
  inference(resolution,[],[f174,f183])).
fof(f8880,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X34,X40] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X34)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X34),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X35),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),fun(X35,'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X35),fun(X35,'type.pair.prod'('type.num.num','type.sptree.spt'(X35))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X35),fun(X35,'type.sptree.spt'(X35)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X35,fun('type.sptree.spt'(X35),'type.sptree.spt'(X35)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X35),'type.sptree.spt'(X35)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),happ(s(fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.,_0'),s('type.num.num',X36))),s('type.sptree.spt'(X35),X37))),s('type.list.list'(X35),X38)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X37,X36,X38,X35)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X35),X37)))))) | ~p(s(bool,X39)) | ~p(s(bool,X40)) | s(bool,X40) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X36))) | s(bool,X39) != s(bool,X41)) )),
  inference(resolution,[],[f174,f181])).
fof(f8878,plain,(
  ( ! [X24,X23,X21,X19,X25,X22,X20,X18] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X18)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.sptree.spt'(X19)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X19,fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),happ(s(fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s('type.num.num',X20))),s('type.sptree.spt'(X19),X21))),s('type.list.list'(X19),X22)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X21,X20,X22,X19)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),X21)))))) | p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,X25) | s(bool,X24) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X20)))) )),
  inference(resolution,[],[f174,f179])).
fof(f8872,plain,(
  ( ! [X140,X138,X136,X135,X141,X139,X137] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X135)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X135),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X136),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X136)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X136)),fun(X136,'type.pair.prod'('type.num.num','type.sptree.spt'(X136)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X136),fun(X136,'type.pair.prod'('type.num.num','type.sptree.spt'(X136))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X136),'type.pair.prod'('type.num.num','type.sptree.spt'(X136)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X136),fun(X136,'type.sptree.spt'(X136)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X136,fun('type.sptree.spt'(X136),'type.sptree.spt'(X136)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X136),'type.sptree.spt'(X136)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X136)),happ(s(fun('type.sptree.spt'(X136),'type.pair.prod'('type.num.num','type.sptree.spt'(X136))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X136),'type.pair.prod'('type.num.num','type.sptree.spt'(X136)))),'const.pair.,_0'),s('type.num.num',X137))),s('type.sptree.spt'(X136),X138))),s('type.list.list'(X136),X139)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X137)))) | p(s(bool,X140)) | p(s(bool,X141)) | s(bool,X141) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X138,X137,X139,X136)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X136),X138)))))) )),
  inference(resolution,[],[f174,f251])).
fof(f8860,plain,(
  ( ! [X70,X76,X74,X72,X71,X77,X75,X73] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X70)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X70),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X71),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X71)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X71)),fun(X71,'type.pair.prod'('type.num.num','type.sptree.spt'(X71)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X71),fun(X71,'type.pair.prod'('type.num.num','type.sptree.spt'(X71))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X71),'type.pair.prod'('type.num.num','type.sptree.spt'(X71)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X71),fun(X71,'type.sptree.spt'(X71)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X71,fun('type.sptree.spt'(X71),'type.sptree.spt'(X71)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X71),'type.sptree.spt'(X71)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X71)),happ(s(fun('type.sptree.spt'(X71),'type.pair.prod'('type.num.num','type.sptree.spt'(X71))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X71),'type.pair.prod'('type.num.num','type.sptree.spt'(X71)))),'const.pair.,_0'),s('type.num.num',X72))),s('type.sptree.spt'(X71),X73))),s('type.list.list'(X71),X74)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X72)))) | p(s(bool,X75)) | ~p(s(bool,X76)) | s(bool,X75) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X73,X72,X74,X71)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X71),X73))))) | s(bool,X76) != s(bool,X77)) )),
  inference(resolution,[],[f174,f185])).
fof(f8857,plain,(
  ( ! [X47,X52,X50,X48,X46,X53,X51,X49] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X46)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X46),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X47),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X47)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X47)),fun(X47,'type.pair.prod'('type.num.num','type.sptree.spt'(X47)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X47),fun(X47,'type.pair.prod'('type.num.num','type.sptree.spt'(X47))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X47),'type.pair.prod'('type.num.num','type.sptree.spt'(X47)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X47),fun(X47,'type.sptree.spt'(X47)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X47,fun('type.sptree.spt'(X47),'type.sptree.spt'(X47)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X47),'type.sptree.spt'(X47)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X47)),happ(s(fun('type.sptree.spt'(X47),'type.pair.prod'('type.num.num','type.sptree.spt'(X47))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X47),'type.pair.prod'('type.num.num','type.sptree.spt'(X47)))),'const.pair.,_0'),s('type.num.num',X48))),s('type.sptree.spt'(X47),X49))),s('type.list.list'(X47),X50)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X48)))) | p(s(bool,X51)) | ~p(s(bool,X52)) | p(s(bool,X53)) | s(bool,X53) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X49,X48,X50,X47)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X47),X49)))))) )),
  inference(resolution,[],[f174,f184])).
fof(f8856,plain,(
  ( ! [X39,X45,X43,X41,X38,X44,X42,X40] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X38)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X38),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X39),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X39)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X39)),fun(X39,'type.pair.prod'('type.num.num','type.sptree.spt'(X39)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X39),fun(X39,'type.pair.prod'('type.num.num','type.sptree.spt'(X39))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X39),'type.pair.prod'('type.num.num','type.sptree.spt'(X39)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X39),fun(X39,'type.sptree.spt'(X39)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X39,fun('type.sptree.spt'(X39),'type.sptree.spt'(X39)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X39),'type.sptree.spt'(X39)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X39)),happ(s(fun('type.sptree.spt'(X39),'type.pair.prod'('type.num.num','type.sptree.spt'(X39))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X39),'type.pair.prod'('type.num.num','type.sptree.spt'(X39)))),'const.pair.,_0'),s('type.num.num',X40))),s('type.sptree.spt'(X39),X41))),s('type.list.list'(X39),X42)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X40)))) | p(s(bool,X43)) | p(s(bool,X44)) | s(bool,X43) != s(bool,X45) | s(bool,X44) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X41,X40,X42,X39)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X39),X41)))))) )),
  inference(resolution,[],[f174,f183])).
fof(f8855,plain,(
  ( ! [X30,X37,X35,X33,X31,X36,X34,X32] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X30)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X30),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X31),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X31)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X31)),fun(X31,'type.pair.prod'('type.num.num','type.sptree.spt'(X31)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X31),fun(X31,'type.pair.prod'('type.num.num','type.sptree.spt'(X31))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X31),'type.pair.prod'('type.num.num','type.sptree.spt'(X31)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X31),fun(X31,'type.sptree.spt'(X31)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X31,fun('type.sptree.spt'(X31),'type.sptree.spt'(X31)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X31),'type.sptree.spt'(X31)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X31)),happ(s(fun('type.sptree.spt'(X31),'type.pair.prod'('type.num.num','type.sptree.spt'(X31))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X31),'type.pair.prod'('type.num.num','type.sptree.spt'(X31)))),'const.pair.,_0'),s('type.num.num',X32))),s('type.sptree.spt'(X31),X33))),s('type.list.list'(X31),X34)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X32)))) | p(s(bool,X35)) | ~p(s(bool,X36)) | s(bool,X35) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X33,X32,X34,X31)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X31),X33))))) | s(bool,X36) != s(bool,X37)) )),
  inference(resolution,[],[f174,f181])).
fof(f8853,plain,(
  ( ! [X14,X21,X19,X17,X15,X20,X18,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X14),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X15),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.pair.prod'('type.num.num','type.sptree.spt'(X15))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X15),fun(X15,'type.sptree.spt'(X15)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X15,fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X15),'type.sptree.spt'(X15)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X15)),happ(s(fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X15),'type.pair.prod'('type.num.num','type.sptree.spt'(X15)))),'const.pair.,_0'),s('type.num.num',X16))),s('type.sptree.spt'(X15),X17))),s('type.list.list'(X15),X18)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X16)))) | p(s(bool,X19)) | p(s(bool,X20)) | s(bool,X19) != s(bool,X21) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X17,X16,X18,X15)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X15),X17)))))) )),
  inference(resolution,[],[f174,f179])).
fof(f8847,plain,(
  ( ! [X144,X142,X140,X138,X143,X141,X139] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X138)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X139,X140,X141,X142)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X142),X139)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X140)))) | p(s(bool,X143)) | ~p(s(bool,X144)) | s(bool,X144) != s(bool,'const.bool.IN_2'(s('type.num.num',X138),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X142),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X142)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X142)),fun(X142,'type.pair.prod'('type.num.num','type.sptree.spt'(X142)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X142),fun(X142,'type.pair.prod'('type.num.num','type.sptree.spt'(X142))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X142),'type.pair.prod'('type.num.num','type.sptree.spt'(X142)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X142),fun(X142,'type.sptree.spt'(X142)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X142,fun('type.sptree.spt'(X142),'type.sptree.spt'(X142)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X142),'type.sptree.spt'(X142)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X142)),happ(s(fun('type.sptree.spt'(X142),'type.pair.prod'('type.num.num','type.sptree.spt'(X142))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X142),'type.pair.prod'('type.num.num','type.sptree.spt'(X142)))),'const.pair.,_0'),s('type.num.num',X140))),s('type.sptree.spt'(X142),X139))),s('type.list.list'(X142),X141)))))))))) )),
  inference(resolution,[],[f174,f251])).
fof(f8833,plain,(
  ( ! [X70,X68,X66,X64,X69,X67,X65,X63] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X63)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X64,X65,X66,X67)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X67),X64)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X65)))) | ~p(s(bool,X68)) | ~p(s(bool,X69)) | s(bool,X69) != s(bool,'const.bool.IN_2'(s('type.num.num',X63),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X67),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X67)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X67)),fun(X67,'type.pair.prod'('type.num.num','type.sptree.spt'(X67)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X67),fun(X67,'type.pair.prod'('type.num.num','type.sptree.spt'(X67))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X67),'type.pair.prod'('type.num.num','type.sptree.spt'(X67)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X67),fun(X67,'type.sptree.spt'(X67)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X67,fun('type.sptree.spt'(X67),'type.sptree.spt'(X67)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X67),'type.sptree.spt'(X67)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X67)),happ(s(fun('type.sptree.spt'(X67),'type.pair.prod'('type.num.num','type.sptree.spt'(X67))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X67),'type.pair.prod'('type.num.num','type.sptree.spt'(X67)))),'const.pair.,_0'),s('type.num.num',X65))),s('type.sptree.spt'(X67),X64))),s('type.list.list'(X67),X66))))))))) | s(bool,X68) != s(bool,X70)) )),
  inference(resolution,[],[f174,f185])).
fof(f8831,plain,(
  ( ! [X47,X54,X52,X50,X48,X53,X51,X49] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X47)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X48,X49,X50,X51)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X51),X48)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X49)))) | p(s(bool,X52)) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X53) != s(bool,'const.bool.IN_2'(s('type.num.num',X47),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X51),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.sptree.spt'(X51)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X51,fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),happ(s(fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s('type.num.num',X49))),s('type.sptree.spt'(X51),X48))),s('type.list.list'(X51),X50)))))))))) )),
  inference(resolution,[],[f174,f184])).
fof(f8829,plain,(
  ( ! [X37,X35,X33,X31,X38,X36,X34,X32] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X31)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X32,X33,X34,X35)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X35),X32)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X33)))) | p(s(bool,X36)) | ~p(s(bool,X37)) | s(bool,X36) != s(bool,X38) | s(bool,X37) != s(bool,'const.bool.IN_2'(s('type.num.num',X31),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X35),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),fun(X35,'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X35),fun(X35,'type.pair.prod'('type.num.num','type.sptree.spt'(X35))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X35),fun(X35,'type.sptree.spt'(X35)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X35,fun('type.sptree.spt'(X35),'type.sptree.spt'(X35)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X35),'type.sptree.spt'(X35)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),happ(s(fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.,_0'),s('type.num.num',X33))),s('type.sptree.spt'(X35),X32))),s('type.list.list'(X35),X34)))))))))) )),
  inference(resolution,[],[f174,f183])).
fof(f8828,plain,(
  ( ! [X30,X28,X26,X24,X23,X29,X27,X25] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X23)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X24,X25,X26,X27)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X27),X24)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X25)))) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X29) != s(bool,'const.bool.IN_2'(s('type.num.num',X23),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X27),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X27)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X27)),fun(X27,'type.pair.prod'('type.num.num','type.sptree.spt'(X27)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X27),fun(X27,'type.pair.prod'('type.num.num','type.sptree.spt'(X27))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X27),'type.pair.prod'('type.num.num','type.sptree.spt'(X27)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X27),fun(X27,'type.sptree.spt'(X27)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X27,fun('type.sptree.spt'(X27),'type.sptree.spt'(X27)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X27),'type.sptree.spt'(X27)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X27)),happ(s(fun('type.sptree.spt'(X27),'type.pair.prod'('type.num.num','type.sptree.spt'(X27))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X27),'type.pair.prod'('type.num.num','type.sptree.spt'(X27)))),'const.pair.,_0'),s('type.num.num',X25))),s('type.sptree.spt'(X27),X24))),s('type.list.list'(X27),X26))))))))) | s(bool,X28) != s(bool,X30)) )),
  inference(resolution,[],[f174,f181])).
fof(f8826,plain,(
  ( ! [X14,X12,X10,X8,X7,X13,X11,X9] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X8,X9,X10,X11)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X11),X8)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9)))) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X13) != s(bool,'const.bool.IN_2'(s('type.num.num',X7),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X11),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X11)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X11)),fun(X11,'type.pair.prod'('type.num.num','type.sptree.spt'(X11)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X11),fun(X11,'type.pair.prod'('type.num.num','type.sptree.spt'(X11))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X11),'type.pair.prod'('type.num.num','type.sptree.spt'(X11)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X11),fun(X11,'type.sptree.spt'(X11)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X11,fun('type.sptree.spt'(X11),'type.sptree.spt'(X11)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X11),'type.sptree.spt'(X11)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X11)),happ(s(fun('type.sptree.spt'(X11),'type.pair.prod'('type.num.num','type.sptree.spt'(X11))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X11),'type.pair.prod'('type.num.num','type.sptree.spt'(X11)))),'const.pair.,_0'),s('type.num.num',X9))),s('type.sptree.spt'(X11),X8))),s('type.list.list'(X11),X10)))))))))) )),
  inference(resolution,[],[f174,f179])).
fof(f8821,plain,(
  ( ! [X154,X152,X151,X149,X153,X150,X148] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X148),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X149),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X149)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X149)),fun(X149,'type.pair.prod'('type.num.num','type.sptree.spt'(X149)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X149),fun(X149,'type.pair.prod'('type.num.num','type.sptree.spt'(X149))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X149),'type.pair.prod'('type.num.num','type.sptree.spt'(X149)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X149),fun(X149,'type.sptree.spt'(X149)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X149,fun('type.sptree.spt'(X149),'type.sptree.spt'(X149)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X149),'type.sptree.spt'(X149)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X149)),happ(s(fun('type.sptree.spt'(X149),'type.pair.prod'('type.num.num','type.sptree.spt'(X149))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X149),'type.pair.prod'('type.num.num','type.sptree.spt'(X149)))),'const.pair.,_0'),s('type.num.num',X150))),s('type.sptree.spt'(X149),X151))),s('type.list.list'(X149),X152)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X151,X150,X152,X149)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X149),X151)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X150)))) | p(s(bool,X153)) | p(s(bool,X154)) | s(bool,X154) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X148)))) )),
  inference(resolution,[],[f174,f251])).
fof(f8809,plain,(
  ( ! [X90,X88,X87,X85,X83,X89,X86,X84] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X83),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X84),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),fun(X84,'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X84),fun(X84,'type.pair.prod'('type.num.num','type.sptree.spt'(X84))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X84),fun(X84,'type.sptree.spt'(X84)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X84,fun('type.sptree.spt'(X84),'type.sptree.spt'(X84)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X84),'type.sptree.spt'(X84)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),happ(s(fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.,_0'),s('type.num.num',X85))),s('type.sptree.spt'(X84),X86))),s('type.list.list'(X84),X87)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X86,X85,X87,X84)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X84),X86)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X85)))) | p(s(bool,X88)) | ~p(s(bool,X89)) | s(bool,X88) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X83))) | s(bool,X89) != s(bool,X90)) )),
  inference(resolution,[],[f174,f185])).
fof(f8806,plain,(
  ( ! [X61,X59,X66,X64,X62,X60,X65,X63] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X59),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X60),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X60)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X60)),fun(X60,'type.pair.prod'('type.num.num','type.sptree.spt'(X60)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X60),fun(X60,'type.pair.prod'('type.num.num','type.sptree.spt'(X60))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X60),'type.pair.prod'('type.num.num','type.sptree.spt'(X60)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X60),fun(X60,'type.sptree.spt'(X60)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X60,fun('type.sptree.spt'(X60),'type.sptree.spt'(X60)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X60),'type.sptree.spt'(X60)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X60)),happ(s(fun('type.sptree.spt'(X60),'type.pair.prod'('type.num.num','type.sptree.spt'(X60))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X60),'type.pair.prod'('type.num.num','type.sptree.spt'(X60)))),'const.pair.,_0'),s('type.num.num',X61))),s('type.sptree.spt'(X60),X62))),s('type.list.list'(X60),X63)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X62,X61,X63,X60)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X60),X62)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X61)))) | p(s(bool,X64)) | ~p(s(bool,X65)) | p(s(bool,X66)) | s(bool,X66) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X59)))) )),
  inference(resolution,[],[f174,f184])).
fof(f8805,plain,(
  ( ! [X57,X54,X52,X58,X56,X55,X53,X51] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X51),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X52),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X52)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X52)),fun(X52,'type.pair.prod'('type.num.num','type.sptree.spt'(X52)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X52),fun(X52,'type.pair.prod'('type.num.num','type.sptree.spt'(X52))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X52),'type.pair.prod'('type.num.num','type.sptree.spt'(X52)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X52),fun(X52,'type.sptree.spt'(X52)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X52,fun('type.sptree.spt'(X52),'type.sptree.spt'(X52)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X52),'type.sptree.spt'(X52)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X52)),happ(s(fun('type.sptree.spt'(X52),'type.pair.prod'('type.num.num','type.sptree.spt'(X52))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X52),'type.pair.prod'('type.num.num','type.sptree.spt'(X52)))),'const.pair.,_0'),s('type.num.num',X53))),s('type.sptree.spt'(X52),X54))),s('type.list.list'(X52),X55)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X54,X53,X55,X52)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X52),X54)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X53)))) | p(s(bool,X56)) | p(s(bool,X57)) | s(bool,X56) != s(bool,X58) | s(bool,X57) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X51)))) )),
  inference(resolution,[],[f174,f183])).
fof(f8804,plain,(
  ( ! [X47,X45,X43,X50,X48,X46,X44,X49] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X43),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X44),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X44)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X44)),fun(X44,'type.pair.prod'('type.num.num','type.sptree.spt'(X44)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X44),fun(X44,'type.pair.prod'('type.num.num','type.sptree.spt'(X44))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X44),'type.pair.prod'('type.num.num','type.sptree.spt'(X44)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X44),fun(X44,'type.sptree.spt'(X44)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X44,fun('type.sptree.spt'(X44),'type.sptree.spt'(X44)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X44),'type.sptree.spt'(X44)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X44)),happ(s(fun('type.sptree.spt'(X44),'type.pair.prod'('type.num.num','type.sptree.spt'(X44))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X44),'type.pair.prod'('type.num.num','type.sptree.spt'(X44)))),'const.pair.,_0'),s('type.num.num',X45))),s('type.sptree.spt'(X44),X46))),s('type.list.list'(X44),X47)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X46,X45,X47,X44)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X44),X46)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X45)))) | p(s(bool,X48)) | ~p(s(bool,X49)) | s(bool,X48) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X43))) | s(bool,X49) != s(bool,X50)) )),
  inference(resolution,[],[f174,f181])).
fof(f8802,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X27),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.sptree.spt'(X28)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X28,fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),happ(s(fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s('type.num.num',X29))),s('type.sptree.spt'(X28),X30))),s('type.list.list'(X28),X31)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X30,X29,X31,X28)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),X30)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X29)))) | p(s(bool,X32)) | p(s(bool,X33)) | s(bool,X32) != s(bool,X34) | s(bool,X33) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27)))) )),
  inference(resolution,[],[f174,f179])).
fof(f8602,plain,(
  ( ! [X52,X50,X53,X51,X49] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X49)))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X50)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X50),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X51),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.sptree.spt'(X51)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X51,fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),happ(s(fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X51),X52))),s('type.list.list'(X51),X53)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X52,'const.arithmetic.ZERO_0',X53,X51))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49)))) )),
  inference(superposition,[],[f175,f246])).
fof(f8601,plain,(
  ( ! [X47,X45,X48,X46,X44] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X44)))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X45)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X45),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X46),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.pair.prod'('type.num.num','type.sptree.spt'(X46))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X46),fun(X46,'type.sptree.spt'(X46)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X46,fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X46),'type.sptree.spt'(X46)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X46)),happ(s(fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X46),'type.pair.prod'('type.num.num','type.sptree.spt'(X46)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X46),X47))),s('type.list.list'(X46),X48)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X47,'const.arithmetic.ZERO_0',X48,X46))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))) )),
  inference(superposition,[],[f175,f248])).
fof(f8739,plain,(
  ( ! [X26,X24,X23,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X22),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X23),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.sptree.spt'(X23)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X23,fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),happ(s(fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s('type.num.num',X24))),s('type.sptree.spt'(X23),X25))),s('type.list.list'(X23),X26)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X24)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X25,X24,X26,X23))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X22))))) ) | $spl152),
  inference(cnf_transformation,[],[f8739_D])).
fof(f8739_D,plain,(
  ( ! [X26,X24,X23,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X22),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X23),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.sptree.spt'(X23)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X23,fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),happ(s(fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s('type.num.num',X24))),s('type.sptree.spt'(X23),X25))),s('type.list.list'(X23),X26)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X24)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X25,X24,X26,X23))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X22))))) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f8544,plain,(
  ( ! [X30,X28,X31,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X27),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.sptree.spt'(X28)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X28,fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),happ(s(fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s('type.num.num',X29))),s('type.sptree.spt'(X28),X30))),s('type.list.list'(X28),X31)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X30,X29,X31,X28))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X29)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f175,f246])).
fof(f8543,plain,(
  ( ! [X26,X24,X23,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X22),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X23),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.sptree.spt'(X23)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X23,fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),happ(s(fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s('type.num.num',X24))),s('type.sptree.spt'(X23),X25))),s('type.list.list'(X23),X26)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X22)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X25,X24,X26,X23))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X24)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f175,f248])).
fof(f8735,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl147),
  inference(cnf_transformation,[],[f8735_D])).
fof(f8735_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl147),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl147])])).
fof(f8736,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X3,X2,X4,X1))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) ) | $spl148),
  inference(cnf_transformation,[],[f8736_D])).
fof(f8736_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X3,X2,X4,X1))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f8540,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num',X7))),s('type.sptree.spt'(X6),X8))),s('type.list.list'(X6),X9)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X8,X7,X9,X6))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f175,f247])).
fof(f8539,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.num.|48|_0'))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X3,X2,X4,X1))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f175,f249])).
fof(f8733,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X3,X2,X4,X1))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) ) | $spl144),
  inference(cnf_transformation,[],[f8733_D])).
fof(f8733_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X3,X2,X4,X1))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f8536,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num',X7))),s('type.sptree.spt'(X6),X8))),s('type.list.list'(X6),X9)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X8,X7,X9,X6))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f175,f246])).
fof(f8535,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X3,X2,X4,X1))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f175,f248])).
fof(f8524,plain,(
  ( ! [X30,X28,X31,X29,X27] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.sptree.spt'(X28)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X28,fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),happ(s(fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s('type.num.num',X29))),s('type.sptree.spt'(X28),X30))),s('type.list.list'(X28),X31)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X30,X29,X31,X28))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X29)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))) )),
  inference(superposition,[],[f175,f246])).
fof(f8523,plain,(
  ( ! [X26,X24,X23,X25,X22] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X23),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.pair.prod'('type.num.num','type.sptree.spt'(X23))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X23),fun(X23,'type.sptree.spt'(X23)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X23,fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X23),'type.sptree.spt'(X23)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X23)),happ(s(fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X23),'type.pair.prod'('type.num.num','type.sptree.spt'(X23)))),'const.pair.,_0'),s('type.num.num',X24))),s('type.sptree.spt'(X23),X25))),s('type.list.list'(X23),X26)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X22)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X25,X24,X26,X23))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X24)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))) )),
  inference(superposition,[],[f175,f248])).
fof(f8720,plain,(
  ( ! [X6,X8,X7,X5,X9] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num',X7))),s('type.sptree.spt'(X6),X8))),s('type.list.list'(X6),X9)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X8,X7,X9,X6))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X5)) )),
  inference(forward_demodulation,[],[f8520,f176])).
fof(f8520,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.pair.prod'('type.num.num','type.sptree.spt'(X6))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X6),fun(X6,'type.sptree.spt'(X6)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X6,fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X6),'type.sptree.spt'(X6)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X6)),happ(s(fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X6),'type.pair.prod'('type.num.num','type.sptree.spt'(X6)))),'const.pair.,_0'),s('type.num.num',X7))),s('type.sptree.spt'(X6),X8))),s('type.list.list'(X6),X9)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X8,X7,X9,X6))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X5)) )),
  inference(superposition,[],[f175,f247])).
fof(f8717,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X3,X2,X4,X1))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f8519,f176])).
fof(f8519,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X1),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.pair.prod'('type.num.num','type.sptree.spt'(X1))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X1),fun(X1,'type.sptree.spt'(X1)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X1,fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X1),'type.sptree.spt'(X1)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X1)),happ(s(fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X1),'type.pair.prod'('type.num.num','type.sptree.spt'(X1)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X1),X3))),s('type.list.list'(X1),X4)))))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X3,X2,X4,X1))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(superposition,[],[f175,f249])).
fof(f8711,plain,(
  ( ! [X92,X90,X88,X93,X91,X89] : (p(s(bool,X89)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X88),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X90),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X90)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X90)),fun(X90,'type.pair.prod'('type.num.num','type.sptree.spt'(X90)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X90),fun(X90,'type.pair.prod'('type.num.num','type.sptree.spt'(X90))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X90),'type.pair.prod'('type.num.num','type.sptree.spt'(X90)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X90),fun(X90,'type.sptree.spt'(X90)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X90,fun('type.sptree.spt'(X90),'type.sptree.spt'(X90)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X90),'type.sptree.spt'(X90)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X90)),happ(s(fun('type.sptree.spt'(X90),'type.pair.prod'('type.num.num','type.sptree.spt'(X90))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X90),'type.pair.prod'('type.num.num','type.sptree.spt'(X90)))),'const.pair.,_0'),s('type.num.num',X91))),s('type.sptree.spt'(X90),X92))),s('type.list.list'(X90),X93)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X92,X91,X93,X90))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X91)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X88)))) ) | $spl82),
  inference(subsumption_resolution,[],[f8516,f232])).
fof(f8516,plain,(
  ( ! [X92,X90,X88,X93,X91,X89] : (p(s(bool,X89)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X88),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X90),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X90)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X90)),fun(X90,'type.pair.prod'('type.num.num','type.sptree.spt'(X90)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X90),fun(X90,'type.pair.prod'('type.num.num','type.sptree.spt'(X90))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X90),'type.pair.prod'('type.num.num','type.sptree.spt'(X90)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X90),fun(X90,'type.sptree.spt'(X90)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X90,fun('type.sptree.spt'(X90),'type.sptree.spt'(X90)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X90),'type.sptree.spt'(X90)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X90)),happ(s(fun('type.sptree.spt'(X90),'type.pair.prod'('type.num.num','type.sptree.spt'(X90))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X90),'type.pair.prod'('type.num.num','type.sptree.spt'(X90)))),'const.pair.,_0'),s('type.num.num',X91))),s('type.sptree.spt'(X90),X92))),s('type.list.list'(X90),X93)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X92,X91,X93,X90))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X91)))) | s(bool,'T_0') = s(bool,X89) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X88)))) ) | $spl82),
  inference(superposition,[],[f175,f2901])).
fof(f8710,plain,(
  ( ! [X87,X85,X83,X86,X84,X82] : (p(s(bool,X83)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X82),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X84),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),fun(X84,'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X84),fun(X84,'type.pair.prod'('type.num.num','type.sptree.spt'(X84))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X84),fun(X84,'type.sptree.spt'(X84)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X84,fun('type.sptree.spt'(X84),'type.sptree.spt'(X84)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X84),'type.sptree.spt'(X84)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),happ(s(fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.,_0'),s('type.num.num',X85))),s('type.sptree.spt'(X84),X86))),s('type.list.list'(X84),X87)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X86,X85,X87,X84))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X85)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X82)))) ) | $spl82),
  inference(subsumption_resolution,[],[f8515,f232])).
fof(f8515,plain,(
  ( ! [X87,X85,X83,X86,X84,X82] : (p(s(bool,X83)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X82),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X84),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),fun(X84,'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X84),fun(X84,'type.pair.prod'('type.num.num','type.sptree.spt'(X84))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X84),fun(X84,'type.sptree.spt'(X84)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X84,fun('type.sptree.spt'(X84),'type.sptree.spt'(X84)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X84),'type.sptree.spt'(X84)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X84)),happ(s(fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X84),'type.pair.prod'('type.num.num','type.sptree.spt'(X84)))),'const.pair.,_0'),s('type.num.num',X85))),s('type.sptree.spt'(X84),X86))),s('type.list.list'(X84),X87)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X86,X85,X87,X84))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X85)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X82))) | s(bool,'T_0') = s(bool,X83)) ) | $spl82),
  inference(superposition,[],[f175,f2901])).
fof(f8690,plain,(
  ( ! [X14,X17,X15,X13,X16] : (p(s(bool,X13)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.sptree.spt'(X14)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X14,fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),happ(s(fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s('type.num.num',X15))),s('type.sptree.spt'(X14),X16))),s('type.list.list'(X14),X17)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X16,X15,X17,X14))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15))))) ) | $spl82),
  inference(subsumption_resolution,[],[f8502,f232])).
fof(f8502,plain,(
  ( ! [X14,X17,X15,X13,X16] : (p(s(bool,X13)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.sptree.spt'(X14)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X14,fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),happ(s(fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s('type.num.num',X15))),s('type.sptree.spt'(X14),X16))),s('type.list.list'(X14),X17)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X16,X15,X17,X14))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | s(bool,'T_0') = s(bool,X13)) ) | $spl82),
  inference(superposition,[],[f175,f2959])).
fof(f8498,plain,(
  ( ! [X52,X50,X53,X51,X49] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X49)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X50),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.sptree.spt'(X50)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X50,fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),happ(s(fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s('type.num.num',X51))),s('type.sptree.spt'(X50),X52))),s('type.list.list'(X50),X53)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X52,X51,X53,X50))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X51)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X49)))) )),
  inference(superposition,[],[f175,f246])).
fof(f8497,plain,(
  ( ! [X47,X45,X48,X46,X44] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X44)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X45),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X45)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X45)),fun(X45,'type.pair.prod'('type.num.num','type.sptree.spt'(X45)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X45),fun(X45,'type.pair.prod'('type.num.num','type.sptree.spt'(X45))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X45),'type.pair.prod'('type.num.num','type.sptree.spt'(X45)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X45),fun(X45,'type.sptree.spt'(X45)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X45,fun('type.sptree.spt'(X45),'type.sptree.spt'(X45)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X45),'type.sptree.spt'(X45)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X45)),happ(s(fun('type.sptree.spt'(X45),'type.pair.prod'('type.num.num','type.sptree.spt'(X45))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X45),'type.pair.prod'('type.num.num','type.sptree.spt'(X45)))),'const.pair.,_0'),s('type.num.num',X46))),s('type.sptree.spt'(X45),X47))),s('type.list.list'(X45),X48)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X47,X46,X48,X45))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X46)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X44)))) )),
  inference(superposition,[],[f175,f248])).
fof(f8485,plain,(
  ( ! [X146,X144,X142,X140,X145,X143,X141] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X140)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X140),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X141),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X141)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X141)),fun(X141,'type.pair.prod'('type.num.num','type.sptree.spt'(X141)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X141),fun(X141,'type.pair.prod'('type.num.num','type.sptree.spt'(X141))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X141),'type.pair.prod'('type.num.num','type.sptree.spt'(X141)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X141),fun(X141,'type.sptree.spt'(X141)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X141,fun('type.sptree.spt'(X141),'type.sptree.spt'(X141)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X141),'type.sptree.spt'(X141)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X141)),happ(s(fun('type.sptree.spt'(X141),'type.pair.prod'('type.num.num','type.sptree.spt'(X141))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X141),'type.pair.prod'('type.num.num','type.sptree.spt'(X141)))),'const.pair.,_0'),s('type.num.num',X142))),s('type.sptree.spt'(X141),X143))),s('type.list.list'(X141),X144)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X143,X142,X144,X141))))) | p(s(bool,X145)) | ~p(s(bool,X146)) | s(bool,X146) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X142)))) )),
  inference(resolution,[],[f175,f251])).
fof(f8471,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67,X65] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X65)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X65),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X66),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X66)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X66)),fun(X66,'type.pair.prod'('type.num.num','type.sptree.spt'(X66)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X66),fun(X66,'type.pair.prod'('type.num.num','type.sptree.spt'(X66))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X66),'type.pair.prod'('type.num.num','type.sptree.spt'(X66)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X66),fun(X66,'type.sptree.spt'(X66)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X66,fun('type.sptree.spt'(X66),'type.sptree.spt'(X66)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X66),'type.sptree.spt'(X66)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X66)),happ(s(fun('type.sptree.spt'(X66),'type.pair.prod'('type.num.num','type.sptree.spt'(X66))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X66),'type.pair.prod'('type.num.num','type.sptree.spt'(X66)))),'const.pair.,_0'),s('type.num.num',X67))),s('type.sptree.spt'(X66),X68))),s('type.list.list'(X66),X69)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X68,X67,X69,X66))))) | ~p(s(bool,X70)) | ~p(s(bool,X71)) | s(bool,X71) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X67))) | s(bool,X70) != s(bool,X72)) )),
  inference(resolution,[],[f175,f185])).
fof(f8469,plain,(
  ( ! [X54,X52,X50,X56,X55,X53,X51,X49] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X49)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X49),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X50),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.sptree.spt'(X50)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X50,fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),happ(s(fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s('type.num.num',X51))),s('type.sptree.spt'(X50),X52))),s('type.list.list'(X50),X53)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X52,X51,X53,X50))))) | p(s(bool,X54)) | ~p(s(bool,X55)) | ~p(s(bool,X56)) | s(bool,X55) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X51)))) )),
  inference(resolution,[],[f175,f184])).
fof(f8467,plain,(
  ( ! [X39,X37,X35,X33,X38,X36,X34,X40] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X33)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X33),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X34),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X34)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X34)),fun(X34,'type.pair.prod'('type.num.num','type.sptree.spt'(X34)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X34),fun(X34,'type.pair.prod'('type.num.num','type.sptree.spt'(X34))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X34),'type.pair.prod'('type.num.num','type.sptree.spt'(X34)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X34),fun(X34,'type.sptree.spt'(X34)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X34,fun('type.sptree.spt'(X34),'type.sptree.spt'(X34)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X34),'type.sptree.spt'(X34)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X34)),happ(s(fun('type.sptree.spt'(X34),'type.pair.prod'('type.num.num','type.sptree.spt'(X34))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X34),'type.pair.prod'('type.num.num','type.sptree.spt'(X34)))),'const.pair.,_0'),s('type.num.num',X35))),s('type.sptree.spt'(X34),X36))),s('type.list.list'(X34),X37)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X36,X35,X37,X34))))) | p(s(bool,X38)) | ~p(s(bool,X39)) | s(bool,X38) != s(bool,X40) | s(bool,X39) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X35)))) )),
  inference(resolution,[],[f175,f183])).
fof(f8466,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X25,X32] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X25)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X25),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X26),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.sptree.spt'(X26)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X26,fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),happ(s(fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s('type.num.num',X27))),s('type.sptree.spt'(X26),X28))),s('type.list.list'(X26),X29)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X28,X27,X29,X26))))) | ~p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X31) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27))) | s(bool,X30) != s(bool,X32)) )),
  inference(resolution,[],[f175,f181])).
fof(f8464,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X9),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X10),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.sptree.spt'(X10)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X10,fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),happ(s(fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s('type.num.num',X11))),s('type.sptree.spt'(X10),X12))),s('type.list.list'(X10),X13)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X12,X11,X13,X10))))) | p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,X14) != s(bool,X16) | s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X11)))) )),
  inference(resolution,[],[f175,f179])).
fof(f8459,plain,(
  ( ! [X146,X144,X142,X140,X145,X143,X141] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X140)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X140),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X141),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X141)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X141)),fun(X141,'type.pair.prod'('type.num.num','type.sptree.spt'(X141)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X141),fun(X141,'type.pair.prod'('type.num.num','type.sptree.spt'(X141))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X141),'type.pair.prod'('type.num.num','type.sptree.spt'(X141)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X141),fun(X141,'type.sptree.spt'(X141)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X141,fun('type.sptree.spt'(X141),'type.sptree.spt'(X141)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X141),'type.sptree.spt'(X141)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X141)),happ(s(fun('type.sptree.spt'(X141),'type.pair.prod'('type.num.num','type.sptree.spt'(X141))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X141),'type.pair.prod'('type.num.num','type.sptree.spt'(X141)))),'const.pair.,_0'),s('type.num.num',X142))),s('type.sptree.spt'(X141),X143))),s('type.list.list'(X141),X144)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X142)))) | p(s(bool,X145)) | ~p(s(bool,X146)) | s(bool,X146) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X143,X142,X144,X141))))) )),
  inference(resolution,[],[f175,f251])).
fof(f8445,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67,X65] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X65)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X65),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X66),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X66)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X66)),fun(X66,'type.pair.prod'('type.num.num','type.sptree.spt'(X66)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X66),fun(X66,'type.pair.prod'('type.num.num','type.sptree.spt'(X66))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X66),'type.pair.prod'('type.num.num','type.sptree.spt'(X66)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X66),fun(X66,'type.sptree.spt'(X66)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X66,fun('type.sptree.spt'(X66),'type.sptree.spt'(X66)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X66),'type.sptree.spt'(X66)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X66)),happ(s(fun('type.sptree.spt'(X66),'type.pair.prod'('type.num.num','type.sptree.spt'(X66))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X66),'type.pair.prod'('type.num.num','type.sptree.spt'(X66)))),'const.pair.,_0'),s('type.num.num',X67))),s('type.sptree.spt'(X66),X68))),s('type.list.list'(X66),X69)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X67)))) | ~p(s(bool,X70)) | ~p(s(bool,X71)) | s(bool,X71) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X68,X67,X69,X66)))) | s(bool,X70) != s(bool,X72)) )),
  inference(resolution,[],[f175,f185])).
fof(f8443,plain,(
  ( ! [X54,X52,X50,X56,X55,X53,X51,X49] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X49)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X49),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X50),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.pair.prod'('type.num.num','type.sptree.spt'(X50))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X50),fun(X50,'type.sptree.spt'(X50)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X50,fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X50),'type.sptree.spt'(X50)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X50)),happ(s(fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X50),'type.pair.prod'('type.num.num','type.sptree.spt'(X50)))),'const.pair.,_0'),s('type.num.num',X51))),s('type.sptree.spt'(X50),X52))),s('type.list.list'(X50),X53)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X51)))) | p(s(bool,X54)) | ~p(s(bool,X55)) | ~p(s(bool,X56)) | s(bool,X55) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X52,X51,X53,X50))))) )),
  inference(resolution,[],[f175,f184])).
fof(f8441,plain,(
  ( ! [X39,X37,X35,X33,X38,X36,X34,X40] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X33)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X33),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X34),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X34)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X34)),fun(X34,'type.pair.prod'('type.num.num','type.sptree.spt'(X34)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X34),fun(X34,'type.pair.prod'('type.num.num','type.sptree.spt'(X34))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X34),'type.pair.prod'('type.num.num','type.sptree.spt'(X34)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X34),fun(X34,'type.sptree.spt'(X34)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X34,fun('type.sptree.spt'(X34),'type.sptree.spt'(X34)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X34),'type.sptree.spt'(X34)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X34)),happ(s(fun('type.sptree.spt'(X34),'type.pair.prod'('type.num.num','type.sptree.spt'(X34))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X34),'type.pair.prod'('type.num.num','type.sptree.spt'(X34)))),'const.pair.,_0'),s('type.num.num',X35))),s('type.sptree.spt'(X34),X36))),s('type.list.list'(X34),X37)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X35)))) | p(s(bool,X38)) | ~p(s(bool,X39)) | s(bool,X38) != s(bool,X40) | s(bool,X39) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X36,X35,X37,X34))))) )),
  inference(resolution,[],[f175,f183])).
fof(f8440,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X25,X32] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X25)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X25),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X26),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.pair.prod'('type.num.num','type.sptree.spt'(X26))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X26),fun(X26,'type.sptree.spt'(X26)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X26,fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X26),'type.sptree.spt'(X26)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X26)),happ(s(fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X26),'type.pair.prod'('type.num.num','type.sptree.spt'(X26)))),'const.pair.,_0'),s('type.num.num',X27))),s('type.sptree.spt'(X26),X28))),s('type.list.list'(X26),X29)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X27)))) | ~p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X31) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X28,X27,X29,X26)))) | s(bool,X30) != s(bool,X32)) )),
  inference(resolution,[],[f175,f181])).
fof(f8438,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X9),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X10),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.pair.prod'('type.num.num','type.sptree.spt'(X10))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X10),fun(X10,'type.sptree.spt'(X10)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X10,fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X10),'type.sptree.spt'(X10)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X10)),happ(s(fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X10),'type.pair.prod'('type.num.num','type.sptree.spt'(X10)))),'const.pair.,_0'),s('type.num.num',X11))),s('type.sptree.spt'(X10),X12))),s('type.list.list'(X10),X13)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X11)))) | p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,X14) != s(bool,X16) | s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X12,X11,X13,X10))))) )),
  inference(resolution,[],[f175,f179])).
fof(f8433,plain,(
  ( ! [X134,X132,X136,X135,X133,X131,X137] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X131)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X132,X133,X134,X135))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X133)))) | p(s(bool,X136)) | ~p(s(bool,X137)) | s(bool,X137) != s(bool,'const.bool.IN_2'(s('type.num.num',X131),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X135),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X135)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X135)),fun(X135,'type.pair.prod'('type.num.num','type.sptree.spt'(X135)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X135),fun(X135,'type.pair.prod'('type.num.num','type.sptree.spt'(X135))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X135),'type.pair.prod'('type.num.num','type.sptree.spt'(X135)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X135),fun(X135,'type.sptree.spt'(X135)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X135,fun('type.sptree.spt'(X135),'type.sptree.spt'(X135)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X135),'type.sptree.spt'(X135)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X135)),happ(s(fun('type.sptree.spt'(X135),'type.pair.prod'('type.num.num','type.sptree.spt'(X135))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X135),'type.pair.prod'('type.num.num','type.sptree.spt'(X135)))),'const.pair.,_0'),s('type.num.num',X133))),s('type.sptree.spt'(X135),X132))),s('type.list.list'(X135),X134)))))))))) )),
  inference(resolution,[],[f175,f251])).
fof(f8419,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X56,X63] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X56)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X57,X58,X59,X60))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X58)))) | ~p(s(bool,X61)) | ~p(s(bool,X62)) | s(bool,X62) != s(bool,'const.bool.IN_2'(s('type.num.num',X56),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X60),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X60)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X60)),fun(X60,'type.pair.prod'('type.num.num','type.sptree.spt'(X60)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X60),fun(X60,'type.pair.prod'('type.num.num','type.sptree.spt'(X60))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X60),'type.pair.prod'('type.num.num','type.sptree.spt'(X60)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X60),fun(X60,'type.sptree.spt'(X60)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X60,fun('type.sptree.spt'(X60),'type.sptree.spt'(X60)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X60),'type.sptree.spt'(X60)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X60)),happ(s(fun('type.sptree.spt'(X60),'type.pair.prod'('type.num.num','type.sptree.spt'(X60))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X60),'type.pair.prod'('type.num.num','type.sptree.spt'(X60)))),'const.pair.,_0'),s('type.num.num',X58))),s('type.sptree.spt'(X60),X57))),s('type.list.list'(X60),X59))))))))) | s(bool,X61) != s(bool,X63)) )),
  inference(resolution,[],[f175,f185])).
fof(f8417,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42,X40] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X40)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X41,X42,X43,X44))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X42)))) | p(s(bool,X45)) | ~p(s(bool,X46)) | ~p(s(bool,X47)) | s(bool,X46) != s(bool,'const.bool.IN_2'(s('type.num.num',X40),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X44),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X44)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X44)),fun(X44,'type.pair.prod'('type.num.num','type.sptree.spt'(X44)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X44),fun(X44,'type.pair.prod'('type.num.num','type.sptree.spt'(X44))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X44),'type.pair.prod'('type.num.num','type.sptree.spt'(X44)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X44),fun(X44,'type.sptree.spt'(X44)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X44,fun('type.sptree.spt'(X44),'type.sptree.spt'(X44)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X44),'type.sptree.spt'(X44)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X44)),happ(s(fun('type.sptree.spt'(X44),'type.pair.prod'('type.num.num','type.sptree.spt'(X44))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X44),'type.pair.prod'('type.num.num','type.sptree.spt'(X44)))),'const.pair.,_0'),s('type.num.num',X42))),s('type.sptree.spt'(X44),X41))),s('type.list.list'(X44),X43)))))))))) )),
  inference(resolution,[],[f175,f184])).
fof(f8415,plain,(
  ( ! [X30,X28,X26,X24,X31,X29,X27,X25] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X24)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X25,X26,X27,X28))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X26)))) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X29) != s(bool,X31) | s(bool,X30) != s(bool,'const.bool.IN_2'(s('type.num.num',X24),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X28),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.pair.prod'('type.num.num','type.sptree.spt'(X28))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X28),fun(X28,'type.sptree.spt'(X28)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X28,fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X28),'type.sptree.spt'(X28)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X28)),happ(s(fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X28),'type.pair.prod'('type.num.num','type.sptree.spt'(X28)))),'const.pair.,_0'),s('type.num.num',X26))),s('type.sptree.spt'(X28),X25))),s('type.list.list'(X28),X27)))))))))) )),
  inference(resolution,[],[f175,f183])).
fof(f8414,plain,(
  ( ! [X23,X21,X19,X17,X22,X20,X18,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X16)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X17,X18,X19,X20))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X18)))) | ~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.bool.IN_2'(s('type.num.num',X16),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X20),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X20)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X20)),fun(X20,'type.pair.prod'('type.num.num','type.sptree.spt'(X20)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X20),fun(X20,'type.pair.prod'('type.num.num','type.sptree.spt'(X20))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X20),'type.pair.prod'('type.num.num','type.sptree.spt'(X20)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X20),fun(X20,'type.sptree.spt'(X20)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X20,fun('type.sptree.spt'(X20),'type.sptree.spt'(X20)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X20),'type.sptree.spt'(X20)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X20)),happ(s(fun('type.sptree.spt'(X20),'type.pair.prod'('type.num.num','type.sptree.spt'(X20))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X20),'type.pair.prod'('type.num.num','type.sptree.spt'(X20)))),'const.pair.,_0'),s('type.num.num',X18))),s('type.sptree.spt'(X20),X17))),s('type.list.list'(X20),X19))))))))) | s(bool,X21) != s(bool,X23)) )),
  inference(resolution,[],[f175,f181])).
fof(f8412,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X1,X2,X3,X4))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2)))) | p(s(bool,X5)) | ~p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | s(bool,X6) != s(bool,'const.bool.IN_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X4),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X4)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X4)),fun(X4,'type.pair.prod'('type.num.num','type.sptree.spt'(X4)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X4),fun(X4,'type.pair.prod'('type.num.num','type.sptree.spt'(X4))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X4),'type.pair.prod'('type.num.num','type.sptree.spt'(X4)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X4),fun(X4,'type.sptree.spt'(X4)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X4,fun('type.sptree.spt'(X4),'type.sptree.spt'(X4)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X4),'type.sptree.spt'(X4)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X4)),happ(s(fun('type.sptree.spt'(X4),'type.pair.prod'('type.num.num','type.sptree.spt'(X4))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X4),'type.pair.prod'('type.num.num','type.sptree.spt'(X4)))),'const.pair.,_0'),s('type.num.num',X2))),s('type.sptree.spt'(X4),X1))),s('type.list.list'(X4),X3)))))))))) )),
  inference(resolution,[],[f175,f179])).
fof(f8408,plain,(
  ( ! [X144,X142,X140,X145,X143,X141,X139] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X139),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X140),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X140)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X140)),fun(X140,'type.pair.prod'('type.num.num','type.sptree.spt'(X140)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X140),fun(X140,'type.pair.prod'('type.num.num','type.sptree.spt'(X140))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X140),'type.pair.prod'('type.num.num','type.sptree.spt'(X140)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X140),fun(X140,'type.sptree.spt'(X140)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X140,fun('type.sptree.spt'(X140),'type.sptree.spt'(X140)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X140),'type.sptree.spt'(X140)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X140)),happ(s(fun('type.sptree.spt'(X140),'type.pair.prod'('type.num.num','type.sptree.spt'(X140))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X140),'type.pair.prod'('type.num.num','type.sptree.spt'(X140)))),'const.pair.,_0'),s('type.num.num',X141))),s('type.sptree.spt'(X140),X142))),s('type.list.list'(X140),X143)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X142,X141,X143,X140))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X141)))) | p(s(bool,X144)) | p(s(bool,X145)) | s(bool,X145) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X139)))) )),
  inference(resolution,[],[f175,f251])).
fof(f8396,plain,(
  ( ! [X80,X78,X76,X74,X81,X79,X77,X75] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X74),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X75),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X75)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X75)),fun(X75,'type.pair.prod'('type.num.num','type.sptree.spt'(X75)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X75),fun(X75,'type.pair.prod'('type.num.num','type.sptree.spt'(X75))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X75),'type.pair.prod'('type.num.num','type.sptree.spt'(X75)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X75),fun(X75,'type.sptree.spt'(X75)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X75,fun('type.sptree.spt'(X75),'type.sptree.spt'(X75)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X75),'type.sptree.spt'(X75)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X75)),happ(s(fun('type.sptree.spt'(X75),'type.pair.prod'('type.num.num','type.sptree.spt'(X75))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X75),'type.pair.prod'('type.num.num','type.sptree.spt'(X75)))),'const.pair.,_0'),s('type.num.num',X76))),s('type.sptree.spt'(X75),X77))),s('type.list.list'(X75),X78)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X77,X76,X78,X75))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X76)))) | p(s(bool,X79)) | ~p(s(bool,X80)) | s(bool,X79) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X74))) | s(bool,X80) != s(bool,X81)) )),
  inference(resolution,[],[f175,f185])).
fof(f8393,plain,(
  ( ! [X57,X54,X52,X50,X56,X55,X53,X51] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X50),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X51),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.sptree.spt'(X51)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X51,fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),happ(s(fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s('type.num.num',X52))),s('type.sptree.spt'(X51),X53))),s('type.list.list'(X51),X54)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X53,X52,X54,X51))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X52)))) | p(s(bool,X55)) | ~p(s(bool,X56)) | p(s(bool,X57)) | s(bool,X57) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X50)))) )),
  inference(resolution,[],[f175,f184])).
fof(f8392,plain,(
  ( ! [X47,X45,X43,X48,X46,X44,X42,X49] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X42),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X43),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),fun(X43,'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X43),fun(X43,'type.pair.prod'('type.num.num','type.sptree.spt'(X43))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X43),fun(X43,'type.sptree.spt'(X43)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X43,fun('type.sptree.spt'(X43),'type.sptree.spt'(X43)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X43),'type.sptree.spt'(X43)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),happ(s(fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.,_0'),s('type.num.num',X44))),s('type.sptree.spt'(X43),X45))),s('type.list.list'(X43),X46)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X45,X44,X46,X43))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X44)))) | p(s(bool,X47)) | p(s(bool,X48)) | s(bool,X47) != s(bool,X49) | s(bool,X48) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X42)))) )),
  inference(resolution,[],[f175,f183])).
fof(f8391,plain,(
  ( ! [X39,X37,X35,X41,X38,X36,X34,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X34),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X35),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),fun(X35,'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X35),fun(X35,'type.pair.prod'('type.num.num','type.sptree.spt'(X35))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X35),fun(X35,'type.sptree.spt'(X35)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X35,fun('type.sptree.spt'(X35),'type.sptree.spt'(X35)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X35),'type.sptree.spt'(X35)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X35)),happ(s(fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X35),'type.pair.prod'('type.num.num','type.sptree.spt'(X35)))),'const.pair.,_0'),s('type.num.num',X36))),s('type.sptree.spt'(X35),X37))),s('type.list.list'(X35),X38)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X37,X36,X38,X35))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X36)))) | p(s(bool,X39)) | ~p(s(bool,X40)) | s(bool,X39) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X34))) | s(bool,X40) != s(bool,X41)) )),
  inference(resolution,[],[f175,f181])).
fof(f8389,plain,(
  ( ! [X24,X23,X21,X19,X25,X22,X20,X18] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X18),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.sptree.spt'(X19)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X19,fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),happ(s(fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s('type.num.num',X20))),s('type.sptree.spt'(X19),X21))),s('type.list.list'(X19),X22)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X21,X20,X22,X19))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X20)))) | p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X23) != s(bool,X25) | s(bool,X24) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X18)))) )),
  inference(resolution,[],[f175,f179])).
fof(f744,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(cnf_transformation,[],[f744_D])).
fof(f744_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f8193,plain,(
  ( ! [X6] : (s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl31 | $spl82)),
  inference(subsumption_resolution,[],[f8185,f250])).
fof(f8185,plain,(
  ( ! [X6] : (s(bool,'F_0') != s(bool,X6) | s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl31 | $spl82)),
  inference(superposition,[],[f655,f2901])).
fof(f655,plain,(
  s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl31),
  inference(cnf_transformation,[],[f655_D])).
fof(f655_D,plain,(
  s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f8192,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X5)) ) | ($spl31 | $spl82)),
  inference(subsumption_resolution,[],[f8184,f250])).
fof(f8184,plain,(
  ( ! [X5] : (s(bool,'F_0') != s(bool,X5) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X5)) ) | ($spl31 | $spl82)),
  inference(superposition,[],[f655,f2901])).
fof(f8166,plain,(
  $false | ($spl16 | $spl54)),
  inference(subsumption_resolution,[],[f3801,f304])).
fof(f304,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(cnf_transformation,[],[f304_D])).
fof(f304_D,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f3801,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | $spl54),
  inference(equality_resolution,[],[f3777])).
fof(f3777,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))))) ) | $spl54),
  inference(trivial_inequality_removal,[],[f3770])).
fof(f3770,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) ) | $spl54),
  inference(superposition,[],[f1572,f247])).
fof(f8165,plain,(
  ( ! [X6] : (p(s(bool,X6)) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl16 | $spl82)),
  inference(subsumption_resolution,[],[f8155,f232])).
fof(f8155,plain,(
  ( ! [X6] : (p(s(bool,X6)) | s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl16 | $spl82)),
  inference(superposition,[],[f304,f2901])).
fof(f8164,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl16 | $spl82)),
  inference(subsumption_resolution,[],[f8154,f232])).
fof(f8154,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X5)) ) | ($spl16 | $spl82)),
  inference(superposition,[],[f304,f2901])).
fof(f506,plain,(
  ( ! [X9] : (p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl28),
  inference(cnf_transformation,[],[f506_D])).
fof(f506_D,plain,(
  ( ! [X9] : (p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f8133,plain,(
  ( ! [X26,X27] : (p(s(bool,X26)) | p(s(bool,X27)) | s(bool,X27) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(resolution,[],[f304,f251])).
fof(f8121,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X22) != s(bool,X23)) ) | $spl16),
  inference(resolution,[],[f304,f185])).
fof(f8118,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(resolution,[],[f304,f184])).
fof(f8117,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(resolution,[],[f304,f183])).
fof(f8116,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X7) != s(bool,X8)) ) | $spl16),
  inference(resolution,[],[f304,f181])).
fof(f8114,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(resolution,[],[f304,f179])).
fof(f305,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | $spl17),
  inference(cnf_transformation,[],[f305_D])).
fof(f305_D,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f3780,plain,(
  ( ! [X12] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl54),
  inference(duplicate_literal_removal,[],[f3767])).
fof(f3767,plain,(
  ( ! [X12] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))) ) | $spl54),
  inference(superposition,[],[f1572,f248])).
fof(f3779,plain,(
  ( ! [X13] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl54),
  inference(duplicate_literal_removal,[],[f3768])).
fof(f3768,plain,(
  ( ! [X13] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))) ) | $spl54),
  inference(superposition,[],[f1572,f246])).
fof(f3803,plain,(
  ( ! [X12] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))) ) | $spl54),
  inference(trivial_inequality_removal,[],[f3799])).
fof(f3799,plain,(
  ( ! [X12] : (s('type.num.num',X12) != s('type.num.num',X12) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))) ) | $spl54),
  inference(superposition,[],[f3777,f248])).
fof(f3802,plain,(
  ( ! [X13] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))) ) | $spl54),
  inference(trivial_inequality_removal,[],[f3800])).
fof(f3800,plain,(
  ( ! [X13] : (s('type.num.num',X13) != s('type.num.num',X13) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))) ) | $spl54),
  inference(superposition,[],[f3777,f246])).
fof(f7607,plain,(
  ( ! [X12] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))) ) | $spl54),
  inference(trivial_inequality_removal,[],[f7603])).
fof(f7603,plain,(
  ( ! [X12] : (s('type.num.num',X12) != s('type.num.num',X12) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))) ) | $spl54),
  inference(superposition,[],[f3777,f248])).
fof(f7606,plain,(
  ( ! [X13] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))) ) | $spl54),
  inference(trivial_inequality_removal,[],[f7604])).
fof(f7604,plain,(
  ( ! [X13] : (s('type.num.num',X13) != s('type.num.num',X13) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))) ) | $spl54),
  inference(superposition,[],[f3777,f246])).
fof(f8109,plain,(
  $false | ($spl35 | $spl48)),
  inference(equality_resolution,[],[f7998])).
fof(f7998,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | ($spl35 | $spl48)),
  inference(subsumption_resolution,[],[f7997,f5035])).
fof(f5035,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1) | s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) ) | $spl35),
  inference(trivial_inequality_removal,[],[f5028])).
fof(f5028,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) ) | $spl35),
  inference(superposition,[],[f3664,f247])).
fof(f3664,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) ) | $spl35),
  inference(superposition,[],[f745,f248])).
fof(f7997,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) ) | $spl48),
  inference(forward_demodulation,[],[f7870,f1346])).
fof(f7870,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(superposition,[],[f176,f249])).
fof(f6994,plain,(
  ( ! [X10,X11,X9] : (s(bool,X9) != s(bool,'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0'))) | ~p(s(bool,X9))) ) | $spl112),
  inference(cnf_transformation,[],[f6994_D])).
fof(f6994_D,plain,(
  ( ! [X10,X11,X9] : (s(bool,X9) != s(bool,'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0'))) | ~p(s(bool,X9))) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f7516,plain,(
  ( ! [X54,X52,X55,X53] : (p(s(bool,X52)) | ~p(s(bool,X53)) | s(bool,X53) != s(bool,'const.bool.IN_2'(s(X54,X55),s(fun(X54,bool),'const.pred_set.EMPTY_0')))) )),
  inference(resolution,[],[f239,f251])).
fof(f7502,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~p(s(bool,X33)) | ~p(s(bool,X34)) | s(bool,X34) != s(bool,'const.bool.IN_2'(s(X35,X36),s(fun(X35,bool),'const.pred_set.EMPTY_0'))) | s(bool,X33) != s(bool,X37)) )),
  inference(resolution,[],[f239,f185])).
fof(f7500,plain,(
  ( ! [X28,X26,X29,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.bool.IN_2'(s(X28,X29),s(fun(X28,bool),'const.pred_set.EMPTY_0')))) )),
  inference(resolution,[],[f239,f184])).
fof(f7498,plain,(
  ( ! [X19,X17,X15,X18,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.bool.IN_2'(s(X18,X19),s(fun(X18,bool),'const.pred_set.EMPTY_0')))) )),
  inference(resolution,[],[f239,f183])).
fof(f7497,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X11) != s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),'const.pred_set.EMPTY_0'))) | s(bool,X10) != s(bool,X14)) )),
  inference(resolution,[],[f239,f181])).
fof(f7495,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.bool.IN_2'(s(X3,X4),s(fun(X3,bool),'const.pred_set.EMPTY_0')))) )),
  inference(resolution,[],[f239,f179])).
fof(f7486,plain,(
  ( ! [X204,X202] : (s(bool,X202) = s(bool,X204) | p(s(bool,X204))) ) | $spl124),
  inference(cnf_transformation,[],[f7486_D])).
fof(f7486_D,plain,(
  ( ! [X204,X202] : (s(bool,X202) = s(bool,X204) | p(s(bool,X204))) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f7485,plain,(
  ( ! [X204,X202,X203] : (p(s(bool,X203)) | s(bool,X202) = s(bool,X204) | p(s(bool,X204))) ) | $spl116),
  inference(subsumption_resolution,[],[f7338,f229])).
fof(f7338,plain,(
  ( ! [X204,X202,X203] : (s(bool,'F_0') != s(bool,X203) | p(s(bool,X203)) | s(bool,X202) = s(bool,X204) | p(s(bool,X204))) ) | $spl116),
  inference(superposition,[],[f1232,f6999])).
fof(f7481,plain,(
  ( ! [X189,X190,X188] : (p(s(bool,X189)) | ~p(s(bool,X190)) | s(bool,X188) != s(bool,X190)) ) | $spl116),
  inference(subsumption_resolution,[],[f7333,f218])).
fof(f7333,plain,(
  ( ! [X189,X190,X188] : (p(s(bool,'F_0')) | p(s(bool,X189)) | ~p(s(bool,X190)) | s(bool,X188) != s(bool,X190)) ) | $spl116),
  inference(superposition,[],[f251,f6999])).
fof(f7480,plain,(
  ( ! [X182,X184,X183] : (p(s(bool,X184)) | ~p(s(bool,X182)) | p(s(bool,X183))) ) | $spl116),
  inference(subsumption_resolution,[],[f7331,f229])).
fof(f7331,plain,(
  ( ! [X182,X184,X183] : (s(bool,'F_0') != s(bool,X183) | p(s(bool,X184)) | ~p(s(bool,X182)) | p(s(bool,X183))) ) | $spl116),
  inference(superposition,[],[f251,f6999])).
fof(f7468,plain,(
  ( ! [X127,X125,X126,X124] : (~p(s(bool,X125)) | ~p(s(bool,X126)) | s(bool,X124) != s(bool,X126) | s(bool,X125) != s(bool,X127)) ) | $spl116),
  inference(subsumption_resolution,[],[f7293,f199])).
fof(f7293,plain,(
  ( ! [X127,X125,X126,X124] : (p(s(bool,'F_0')) | ~p(s(bool,X125)) | ~p(s(bool,X126)) | s(bool,X124) != s(bool,X126) | s(bool,X125) != s(bool,X127)) ) | $spl116),
  inference(superposition,[],[f185,f6999])).
fof(f7467,plain,(
  ( ! [X123,X121,X122,X120] : (p(s(bool,X121)) | ~p(s(bool,X122)) | ~p(s(bool,X120)) | s(bool,X122) != s(bool,X123)) ) | $spl116),
  inference(subsumption_resolution,[],[f7292,f229])).
fof(f7292,plain,(
  ( ! [X123,X121,X122,X120] : (s(bool,'F_0') != s(bool,X121) | p(s(bool,X121)) | ~p(s(bool,X122)) | ~p(s(bool,X120)) | s(bool,X122) != s(bool,X123)) ) | $spl116),
  inference(superposition,[],[f185,f6999])).
fof(f7465,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,X93)) | ~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X92) != s(bool,X94)) ) | $spl116),
  inference(subsumption_resolution,[],[f7285,f218])).
fof(f7285,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,'F_0')) | p(s(bool,X93)) | ~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X92) != s(bool,X94)) ) | $spl116),
  inference(superposition,[],[f184,f6999])).
fof(f7464,plain,(
  ( ! [X87,X85,X86,X84] : (p(s(bool,X86)) | ~p(s(bool,X84)) | ~p(s(bool,X87)) | p(s(bool,X85))) ) | $spl116),
  inference(subsumption_resolution,[],[f7283,f229])).
fof(f7283,plain,(
  ( ! [X87,X85,X86,X84] : (s(bool,'F_0') != s(bool,X85) | p(s(bool,X86)) | ~p(s(bool,X84)) | ~p(s(bool,X87)) | p(s(bool,X85))) ) | $spl116),
  inference(superposition,[],[f184,f6999])).
fof(f7461,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,X73)) | ~p(s(bool,X74)) | s(bool,X73) != s(bool,X75) | s(bool,X72) != s(bool,X74)) ) | $spl116),
  inference(subsumption_resolution,[],[f7280,f218])).
fof(f7280,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,'F_0')) | p(s(bool,X73)) | ~p(s(bool,X74)) | s(bool,X73) != s(bool,X75) | s(bool,X72) != s(bool,X74)) ) | $spl116),
  inference(superposition,[],[f183,f6999])).
fof(f7459,plain,(
  ( ! [X59,X57,X58,X56] : (p(s(bool,X58)) | ~p(s(bool,X56)) | p(s(bool,X57)) | s(bool,X58) != s(bool,X59)) ) | $spl116),
  inference(subsumption_resolution,[],[f7276,f229])).
fof(f7276,plain,(
  ( ! [X59,X57,X58,X56] : (s(bool,'F_0') != s(bool,X57) | p(s(bool,X58)) | ~p(s(bool,X56)) | p(s(bool,X57)) | s(bool,X58) != s(bool,X59)) ) | $spl116),
  inference(superposition,[],[f183,f6999])).
fof(f7458,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X44) != s(bool,X46) | s(bool,X45) != s(bool,X47)) ) | $spl116),
  inference(subsumption_resolution,[],[f7273,f199])).
fof(f7273,plain,(
  ( ! [X47,X45,X46,X44] : (p(s(bool,'F_0')) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X44) != s(bool,X46) | s(bool,X45) != s(bool,X47)) ) | $spl116),
  inference(superposition,[],[f181,f6999])).
fof(f7457,plain,(
  ( ! [X39,X37,X38,X36] : (p(s(bool,X37)) | ~p(s(bool,X38)) | ~p(s(bool,X36)) | s(bool,X38) != s(bool,X39)) ) | $spl116),
  inference(subsumption_resolution,[],[f7271,f229])).
fof(f7271,plain,(
  ( ! [X39,X37,X38,X36] : (s(bool,'F_0') != s(bool,X37) | p(s(bool,X37)) | ~p(s(bool,X38)) | ~p(s(bool,X36)) | s(bool,X38) != s(bool,X39)) ) | $spl116),
  inference(superposition,[],[f181,f6999])).
fof(f7453,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl116),
  inference(subsumption_resolution,[],[f7266,f218])).
fof(f7266,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,'F_0')) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl116),
  inference(superposition,[],[f179,f6999])).
fof(f7451,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,X6)) | ~p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X6) != s(bool,X7)) ) | $spl116),
  inference(subsumption_resolution,[],[f7263,f229])).
fof(f7263,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,X5) | p(s(bool,X6)) | ~p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X6) != s(bool,X7)) ) | $spl116),
  inference(superposition,[],[f179,f6999])).
fof(f7450,plain,(
  ( ! [X273,X274] : (s(bool,'T_0') != s(bool,X273) | s(bool,'T_0') = s(bool,X274)) ) | ($spl86 | $spl116)),
  inference(subsumption_resolution,[],[f7260,f250])).
fof(f7260,plain,(
  ( ! [X273,X274] : (s(bool,'T_0') != s(bool,X273) | s(bool,'F_0') != s(bool,X274) | s(bool,'T_0') = s(bool,X274)) ) | ($spl86 | $spl116)),
  inference(superposition,[],[f4822,f6999])).
fof(f7449,plain,(
  ( ! [X271,X270] : (~p(s(bool,X270)) | s(bool,'T_0') = s(bool,X271)) ) | ($spl86 | $spl116)),
  inference(subsumption_resolution,[],[f7259,f250])).
fof(f7259,plain,(
  ( ! [X271,X270] : (~p(s(bool,X270)) | s(bool,'T_0') = s(bool,X271) | s(bool,'F_0') != s(bool,X271)) ) | ($spl86 | $spl116)),
  inference(superposition,[],[f3224,f6999])).
fof(f7448,plain,(
  ( ! [X243,X241,X242] : (~p(s(bool,X241)) | p(s(bool,X243)) | s(bool,X242) != s(bool,X243)) ) | ($spl44 | $spl116)),
  inference(subsumption_resolution,[],[f7248,f1240])).
fof(f7248,plain,(
  ( ! [X243,X241,X242] : (~p(s(bool,X241)) | s(bool,'F_0') != s(bool,X242) | p(s(bool,X243)) | s(bool,X242) != s(bool,X243)) ) | ($spl44 | $spl116)),
  inference(superposition,[],[f1285,f6999])).
fof(f7447,plain,(
  ( ! [X239,X240] : (s(bool,'T_0') != s(bool,X239) | p(s(bool,X240))) ) | $spl116),
  inference(subsumption_resolution,[],[f7247,f229])).
fof(f7247,plain,(
  ( ! [X239,X240] : (s(bool,'T_0') != s(bool,X239) | s(bool,'F_0') != s(bool,X240) | p(s(bool,X240))) ) | $spl116),
  inference(superposition,[],[f1242,f6999])).
fof(f7443,plain,(
  ( ! [X227,X226] : (~p(s(bool,X226)) | p(s(bool,X227))) ) | $spl116),
  inference(subsumption_resolution,[],[f7442,f6999])).
fof(f7442,plain,(
  ( ! [X227,X228,X226] : (~p(s(bool,X226)) | p(s(bool,X227)) | s(bool,'F_0') != s(bool,X228)) ) | $spl116),
  inference(subsumption_resolution,[],[f7242,f228])).
fof(f7242,plain,(
  ( ! [X227,X228,X226] : (~p(s(bool,X226)) | p(s(bool,X227)) | p(s(bool,X228)) | s(bool,'F_0') != s(bool,X228)) ) | $spl116),
  inference(superposition,[],[f251,f6999])).
fof(f7441,plain,(
  ( ! [X218,X219,X217] : (s(bool,X217) != s(bool,X218) | p(s(bool,X219)) | ~p(s(bool,X218))) ) | $spl116),
  inference(subsumption_resolution,[],[f7239,f218])).
fof(f7239,plain,(
  ( ! [X218,X219,X217] : (s(bool,X217) != s(bool,X218) | p(s(bool,X219)) | ~p(s(bool,X218)) | p(s(bool,'F_0'))) ) | $spl116),
  inference(superposition,[],[f251,f6999])).
fof(f7429,plain,(
  ( ! [X182,X183] : (~p(s(bool,X182)) | ~p(s(bool,X183))) ) | $spl116),
  inference(subsumption_resolution,[],[f7210,f228])).
fof(f7210,plain,(
  ( ! [X182,X183] : (~p(s(bool,X182)) | s(bool,'F_0') = s(bool,X183) | ~p(s(bool,X183))) ) | $spl116),
  inference(superposition,[],[f195,f6999])).
fof(f7428,plain,(
  ( ! [X180,X181] : (~p(s(bool,X180)) | ~p(s(bool,X181))) ) | $spl116),
  inference(subsumption_resolution,[],[f7209,f228])).
fof(f7209,plain,(
  ( ! [X180,X181] : (~p(s(bool,X180)) | s(bool,'F_0') = s(bool,X181) | ~p(s(bool,X181))) ) | $spl116),
  inference(superposition,[],[f195,f6999])).
fof(f7425,plain,(
  ( ! [X167,X166,X164] : (~p(s(bool,X164)) | ~p(s(bool,X166)) | s(bool,X166) != s(bool,X167)) ) | $spl116),
  inference(subsumption_resolution,[],[f7424,f6999])).
fof(f7424,plain,(
  ( ! [X167,X165,X166,X164] : (~p(s(bool,X164)) | ~p(s(bool,X166)) | s(bool,'F_0') != s(bool,X165) | s(bool,X166) != s(bool,X167)) ) | $spl116),
  inference(subsumption_resolution,[],[f7202,f228])).
fof(f7202,plain,(
  ( ! [X167,X165,X166,X164] : (~p(s(bool,X164)) | p(s(bool,X165)) | ~p(s(bool,X166)) | s(bool,'F_0') != s(bool,X165) | s(bool,X166) != s(bool,X167)) ) | $spl116),
  inference(superposition,[],[f185,f6999])).
fof(f7423,plain,(
  ( ! [X151,X149,X150,X148] : (s(bool,X148) != s(bool,X149) | ~p(s(bool,X150)) | ~p(s(bool,X149)) | s(bool,X150) != s(bool,X151)) ) | $spl116),
  inference(subsumption_resolution,[],[f7198,f199])).
fof(f7198,plain,(
  ( ! [X151,X149,X150,X148] : (s(bool,X148) != s(bool,X149) | p(s(bool,'F_0')) | ~p(s(bool,X150)) | ~p(s(bool,X149)) | s(bool,X150) != s(bool,X151)) ) | $spl116),
  inference(superposition,[],[f185,f6999])).
fof(f7422,plain,(
  ( ! [X134,X132,X133] : (~p(s(bool,X132)) | p(s(bool,X133)) | ~p(s(bool,X134))) ) | $spl116),
  inference(subsumption_resolution,[],[f7421,f6999])).
fof(f7421,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,X132)) | p(s(bool,X133)) | ~p(s(bool,X134)) | s(bool,'F_0') != s(bool,X135)) ) | $spl116),
  inference(subsumption_resolution,[],[f7194,f228])).
fof(f7194,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,X132)) | p(s(bool,X133)) | ~p(s(bool,X134)) | p(s(bool,X135)) | s(bool,'F_0') != s(bool,X135)) ) | $spl116),
  inference(superposition,[],[f184,f6999])).
fof(f7420,plain,(
  ( ! [X123,X121,X122,X120] : (s(bool,X120) != s(bool,X121) | p(s(bool,X122)) | ~p(s(bool,X121)) | ~p(s(bool,X123))) ) | $spl116),
  inference(subsumption_resolution,[],[f7191,f218])).
fof(f7191,plain,(
  ( ! [X123,X121,X122,X120] : (s(bool,X120) != s(bool,X121) | p(s(bool,X122)) | ~p(s(bool,X121)) | ~p(s(bool,X123)) | p(s(bool,'F_0'))) ) | $spl116),
  inference(superposition,[],[f184,f6999])).
fof(f7419,plain,(
  ( ! [X112,X115,X113] : (~p(s(bool,X112)) | p(s(bool,X113)) | s(bool,X113) != s(bool,X115)) ) | $spl116),
  inference(subsumption_resolution,[],[f7418,f6999])).
fof(f7418,plain,(
  ( ! [X114,X112,X115,X113] : (~p(s(bool,X112)) | p(s(bool,X113)) | s(bool,X113) != s(bool,X115) | s(bool,'F_0') != s(bool,X114)) ) | $spl116),
  inference(subsumption_resolution,[],[f7189,f228])).
fof(f7189,plain,(
  ( ! [X114,X112,X115,X113] : (~p(s(bool,X112)) | p(s(bool,X113)) | p(s(bool,X114)) | s(bool,X113) != s(bool,X115) | s(bool,'F_0') != s(bool,X114)) ) | $spl116),
  inference(superposition,[],[f183,f6999])).
fof(f7416,plain,(
  ( ! [X94,X92,X95,X93] : (s(bool,X92) != s(bool,X93) | p(s(bool,X94)) | ~p(s(bool,X93)) | s(bool,X94) != s(bool,X95)) ) | $spl116),
  inference(subsumption_resolution,[],[f7184,f218])).
fof(f7184,plain,(
  ( ! [X94,X92,X95,X93] : (s(bool,X92) != s(bool,X93) | p(s(bool,X94)) | ~p(s(bool,X93)) | p(s(bool,'F_0')) | s(bool,X94) != s(bool,X95)) ) | $spl116),
  inference(superposition,[],[f183,f6999])).
fof(f7413,plain,(
  ( ! [X87,X86,X84] : (~p(s(bool,X84)) | ~p(s(bool,X86)) | s(bool,X86) != s(bool,X87)) ) | $spl116),
  inference(subsumption_resolution,[],[f7412,f6999])).
fof(f7412,plain,(
  ( ! [X87,X85,X86,X84] : (~p(s(bool,X84)) | ~p(s(bool,X86)) | s(bool,'F_0') != s(bool,X85) | s(bool,X86) != s(bool,X87)) ) | $spl116),
  inference(subsumption_resolution,[],[f7182,f228])).
fof(f7182,plain,(
  ( ! [X87,X85,X86,X84] : (~p(s(bool,X84)) | p(s(bool,X85)) | ~p(s(bool,X86)) | s(bool,'F_0') != s(bool,X85) | s(bool,X86) != s(bool,X87)) ) | $spl116),
  inference(superposition,[],[f181,f6999])).
fof(f7411,plain,(
  ( ! [X74,X72,X75,X73] : (s(bool,X72) != s(bool,X73) | ~p(s(bool,X74)) | ~p(s(bool,X73)) | s(bool,X74) != s(bool,X75)) ) | $spl116),
  inference(subsumption_resolution,[],[f7179,f199])).
fof(f7179,plain,(
  ( ! [X74,X72,X75,X73] : (s(bool,X72) != s(bool,X73) | p(s(bool,'F_0')) | ~p(s(bool,X74)) | ~p(s(bool,X73)) | s(bool,X74) != s(bool,X75)) ) | $spl116),
  inference(superposition,[],[f181,f6999])).
fof(f7410,plain,(
  ( ! [X59,X57,X56] : (~p(s(bool,X56)) | p(s(bool,X57)) | s(bool,X57) != s(bool,X59)) ) | $spl116),
  inference(subsumption_resolution,[],[f7409,f6999])).
fof(f7409,plain,(
  ( ! [X59,X57,X58,X56] : (~p(s(bool,X56)) | p(s(bool,X57)) | s(bool,X57) != s(bool,X59) | s(bool,'F_0') != s(bool,X58)) ) | $spl116),
  inference(subsumption_resolution,[],[f7175,f228])).
fof(f7175,plain,(
  ( ! [X59,X57,X58,X56] : (~p(s(bool,X56)) | p(s(bool,X57)) | p(s(bool,X58)) | s(bool,X57) != s(bool,X59) | s(bool,'F_0') != s(bool,X58)) ) | $spl116),
  inference(superposition,[],[f179,f6999])).
fof(f7405,plain,(
  ( ! [X35,X33,X34,X32] : (s(bool,X32) != s(bool,X33) | p(s(bool,X34)) | ~p(s(bool,X33)) | s(bool,X34) != s(bool,X35)) ) | $spl116),
  inference(subsumption_resolution,[],[f7169,f218])).
fof(f7169,plain,(
  ( ! [X35,X33,X34,X32] : (s(bool,X32) != s(bool,X33) | p(s(bool,X34)) | ~p(s(bool,X33)) | p(s(bool,'F_0')) | s(bool,X34) != s(bool,X35)) ) | $spl116),
  inference(superposition,[],[f179,f6999])).
fof(f7162,plain,(
  ( ! [X17,X18] : (~p(s(bool,X17)) | p(s(bool,X18))) ) | $spl116),
  inference(superposition,[],[f236,f6999])).
fof(f7157,plain,(
  ( ! [X8,X7] : (~p(s(bool,X7)) | p(s(bool,X8))) ) | $spl116),
  inference(superposition,[],[f220,f6999])).
fof(f7156,plain,(
  ( ! [X6,X5] : (~p(s(bool,X5)) | p(s(bool,X6))) ) | $spl116),
  inference(superposition,[],[f218,f6999])).
fof(f7404,plain,(
  ( ! [X4,X3] : (~p(s(bool,X3)) | p(s(bool,X4))) ) | $spl116),
  inference(subsumption_resolution,[],[f7155,f202])).
fof(f7155,plain,(
  ( ! [X4,X3] : (~p(s(bool,X3)) | p(s(bool,X4)) | ~p(s(bool,'T_0'))) ) | $spl116),
  inference(superposition,[],[f203,f6999])).
fof(f7153,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | ~p(s(bool,X1))) ) | $spl116),
  inference(superposition,[],[f199,f6999])).
fof(f7087,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f7039,f299])).
fof(f7039,plain,(
  ( ! [X52] : (p(s(bool,X52))) ) | $spl10),
  inference(resolution,[],[f299,f210])).
fof(f210,plain,(
  ( ! [X0] : (p(s(bool,X0)) | p(s(bool,'T_0'))) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0] : (((p(s(bool,'T_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,'T_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f152])).
fof(f152,plain,(
  ! [X0] : (((p(s(bool,'T_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (~p(s(bool,'T_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0] : ((~p(s(bool,'T_0')) | p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(ennf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0] : ((p(s(bool,'T_0')) => p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X11] : ((p(s(bool,'T_0')) => p(s(bool,X11))) <=> p(s(bool,X11)))),
  file('thm.misc.EVEN_fromList2','thm.bool.IMP_CLAUSES|split|0')).
fof(f7086,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f7037,f299])).
fof(f7037,plain,(
  ( ! [X50] : (p(s(bool,X50))) ) | $spl10),
  inference(resolution,[],[f299,f207])).
fof(f207,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X0))))),
  inference(flattening,[],[f150])).
fof(f150,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,X0)) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X11] : ((p(s(bool,X11)) => p(s(bool,X11))) <=> p(s(bool,'T_0')))),
  file('thm.misc.EVEN_fromList2','thm.bool.IMP_CLAUSES|split|3')).
fof(f7085,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f7036,f299])).
fof(f7036,plain,(
  ( ! [X49] : (p(s(bool,X49))) ) | $spl10),
  inference(resolution,[],[f299,f204])).
fof(f204,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,'T_0'))))),
  inference(flattening,[],[f148])).
fof(f148,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,X0)) | p(s(bool,'T_0')))))),
  inference(nnf_transformation,[],[f131])).
fof(f131,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X11] : ((p(s(bool,X11)) => p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  file('thm.misc.EVEN_fromList2','thm.bool.IMP_CLAUSES|split|1')).
fof(f7084,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f7034,f299])).
fof(f7034,plain,(
  p(s(bool,'F_0')) | $spl10),
  inference(resolution,[],[f299,f201])).
fof(f201,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f147])).
fof(f7042,plain,(
  $false | $spl10),
  inference(resolution,[],[f299,f238])).
fof(f7008,plain,(
  ( ! [X47,X48,X46,X49] : (s(bool,'F_0') = s(bool,X48) | s(bool,'T_0') = s(bool,X49) | s(bool,X49) = s(bool,'const.bool.IN_2'(s(X46,X47),s(fun(X46,bool),'const.pred_set.EMPTY_0')))) ) | $spl82),
  inference(subsumption_resolution,[],[f6988,f250])).
fof(f6988,plain,(
  ( ! [X47,X48,X46,X49] : (s(bool,'T_0') != s(bool,X48) | s(bool,'F_0') = s(bool,X48) | s(bool,'T_0') = s(bool,X49) | s(bool,X49) = s(bool,'const.bool.IN_2'(s(X46,X47),s(fun(X46,bool),'const.pred_set.EMPTY_0')))) ) | $spl82),
  inference(superposition,[],[f1755,f2901])).
fof(f1755,plain,(
  ( ! [X97,X98,X96] : (s(bool,X98) != s(bool,'const.bool.IN_2'(s(X96,X97),s(fun(X96,bool),'const.pred_set.EMPTY_0'))) | s(bool,'F_0') = s(bool,X98)) )),
  inference(resolution,[],[f1240,f239])).
fof(f7006,plain,(
  ( ! [X37,X35,X36,X34] : (s(bool,'F_0') = s(bool,X36) | s(bool,X37) = s(bool,'const.bool.IN_2'(s(X34,X35),s(fun(X34,bool),'const.pred_set.EMPTY_0'))) | s(bool,'T_0') = s(bool,X37)) ) | $spl82),
  inference(subsumption_resolution,[],[f6985,f250])).
fof(f6985,plain,(
  ( ! [X37,X35,X36,X34] : (s(bool,'T_0') != s(bool,X36) | s(bool,'F_0') = s(bool,X36) | s(bool,X37) = s(bool,'const.bool.IN_2'(s(X34,X35),s(fun(X34,bool),'const.pred_set.EMPTY_0'))) | s(bool,'T_0') = s(bool,X37)) ) | $spl82),
  inference(superposition,[],[f1755,f2901])).
fof(f7005,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X28,X29),s(fun(X28,bool),'const.pred_set.EMPTY_0')))) ) | $spl120),
  inference(cnf_transformation,[],[f7005_D])).
fof(f7005_D,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X28,X29),s(fun(X28,bool),'const.pred_set.EMPTY_0')))) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f7004,plain,(
  ( ! [X30,X28,X29] : (s(bool,'F_0') = s(bool,X30) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X28,X29),s(fun(X28,bool),'const.pred_set.EMPTY_0')))) )),
  inference(subsumption_resolution,[],[f6983,f250])).
fof(f6983,plain,(
  ( ! [X30,X28,X29] : (s(bool,'T_0') != s(bool,X30) | s(bool,'F_0') = s(bool,X30) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X28,X29),s(fun(X28,bool),'const.pred_set.EMPTY_0')))) )),
  inference(superposition,[],[f1755,f250])).
fof(f6997,plain,(
  ( ! [X24,X23] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X23,X24),s(fun(X23,bool),'const.pred_set.EMPTY_0')))) ) | $spl114),
  inference(cnf_transformation,[],[f6997_D])).
fof(f6997_D,plain,(
  ( ! [X24,X23] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X23,X24),s(fun(X23,bool),'const.pred_set.EMPTY_0')))) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f7002,plain,(
  ( ! [X47,X48,X46,X49] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X47,X48),s(fun(X47,bool),'const.pred_set.EMPTY_0'))) | s(bool,'F_0') = s(bool,X46) | s(bool,'T_0') = s(bool,X49)) ) | $spl82),
  inference(subsumption_resolution,[],[f6927,f1742])).
fof(f6927,plain,(
  ( ! [X47,X48,X46,X49] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X47,X48),s(fun(X47,bool),'const.pred_set.EMPTY_0'))) | s(bool,'F_0') = s(bool,X46) | s(bool,'T_0') = s(bool,X49) | s(bool,X46) = s(bool,X49)) ) | $spl82),
  inference(superposition,[],[f1755,f2901])).
fof(f7000,plain,(
  ( ! [X37,X35,X36,X34] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X35,X36),s(fun(X35,bool),'const.pred_set.EMPTY_0'))) | s(bool,'F_0') = s(bool,X34) | s(bool,'T_0') = s(bool,X37)) ) | $spl82),
  inference(subsumption_resolution,[],[f6924,f1742])).
fof(f6924,plain,(
  ( ! [X37,X35,X36,X34] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X35,X36),s(fun(X35,bool),'const.pred_set.EMPTY_0'))) | s(bool,'F_0') = s(bool,X34) | s(bool,X34) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) ) | $spl82),
  inference(superposition,[],[f1755,f2901])).
fof(f6992,plain,(
  ( ! [X30,X28,X29] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X29,X30),s(fun(X29,bool),'const.pred_set.EMPTY_0'))) | s(bool,'F_0') = s(bool,X28)) )),
  inference(duplicate_literal_removal,[],[f6922])).
fof(f6922,plain,(
  ( ! [X30,X28,X29] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X29,X30),s(fun(X29,bool),'const.pred_set.EMPTY_0'))) | s(bool,'F_0') = s(bool,X28) | s(bool,'F_0') = s(bool,X28)) )),
  inference(superposition,[],[f1755,f250])).
fof(f6998,plain,(
  ( ! [X26,X27,X25] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X26,X27),s(fun(X26,bool),'const.pred_set.EMPTY_0'))) | ~p(s(bool,X25))) )),
  inference(subsumption_resolution,[],[f6921,f228])).
fof(f6921,plain,(
  ( ! [X26,X27,X25] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X26,X27),s(fun(X26,bool),'const.pred_set.EMPTY_0'))) | s(bool,'F_0') = s(bool,X25) | ~p(s(bool,X25))) )),
  inference(superposition,[],[f1755,f235])).
fof(f6996,plain,(
  ( ! [X24,X23,X22] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X23,X24),s(fun(X23,bool),'const.pred_set.EMPTY_0'))) | ~p(s(bool,X22))) )),
  inference(subsumption_resolution,[],[f6920,f228])).
fof(f6920,plain,(
  ( ! [X24,X23,X22] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X23,X24),s(fun(X23,bool),'const.pred_set.EMPTY_0'))) | s(bool,'F_0') = s(bool,X22) | ~p(s(bool,X22))) )),
  inference(superposition,[],[f1755,f233])).
fof(f6995,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,X13) != s(bool,'const.bool.IN_2'(s(X14,X15),s(fun(X14,bool),'const.pred_set.EMPTY_0'))) | ~p(s(bool,X13)) | ~p(s(bool,X12))) )),
  inference(subsumption_resolution,[],[f6917,f228])).
fof(f6917,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,X13) != s(bool,'const.bool.IN_2'(s(X14,X15),s(fun(X14,bool),'const.pred_set.EMPTY_0'))) | s(bool,'F_0') = s(bool,X12) | ~p(s(bool,X13)) | ~p(s(bool,X12))) )),
  inference(superposition,[],[f1755,f195])).
fof(f6993,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X9) != s(bool,'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0'))) | ~p(s(bool,X8)) | ~p(s(bool,X9))) )),
  inference(subsumption_resolution,[],[f6916,f228])).
fof(f6916,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X9) != s(bool,'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0'))) | s(bool,'F_0') = s(bool,X8) | ~p(s(bool,X8)) | ~p(s(bool,X9))) )),
  inference(superposition,[],[f1755,f195])).
fof(f1186,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))))))) | $spl43),
  inference(cnf_transformation,[],[f1186_D])).
fof(f1186_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))))))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f6758,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))))))) | $spl15),
  inference(superposition,[],[f6738,f246])).
fof(f6738,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))))) | $spl15),
  inference(equality_resolution,[],[f822])).
fof(f822,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2)))))) ) | $spl15),
  inference(superposition,[],[f303,f242])).
fof(f242,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f168])).
fof(f6757,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))))))) | $spl15),
  inference(superposition,[],[f6738,f248])).
fof(f2949,plain,(
  ( ! [X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | s(bool,X0) = s(bool,X1)) ) | $spl84),
  inference(cnf_transformation,[],[f2949_D])).
fof(f2949_D,plain,(
  ( ! [X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | s(bool,X0) = s(bool,X1)) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f6669,plain,(
  ( ! [X269,X267,X268,X270] : (p(s(bool,X268)) | p(s(bool,X269)) | s(bool,X267) != s(bool,X269) | s(bool,'T_0') = s(bool,X270) | s(bool,X267) = s(bool,X270)) ) | $spl82),
  inference(subsumption_resolution,[],[f6139,f238])).
fof(f6139,plain,(
  ( ! [X269,X267,X268,X270] : (~p(s(bool,'T_0')) | p(s(bool,X268)) | p(s(bool,X269)) | s(bool,X267) != s(bool,X269) | s(bool,'T_0') = s(bool,X270) | s(bool,X267) = s(bool,X270)) ) | $spl82),
  inference(superposition,[],[f251,f2901])).
fof(f6662,plain,(
  ( ! [X167,X165,X169,X166,X168] : (p(s(bool,X166)) | ~p(s(bool,X167)) | s(bool,X165) != s(bool,X166) | s(bool,X167) != s(bool,X168) | s(bool,'T_0') = s(bool,X169) | s(bool,X165) = s(bool,X169)) ) | $spl82),
  inference(subsumption_resolution,[],[f6099,f202])).
fof(f6099,plain,(
  ( ! [X167,X165,X169,X166,X168] : (~p(s(bool,'T_0')) | p(s(bool,X166)) | ~p(s(bool,X167)) | s(bool,X165) != s(bool,X166) | s(bool,X167) != s(bool,X168) | s(bool,'T_0') = s(bool,X169) | s(bool,X165) = s(bool,X169)) ) | $spl82),
  inference(superposition,[],[f185,f2901])).
fof(f6656,plain,(
  ( ! [X127,X125,X128,X126,X129] : (p(s(bool,X126)) | ~p(s(bool,X127)) | p(s(bool,X128)) | s(bool,X125) != s(bool,X128) | s(bool,'T_0') = s(bool,X129) | s(bool,X125) = s(bool,X129)) ) | $spl82),
  inference(subsumption_resolution,[],[f6091,f202])).
fof(f6091,plain,(
  ( ! [X127,X125,X128,X126,X129] : (~p(s(bool,'T_0')) | p(s(bool,X126)) | ~p(s(bool,X127)) | p(s(bool,X128)) | s(bool,X125) != s(bool,X128) | s(bool,'T_0') = s(bool,X129) | s(bool,X125) = s(bool,X129)) ) | $spl82),
  inference(superposition,[],[f184,f2901])).
fof(f6652,plain,(
  ( ! [X103,X101,X102,X100,X104] : (p(s(bool,X101)) | p(s(bool,X102)) | s(bool,X101) != s(bool,X103) | s(bool,X100) != s(bool,X102) | s(bool,'T_0') = s(bool,X104) | s(bool,X100) = s(bool,X104)) ) | $spl82),
  inference(subsumption_resolution,[],[f6086,f238])).
fof(f6086,plain,(
  ( ! [X103,X101,X102,X100,X104] : (~p(s(bool,'T_0')) | p(s(bool,X101)) | p(s(bool,X102)) | s(bool,X101) != s(bool,X103) | s(bool,X100) != s(bool,X102) | s(bool,'T_0') = s(bool,X104) | s(bool,X100) = s(bool,X104)) ) | $spl82),
  inference(superposition,[],[f183,f2901])).
fof(f6648,plain,(
  ( ! [X68,X66,X69,X67,X65] : (p(s(bool,X66)) | ~p(s(bool,X67)) | s(bool,X65) != s(bool,X66) | s(bool,X67) != s(bool,X68) | s(bool,'T_0') = s(bool,X69) | s(bool,X65) = s(bool,X69)) ) | $spl82),
  inference(subsumption_resolution,[],[f6079,f202])).
fof(f6079,plain,(
  ( ! [X68,X66,X69,X67,X65] : (~p(s(bool,'T_0')) | p(s(bool,X66)) | ~p(s(bool,X67)) | s(bool,X65) != s(bool,X66) | s(bool,X67) != s(bool,X68) | s(bool,'T_0') = s(bool,X69) | s(bool,X65) = s(bool,X69)) ) | $spl82),
  inference(superposition,[],[f181,f2901])).
fof(f6642,plain,(
  ( ! [X30,X33,X31,X34,X32] : (p(s(bool,X31)) | p(s(bool,X32)) | s(bool,X31) != s(bool,X33) | s(bool,X30) != s(bool,X32) | s(bool,'T_0') = s(bool,X34) | s(bool,X30) = s(bool,X34)) ) | $spl82),
  inference(subsumption_resolution,[],[f6072,f238])).
fof(f6072,plain,(
  ( ! [X30,X33,X31,X34,X32] : (~p(s(bool,'T_0')) | p(s(bool,X31)) | p(s(bool,X32)) | s(bool,X31) != s(bool,X33) | s(bool,X30) != s(bool,X32) | s(bool,'T_0') = s(bool,X34) | s(bool,X30) = s(bool,X34)) ) | $spl82),
  inference(superposition,[],[f179,f2901])).
fof(f6636,plain,(
  ( ! [X321,X323,X324,X322] : (s(bool,X321) != s(bool,X322) | p(s(bool,X322)) | p(s(bool,X323)) | s(bool,'T_0') = s(bool,X324) | s(bool,X321) = s(bool,X324)) ) | $spl82),
  inference(subsumption_resolution,[],[f6057,f232])).
fof(f6057,plain,(
  ( ! [X321,X323,X324,X322] : (s(bool,X321) != s(bool,X322) | p(s(bool,X322)) | s(bool,'T_0') = s(bool,X323) | p(s(bool,X323)) | s(bool,'T_0') = s(bool,X324) | s(bool,X321) = s(bool,X324)) ) | $spl82),
  inference(superposition,[],[f1232,f2901])).
fof(f6633,plain,(
  ( ! [X294,X296,X295,X297] : (s(bool,X294) != s(bool,X295) | p(s(bool,X296)) | p(s(bool,X295)) | s(bool,'T_0') = s(bool,X297) | s(bool,X294) = s(bool,X297)) ) | $spl82),
  inference(subsumption_resolution,[],[f6050,f238])).
fof(f6050,plain,(
  ( ! [X294,X296,X295,X297] : (s(bool,X294) != s(bool,X295) | p(s(bool,X296)) | ~p(s(bool,'T_0')) | p(s(bool,X295)) | s(bool,'T_0') = s(bool,X297) | s(bool,X294) = s(bool,X297)) ) | $spl82),
  inference(superposition,[],[f251,f2901])).
fof(f6620,plain,(
  ( ! [X204,X202,X200,X203,X201] : (s(bool,X200) != s(bool,X201) | p(s(bool,X201)) | ~p(s(bool,X202)) | s(bool,X202) != s(bool,X203) | s(bool,'T_0') = s(bool,X204) | s(bool,X200) = s(bool,X204)) ) | $spl82),
  inference(subsumption_resolution,[],[f6016,f202])).
fof(f6016,plain,(
  ( ! [X204,X202,X200,X203,X201] : (s(bool,X200) != s(bool,X201) | p(s(bool,X201)) | ~p(s(bool,X202)) | ~p(s(bool,'T_0')) | s(bool,X202) != s(bool,X203) | s(bool,'T_0') = s(bool,X204) | s(bool,X200) = s(bool,X204)) ) | $spl82),
  inference(superposition,[],[f185,f2901])).
fof(f6614,plain,(
  ( ! [X158,X156,X159,X157,X155] : (s(bool,X155) != s(bool,X156) | p(s(bool,X157)) | ~p(s(bool,X158)) | p(s(bool,X156)) | s(bool,'T_0') = s(bool,X159) | s(bool,X155) = s(bool,X159)) ) | $spl82),
  inference(subsumption_resolution,[],[f6007,f202])).
fof(f6007,plain,(
  ( ! [X158,X156,X159,X157,X155] : (s(bool,X155) != s(bool,X156) | p(s(bool,X157)) | ~p(s(bool,'T_0')) | ~p(s(bool,X158)) | p(s(bool,X156)) | s(bool,'T_0') = s(bool,X159) | s(bool,X155) = s(bool,X159)) ) | $spl82),
  inference(superposition,[],[f184,f2901])).
fof(f6610,plain,(
  ( ! [X123,X121,X124,X122,X120] : (s(bool,X120) != s(bool,X121) | p(s(bool,X122)) | p(s(bool,X121)) | s(bool,X122) != s(bool,X123) | s(bool,'T_0') = s(bool,X124) | s(bool,X120) = s(bool,X124)) ) | $spl82),
  inference(subsumption_resolution,[],[f6000,f238])).
fof(f6000,plain,(
  ( ! [X123,X121,X124,X122,X120] : (s(bool,X120) != s(bool,X121) | p(s(bool,X122)) | ~p(s(bool,'T_0')) | p(s(bool,X121)) | s(bool,X122) != s(bool,X123) | s(bool,'T_0') = s(bool,X124) | s(bool,X120) = s(bool,X124)) ) | $spl82),
  inference(superposition,[],[f183,f2901])).
fof(f6606,plain,(
  ( ! [X99,X97,X95,X98,X96] : (s(bool,X95) != s(bool,X96) | p(s(bool,X96)) | ~p(s(bool,X97)) | s(bool,X97) != s(bool,X98) | s(bool,'T_0') = s(bool,X99) | s(bool,X95) = s(bool,X99)) ) | $spl82),
  inference(subsumption_resolution,[],[f5995,f202])).
fof(f5995,plain,(
  ( ! [X99,X97,X95,X98,X96] : (s(bool,X95) != s(bool,X96) | p(s(bool,X96)) | ~p(s(bool,X97)) | ~p(s(bool,'T_0')) | s(bool,X97) != s(bool,X98) | s(bool,'T_0') = s(bool,X99) | s(bool,X95) = s(bool,X99)) ) | $spl82),
  inference(superposition,[],[f181,f2901])).
fof(f6603,plain,(
  ( ! [X59,X57,X58,X56,X55] : (s(bool,X55) != s(bool,X56) | p(s(bool,X57)) | p(s(bool,X56)) | s(bool,X57) != s(bool,X58) | s(bool,'T_0') = s(bool,X59) | s(bool,X55) = s(bool,X59)) ) | $spl82),
  inference(subsumption_resolution,[],[f5987,f238])).
fof(f5987,plain,(
  ( ! [X59,X57,X58,X56,X55] : (s(bool,X55) != s(bool,X56) | p(s(bool,X57)) | ~p(s(bool,'T_0')) | p(s(bool,X56)) | s(bool,X57) != s(bool,X58) | s(bool,'T_0') = s(bool,X59) | s(bool,X55) = s(bool,X59)) ) | $spl82),
  inference(superposition,[],[f179,f2901])).
fof(f6599,plain,(
  ( ! [X441,X438,X440,X442,X437,X439] : (p(s(bool,X438)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X437),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X439),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),fun(X439,'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X439),fun(X439,'type.pair.prod'('type.num.num','type.sptree.spt'(X439))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X439),fun(X439,'type.sptree.spt'(X439)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X439,fun('type.sptree.spt'(X439),'type.sptree.spt'(X439)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X439),'type.sptree.spt'(X439)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),happ(s(fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.,_0'),s('type.num.num',X440))),s('type.sptree.spt'(X439),X441))),s('type.list.list'(X439),X442)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X441,X440,X442,X439))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X440)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X437)))) ) | $spl82),
  inference(subsumption_resolution,[],[f5955,f232])).
fof(f5955,plain,(
  ( ! [X441,X438,X440,X442,X437,X439] : (p(s(bool,X438)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X437),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X439),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),fun(X439,'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X439),fun(X439,'type.pair.prod'('type.num.num','type.sptree.spt'(X439))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X439),fun(X439,'type.sptree.spt'(X439)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X439,fun('type.sptree.spt'(X439),'type.sptree.spt'(X439)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X439),'type.sptree.spt'(X439)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),happ(s(fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.,_0'),s('type.num.num',X440))),s('type.sptree.spt'(X439),X441))),s('type.list.list'(X439),X442)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X441,X440,X442,X439))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X440)))) | s(bool,'T_0') = s(bool,X438) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X437)))) ) | $spl82),
  inference(superposition,[],[f175,f2901])).
fof(f6598,plain,(
  ( ! [X428,X430,X426,X429,X425,X427] : (p(s(bool,X426)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X425),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X427),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),fun(X427,'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X427),fun(X427,'type.pair.prod'('type.num.num','type.sptree.spt'(X427))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X427),fun(X427,'type.sptree.spt'(X427)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X427,fun('type.sptree.spt'(X427),'type.sptree.spt'(X427)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X427),'type.sptree.spt'(X427)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),happ(s(fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.,_0'),s('type.num.num',X428))),s('type.sptree.spt'(X427),X429))),s('type.list.list'(X427),X430)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X429,X428,X430,X427)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X427),X429)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X428)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X425)))) ) | $spl82),
  inference(subsumption_resolution,[],[f5953,f232])).
fof(f5953,plain,(
  ( ! [X428,X430,X426,X429,X425,X427] : (p(s(bool,X426)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X425),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X427),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),fun(X427,'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X427),fun(X427,'type.pair.prod'('type.num.num','type.sptree.spt'(X427))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X427),fun(X427,'type.sptree.spt'(X427)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X427,fun('type.sptree.spt'(X427),'type.sptree.spt'(X427)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X427),'type.sptree.spt'(X427)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),happ(s(fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.,_0'),s('type.num.num',X428))),s('type.sptree.spt'(X427),X429))),s('type.list.list'(X427),X430)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X429,X428,X430,X427)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X427),X429)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X428)))) | s(bool,'T_0') = s(bool,X426) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X425)))) ) | $spl82),
  inference(superposition,[],[f174,f2901])).
fof(f6597,plain,(
  ( ! [X408,X405,X407,X409,X404,X406] : (p(s(bool,X408)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X409)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X409),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X407),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),fun(X407,'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X407),fun(X407,'type.pair.prod'('type.num.num','type.sptree.spt'(X407))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X407),fun(X407,'type.sptree.spt'(X407)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X407,fun('type.sptree.spt'(X407),'type.sptree.spt'(X407)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X407),'type.sptree.spt'(X407)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),happ(s(fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.,_0'),s('type.num.num',X405))),s('type.sptree.spt'(X407),X404))),s('type.list.list'(X407),X406)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X405)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X404,X405,X406,X407)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X407),X404)))))) ) | $spl82),
  inference(subsumption_resolution,[],[f5948,f232])).
fof(f5948,plain,(
  ( ! [X408,X405,X407,X409,X404,X406] : (p(s(bool,X408)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X409)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X409),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X407),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),fun(X407,'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X407),fun(X407,'type.pair.prod'('type.num.num','type.sptree.spt'(X407))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X407),fun(X407,'type.sptree.spt'(X407)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X407,fun('type.sptree.spt'(X407),'type.sptree.spt'(X407)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X407),'type.sptree.spt'(X407)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),happ(s(fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.,_0'),s('type.num.num',X405))),s('type.sptree.spt'(X407),X404))),s('type.list.list'(X407),X406)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X405)))) | s(bool,'T_0') = s(bool,X408) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X404,X405,X406,X407)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X407),X404)))))) ) | $spl82),
  inference(superposition,[],[f174,f2901])).
fof(f6534,plain,(
  ( ! [X280,X279,X278] : (s(bool,X278) != s(bool,X279) | s(bool,'T_0') = s(bool,X278) | p(s(bool,X280)) | s(bool,X279) = s(bool,X280)) ) | $spl102),
  inference(cnf_transformation,[],[f6534_D])).
fof(f6534_D,plain,(
  ( ! [X280,X279,X278] : (s(bool,X278) != s(bool,X279) | s(bool,'T_0') = s(bool,X278) | p(s(bool,X280)) | s(bool,X279) = s(bool,X280)) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f6590,plain,(
  ( ! [X280,X277,X279,X278] : (s(bool,X278) != s(bool,X279) | p(s(bool,X277)) | s(bool,X279) = s(bool,X280) | p(s(bool,X280)) | s(bool,'T_0') = s(bool,X278)) ) | $spl82),
  inference(subsumption_resolution,[],[f5897,f232])).
fof(f5897,plain,(
  ( ! [X280,X277,X279,X278] : (s(bool,X278) != s(bool,X279) | p(s(bool,X277)) | s(bool,X279) = s(bool,X280) | p(s(bool,X280)) | s(bool,'T_0') = s(bool,X278) | s(bool,'T_0') = s(bool,X277)) ) | $spl82),
  inference(superposition,[],[f1232,f2901])).
fof(f6545,plain,(
  ( ! [X441,X438,X440,X442,X437,X439] : (p(s(bool,X438)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X437),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X439),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),fun(X439,'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X439),fun(X439,'type.pair.prod'('type.num.num','type.sptree.spt'(X439))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X439),fun(X439,'type.sptree.spt'(X439)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X439,fun('type.sptree.spt'(X439),'type.sptree.spt'(X439)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X439),'type.sptree.spt'(X439)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),happ(s(fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.,_0'),s('type.num.num',X440))),s('type.sptree.spt'(X439),X441))),s('type.list.list'(X439),X442)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X441,X440,X442,X439))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X440)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X437)))) ) | $spl82),
  inference(subsumption_resolution,[],[f5804,f232])).
fof(f5804,plain,(
  ( ! [X441,X438,X440,X442,X437,X439] : (p(s(bool,X438)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X437),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X439),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),fun(X439,'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X439),fun(X439,'type.pair.prod'('type.num.num','type.sptree.spt'(X439))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X439),fun(X439,'type.sptree.spt'(X439)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X439,fun('type.sptree.spt'(X439),'type.sptree.spt'(X439)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X439),'type.sptree.spt'(X439)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X439)),happ(s(fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X439),'type.pair.prod'('type.num.num','type.sptree.spt'(X439)))),'const.pair.,_0'),s('type.num.num',X440))),s('type.sptree.spt'(X439),X441))),s('type.list.list'(X439),X442)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X441,X440,X442,X439))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X440)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X437))) | s(bool,'T_0') = s(bool,X438)) ) | $spl82),
  inference(superposition,[],[f175,f2901])).
fof(f6543,plain,(
  ( ! [X428,X430,X426,X429,X425,X427] : (p(s(bool,X426)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X425),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X427),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),fun(X427,'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X427),fun(X427,'type.pair.prod'('type.num.num','type.sptree.spt'(X427))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X427),fun(X427,'type.sptree.spt'(X427)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X427,fun('type.sptree.spt'(X427),'type.sptree.spt'(X427)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X427),'type.sptree.spt'(X427)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),happ(s(fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.,_0'),s('type.num.num',X428))),s('type.sptree.spt'(X427),X429))),s('type.list.list'(X427),X430)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X429,X428,X430,X427)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X427),X429)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X428)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X425)))) ) | $spl82),
  inference(subsumption_resolution,[],[f5802,f232])).
fof(f5802,plain,(
  ( ! [X428,X430,X426,X429,X425,X427] : (p(s(bool,X426)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X425),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X427),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),fun(X427,'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X427),fun(X427,'type.pair.prod'('type.num.num','type.sptree.spt'(X427))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X427),fun(X427,'type.sptree.spt'(X427)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X427,fun('type.sptree.spt'(X427),'type.sptree.spt'(X427)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X427),'type.sptree.spt'(X427)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X427)),happ(s(fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X427),'type.pair.prod'('type.num.num','type.sptree.spt'(X427)))),'const.pair.,_0'),s('type.num.num',X428))),s('type.sptree.spt'(X427),X429))),s('type.list.list'(X427),X430)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X429,X428,X430,X427)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X427),X429)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X428)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X425))) | s(bool,'T_0') = s(bool,X426)) ) | $spl82),
  inference(superposition,[],[f174,f2901])).
fof(f6541,plain,(
  ( ! [X408,X405,X407,X409,X404,X406] : (p(s(bool,X408)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X409)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X409),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X407),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),fun(X407,'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X407),fun(X407,'type.pair.prod'('type.num.num','type.sptree.spt'(X407))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X407),fun(X407,'type.sptree.spt'(X407)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X407,fun('type.sptree.spt'(X407),'type.sptree.spt'(X407)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X407),'type.sptree.spt'(X407)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),happ(s(fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.,_0'),s('type.num.num',X405))),s('type.sptree.spt'(X407),X404))),s('type.list.list'(X407),X406)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X405)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X404,X405,X406,X407)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X407),X404)))))) ) | $spl82),
  inference(subsumption_resolution,[],[f5797,f232])).
fof(f5797,plain,(
  ( ! [X408,X405,X407,X409,X404,X406] : (p(s(bool,X408)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X409)))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',X409),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X407),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),fun(X407,'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X407),fun(X407,'type.pair.prod'('type.num.num','type.sptree.spt'(X407))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X407),fun(X407,'type.sptree.spt'(X407)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X407,fun('type.sptree.spt'(X407),'type.sptree.spt'(X407)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X407),'type.sptree.spt'(X407)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X407)),happ(s(fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X407),'type.pair.prod'('type.num.num','type.sptree.spt'(X407)))),'const.pair.,_0'),s('type.num.num',X405))),s('type.sptree.spt'(X407),X404))),s('type.list.list'(X407),X406)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X405)))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X404,X405,X406,X407)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X407),X404))))) | s(bool,'T_0') = s(bool,X408)) ) | $spl82),
  inference(superposition,[],[f174,f2901])).
fof(f6533,plain,(
  ( ! [X280,X277,X279,X278] : (s(bool,X278) != s(bool,X279) | p(s(bool,X277)) | s(bool,X279) = s(bool,X280) | p(s(bool,X280)) | s(bool,'T_0') = s(bool,X278)) ) | $spl82),
  inference(subsumption_resolution,[],[f5746,f232])).
fof(f5746,plain,(
  ( ! [X280,X277,X279,X278] : (s(bool,X278) != s(bool,X279) | p(s(bool,X277)) | s(bool,X279) = s(bool,X280) | p(s(bool,X280)) | s(bool,'T_0') = s(bool,X277) | s(bool,'T_0') = s(bool,X278)) ) | $spl82),
  inference(superposition,[],[f1232,f2901])).
fof(f6456,plain,(
  ( ! [X269,X267,X268,X270] : (p(s(bool,X268)) | p(s(bool,X269)) | s(bool,X267) != s(bool,X269) | s(bool,X267) = s(bool,X270) | s(bool,'T_0') = s(bool,X270)) ) | $spl82),
  inference(subsumption_resolution,[],[f5595,f238])).
fof(f5595,plain,(
  ( ! [X269,X267,X268,X270] : (~p(s(bool,'T_0')) | p(s(bool,X268)) | p(s(bool,X269)) | s(bool,X267) != s(bool,X269) | s(bool,X267) = s(bool,X270) | s(bool,'T_0') = s(bool,X270)) ) | $spl82),
  inference(superposition,[],[f251,f2901])).
fof(f6449,plain,(
  ( ! [X167,X165,X169,X166,X168] : (p(s(bool,X166)) | ~p(s(bool,X167)) | s(bool,X165) != s(bool,X166) | s(bool,X167) != s(bool,X168) | s(bool,X165) = s(bool,X169) | s(bool,'T_0') = s(bool,X169)) ) | $spl82),
  inference(subsumption_resolution,[],[f5555,f202])).
fof(f5555,plain,(
  ( ! [X167,X165,X169,X166,X168] : (~p(s(bool,'T_0')) | p(s(bool,X166)) | ~p(s(bool,X167)) | s(bool,X165) != s(bool,X166) | s(bool,X167) != s(bool,X168) | s(bool,X165) = s(bool,X169) | s(bool,'T_0') = s(bool,X169)) ) | $spl82),
  inference(superposition,[],[f185,f2901])).
fof(f6443,plain,(
  ( ! [X127,X125,X128,X126,X129] : (p(s(bool,X126)) | ~p(s(bool,X127)) | p(s(bool,X128)) | s(bool,X125) != s(bool,X128) | s(bool,X125) = s(bool,X129) | s(bool,'T_0') = s(bool,X129)) ) | $spl82),
  inference(subsumption_resolution,[],[f5547,f202])).
fof(f5547,plain,(
  ( ! [X127,X125,X128,X126,X129] : (~p(s(bool,'T_0')) | p(s(bool,X126)) | ~p(s(bool,X127)) | p(s(bool,X128)) | s(bool,X125) != s(bool,X128) | s(bool,X125) = s(bool,X129) | s(bool,'T_0') = s(bool,X129)) ) | $spl82),
  inference(superposition,[],[f184,f2901])).
fof(f6439,plain,(
  ( ! [X103,X101,X102,X100,X104] : (p(s(bool,X101)) | p(s(bool,X102)) | s(bool,X101) != s(bool,X103) | s(bool,X100) != s(bool,X102) | s(bool,X100) = s(bool,X104) | s(bool,'T_0') = s(bool,X104)) ) | $spl82),
  inference(subsumption_resolution,[],[f5542,f238])).
fof(f5542,plain,(
  ( ! [X103,X101,X102,X100,X104] : (~p(s(bool,'T_0')) | p(s(bool,X101)) | p(s(bool,X102)) | s(bool,X101) != s(bool,X103) | s(bool,X100) != s(bool,X102) | s(bool,X100) = s(bool,X104) | s(bool,'T_0') = s(bool,X104)) ) | $spl82),
  inference(superposition,[],[f183,f2901])).
fof(f6435,plain,(
  ( ! [X68,X66,X69,X67,X65] : (p(s(bool,X66)) | ~p(s(bool,X67)) | s(bool,X65) != s(bool,X66) | s(bool,X67) != s(bool,X68) | s(bool,X65) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) ) | $spl82),
  inference(subsumption_resolution,[],[f5535,f202])).
fof(f5535,plain,(
  ( ! [X68,X66,X69,X67,X65] : (~p(s(bool,'T_0')) | p(s(bool,X66)) | ~p(s(bool,X67)) | s(bool,X65) != s(bool,X66) | s(bool,X67) != s(bool,X68) | s(bool,X65) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) ) | $spl82),
  inference(superposition,[],[f181,f2901])).
fof(f6429,plain,(
  ( ! [X30,X33,X31,X34,X32] : (p(s(bool,X31)) | p(s(bool,X32)) | s(bool,X31) != s(bool,X33) | s(bool,X30) != s(bool,X32) | s(bool,X30) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) ) | $spl82),
  inference(subsumption_resolution,[],[f5528,f238])).
fof(f5528,plain,(
  ( ! [X30,X33,X31,X34,X32] : (~p(s(bool,'T_0')) | p(s(bool,X31)) | p(s(bool,X32)) | s(bool,X31) != s(bool,X33) | s(bool,X30) != s(bool,X32) | s(bool,X30) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) ) | $spl82),
  inference(superposition,[],[f179,f2901])).
fof(f6423,plain,(
  ( ! [X321,X323,X324,X322] : (s(bool,X321) != s(bool,X322) | p(s(bool,X322)) | p(s(bool,X323)) | s(bool,X321) = s(bool,X324) | s(bool,'T_0') = s(bool,X324)) ) | $spl82),
  inference(subsumption_resolution,[],[f5513,f232])).
fof(f5513,plain,(
  ( ! [X321,X323,X324,X322] : (s(bool,X321) != s(bool,X322) | p(s(bool,X322)) | s(bool,'T_0') = s(bool,X323) | p(s(bool,X323)) | s(bool,X321) = s(bool,X324) | s(bool,'T_0') = s(bool,X324)) ) | $spl82),
  inference(superposition,[],[f1232,f2901])).
fof(f6420,plain,(
  ( ! [X294,X296,X295,X297] : (s(bool,X294) != s(bool,X295) | p(s(bool,X296)) | p(s(bool,X295)) | s(bool,X294) = s(bool,X297) | s(bool,'T_0') = s(bool,X297)) ) | $spl82),
  inference(subsumption_resolution,[],[f5506,f238])).
fof(f5506,plain,(
  ( ! [X294,X296,X295,X297] : (s(bool,X294) != s(bool,X295) | p(s(bool,X296)) | ~p(s(bool,'T_0')) | p(s(bool,X295)) | s(bool,X294) = s(bool,X297) | s(bool,'T_0') = s(bool,X297)) ) | $spl82),
  inference(superposition,[],[f251,f2901])).
fof(f6407,plain,(
  ( ! [X204,X202,X200,X203,X201] : (s(bool,X200) != s(bool,X201) | p(s(bool,X201)) | ~p(s(bool,X202)) | s(bool,X202) != s(bool,X203) | s(bool,X200) = s(bool,X204) | s(bool,'T_0') = s(bool,X204)) ) | $spl82),
  inference(subsumption_resolution,[],[f5472,f202])).
fof(f5472,plain,(
  ( ! [X204,X202,X200,X203,X201] : (s(bool,X200) != s(bool,X201) | p(s(bool,X201)) | ~p(s(bool,X202)) | ~p(s(bool,'T_0')) | s(bool,X202) != s(bool,X203) | s(bool,X200) = s(bool,X204) | s(bool,'T_0') = s(bool,X204)) ) | $spl82),
  inference(superposition,[],[f185,f2901])).
fof(f6401,plain,(
  ( ! [X158,X156,X159,X157,X155] : (s(bool,X155) != s(bool,X156) | p(s(bool,X157)) | ~p(s(bool,X158)) | p(s(bool,X156)) | s(bool,X155) = s(bool,X159) | s(bool,'T_0') = s(bool,X159)) ) | $spl82),
  inference(subsumption_resolution,[],[f5463,f202])).
fof(f5463,plain,(
  ( ! [X158,X156,X159,X157,X155] : (s(bool,X155) != s(bool,X156) | p(s(bool,X157)) | ~p(s(bool,'T_0')) | ~p(s(bool,X158)) | p(s(bool,X156)) | s(bool,X155) = s(bool,X159) | s(bool,'T_0') = s(bool,X159)) ) | $spl82),
  inference(superposition,[],[f184,f2901])).
fof(f6397,plain,(
  ( ! [X123,X121,X124,X122,X120] : (s(bool,X120) != s(bool,X121) | p(s(bool,X122)) | p(s(bool,X121)) | s(bool,X122) != s(bool,X123) | s(bool,X120) = s(bool,X124) | s(bool,'T_0') = s(bool,X124)) ) | $spl82),
  inference(subsumption_resolution,[],[f5456,f238])).
fof(f5456,plain,(
  ( ! [X123,X121,X124,X122,X120] : (s(bool,X120) != s(bool,X121) | p(s(bool,X122)) | ~p(s(bool,'T_0')) | p(s(bool,X121)) | s(bool,X122) != s(bool,X123) | s(bool,X120) = s(bool,X124) | s(bool,'T_0') = s(bool,X124)) ) | $spl82),
  inference(superposition,[],[f183,f2901])).
fof(f6393,plain,(
  ( ! [X99,X97,X95,X98,X96] : (s(bool,X95) != s(bool,X96) | p(s(bool,X96)) | ~p(s(bool,X97)) | s(bool,X97) != s(bool,X98) | s(bool,X95) = s(bool,X99) | s(bool,'T_0') = s(bool,X99)) ) | $spl82),
  inference(subsumption_resolution,[],[f5451,f202])).
fof(f5451,plain,(
  ( ! [X99,X97,X95,X98,X96] : (s(bool,X95) != s(bool,X96) | p(s(bool,X96)) | ~p(s(bool,X97)) | ~p(s(bool,'T_0')) | s(bool,X97) != s(bool,X98) | s(bool,X95) = s(bool,X99) | s(bool,'T_0') = s(bool,X99)) ) | $spl82),
  inference(superposition,[],[f181,f2901])).
fof(f6390,plain,(
  ( ! [X59,X57,X58,X56,X55] : (s(bool,X55) != s(bool,X56) | p(s(bool,X57)) | p(s(bool,X56)) | s(bool,X57) != s(bool,X58) | s(bool,X55) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) ) | $spl82),
  inference(subsumption_resolution,[],[f5443,f238])).
fof(f5443,plain,(
  ( ! [X59,X57,X58,X56,X55] : (s(bool,X55) != s(bool,X56) | p(s(bool,X57)) | ~p(s(bool,'T_0')) | p(s(bool,X56)) | s(bool,X57) != s(bool,X58) | s(bool,X55) = s(bool,X59) | s(bool,'T_0') = s(bool,X59)) ) | $spl82),
  inference(superposition,[],[f179,f2901])).
fof(f4871,plain,(
  ( ! [X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) != s(bool,X3) | ~p(s(bool,X3)) | s(bool,X0) != s(bool,X1)) ) | $spl100),
  inference(cnf_transformation,[],[f4871_D])).
fof(f4871_D,plain,(
  ( ! [X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) != s(bool,X3) | ~p(s(bool,X3)) | s(bool,X0) != s(bool,X1)) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f4825,plain,(
  ( ! [X70,X68,X71,X69] : (s(bool,'T_0') = s(bool,X68) | s(bool,X68) != s(bool,X69) | p(s(bool,X70)) | ~p(s(bool,X71)) | s(bool,X69) != s(bool,X71)) ) | $spl86),
  inference(resolution,[],[f3224,f251])).
fof(f4811,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,'T_0') = s(bool,X35) | s(bool,X35) != s(bool,X36) | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X38) | s(bool,X37) != s(bool,X39)) ) | $spl86),
  inference(resolution,[],[f3224,f185])).
fof(f4809,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'T_0') = s(bool,X25) | s(bool,X25) != s(bool,X26) | p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X26) != s(bool,X28)) ) | $spl86),
  inference(resolution,[],[f3224,f184])).
fof(f4807,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,'T_0') = s(bool,X15) | s(bool,X15) != s(bool,X16) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl86),
  inference(resolution,[],[f3224,f183])).
fof(f4806,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,'T_0') = s(bool,X10) | s(bool,X10) != s(bool,X11) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,X14)) ) | $spl86),
  inference(resolution,[],[f3224,f181])).
fof(f4804,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) != s(bool,X1) | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) ) | $spl86),
  inference(resolution,[],[f3224,f179])).
fof(f4775,plain,(
  ( ! [X4,X2,X0,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X1) != s(bool,X4) | ~p(s(bool,X4)) | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) | $spl98),
  inference(cnf_transformation,[],[f4775_D])).
fof(f4775_D,plain,(
  ( ! [X4,X2,X0,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X1) != s(bool,X4) | ~p(s(bool,X4)) | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f4729,plain,(
  ( ! [X92,X90,X93,X91,X89] : (s(bool,X89) != s(bool,X90) | p(s(bool,X91)) | s(bool,X89) != s(bool,X91) | p(s(bool,X92)) | ~p(s(bool,X93)) | s(bool,X90) != s(bool,X93)) ) | $spl44),
  inference(resolution,[],[f1285,f251])).
fof(f4715,plain,(
  ( ! [X47,X45,X43,X46,X44,X42] : (s(bool,X42) != s(bool,X43) | p(s(bool,X44)) | s(bool,X42) != s(bool,X44) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X43) != s(bool,X46) | s(bool,X45) != s(bool,X47)) ) | $spl44),
  inference(resolution,[],[f1285,f185])).
fof(f4713,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (s(bool,X30) != s(bool,X31) | p(s(bool,X32)) | s(bool,X30) != s(bool,X32) | p(s(bool,X33)) | ~p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X31) != s(bool,X34)) ) | $spl44),
  inference(resolution,[],[f1285,f184])).
fof(f4711,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (s(bool,X18) != s(bool,X19) | p(s(bool,X20)) | s(bool,X18) != s(bool,X20) | p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X19) != s(bool,X22)) ) | $spl44),
  inference(resolution,[],[f1285,f183])).
fof(f4710,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (s(bool,X12) != s(bool,X13) | p(s(bool,X14)) | s(bool,X12) != s(bool,X14) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X13) != s(bool,X16) | s(bool,X15) != s(bool,X17)) ) | $spl44),
  inference(resolution,[],[f1285,f181])).
fof(f4708,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,X0) != s(bool,X1) | p(s(bool,X2)) | s(bool,X0) != s(bool,X2) | p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X1) != s(bool,X4)) ) | $spl44),
  inference(resolution,[],[f1285,f179])).
fof(f3224,plain,(
  ( ! [X18,X16] : (~p(s(bool,X18)) | s(bool,'T_0') = s(bool,X16) | s(bool,X16) != s(bool,X18)) ) | $spl86),
  inference(cnf_transformation,[],[f3224_D])).
fof(f3224_D,plain,(
  ( ! [X18,X16] : (~p(s(bool,X18)) | s(bool,'T_0') = s(bool,X16) | s(bool,X16) != s(bool,X18)) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f4697,plain,(
  ( ! [X215,X213,X214] : (s(bool,X213) != s(bool,X214) | p(s(bool,X215)) | ~p(s(bool,X214)) | s(bool,'T_0') = s(bool,X213)) ) | $spl82),
  inference(subsumption_resolution,[],[f4696,f218])).
fof(f4696,plain,(
  ( ! [X215,X213,X214] : (p(s(bool,'F_0')) | s(bool,X213) != s(bool,X214) | p(s(bool,X215)) | ~p(s(bool,X214)) | s(bool,'T_0') = s(bool,X213)) ) | $spl82),
  inference(forward_demodulation,[],[f4500,f271])).
fof(f4500,plain,(
  ( ! [X215,X213,X214] : (s(bool,X213) != s(bool,X214) | p(s(bool,X215)) | ~p(s(bool,X214)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | s(bool,'T_0') = s(bool,X213)) ) | $spl82),
  inference(superposition,[],[f251,f2959])).
fof(f4663,plain,(
  ( ! [X146,X144,X147,X145] : (s(bool,X144) != s(bool,X145) | ~p(s(bool,X146)) | ~p(s(bool,X145)) | s(bool,X146) != s(bool,X147) | s(bool,'T_0') = s(bool,X144)) ) | $spl82),
  inference(subsumption_resolution,[],[f4662,f199])).
fof(f4662,plain,(
  ( ! [X146,X144,X147,X145] : (p(s(bool,'F_0')) | s(bool,X144) != s(bool,X145) | ~p(s(bool,X146)) | ~p(s(bool,X145)) | s(bool,X146) != s(bool,X147) | s(bool,'T_0') = s(bool,X144)) ) | $spl82),
  inference(forward_demodulation,[],[f4456,f271])).
fof(f4456,plain,(
  ( ! [X146,X144,X147,X145] : (s(bool,X144) != s(bool,X145) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | ~p(s(bool,X146)) | ~p(s(bool,X145)) | s(bool,X146) != s(bool,X147) | s(bool,'T_0') = s(bool,X144)) ) | $spl82),
  inference(superposition,[],[f185,f2959])).
fof(f4659,plain,(
  ( ! [X118,X116,X119,X117] : (s(bool,X116) != s(bool,X117) | p(s(bool,X118)) | ~p(s(bool,X117)) | ~p(s(bool,X119)) | s(bool,'T_0') = s(bool,X116)) ) | $spl82),
  inference(subsumption_resolution,[],[f4658,f218])).
fof(f4658,plain,(
  ( ! [X118,X116,X119,X117] : (p(s(bool,'F_0')) | s(bool,X116) != s(bool,X117) | p(s(bool,X118)) | ~p(s(bool,X117)) | ~p(s(bool,X119)) | s(bool,'T_0') = s(bool,X116)) ) | $spl82),
  inference(forward_demodulation,[],[f4449,f271])).
fof(f4449,plain,(
  ( ! [X118,X116,X119,X117] : (s(bool,X116) != s(bool,X117) | p(s(bool,X118)) | ~p(s(bool,X117)) | ~p(s(bool,X119)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | s(bool,'T_0') = s(bool,X116)) ) | $spl82),
  inference(superposition,[],[f184,f2959])).
fof(f4652,plain,(
  ( ! [X90,X88,X91,X89] : (s(bool,X88) != s(bool,X89) | p(s(bool,X90)) | ~p(s(bool,X89)) | s(bool,X90) != s(bool,X91) | s(bool,'T_0') = s(bool,X88)) ) | $spl82),
  inference(subsumption_resolution,[],[f4651,f218])).
fof(f4651,plain,(
  ( ! [X90,X88,X91,X89] : (p(s(bool,'F_0')) | s(bool,X88) != s(bool,X89) | p(s(bool,X90)) | ~p(s(bool,X89)) | s(bool,X90) != s(bool,X91) | s(bool,'T_0') = s(bool,X88)) ) | $spl82),
  inference(forward_demodulation,[],[f4442,f271])).
fof(f4442,plain,(
  ( ! [X90,X88,X91,X89] : (s(bool,X88) != s(bool,X89) | p(s(bool,X90)) | ~p(s(bool,X89)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | s(bool,X90) != s(bool,X91) | s(bool,'T_0') = s(bool,X88)) ) | $spl82),
  inference(superposition,[],[f183,f2959])).
fof(f4644,plain,(
  ( ! [X70,X68,X71,X69] : (s(bool,X68) != s(bool,X69) | ~p(s(bool,X70)) | ~p(s(bool,X69)) | s(bool,X70) != s(bool,X71) | s(bool,'T_0') = s(bool,X68)) ) | $spl82),
  inference(subsumption_resolution,[],[f4643,f199])).
fof(f4643,plain,(
  ( ! [X70,X68,X71,X69] : (p(s(bool,'F_0')) | s(bool,X68) != s(bool,X69) | ~p(s(bool,X70)) | ~p(s(bool,X69)) | s(bool,X70) != s(bool,X71) | s(bool,'T_0') = s(bool,X68)) ) | $spl82),
  inference(forward_demodulation,[],[f4437,f271])).
fof(f4437,plain,(
  ( ! [X70,X68,X71,X69] : (s(bool,X68) != s(bool,X69) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | ~p(s(bool,X70)) | ~p(s(bool,X69)) | s(bool,X70) != s(bool,X71) | s(bool,'T_0') = s(bool,X68)) ) | $spl82),
  inference(superposition,[],[f181,f2959])).
fof(f4633,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,X28) != s(bool,X29) | p(s(bool,X30)) | ~p(s(bool,X29)) | s(bool,X30) != s(bool,X31) | s(bool,'T_0') = s(bool,X28)) ) | $spl82),
  inference(subsumption_resolution,[],[f4632,f218])).
fof(f4632,plain,(
  ( ! [X30,X28,X31,X29] : (p(s(bool,'F_0')) | s(bool,X28) != s(bool,X29) | p(s(bool,X30)) | ~p(s(bool,X29)) | s(bool,X30) != s(bool,X31) | s(bool,'T_0') = s(bool,X28)) ) | $spl82),
  inference(forward_demodulation,[],[f4427,f271])).
fof(f4427,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,X28) != s(bool,X29) | p(s(bool,X30)) | ~p(s(bool,X29)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | s(bool,X30) != s(bool,X31) | s(bool,'T_0') = s(bool,X28)) ) | $spl82),
  inference(superposition,[],[f179,f2959])).
fof(f4600,plain,(
  ( ! [X189,X190,X188] : (p(s(bool,X189)) | ~p(s(bool,X190)) | s(bool,X188) != s(bool,X190) | s(bool,'T_0') = s(bool,X188)) ) | $spl82),
  inference(subsumption_resolution,[],[f4599,f218])).
fof(f4599,plain,(
  ( ! [X189,X190,X188] : (p(s(bool,'F_0')) | p(s(bool,X189)) | ~p(s(bool,X190)) | s(bool,X188) != s(bool,X190) | s(bool,'T_0') = s(bool,X188)) ) | $spl82),
  inference(forward_demodulation,[],[f4389,f271])).
fof(f4389,plain,(
  ( ! [X189,X190,X188] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | p(s(bool,X189)) | ~p(s(bool,X190)) | s(bool,X188) != s(bool,X190) | s(bool,'T_0') = s(bool,X188)) ) | $spl82),
  inference(superposition,[],[f251,f2959])).
fof(f4580,plain,(
  ( ! [X127,X125,X126,X124] : (~p(s(bool,X125)) | ~p(s(bool,X126)) | s(bool,X124) != s(bool,X126) | s(bool,X125) != s(bool,X127) | s(bool,'T_0') = s(bool,X124)) ) | $spl82),
  inference(subsumption_resolution,[],[f4579,f199])).
fof(f4579,plain,(
  ( ! [X127,X125,X126,X124] : (p(s(bool,'F_0')) | ~p(s(bool,X125)) | ~p(s(bool,X126)) | s(bool,X124) != s(bool,X126) | s(bool,X125) != s(bool,X127) | s(bool,'T_0') = s(bool,X124)) ) | $spl82),
  inference(forward_demodulation,[],[f4346,f271])).
fof(f4346,plain,(
  ( ! [X127,X125,X126,X124] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | ~p(s(bool,X125)) | ~p(s(bool,X126)) | s(bool,X124) != s(bool,X126) | s(bool,X125) != s(bool,X127) | s(bool,'T_0') = s(bool,X124)) ) | $spl82),
  inference(superposition,[],[f185,f2959])).
fof(f4572,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,X93)) | ~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X92) != s(bool,X94) | s(bool,'T_0') = s(bool,X92)) ) | $spl82),
  inference(subsumption_resolution,[],[f4571,f218])).
fof(f4571,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,'F_0')) | p(s(bool,X93)) | ~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X92) != s(bool,X94) | s(bool,'T_0') = s(bool,X92)) ) | $spl82),
  inference(forward_demodulation,[],[f4338,f271])).
fof(f4338,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | p(s(bool,X93)) | ~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X92) != s(bool,X94) | s(bool,'T_0') = s(bool,X92)) ) | $spl82),
  inference(superposition,[],[f184,f2959])).
fof(f4564,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,X73)) | ~p(s(bool,X74)) | s(bool,X73) != s(bool,X75) | s(bool,X72) != s(bool,X74) | s(bool,'T_0') = s(bool,X72)) ) | $spl82),
  inference(subsumption_resolution,[],[f4563,f218])).
fof(f4563,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,'F_0')) | p(s(bool,X73)) | ~p(s(bool,X74)) | s(bool,X73) != s(bool,X75) | s(bool,X72) != s(bool,X74) | s(bool,'T_0') = s(bool,X72)) ) | $spl82),
  inference(forward_demodulation,[],[f4333,f271])).
fof(f4333,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | p(s(bool,X73)) | ~p(s(bool,X74)) | s(bool,X73) != s(bool,X75) | s(bool,X72) != s(bool,X74) | s(bool,'T_0') = s(bool,X72)) ) | $spl82),
  inference(superposition,[],[f183,f2959])).
fof(f4557,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X44) != s(bool,X46) | s(bool,X45) != s(bool,X47) | s(bool,'T_0') = s(bool,X44)) ) | $spl82),
  inference(subsumption_resolution,[],[f4556,f199])).
fof(f4556,plain,(
  ( ! [X47,X45,X46,X44] : (p(s(bool,'F_0')) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X44) != s(bool,X46) | s(bool,X45) != s(bool,X47) | s(bool,'T_0') = s(bool,X44)) ) | $spl82),
  inference(forward_demodulation,[],[f4326,f271])).
fof(f4326,plain,(
  ( ! [X47,X45,X46,X44] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X44) != s(bool,X46) | s(bool,X45) != s(bool,X47) | s(bool,'T_0') = s(bool,X44)) ) | $spl82),
  inference(superposition,[],[f181,f2959])).
fof(f4547,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18) | s(bool,'T_0') = s(bool,X16)) ) | $spl82),
  inference(subsumption_resolution,[],[f4546,f218])).
fof(f4546,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,'F_0')) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18) | s(bool,'T_0') = s(bool,X16)) ) | $spl82),
  inference(forward_demodulation,[],[f4319,f271])).
fof(f4319,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18) | s(bool,'T_0') = s(bool,X16)) ) | $spl82),
  inference(superposition,[],[f179,f2959])).
fof(f4273,plain,(
  ( ! [X215,X213,X214] : (s(bool,X213) != s(bool,X214) | p(s(bool,X215)) | ~p(s(bool,X214)) | s(bool,'T_0') = s(bool,X213)) ) | ($spl17 | $spl30 | $spl82)),
  inference(subsumption_resolution,[],[f4272,f218])).
fof(f4272,plain,(
  ( ! [X215,X213,X214] : (p(s(bool,'F_0')) | s(bool,X213) != s(bool,X214) | p(s(bool,X215)) | ~p(s(bool,X214)) | s(bool,'T_0') = s(bool,X213)) ) | ($spl17 | $spl30 | $spl82)),
  inference(forward_demodulation,[],[f4082,f656])).
fof(f4082,plain,(
  ( ! [X215,X213,X214] : (s(bool,X213) != s(bool,X214) | p(s(bool,X215)) | ~p(s(bool,X214)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'T_0') = s(bool,X213)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f251,f2957])).
fof(f2957,plain,(
  ( ! [X37] : (s(bool,X37) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X37)) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f2937,f237])).
fof(f2937,plain,(
  ( ! [X37] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,X37) | s(bool,X37) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f2823,f530])).
fof(f530,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl17),
  inference(resolution,[],[f305,f229])).
fof(f4239,plain,(
  ( ! [X146,X144,X147,X145] : (s(bool,X144) != s(bool,X145) | ~p(s(bool,X146)) | ~p(s(bool,X145)) | s(bool,X146) != s(bool,X147) | s(bool,'T_0') = s(bool,X144)) ) | ($spl17 | $spl30 | $spl82)),
  inference(subsumption_resolution,[],[f4238,f199])).
fof(f4238,plain,(
  ( ! [X146,X144,X147,X145] : (p(s(bool,'F_0')) | s(bool,X144) != s(bool,X145) | ~p(s(bool,X146)) | ~p(s(bool,X145)) | s(bool,X146) != s(bool,X147) | s(bool,'T_0') = s(bool,X144)) ) | ($spl17 | $spl30 | $spl82)),
  inference(forward_demodulation,[],[f4038,f656])).
fof(f4038,plain,(
  ( ! [X146,X144,X147,X145] : (s(bool,X144) != s(bool,X145) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X146)) | ~p(s(bool,X145)) | s(bool,X146) != s(bool,X147) | s(bool,'T_0') = s(bool,X144)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f185,f2957])).
fof(f4235,plain,(
  ( ! [X118,X116,X119,X117] : (s(bool,X116) != s(bool,X117) | p(s(bool,X118)) | ~p(s(bool,X117)) | ~p(s(bool,X119)) | s(bool,'T_0') = s(bool,X116)) ) | ($spl17 | $spl30 | $spl82)),
  inference(subsumption_resolution,[],[f4234,f218])).
fof(f4234,plain,(
  ( ! [X118,X116,X119,X117] : (p(s(bool,'F_0')) | s(bool,X116) != s(bool,X117) | p(s(bool,X118)) | ~p(s(bool,X117)) | ~p(s(bool,X119)) | s(bool,'T_0') = s(bool,X116)) ) | ($spl17 | $spl30 | $spl82)),
  inference(forward_demodulation,[],[f4031,f656])).
fof(f4031,plain,(
  ( ! [X118,X116,X119,X117] : (s(bool,X116) != s(bool,X117) | p(s(bool,X118)) | ~p(s(bool,X117)) | ~p(s(bool,X119)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'T_0') = s(bool,X116)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f184,f2957])).
fof(f4228,plain,(
  ( ! [X90,X88,X91,X89] : (s(bool,X88) != s(bool,X89) | p(s(bool,X90)) | ~p(s(bool,X89)) | s(bool,X90) != s(bool,X91) | s(bool,'T_0') = s(bool,X88)) ) | ($spl17 | $spl30 | $spl82)),
  inference(subsumption_resolution,[],[f4227,f218])).
fof(f4227,plain,(
  ( ! [X90,X88,X91,X89] : (p(s(bool,'F_0')) | s(bool,X88) != s(bool,X89) | p(s(bool,X90)) | ~p(s(bool,X89)) | s(bool,X90) != s(bool,X91) | s(bool,'T_0') = s(bool,X88)) ) | ($spl17 | $spl30 | $spl82)),
  inference(forward_demodulation,[],[f4024,f656])).
fof(f4024,plain,(
  ( ! [X90,X88,X91,X89] : (s(bool,X88) != s(bool,X89) | p(s(bool,X90)) | ~p(s(bool,X89)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,X90) != s(bool,X91) | s(bool,'T_0') = s(bool,X88)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f183,f2957])).
fof(f4220,plain,(
  ( ! [X70,X68,X71,X69] : (s(bool,X68) != s(bool,X69) | ~p(s(bool,X70)) | ~p(s(bool,X69)) | s(bool,X70) != s(bool,X71) | s(bool,'T_0') = s(bool,X68)) ) | ($spl17 | $spl30 | $spl82)),
  inference(subsumption_resolution,[],[f4219,f199])).
fof(f4219,plain,(
  ( ! [X70,X68,X71,X69] : (p(s(bool,'F_0')) | s(bool,X68) != s(bool,X69) | ~p(s(bool,X70)) | ~p(s(bool,X69)) | s(bool,X70) != s(bool,X71) | s(bool,'T_0') = s(bool,X68)) ) | ($spl17 | $spl30 | $spl82)),
  inference(forward_demodulation,[],[f4019,f656])).
fof(f4019,plain,(
  ( ! [X70,X68,X71,X69] : (s(bool,X68) != s(bool,X69) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X70)) | ~p(s(bool,X69)) | s(bool,X70) != s(bool,X71) | s(bool,'T_0') = s(bool,X68)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f181,f2957])).
fof(f4209,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,X28) != s(bool,X29) | p(s(bool,X30)) | ~p(s(bool,X29)) | s(bool,X30) != s(bool,X31) | s(bool,'T_0') = s(bool,X28)) ) | ($spl17 | $spl30 | $spl82)),
  inference(subsumption_resolution,[],[f4208,f218])).
fof(f4208,plain,(
  ( ! [X30,X28,X31,X29] : (p(s(bool,'F_0')) | s(bool,X28) != s(bool,X29) | p(s(bool,X30)) | ~p(s(bool,X29)) | s(bool,X30) != s(bool,X31) | s(bool,'T_0') = s(bool,X28)) ) | ($spl17 | $spl30 | $spl82)),
  inference(forward_demodulation,[],[f4009,f656])).
fof(f4009,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,X28) != s(bool,X29) | p(s(bool,X30)) | ~p(s(bool,X29)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,X30) != s(bool,X31) | s(bool,'T_0') = s(bool,X28)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f179,f2957])).
fof(f4207,plain,(
  ( ! [X26,X24,X23,X27,X25] : (p(s(bool,X23)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X24),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),fun(X24,'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X24),fun(X24,'type.pair.prod'('type.num.num','type.sptree.spt'(X24))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X24),fun(X24,'type.sptree.spt'(X24)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X24,fun('type.sptree.spt'(X24),'type.sptree.spt'(X24)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X24),'type.sptree.spt'(X24)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),happ(s(fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.,_0'),s('type.num.num',X25))),s('type.sptree.spt'(X24),X26))),s('type.list.list'(X24),X27)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X26,X25,X27,X24))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X25))))) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f4008,f232])).
fof(f4008,plain,(
  ( ! [X26,X24,X23,X27,X25] : (p(s(bool,X23)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X24),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),fun(X24,'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X24),fun(X24,'type.pair.prod'('type.num.num','type.sptree.spt'(X24))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X24),fun(X24,'type.sptree.spt'(X24)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X24,fun('type.sptree.spt'(X24),'type.sptree.spt'(X24)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X24),'type.sptree.spt'(X24)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),happ(s(fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.,_0'),s('type.num.num',X25))),s('type.sptree.spt'(X24),X26))),s('type.list.list'(X24),X27)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X26,X25,X27,X24))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X25)))) | s(bool,'T_0') = s(bool,X23)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f175,f2957])).
fof(f4206,plain,(
  ( ! [X14,X17,X15,X13,X16] : (p(s(bool,X13)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.sptree.spt'(X14)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X14,fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),happ(s(fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s('type.num.num',X15))),s('type.sptree.spt'(X14),X16))),s('type.list.list'(X14),X17)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X16,X15,X17,X14)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),X16)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15))))) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f4006,f232])).
fof(f4006,plain,(
  ( ! [X14,X17,X15,X13,X16] : (p(s(bool,X13)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.sptree.spt'(X14)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X14,fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),happ(s(fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s('type.num.num',X15))),s('type.sptree.spt'(X14),X16))),s('type.list.list'(X14),X17)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X16,X15,X17,X14)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),X16)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | s(bool,'T_0') = s(bool,X13)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f174,f2957])).
fof(f4177,plain,(
  ( ! [X189,X190,X188] : (p(s(bool,X189)) | ~p(s(bool,X190)) | s(bool,X188) != s(bool,X190) | s(bool,'T_0') = s(bool,X188)) ) | ($spl17 | $spl30 | $spl82)),
  inference(subsumption_resolution,[],[f4176,f218])).
fof(f4176,plain,(
  ( ! [X189,X190,X188] : (p(s(bool,'F_0')) | p(s(bool,X189)) | ~p(s(bool,X190)) | s(bool,X188) != s(bool,X190) | s(bool,'T_0') = s(bool,X188)) ) | ($spl17 | $spl30 | $spl82)),
  inference(forward_demodulation,[],[f3968,f656])).
fof(f3968,plain,(
  ( ! [X189,X190,X188] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X189)) | ~p(s(bool,X190)) | s(bool,X188) != s(bool,X190) | s(bool,'T_0') = s(bool,X188)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f251,f2957])).
fof(f4157,plain,(
  ( ! [X127,X125,X126,X124] : (~p(s(bool,X125)) | ~p(s(bool,X126)) | s(bool,X124) != s(bool,X126) | s(bool,X125) != s(bool,X127) | s(bool,'T_0') = s(bool,X124)) ) | ($spl17 | $spl30 | $spl82)),
  inference(subsumption_resolution,[],[f4156,f199])).
fof(f4156,plain,(
  ( ! [X127,X125,X126,X124] : (p(s(bool,'F_0')) | ~p(s(bool,X125)) | ~p(s(bool,X126)) | s(bool,X124) != s(bool,X126) | s(bool,X125) != s(bool,X127) | s(bool,'T_0') = s(bool,X124)) ) | ($spl17 | $spl30 | $spl82)),
  inference(forward_demodulation,[],[f3925,f656])).
fof(f3925,plain,(
  ( ! [X127,X125,X126,X124] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X125)) | ~p(s(bool,X126)) | s(bool,X124) != s(bool,X126) | s(bool,X125) != s(bool,X127) | s(bool,'T_0') = s(bool,X124)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f185,f2957])).
fof(f4149,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,X93)) | ~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X92) != s(bool,X94) | s(bool,'T_0') = s(bool,X92)) ) | ($spl17 | $spl30 | $spl82)),
  inference(subsumption_resolution,[],[f4148,f218])).
fof(f4148,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,'F_0')) | p(s(bool,X93)) | ~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X92) != s(bool,X94) | s(bool,'T_0') = s(bool,X92)) ) | ($spl17 | $spl30 | $spl82)),
  inference(forward_demodulation,[],[f3917,f656])).
fof(f3917,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X93)) | ~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X92) != s(bool,X94) | s(bool,'T_0') = s(bool,X92)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f184,f2957])).
fof(f4141,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,X73)) | ~p(s(bool,X74)) | s(bool,X73) != s(bool,X75) | s(bool,X72) != s(bool,X74) | s(bool,'T_0') = s(bool,X72)) ) | ($spl17 | $spl30 | $spl82)),
  inference(subsumption_resolution,[],[f4140,f218])).
fof(f4140,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,'F_0')) | p(s(bool,X73)) | ~p(s(bool,X74)) | s(bool,X73) != s(bool,X75) | s(bool,X72) != s(bool,X74) | s(bool,'T_0') = s(bool,X72)) ) | ($spl17 | $spl30 | $spl82)),
  inference(forward_demodulation,[],[f3912,f656])).
fof(f3912,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X73)) | ~p(s(bool,X74)) | s(bool,X73) != s(bool,X75) | s(bool,X72) != s(bool,X74) | s(bool,'T_0') = s(bool,X72)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f183,f2957])).
fof(f4134,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X44) != s(bool,X46) | s(bool,X45) != s(bool,X47) | s(bool,'T_0') = s(bool,X44)) ) | ($spl17 | $spl30 | $spl82)),
  inference(subsumption_resolution,[],[f4133,f199])).
fof(f4133,plain,(
  ( ! [X47,X45,X46,X44] : (p(s(bool,'F_0')) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X44) != s(bool,X46) | s(bool,X45) != s(bool,X47) | s(bool,'T_0') = s(bool,X44)) ) | ($spl17 | $spl30 | $spl82)),
  inference(forward_demodulation,[],[f3905,f656])).
fof(f3905,plain,(
  ( ! [X47,X45,X46,X44] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X44) != s(bool,X46) | s(bool,X45) != s(bool,X47) | s(bool,'T_0') = s(bool,X44)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f181,f2957])).
fof(f4124,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18) | s(bool,'T_0') = s(bool,X16)) ) | ($spl17 | $spl30 | $spl82)),
  inference(subsumption_resolution,[],[f4123,f218])).
fof(f4123,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,'F_0')) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18) | s(bool,'T_0') = s(bool,X16)) ) | ($spl17 | $spl30 | $spl82)),
  inference(forward_demodulation,[],[f3898,f656])).
fof(f3898,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18) | s(bool,'T_0') = s(bool,X16)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f179,f2957])).
fof(f3758,plain,(
  $false | ($spl28 | $spl30)),
  inference(subsumption_resolution,[],[f3757,f3691])).
fof(f3691,plain,(
  ( ! [X9] : (p(s(bool,X9))) ) | ($spl28 | $spl30)),
  inference(subsumption_resolution,[],[f3690,f231])).
fof(f231,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f165])).
fof(f3690,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,X9) | p(s(bool,X9))) ) | ($spl28 | $spl30)),
  inference(forward_demodulation,[],[f506,f656])).
fof(f3757,plain,(
  ( ! [X76,X74,X77,X75] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X74),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X74)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X74)),fun(X74,'type.pair.prod'('type.num.num','type.sptree.spt'(X74)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X74),fun(X74,'type.pair.prod'('type.num.num','type.sptree.spt'(X74))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X74),'type.pair.prod'('type.num.num','type.sptree.spt'(X74)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X74),fun(X74,'type.sptree.spt'(X74)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X74,fun('type.sptree.spt'(X74),'type.sptree.spt'(X74)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X74),'type.sptree.spt'(X74)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X74)),happ(s(fun('type.sptree.spt'(X74),'type.pair.prod'('type.num.num','type.sptree.spt'(X74))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X74),'type.pair.prod'('type.num.num','type.sptree.spt'(X74)))),'const.pair.,_0'),s('type.num.num',X75))),s('type.sptree.spt'(X74),X76))),s('type.list.list'(X74),X77))))))))))) ) | ($spl28 | $spl30)),
  inference(subsumption_resolution,[],[f3726,f3691])).
fof(f3726,plain,(
  ( ! [X76,X74,X77,X75] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X74),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X74)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X74)),fun(X74,'type.pair.prod'('type.num.num','type.sptree.spt'(X74)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X74),fun(X74,'type.pair.prod'('type.num.num','type.sptree.spt'(X74))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X74),'type.pair.prod'('type.num.num','type.sptree.spt'(X74)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X74),fun(X74,'type.sptree.spt'(X74)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X74,fun('type.sptree.spt'(X74),'type.sptree.spt'(X74)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X74),'type.sptree.spt'(X74)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X74)),happ(s(fun('type.sptree.spt'(X74),'type.pair.prod'('type.num.num','type.sptree.spt'(X74))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X74),'type.pair.prod'('type.num.num','type.sptree.spt'(X74)))),'const.pair.,_0'),s('type.num.num',X75))),s('type.sptree.spt'(X74),X76))),s('type.list.list'(X74),X77)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X75))))) ) | ($spl28 | $spl30)),
  inference(resolution,[],[f3691,f254])).
fof(f254,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X6,X5,X7,X4))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X4),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X4)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X4)),fun(X4,'type.pair.prod'('type.num.num','type.sptree.spt'(X4)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X4),fun(X4,'type.pair.prod'('type.num.num','type.sptree.spt'(X4))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X4),'type.pair.prod'('type.num.num','type.sptree.spt'(X4)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X4),fun(X4,'type.sptree.spt'(X4)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X4,fun('type.sptree.spt'(X4),'type.sptree.spt'(X4)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X4),'type.sptree.spt'(X4)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X4)),happ(s(fun('type.sptree.spt'(X4),'type.pair.prod'('type.num.num','type.sptree.spt'(X4))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X4),'type.pair.prod'('type.num.num','type.sptree.spt'(X4)))),'const.pair.,_0'),s('type.num.num',X5))),s('type.sptree.spt'(X4),X6))),s('type.list.list'(X4),X7)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5))))) )),
  inference(resolution,[],[f173,f175])).
fof(f3756,plain,(
  $false | ($spl28 | $spl30)),
  inference(subsumption_resolution,[],[f3719,f3691])).
fof(f3719,plain,(
  ( ! [X49] : (~p(s(bool,X49))) ) | ($spl28 | $spl30)),
  inference(resolution,[],[f3691,f199])).
fof(f3714,plain,(
  $false | ($spl28 | $spl30)),
  inference(resolution,[],[f3691,f237])).
fof(f3722,plain,(
  $false | ($spl28 | $spl30)),
  inference(resolution,[],[f3691,f239])).
fof(f656,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl30),
  inference(cnf_transformation,[],[f656_D])).
fof(f656_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f3433,plain,(
  ( ! [X12] : (~p(s(bool,X12)) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl24),
  inference(subsumption_resolution,[],[f3417,f233])).
fof(f3417,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,X12) | ~p(s(bool,X12)) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl24),
  inference(superposition,[],[f458,f250])).
fof(f3432,plain,(
  ( ! [X11] : (~p(s(bool,X11)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl24),
  inference(subsumption_resolution,[],[f3416,f233])).
fof(f3416,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,X11) | ~p(s(bool,X11)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl24),
  inference(superposition,[],[f458,f235])).
fof(f3431,plain,(
  ( ! [X10] : (~p(s(bool,X10)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl24),
  inference(subsumption_resolution,[],[f3415,f233])).
fof(f3415,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,X10) | ~p(s(bool,X10)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl24),
  inference(superposition,[],[f458,f233])).
fof(f3430,plain,(
  ( ! [X6,X7] : (s(bool,X6) != s(bool,X7) | ~p(s(bool,X7)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl24),
  inference(subsumption_resolution,[],[f3412,f277])).
fof(f3412,plain,(
  ( ! [X6,X7] : (s(bool,X6) != s(bool,X7) | ~p(s(bool,X7)) | ~p(s(bool,X6)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl24),
  inference(superposition,[],[f458,f195])).
fof(f3429,plain,(
  ( ! [X4,X5] : (s(bool,X4) != s(bool,X5) | ~p(s(bool,X5)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl24),
  inference(subsumption_resolution,[],[f3411,f277])).
fof(f3411,plain,(
  ( ! [X4,X5] : (s(bool,X4) != s(bool,X5) | ~p(s(bool,X5)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X4))) ) | $spl24),
  inference(superposition,[],[f458,f195])).
fof(f745,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl35),
  inference(cnf_transformation,[],[f745_D])).
fof(f745_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f3424,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,X12))) ) | $spl24),
  inference(subsumption_resolution,[],[f3397,f228])).
fof(f3397,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,X12)) | s(bool,'F_0') = s(bool,X12)) ) | $spl24),
  inference(superposition,[],[f458,f250])).
fof(f3420,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,X11))) ) | $spl24),
  inference(duplicate_literal_removal,[],[f3396])).
fof(f3396,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,X11)) | ~p(s(bool,X11))) ) | $spl24),
  inference(superposition,[],[f458,f235])).
fof(f3421,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,X10))) ) | $spl24),
  inference(duplicate_literal_removal,[],[f3395])).
fof(f3395,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,X10)) | ~p(s(bool,X10))) ) | $spl24),
  inference(superposition,[],[f458,f233])).
fof(f3388,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X7),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X7)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X7)),fun(X7,'type.pair.prod'('type.num.num','type.sptree.spt'(X7)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X7),fun(X7,'type.pair.prod'('type.num.num','type.sptree.spt'(X7))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X7),'type.pair.prod'('type.num.num','type.sptree.spt'(X7)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X7),fun(X7,'type.sptree.spt'(X7)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X7,fun('type.sptree.spt'(X7),'type.sptree.spt'(X7)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X7),'type.sptree.spt'(X7)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X7)),happ(s(fun('type.sptree.spt'(X7),'type.pair.prod'('type.num.num','type.sptree.spt'(X7))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X7),'type.pair.prod'('type.num.num','type.sptree.spt'(X7)))),'const.pair.,_0'),s('type.num.num',X5))),s('type.sptree.spt'(X7),X4))),s('type.list.list'(X7),X6)))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3(X4,X5,X6,X7)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5))))) ) | $spl96),
  inference(cnf_transformation,[],[f3388_D])).
fof(f3388_D,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X7),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X7)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X7)),fun(X7,'type.pair.prod'('type.num.num','type.sptree.spt'(X7)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X7),fun(X7,'type.pair.prod'('type.num.num','type.sptree.spt'(X7))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X7),'type.pair.prod'('type.num.num','type.sptree.spt'(X7)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X7),fun(X7,'type.sptree.spt'(X7)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X7,fun('type.sptree.spt'(X7),'type.sptree.spt'(X7)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X7),'type.sptree.spt'(X7)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X7)),happ(s(fun('type.sptree.spt'(X7),'type.pair.prod'('type.num.num','type.sptree.spt'(X7))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X7),'type.pair.prod'('type.num.num','type.sptree.spt'(X7)))),'const.pair.,_0'),s('type.num.num',X5))),s('type.sptree.spt'(X7),X4))),s('type.list.list'(X7),X6)))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3(X4,X5,X6,X7)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5))))) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f2573,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X3),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X3)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X3)),fun(X3,'type.pair.prod'('type.num.num','type.sptree.spt'(X3)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X3),fun(X3,'type.pair.prod'('type.num.num','type.sptree.spt'(X3))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X3),'type.pair.prod'('type.num.num','type.sptree.spt'(X3)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X3),fun(X3,'type.sptree.spt'(X3)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X3,fun('type.sptree.spt'(X3),'type.sptree.spt'(X3)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X3),'type.sptree.spt'(X3)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X3)),happ(s(fun('type.sptree.spt'(X3),'type.pair.prod'('type.num.num','type.sptree.spt'(X3))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X3),'type.pair.prod'('type.num.num','type.sptree.spt'(X3)))),'const.pair.,_0'),s('type.num.num',X1))),s('type.sptree.spt'(X3),X0))),s('type.list.list'(X3),X2)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3(X0,X1,X2,X3))))) )),
  inference(superposition,[],[f254,f248])).
fof(f2574,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X7),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X7)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X7)),fun(X7,'type.pair.prod'('type.num.num','type.sptree.spt'(X7)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X7),fun(X7,'type.pair.prod'('type.num.num','type.sptree.spt'(X7))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X7),'type.pair.prod'('type.num.num','type.sptree.spt'(X7)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X7),fun(X7,'type.sptree.spt'(X7)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X7,fun('type.sptree.spt'(X7),'type.sptree.spt'(X7)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X7),'type.sptree.spt'(X7)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X7)),happ(s(fun('type.sptree.spt'(X7),'type.pair.prod'('type.num.num','type.sptree.spt'(X7))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X7),'type.pair.prod'('type.num.num','type.sptree.spt'(X7)))),'const.pair.,_0'),s('type.num.num',X5))),s('type.sptree.spt'(X7),X4))),s('type.list.list'(X7),X6)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X5)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK3(X4,X5,X6,X7))))) )),
  inference(superposition,[],[f254,f246])).
fof(f3387,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X23,X22,X24,X25)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X25),X23)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X25),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X25)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X25)),fun(X25,'type.pair.prod'('type.num.num','type.sptree.spt'(X25)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X25),fun(X25,'type.pair.prod'('type.num.num','type.sptree.spt'(X25))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X25),'type.pair.prod'('type.num.num','type.sptree.spt'(X25)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X25),fun(X25,'type.sptree.spt'(X25)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X25,fun('type.sptree.spt'(X25),'type.sptree.spt'(X25)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X25),'type.sptree.spt'(X25)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X25)),happ(s(fun('type.sptree.spt'(X25),'type.pair.prod'('type.num.num','type.sptree.spt'(X25))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X25),'type.pair.prod'('type.num.num','type.sptree.spt'(X25)))),'const.pair.,_0'),s('type.num.num',X22))),s('type.sptree.spt'(X25),X23))),s('type.list.list'(X25),X24))))))))))) ) | $spl94),
  inference(cnf_transformation,[],[f3387_D])).
fof(f3387_D,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X23,X22,X24,X25)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X25),X23)))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X25),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X25)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X25)),fun(X25,'type.pair.prod'('type.num.num','type.sptree.spt'(X25)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X25),fun(X25,'type.pair.prod'('type.num.num','type.sptree.spt'(X25))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X25),'type.pair.prod'('type.num.num','type.sptree.spt'(X25)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X25),fun(X25,'type.sptree.spt'(X25)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X25,fun('type.sptree.spt'(X25),'type.sptree.spt'(X25)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X25),'type.sptree.spt'(X25)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X25)),happ(s(fun('type.sptree.spt'(X25),'type.pair.prod'('type.num.num','type.sptree.spt'(X25))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X25),'type.pair.prod'('type.num.num','type.sptree.spt'(X25)))),'const.pair.,_0'),s('type.num.num',X22))),s('type.sptree.spt'(X25),X23))),s('type.list.list'(X25),X24))))))))))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f2674,plain,(
  ( ! [X21,X19,X20,X18] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X19,X18,X20,X21)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X21),X19)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X21),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X21)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X21)),fun(X21,'type.pair.prod'('type.num.num','type.sptree.spt'(X21)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X21),fun(X21,'type.pair.prod'('type.num.num','type.sptree.spt'(X21))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X21),'type.pair.prod'('type.num.num','type.sptree.spt'(X21)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X21),fun(X21,'type.sptree.spt'(X21)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X21,fun('type.sptree.spt'(X21),'type.sptree.spt'(X21)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X21),'type.sptree.spt'(X21)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X21)),happ(s(fun('type.sptree.spt'(X21),'type.pair.prod'('type.num.num','type.sptree.spt'(X21))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X21),'type.pair.prod'('type.num.num','type.sptree.spt'(X21)))),'const.pair.,_0'),s('type.num.num',X18))),s('type.sptree.spt'(X21),X19))),s('type.list.list'(X21),X20)))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))) )),
  inference(superposition,[],[f253,f248])).
fof(f253,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X2,X1,X3,X0)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),X2)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.pair.prod'('type.num.num','type.sptree.spt'(X0))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X0),fun(X0,'type.sptree.spt'(X0)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X0,fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X0),'type.sptree.spt'(X0)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X0)),happ(s(fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X0),'type.pair.prod'('type.num.num','type.sptree.spt'(X0)))),'const.pair.,_0'),s('type.num.num',X1))),s('type.sptree.spt'(X0),X2))),s('type.list.list'(X0),X3))))))))))) )),
  inference(resolution,[],[f173,f174])).
fof(f2675,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X23,X22,X24,X25)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X25),X23)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X25),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X25)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X25)),fun(X25,'type.pair.prod'('type.num.num','type.sptree.spt'(X25)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X25),fun(X25,'type.pair.prod'('type.num.num','type.sptree.spt'(X25))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X25),'type.pair.prod'('type.num.num','type.sptree.spt'(X25)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X25),fun(X25,'type.sptree.spt'(X25)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X25,fun('type.sptree.spt'(X25),'type.sptree.spt'(X25)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X25),'type.sptree.spt'(X25)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X25)),happ(s(fun('type.sptree.spt'(X25),'type.pair.prod'('type.num.num','type.sptree.spt'(X25))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X25),'type.pair.prod'('type.num.num','type.sptree.spt'(X25)))),'const.pair.,_0'),s('type.num.num',X22))),s('type.sptree.spt'(X25),X23))),s('type.list.list'(X25),X24)))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))) )),
  inference(superposition,[],[f253,f246])).
fof(f3386,plain,(
  ( ! [X43,X41,X42] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X41,'const.arithmetic.ZERO_0',X42,X43)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X43),X41)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X43),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),fun(X43,'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X43),fun(X43,'type.pair.prod'('type.num.num','type.sptree.spt'(X43))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X43),fun(X43,'type.sptree.spt'(X43)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X43,fun('type.sptree.spt'(X43),'type.sptree.spt'(X43)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X43),'type.sptree.spt'(X43)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),happ(s(fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X43),X41))),s('type.list.list'(X43),X42))))))))))) ) | $spl92),
  inference(cnf_transformation,[],[f3386_D])).
fof(f3386_D,plain,(
  ( ! [X43,X41,X42] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X41,'const.arithmetic.ZERO_0',X42,X43)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X43),X41)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X43),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),fun(X43,'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X43),fun(X43,'type.pair.prod'('type.num.num','type.sptree.spt'(X43))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X43),fun(X43,'type.sptree.spt'(X43)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X43,fun('type.sptree.spt'(X43),'type.sptree.spt'(X43)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X43),'type.sptree.spt'(X43)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),happ(s(fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X43),X41))),s('type.list.list'(X43),X42))))))))))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f2678,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X36)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X37,'const.arithmetic.ZERO_0',X38,X39)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X39),X37)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X39),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X39)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X39)),fun(X39,'type.pair.prod'('type.num.num','type.sptree.spt'(X39)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X39),fun(X39,'type.pair.prod'('type.num.num','type.sptree.spt'(X39))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X39),'type.pair.prod'('type.num.num','type.sptree.spt'(X39)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X39),fun(X39,'type.sptree.spt'(X39)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X39,fun('type.sptree.spt'(X39),'type.sptree.spt'(X39)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X39),'type.sptree.spt'(X39)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X39)),happ(s(fun('type.sptree.spt'(X39),'type.pair.prod'('type.num.num','type.sptree.spt'(X39))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X39),'type.pair.prod'('type.num.num','type.sptree.spt'(X39)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X39),X37))),s('type.list.list'(X39),X38)))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36)))) )),
  inference(superposition,[],[f253,f248])).
fof(f2679,plain,(
  ( ! [X43,X41,X42,X40] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X40)))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X41,'const.arithmetic.ZERO_0',X42,X43)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X43),X41)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X43),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),fun(X43,'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X43),fun(X43,'type.pair.prod'('type.num.num','type.sptree.spt'(X43))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X43),fun(X43,'type.sptree.spt'(X43)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X43,fun('type.sptree.spt'(X43),'type.sptree.spt'(X43)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X43),'type.sptree.spt'(X43)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X43)),happ(s(fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X43),'type.pair.prod'('type.num.num','type.sptree.spt'(X43)))),'const.pair.,_0'),s('type.num.num','const.arithmetic.ZERO_0'))),s('type.sptree.spt'(X43),X41))),s('type.list.list'(X43),X42)))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40)))) )),
  inference(superposition,[],[f253,f246])).
fof(f3375,plain,(
  ( ! [X215,X213,X214] : (s(bool,X213) != s(bool,X214) | p(s(bool,X215)) | ~p(s(bool,X214)) | s(bool,'T_0') = s(bool,X213)) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f3374,f218])).
fof(f3374,plain,(
  ( ! [X215,X213,X214] : (p(s(bool,'F_0')) | s(bool,X213) != s(bool,X214) | p(s(bool,X215)) | ~p(s(bool,X214)) | s(bool,'T_0') = s(bool,X213)) ) | ($spl17 | $spl82)),
  inference(forward_demodulation,[],[f3181,f530])).
fof(f3181,plain,(
  ( ! [X215,X213,X214] : (s(bool,X213) != s(bool,X214) | p(s(bool,X215)) | ~p(s(bool,X214)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'T_0') = s(bool,X213)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f251,f2957])).
fof(f3341,plain,(
  ( ! [X146,X144,X147,X145] : (s(bool,X144) != s(bool,X145) | ~p(s(bool,X146)) | ~p(s(bool,X145)) | s(bool,X146) != s(bool,X147) | s(bool,'T_0') = s(bool,X144)) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f3340,f199])).
fof(f3340,plain,(
  ( ! [X146,X144,X147,X145] : (p(s(bool,'F_0')) | s(bool,X144) != s(bool,X145) | ~p(s(bool,X146)) | ~p(s(bool,X145)) | s(bool,X146) != s(bool,X147) | s(bool,'T_0') = s(bool,X144)) ) | ($spl17 | $spl82)),
  inference(forward_demodulation,[],[f3137,f530])).
fof(f3137,plain,(
  ( ! [X146,X144,X147,X145] : (s(bool,X144) != s(bool,X145) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X146)) | ~p(s(bool,X145)) | s(bool,X146) != s(bool,X147) | s(bool,'T_0') = s(bool,X144)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f185,f2957])).
fof(f3337,plain,(
  ( ! [X118,X116,X119,X117] : (s(bool,X116) != s(bool,X117) | p(s(bool,X118)) | ~p(s(bool,X117)) | ~p(s(bool,X119)) | s(bool,'T_0') = s(bool,X116)) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f3336,f218])).
fof(f3336,plain,(
  ( ! [X118,X116,X119,X117] : (p(s(bool,'F_0')) | s(bool,X116) != s(bool,X117) | p(s(bool,X118)) | ~p(s(bool,X117)) | ~p(s(bool,X119)) | s(bool,'T_0') = s(bool,X116)) ) | ($spl17 | $spl82)),
  inference(forward_demodulation,[],[f3130,f530])).
fof(f3130,plain,(
  ( ! [X118,X116,X119,X117] : (s(bool,X116) != s(bool,X117) | p(s(bool,X118)) | ~p(s(bool,X117)) | ~p(s(bool,X119)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'T_0') = s(bool,X116)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f184,f2957])).
fof(f3330,plain,(
  ( ! [X90,X88,X91,X89] : (s(bool,X88) != s(bool,X89) | p(s(bool,X90)) | ~p(s(bool,X89)) | s(bool,X90) != s(bool,X91) | s(bool,'T_0') = s(bool,X88)) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f3329,f218])).
fof(f3329,plain,(
  ( ! [X90,X88,X91,X89] : (p(s(bool,'F_0')) | s(bool,X88) != s(bool,X89) | p(s(bool,X90)) | ~p(s(bool,X89)) | s(bool,X90) != s(bool,X91) | s(bool,'T_0') = s(bool,X88)) ) | ($spl17 | $spl82)),
  inference(forward_demodulation,[],[f3123,f530])).
fof(f3123,plain,(
  ( ! [X90,X88,X91,X89] : (s(bool,X88) != s(bool,X89) | p(s(bool,X90)) | ~p(s(bool,X89)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,X90) != s(bool,X91) | s(bool,'T_0') = s(bool,X88)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f183,f2957])).
fof(f3322,plain,(
  ( ! [X70,X68,X71,X69] : (s(bool,X68) != s(bool,X69) | ~p(s(bool,X70)) | ~p(s(bool,X69)) | s(bool,X70) != s(bool,X71) | s(bool,'T_0') = s(bool,X68)) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f3321,f199])).
fof(f3321,plain,(
  ( ! [X70,X68,X71,X69] : (p(s(bool,'F_0')) | s(bool,X68) != s(bool,X69) | ~p(s(bool,X70)) | ~p(s(bool,X69)) | s(bool,X70) != s(bool,X71) | s(bool,'T_0') = s(bool,X68)) ) | ($spl17 | $spl82)),
  inference(forward_demodulation,[],[f3118,f530])).
fof(f3118,plain,(
  ( ! [X70,X68,X71,X69] : (s(bool,X68) != s(bool,X69) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X70)) | ~p(s(bool,X69)) | s(bool,X70) != s(bool,X71) | s(bool,'T_0') = s(bool,X68)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f181,f2957])).
fof(f3311,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,X28) != s(bool,X29) | p(s(bool,X30)) | ~p(s(bool,X29)) | s(bool,X30) != s(bool,X31) | s(bool,'T_0') = s(bool,X28)) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f3310,f218])).
fof(f3310,plain,(
  ( ! [X30,X28,X31,X29] : (p(s(bool,'F_0')) | s(bool,X28) != s(bool,X29) | p(s(bool,X30)) | ~p(s(bool,X29)) | s(bool,X30) != s(bool,X31) | s(bool,'T_0') = s(bool,X28)) ) | ($spl17 | $spl82)),
  inference(forward_demodulation,[],[f3108,f530])).
fof(f3108,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,X28) != s(bool,X29) | p(s(bool,X30)) | ~p(s(bool,X29)) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,X30) != s(bool,X31) | s(bool,'T_0') = s(bool,X28)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f179,f2957])).
fof(f3308,plain,(
  ( ! [X26,X24,X23,X27,X25] : (p(s(bool,X23)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X24),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),fun(X24,'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X24),fun(X24,'type.pair.prod'('type.num.num','type.sptree.spt'(X24))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X24),fun(X24,'type.sptree.spt'(X24)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X24,fun('type.sptree.spt'(X24),'type.sptree.spt'(X24)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X24),'type.sptree.spt'(X24)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),happ(s(fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.,_0'),s('type.num.num',X25))),s('type.sptree.spt'(X24),X26))),s('type.list.list'(X24),X27)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X26,X25,X27,X24))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X25))))) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f3107,f232])).
fof(f3107,plain,(
  ( ! [X26,X24,X23,X27,X25] : (p(s(bool,X23)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X24),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),fun(X24,'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X24),fun(X24,'type.pair.prod'('type.num.num','type.sptree.spt'(X24))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X24),fun(X24,'type.sptree.spt'(X24)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X24,fun('type.sptree.spt'(X24),'type.sptree.spt'(X24)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X24),'type.sptree.spt'(X24)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X24)),happ(s(fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X24),'type.pair.prod'('type.num.num','type.sptree.spt'(X24)))),'const.pair.,_0'),s('type.num.num',X25))),s('type.sptree.spt'(X24),X26))),s('type.list.list'(X24),X27)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X26,X25,X27,X24))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X25)))) | s(bool,'T_0') = s(bool,X23)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f175,f2957])).
fof(f3306,plain,(
  ( ! [X14,X17,X15,X13,X16] : (p(s(bool,X13)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.sptree.spt'(X14)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X14,fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),happ(s(fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s('type.num.num',X15))),s('type.sptree.spt'(X14),X16))),s('type.list.list'(X14),X17)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X16,X15,X17,X14)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),X16)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15))))) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f3105,f232])).
fof(f3105,plain,(
  ( ! [X14,X17,X15,X13,X16] : (p(s(bool,X13)) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.pair.prod'('type.num.num','type.sptree.spt'(X14))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X14),fun(X14,'type.sptree.spt'(X14)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X14,fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X14),'type.sptree.spt'(X14)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X14)),happ(s(fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X14),'type.pair.prod'('type.num.num','type.sptree.spt'(X14)))),'const.pair.,_0'),s('type.num.num',X15))),s('type.sptree.spt'(X14),X16))),s('type.list.list'(X14),X17)))))))))) | p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X16,X15,X17,X14)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X14),X16)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15)))) | s(bool,'T_0') = s(bool,X13)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f174,f2957])).
fof(f3277,plain,(
  ( ! [X189,X190,X188] : (p(s(bool,X189)) | ~p(s(bool,X190)) | s(bool,X188) != s(bool,X190) | s(bool,'T_0') = s(bool,X188)) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f3276,f218])).
fof(f3276,plain,(
  ( ! [X189,X190,X188] : (p(s(bool,'F_0')) | p(s(bool,X189)) | ~p(s(bool,X190)) | s(bool,X188) != s(bool,X190) | s(bool,'T_0') = s(bool,X188)) ) | ($spl17 | $spl82)),
  inference(forward_demodulation,[],[f3067,f530])).
fof(f3067,plain,(
  ( ! [X189,X190,X188] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X189)) | ~p(s(bool,X190)) | s(bool,X188) != s(bool,X190) | s(bool,'T_0') = s(bool,X188)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f251,f2957])).
fof(f3257,plain,(
  ( ! [X127,X125,X126,X124] : (~p(s(bool,X125)) | ~p(s(bool,X126)) | s(bool,X124) != s(bool,X126) | s(bool,X125) != s(bool,X127) | s(bool,'T_0') = s(bool,X124)) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f3256,f199])).
fof(f3256,plain,(
  ( ! [X127,X125,X126,X124] : (p(s(bool,'F_0')) | ~p(s(bool,X125)) | ~p(s(bool,X126)) | s(bool,X124) != s(bool,X126) | s(bool,X125) != s(bool,X127) | s(bool,'T_0') = s(bool,X124)) ) | ($spl17 | $spl82)),
  inference(forward_demodulation,[],[f3024,f530])).
fof(f3024,plain,(
  ( ! [X127,X125,X126,X124] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X125)) | ~p(s(bool,X126)) | s(bool,X124) != s(bool,X126) | s(bool,X125) != s(bool,X127) | s(bool,'T_0') = s(bool,X124)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f185,f2957])).
fof(f3249,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,X93)) | ~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X92) != s(bool,X94) | s(bool,'T_0') = s(bool,X92)) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f3248,f218])).
fof(f3248,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,'F_0')) | p(s(bool,X93)) | ~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X92) != s(bool,X94) | s(bool,'T_0') = s(bool,X92)) ) | ($spl17 | $spl82)),
  inference(forward_demodulation,[],[f3016,f530])).
fof(f3016,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X93)) | ~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X92) != s(bool,X94) | s(bool,'T_0') = s(bool,X92)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f184,f2957])).
fof(f3241,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,X73)) | ~p(s(bool,X74)) | s(bool,X73) != s(bool,X75) | s(bool,X72) != s(bool,X74) | s(bool,'T_0') = s(bool,X72)) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f3240,f218])).
fof(f3240,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,'F_0')) | p(s(bool,X73)) | ~p(s(bool,X74)) | s(bool,X73) != s(bool,X75) | s(bool,X72) != s(bool,X74) | s(bool,'T_0') = s(bool,X72)) ) | ($spl17 | $spl82)),
  inference(forward_demodulation,[],[f3011,f530])).
fof(f3011,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X73)) | ~p(s(bool,X74)) | s(bool,X73) != s(bool,X75) | s(bool,X72) != s(bool,X74) | s(bool,'T_0') = s(bool,X72)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f183,f2957])).
fof(f3234,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X44) != s(bool,X46) | s(bool,X45) != s(bool,X47) | s(bool,'T_0') = s(bool,X44)) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f3233,f199])).
fof(f3233,plain,(
  ( ! [X47,X45,X46,X44] : (p(s(bool,'F_0')) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X44) != s(bool,X46) | s(bool,X45) != s(bool,X47) | s(bool,'T_0') = s(bool,X44)) ) | ($spl17 | $spl82)),
  inference(forward_demodulation,[],[f3004,f530])).
fof(f3004,plain,(
  ( ! [X47,X45,X46,X44] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X44) != s(bool,X46) | s(bool,X45) != s(bool,X47) | s(bool,'T_0') = s(bool,X44)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f181,f2957])).
fof(f3223,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18) | s(bool,'T_0') = s(bool,X16)) ) | ($spl17 | $spl82)),
  inference(subsumption_resolution,[],[f3222,f218])).
fof(f3222,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,'F_0')) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18) | s(bool,'T_0') = s(bool,X16)) ) | ($spl17 | $spl82)),
  inference(forward_demodulation,[],[f2997,f530])).
fof(f2997,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18) | s(bool,'T_0') = s(bool,X16)) ) | ($spl17 | $spl82)),
  inference(superposition,[],[f179,f2957])).
fof(f2903,plain,(
  ( ! [X66,X64,X67,X65] : (s(bool,'T_0') = s(bool,X64) | s(bool,X64) = s(bool,X65) | p(s(bool,X66)) | p(s(bool,X67)) | s(bool,X65) != s(bool,X67)) ) | $spl82),
  inference(resolution,[],[f2823,f251])).
fof(f2891,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,'T_0') = s(bool,X35) | s(bool,X35) = s(bool,X36) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X37) | s(bool,X38) != s(bool,X39)) ) | $spl82),
  inference(resolution,[],[f2823,f185])).
fof(f2888,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s(bool,'T_0') = s(bool,X20) | s(bool,X20) = s(bool,X21) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X21) != s(bool,X24)) ) | $spl82),
  inference(resolution,[],[f2823,f184])).
fof(f2887,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,'T_0') = s(bool,X15) | s(bool,X15) = s(bool,X16) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl82),
  inference(resolution,[],[f2823,f183])).
fof(f2886,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,'T_0') = s(bool,X10) | s(bool,X10) = s(bool,X11) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X12) | s(bool,X13) != s(bool,X14)) ) | $spl82),
  inference(resolution,[],[f2823,f181])).
fof(f2884,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) ) | $spl82),
  inference(resolution,[],[f2823,f179])).
fof(f2823,plain,(
  ( ! [X33,X31] : (p(s(bool,X33)) | s(bool,'T_0') = s(bool,X31) | s(bool,X31) = s(bool,X33)) ) | $spl82),
  inference(cnf_transformation,[],[f2823_D])).
fof(f2823_D,plain,(
  ( ! [X33,X31] : (p(s(bool,X33)) | s(bool,'T_0') = s(bool,X31) | s(bool,X31) = s(bool,X33)) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f2822,plain,(
  ( ! [X33,X31,X32] : (p(s(bool,X32)) | s(bool,X31) = s(bool,X33) | p(s(bool,X33)) | s(bool,'T_0') = s(bool,X31)) )),
  inference(subsumption_resolution,[],[f2779,f229])).
fof(f2779,plain,(
  ( ! [X33,X31,X32] : (s(bool,'F_0') != s(bool,X32) | p(s(bool,X32)) | s(bool,X31) = s(bool,X33) | p(s(bool,X33)) | s(bool,'T_0') = s(bool,X31)) )),
  inference(superposition,[],[f1232,f250])).
fof(f2798,plain,(
  ( ! [X33,X31,X32] : (s(bool,'F_0') != s(bool,X32) | p(s(bool,X31)) | s(bool,X32) = s(bool,X33) | p(s(bool,X33))) )),
  inference(subsumption_resolution,[],[f2758,f232])).
fof(f2758,plain,(
  ( ! [X33,X31,X32] : (s(bool,'F_0') != s(bool,X32) | p(s(bool,X31)) | s(bool,X32) = s(bool,X33) | p(s(bool,X33)) | s(bool,'T_0') = s(bool,X31)) )),
  inference(superposition,[],[f1232,f250])).
fof(f2792,plain,(
  ( ! [X21,X19,X20] : (s(bool,'F_0') != s(bool,X20) | p(s(bool,X19)) | s(bool,X20) = s(bool,X21) | p(s(bool,X21))) )),
  inference(duplicate_literal_removal,[],[f2754])).
fof(f2754,plain,(
  ( ! [X21,X19,X20] : (s(bool,'F_0') != s(bool,X20) | p(s(bool,X19)) | s(bool,X20) = s(bool,X21) | p(s(bool,X21)) | p(s(bool,X19))) )),
  inference(superposition,[],[f1232,f231])).
fof(f2793,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') != s(bool,X17) | p(s(bool,X16)) | s(bool,X17) = s(bool,X18) | p(s(bool,X18))) )),
  inference(duplicate_literal_removal,[],[f2753])).
fof(f2753,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') != s(bool,X17) | p(s(bool,X16)) | s(bool,X17) = s(bool,X18) | p(s(bool,X18)) | p(s(bool,X16))) )),
  inference(superposition,[],[f1232,f229])).
fof(f2696,plain,(
  ( ! [X21,X19,X17,X18,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X16,X17,X18,X19)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),X16)))))) | ~p(s(bool,X21)) | s(bool,X21) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X17))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.sptree.spt'(X19)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X19,fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),happ(s(fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s('type.num.num',X17))),s('type.sptree.spt'(X19),X16))),s('type.list.list'(X19),X18))))))))))) ) | $spl78),
  inference(cnf_transformation,[],[f2696_D])).
fof(f2696_D,plain,(
  ( ! [X21,X19,X17,X18,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X16,X17,X18,X19)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),X16)))))) | ~p(s(bool,X21)) | s(bool,X21) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X17))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.sptree.spt'(X19)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X19,fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),happ(s(fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s('type.num.num',X17))),s('type.sptree.spt'(X19),X16))),s('type.list.list'(X19),X18))))))))))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f2667,plain,(
  ( ! [X127,X130,X128,X126,X131,X129] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X126,X127,X128,X129)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X129),X126)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X129),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X129)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X129)),fun(X129,'type.pair.prod'('type.num.num','type.sptree.spt'(X129)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X129),fun(X129,'type.pair.prod'('type.num.num','type.sptree.spt'(X129))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X129),'type.pair.prod'('type.num.num','type.sptree.spt'(X129)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X129),fun(X129,'type.sptree.spt'(X129)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X129,fun('type.sptree.spt'(X129),'type.sptree.spt'(X129)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X129),'type.sptree.spt'(X129)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X129)),happ(s(fun('type.sptree.spt'(X129),'type.pair.prod'('type.num.num','type.sptree.spt'(X129))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X129),'type.pair.prod'('type.num.num','type.sptree.spt'(X129)))),'const.pair.,_0'),s('type.num.num',X127))),s('type.sptree.spt'(X129),X126))),s('type.list.list'(X129),X128)))))))))) | p(s(bool,X130)) | ~p(s(bool,X131)) | s(bool,X131) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X127)))) )),
  inference(resolution,[],[f253,f251])).
fof(f2653,plain,(
  ( ! [X70,X68,X66,X71,X69,X67,X65] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X65,X66,X67,X68)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X68),X65)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X68),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X68)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X68)),fun(X68,'type.pair.prod'('type.num.num','type.sptree.spt'(X68)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X68),fun(X68,'type.pair.prod'('type.num.num','type.sptree.spt'(X68))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X68),'type.pair.prod'('type.num.num','type.sptree.spt'(X68)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X68),fun(X68,'type.sptree.spt'(X68)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X68,fun('type.sptree.spt'(X68),'type.sptree.spt'(X68)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X68),'type.sptree.spt'(X68)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X68)),happ(s(fun('type.sptree.spt'(X68),'type.pair.prod'('type.num.num','type.sptree.spt'(X68))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X68),'type.pair.prod'('type.num.num','type.sptree.spt'(X68)))),'const.pair.,_0'),s('type.num.num',X66))),s('type.sptree.spt'(X68),X65))),s('type.list.list'(X68),X67)))))))))) | ~p(s(bool,X69)) | ~p(s(bool,X70)) | s(bool,X70) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X66))) | s(bool,X69) != s(bool,X71)) )),
  inference(resolution,[],[f253,f185])).
fof(f2651,plain,(
  ( ! [X57,X54,X52,X56,X55,X53,X51] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X51,X52,X53,X54)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X54),X51)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X54),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X54)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X54)),fun(X54,'type.pair.prod'('type.num.num','type.sptree.spt'(X54)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X54),fun(X54,'type.pair.prod'('type.num.num','type.sptree.spt'(X54))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X54),'type.pair.prod'('type.num.num','type.sptree.spt'(X54)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X54),fun(X54,'type.sptree.spt'(X54)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X54,fun('type.sptree.spt'(X54),'type.sptree.spt'(X54)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X54),'type.sptree.spt'(X54)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X54)),happ(s(fun('type.sptree.spt'(X54),'type.pair.prod'('type.num.num','type.sptree.spt'(X54))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X54),'type.pair.prod'('type.num.num','type.sptree.spt'(X54)))),'const.pair.,_0'),s('type.num.num',X52))),s('type.sptree.spt'(X54),X51))),s('type.list.list'(X54),X53)))))))))) | p(s(bool,X55)) | ~p(s(bool,X56)) | ~p(s(bool,X57)) | s(bool,X56) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X52)))) )),
  inference(resolution,[],[f253,f184])).
fof(f2649,plain,(
  ( ! [X39,X37,X43,X41,X38,X42,X40] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X37,X38,X39,X40)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X40),X37)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X40),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X40)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X40)),fun(X40,'type.pair.prod'('type.num.num','type.sptree.spt'(X40)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X40),fun(X40,'type.pair.prod'('type.num.num','type.sptree.spt'(X40))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X40),'type.pair.prod'('type.num.num','type.sptree.spt'(X40)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X40),fun(X40,'type.sptree.spt'(X40)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X40,fun('type.sptree.spt'(X40),'type.sptree.spt'(X40)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X40),'type.sptree.spt'(X40)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X40)),happ(s(fun('type.sptree.spt'(X40),'type.pair.prod'('type.num.num','type.sptree.spt'(X40))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X40),'type.pair.prod'('type.num.num','type.sptree.spt'(X40)))),'const.pair.,_0'),s('type.num.num',X38))),s('type.sptree.spt'(X40),X37))),s('type.list.list'(X40),X39)))))))))) | p(s(bool,X41)) | ~p(s(bool,X42)) | s(bool,X41) != s(bool,X43) | s(bool,X42) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X38)))) )),
  inference(resolution,[],[f253,f183])).
fof(f2648,plain,(
  ( ! [X30,X35,X33,X31,X36,X34,X32] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X30,X31,X32,X33)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X33),X30)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X33),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X33)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X33)),fun(X33,'type.pair.prod'('type.num.num','type.sptree.spt'(X33)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X33),fun(X33,'type.pair.prod'('type.num.num','type.sptree.spt'(X33))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X33),'type.pair.prod'('type.num.num','type.sptree.spt'(X33)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X33),fun(X33,'type.sptree.spt'(X33)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X33,fun('type.sptree.spt'(X33),'type.sptree.spt'(X33)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X33),'type.sptree.spt'(X33)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X33)),happ(s(fun('type.sptree.spt'(X33),'type.pair.prod'('type.num.num','type.sptree.spt'(X33))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X33),'type.pair.prod'('type.num.num','type.sptree.spt'(X33)))),'const.pair.,_0'),s('type.num.num',X31))),s('type.sptree.spt'(X33),X30))),s('type.list.list'(X33),X32)))))))))) | ~p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X35) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X31))) | s(bool,X34) != s(bool,X36)) )),
  inference(resolution,[],[f253,f181])).
fof(f2646,plain,(
  ( ! [X21,X19,X17,X22,X20,X18,X16] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK3(X16,X17,X18,X19)),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),X16)))))) | ~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X19),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.pair.prod'('type.num.num','type.sptree.spt'(X19))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X19),fun(X19,'type.sptree.spt'(X19)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X19,fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X19),'type.sptree.spt'(X19)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X19)),happ(s(fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X19),'type.pair.prod'('type.num.num','type.sptree.spt'(X19)))),'const.pair.,_0'),s('type.num.num',X17))),s('type.sptree.spt'(X19),X16))),s('type.list.list'(X19),X18)))))))))) | p(s(bool,X20)) | ~p(s(bool,X21)) | s(bool,X20) != s(bool,X22) | s(bool,X21) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X17)))) )),
  inference(resolution,[],[f253,f179])).
fof(f2589,plain,(
  ( ! [X21,X19,X17,X18,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X16),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.sptree.spt'(X16)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X16,fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),happ(s(fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s('type.num.num',X17))),s('type.sptree.spt'(X16),X18))),s('type.list.list'(X16),X19)))))))))) | s(bool,X21) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X18,X17,X19,X16)))) | ~p(s(bool,X21)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X17))))) ) | $spl76),
  inference(cnf_transformation,[],[f2589_D])).
fof(f2589_D,plain,(
  ( ! [X21,X19,X17,X18,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X16),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.sptree.spt'(X16)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X16,fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),happ(s(fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s('type.num.num',X17))),s('type.sptree.spt'(X16),X18))),s('type.list.list'(X16),X19)))))))))) | s(bool,X21) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X18,X17,X19,X16)))) | ~p(s(bool,X21)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X17))))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f2570,plain,(
  ( ! [X127,X130,X128,X126,X131,X129] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X126),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X126)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X126)),fun(X126,'type.pair.prod'('type.num.num','type.sptree.spt'(X126)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X126),fun(X126,'type.pair.prod'('type.num.num','type.sptree.spt'(X126))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X126),'type.pair.prod'('type.num.num','type.sptree.spt'(X126)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X126),fun(X126,'type.sptree.spt'(X126)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X126,fun('type.sptree.spt'(X126),'type.sptree.spt'(X126)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X126),'type.sptree.spt'(X126)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X126)),happ(s(fun('type.sptree.spt'(X126),'type.pair.prod'('type.num.num','type.sptree.spt'(X126))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X126),'type.pair.prod'('type.num.num','type.sptree.spt'(X126)))),'const.pair.,_0'),s('type.num.num',X127))),s('type.sptree.spt'(X126),X128))),s('type.list.list'(X126),X129)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X127)))) | p(s(bool,X130)) | ~p(s(bool,X131)) | s(bool,X131) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X128,X127,X129,X126))))) )),
  inference(resolution,[],[f254,f251])).
fof(f2556,plain,(
  ( ! [X70,X68,X66,X71,X69,X67,X65] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X65),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X65)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X65)),fun(X65,'type.pair.prod'('type.num.num','type.sptree.spt'(X65)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X65),fun(X65,'type.pair.prod'('type.num.num','type.sptree.spt'(X65))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X65),'type.pair.prod'('type.num.num','type.sptree.spt'(X65)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X65),fun(X65,'type.sptree.spt'(X65)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X65,fun('type.sptree.spt'(X65),'type.sptree.spt'(X65)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X65),'type.sptree.spt'(X65)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X65)),happ(s(fun('type.sptree.spt'(X65),'type.pair.prod'('type.num.num','type.sptree.spt'(X65))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X65),'type.pair.prod'('type.num.num','type.sptree.spt'(X65)))),'const.pair.,_0'),s('type.num.num',X66))),s('type.sptree.spt'(X65),X67))),s('type.list.list'(X65),X68)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X66)))) | ~p(s(bool,X69)) | ~p(s(bool,X70)) | s(bool,X70) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X67,X66,X68,X65)))) | s(bool,X69) != s(bool,X71)) )),
  inference(resolution,[],[f254,f185])).
fof(f2554,plain,(
  ( ! [X57,X54,X52,X56,X55,X53,X51] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X51),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.pair.prod'('type.num.num','type.sptree.spt'(X51))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X51),fun(X51,'type.sptree.spt'(X51)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X51,fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X51),'type.sptree.spt'(X51)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X51)),happ(s(fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X51),'type.pair.prod'('type.num.num','type.sptree.spt'(X51)))),'const.pair.,_0'),s('type.num.num',X52))),s('type.sptree.spt'(X51),X53))),s('type.list.list'(X51),X54)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X52)))) | p(s(bool,X55)) | ~p(s(bool,X56)) | ~p(s(bool,X57)) | s(bool,X56) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X53,X52,X54,X51))))) )),
  inference(resolution,[],[f254,f184])).
fof(f2552,plain,(
  ( ! [X39,X37,X43,X41,X38,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X37),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X37)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X37)),fun(X37,'type.pair.prod'('type.num.num','type.sptree.spt'(X37)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X37),fun(X37,'type.pair.prod'('type.num.num','type.sptree.spt'(X37))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X37),'type.pair.prod'('type.num.num','type.sptree.spt'(X37)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X37),fun(X37,'type.sptree.spt'(X37)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X37,fun('type.sptree.spt'(X37),'type.sptree.spt'(X37)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X37),'type.sptree.spt'(X37)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X37)),happ(s(fun('type.sptree.spt'(X37),'type.pair.prod'('type.num.num','type.sptree.spt'(X37))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X37),'type.pair.prod'('type.num.num','type.sptree.spt'(X37)))),'const.pair.,_0'),s('type.num.num',X38))),s('type.sptree.spt'(X37),X39))),s('type.list.list'(X37),X40)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X38)))) | p(s(bool,X41)) | ~p(s(bool,X42)) | s(bool,X41) != s(bool,X43) | s(bool,X42) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X39,X38,X40,X37))))) )),
  inference(resolution,[],[f254,f183])).
fof(f2551,plain,(
  ( ! [X30,X35,X33,X31,X36,X34,X32] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X30),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X30)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X30)),fun(X30,'type.pair.prod'('type.num.num','type.sptree.spt'(X30)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X30),fun(X30,'type.pair.prod'('type.num.num','type.sptree.spt'(X30))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X30),'type.pair.prod'('type.num.num','type.sptree.spt'(X30)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X30),fun(X30,'type.sptree.spt'(X30)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X30,fun('type.sptree.spt'(X30),'type.sptree.spt'(X30)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X30),'type.sptree.spt'(X30)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X30)),happ(s(fun('type.sptree.spt'(X30),'type.pair.prod'('type.num.num','type.sptree.spt'(X30))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X30),'type.pair.prod'('type.num.num','type.sptree.spt'(X30)))),'const.pair.,_0'),s('type.num.num',X31))),s('type.sptree.spt'(X30),X32))),s('type.list.list'(X30),X33)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X31)))) | ~p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X35) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X32,X31,X33,X30)))) | s(bool,X34) != s(bool,X36)) )),
  inference(resolution,[],[f254,f181])).
fof(f2549,plain,(
  ( ! [X21,X19,X17,X22,X20,X18,X16] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(X16),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),'const.list.FOLDL_3'(s(fun('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.UNCURRY_1'(s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.pair.prod'('type.num.num','type.sptree.spt'(X16))))),'_dst_x000x100x111_3'(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s(fun('type.num.num','type.num.num'),'_dst_x1x0_2'(s(fun('type.num.num',fun('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.num.num',fun('type.sptree.spt'(X16),fun(X16,'type.sptree.spt'(X16)))),'_dst_x101x010_2'(s(fun('type.num.num',fun(X16,fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)))),'const.sptree.insert_0'),s(fun('type.sptree.spt'(X16),'type.sptree.spt'(X16)),'_i_0_0'))))))),s('type.pair.prod'('type.num.num','type.sptree.spt'(X16)),happ(s(fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16))),happ(s(fun('type.num.num',fun('type.sptree.spt'(X16),'type.pair.prod'('type.num.num','type.sptree.spt'(X16)))),'const.pair.,_0'),s('type.num.num',X17))),s('type.sptree.spt'(X16),X18))),s('type.list.list'(X16),X19)))))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X17)))) | p(s(bool,X20)) | ~p(s(bool,X21)) | s(bool,X20) != s(bool,X22) | s(bool,X21) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK3(X18,X17,X19,X16))))) )),
  inference(resolution,[],[f254,f179])).
fof(f2396,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl75),
  inference(cnf_transformation,[],[f2396_D])).
fof(f2396_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl75),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl75])])).
fof(f2390,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))) ) | $spl39),
  inference(trivial_inequality_removal,[],[f2388])).
fof(f2388,plain,(
  ( ! [X13] : (s('type.num.num',X13) != s('type.num.num',X13) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))) ) | $spl39),
  inference(superposition,[],[f1189,f246])).
fof(f1189,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl39),
  inference(superposition,[],[f829,f242])).
fof(f2391,plain,(
  ( ! [X12] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))) ) | $spl39),
  inference(trivial_inequality_removal,[],[f2387])).
fof(f2387,plain,(
  ( ! [X12] : (s('type.num.num',X12) != s('type.num.num',X12) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))) ) | $spl39),
  inference(superposition,[],[f1189,f248])).
fof(f2139,plain,(
  ( ! [X6] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) ) | $spl68),
  inference(cnf_transformation,[],[f2139_D])).
fof(f2139_D,plain,(
  ( ! [X6] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f2141,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl71),
  inference(cnf_transformation,[],[f2141_D])).
fof(f2141_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl71),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl71])])).
fof(f2120,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) ) | $spl17),
  inference(superposition,[],[f541,f246])).
fof(f541,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X2))))) ) | $spl17),
  inference(superposition,[],[f305,f242])).
fof(f2119,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) ) | $spl17),
  inference(superposition,[],[f541,f248])).
fof(f2131,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl65),
  inference(cnf_transformation,[],[f2131_D])).
fof(f2131_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl65),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl65])])).
fof(f2132,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6))))) ) | $spl66),
  inference(cnf_transformation,[],[f2132_D])).
fof(f2132_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6))))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f2102,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl17),
  inference(superposition,[],[f541,f246])).
fof(f2101,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl17),
  inference(superposition,[],[f541,f248])).
fof(f1744,plain,(
  ( ! [X66,X64,X67,X65] : (s(bool,X64) != s(bool,X65) | s(bool,'F_0') = s(bool,X65) | p(s(bool,X66)) | p(s(bool,X67)) | s(bool,X64) != s(bool,X67)) )),
  inference(resolution,[],[f1240,f251])).
fof(f1732,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X35) != s(bool,X36) | s(bool,'F_0') = s(bool,X36) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X35) != s(bool,X37) | s(bool,X38) != s(bool,X39)) )),
  inference(resolution,[],[f1240,f185])).
fof(f1729,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s(bool,X20) != s(bool,X21) | s(bool,'F_0') = s(bool,X21) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X20) != s(bool,X24)) )),
  inference(resolution,[],[f1240,f184])).
fof(f1728,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,X15) != s(bool,X16) | s(bool,'F_0') = s(bool,X16) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X15) != s(bool,X18)) )),
  inference(resolution,[],[f1240,f183])).
fof(f1727,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,X10) != s(bool,X11) | s(bool,'F_0') = s(bool,X11) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X10) != s(bool,X12) | s(bool,X13) != s(bool,X14)) )),
  inference(resolution,[],[f1240,f181])).
fof(f1725,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,'F_0') = s(bool,X1) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X0) != s(bool,X3)) )),
  inference(resolution,[],[f1240,f179])).
fof(f1669,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl58),
  inference(cnf_transformation,[],[f1669_D])).
fof(f1669_D,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f1671,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK2) | $spl61),
  inference(cnf_transformation,[],[f1671_D])).
fof(f1671_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK2) <=> ~$spl61),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl61])])).
fof(f1659,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',sK2) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) ) | $spl15),
  inference(superposition,[],[f818,f247])).
fof(f818,plain,(
  ( ! [X0] : (s('type.num.num',sK2) != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl15),
  inference(superposition,[],[f303,f243])).
fof(f1658,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',sK2) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl15),
  inference(superposition,[],[f818,f249])).
fof(f1574,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))) | $spl57),
  inference(cnf_transformation,[],[f1574_D])).
fof(f1574_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))) <=> ~$spl57),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl57])])).
fof(f1553,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))) )),
  inference(superposition,[],[f280,f246])).
fof(f280,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) )),
  inference(superposition,[],[f173,f242])).
fof(f1552,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))) )),
  inference(superposition,[],[f280,f248])).
fof(f1567,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))) | $spl51),
  inference(cnf_transformation,[],[f1567_D])).
fof(f1567_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f1568,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl52),
  inference(cnf_transformation,[],[f1568_D])).
fof(f1568_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f1569,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) )),
  inference(forward_demodulation,[],[f1549,f176])).
fof(f1549,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X1)) )),
  inference(superposition,[],[f280,f247])).
fof(f1565,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f1548,f176])).
fof(f1548,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(superposition,[],[f280,f249])).
fof(f1346,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) | $spl48),
  inference(cnf_transformation,[],[f1346_D])).
fof(f1346_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f1344,plain,(
  ( ! [X13] : (p(s(bool,X13)) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(subsumption_resolution,[],[f1333,f229])).
fof(f1333,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,X13) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1261,f250])).
fof(f1261,plain,(
  ( ! [X112] : (s(bool,X112) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,X112))) )),
  inference(resolution,[],[f277,f177])).
fof(f177,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f64])).
fof(f64,axiom,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.misc.EVEN_fromList2','thm.numeral.numeral_distrib|split|35')).
fof(f1340,plain,(
  s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) | $spl47),
  inference(cnf_transformation,[],[f1340_D])).
fof(f1340_D,plain,(
  s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f1341,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,X13))) )),
  inference(subsumption_resolution,[],[f1317,f232])).
fof(f1317,plain,(
  ( ! [X13] : (s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,X13)) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f1261,f250])).
fof(f1335,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,X9))) )),
  inference(duplicate_literal_removal,[],[f1313])).
fof(f1313,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,X9)) | p(s(bool,X9))) )),
  inference(superposition,[],[f1261,f231])).
fof(f1336,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,X8))) )),
  inference(duplicate_literal_removal,[],[f1312])).
fof(f1312,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,X8)) | p(s(bool,X8))) )),
  inference(superposition,[],[f1261,f229])).
fof(f1285,plain,(
  ( ! [X0,X3,X1] : (~p(s(bool,X3)) | s(bool,X1) != s(bool,X3) | p(s(bool,X0)) | s(bool,X0) != s(bool,X1)) ) | $spl44),
  inference(cnf_transformation,[],[f1285_D])).
fof(f1285_D,plain,(
  ( ! [X0,X3,X1] : (~p(s(bool,X3)) | s(bool,X1) != s(bool,X3) | p(s(bool,X0)) | s(bool,X0) != s(bool,X1)) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f1245,plain,(
  ( ! [X70,X68,X71,X69] : (p(s(bool,X68)) | s(bool,X68) != s(bool,X69) | p(s(bool,X70)) | ~p(s(bool,X71)) | s(bool,X69) != s(bool,X71)) )),
  inference(resolution,[],[f277,f251])).
fof(f1231,plain,(
  ( ! [X39,X37,X35,X38,X36] : (p(s(bool,X35)) | s(bool,X35) != s(bool,X36) | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X38) | s(bool,X37) != s(bool,X39)) )),
  inference(resolution,[],[f277,f185])).
fof(f1229,plain,(
  ( ! [X28,X26,X29,X27,X25] : (p(s(bool,X25)) | s(bool,X25) != s(bool,X26) | p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X26) != s(bool,X28)) )),
  inference(resolution,[],[f277,f184])).
fof(f1227,plain,(
  ( ! [X19,X17,X15,X18,X16] : (p(s(bool,X15)) | s(bool,X15) != s(bool,X16) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) )),
  inference(resolution,[],[f277,f183])).
fof(f1226,plain,(
  ( ! [X14,X12,X10,X13,X11] : (p(s(bool,X10)) | s(bool,X10) != s(bool,X11) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,X14)) )),
  inference(resolution,[],[f277,f181])).
fof(f1224,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X0)) | s(bool,X0) != s(bool,X1) | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) )),
  inference(resolution,[],[f277,f179])).
fof(f829,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | $spl39),
  inference(cnf_transformation,[],[f829_D])).
fof(f829_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f1180,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))))))) | $spl37),
  inference(superposition,[],[f827,f246])).
fof(f1179,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))))))) | $spl37),
  inference(superposition,[],[f827,f248])).
fof(f1161,plain,(
  ( ! [X30,X31] : (~p(s(bool,X30)) | s(bool,'F_0') != s(bool,X31)) ) | $spl8),
  inference(subsumption_resolution,[],[f1146,f298])).
fof(f1146,plain,(
  ( ! [X30,X31] : (~p(s(bool,X30)) | s(bool,'F_0') != s(bool,X31) | s(bool,'T_0') = s(bool,X30)) ) | $spl8),
  inference(superposition,[],[f298,f250])).
fof(f1152,plain,(
  ( ! [X28,X29] : (~p(s(bool,X28)) | s(bool,'T_0') != s(bool,X29)) ) | $spl8),
  inference(duplicate_literal_removal,[],[f1145])).
fof(f1145,plain,(
  ( ! [X28,X29] : (~p(s(bool,X28)) | s(bool,'T_0') != s(bool,X29) | ~p(s(bool,X28))) ) | $spl8),
  inference(superposition,[],[f298,f233])).
fof(f1153,plain,(
  ( ! [X26,X27] : (~p(s(bool,X26)) | s(bool,'T_0') != s(bool,X27)) ) | $spl8),
  inference(duplicate_literal_removal,[],[f1144])).
fof(f1144,plain,(
  ( ! [X26,X27] : (~p(s(bool,X26)) | s(bool,'T_0') != s(bool,X27) | ~p(s(bool,X26))) ) | $spl8),
  inference(superposition,[],[f298,f235])).
fof(f1160,plain,(
  ( ! [X24,X25] : (~p(s(bool,X24)) | s(bool,'T_0') != s(bool,X25)) ) | $spl8),
  inference(subsumption_resolution,[],[f1143,f298])).
fof(f1143,plain,(
  ( ! [X24,X25] : (~p(s(bool,X24)) | s(bool,'T_0') != s(bool,X25) | s(bool,'F_0') = s(bool,X24)) ) | $spl8),
  inference(superposition,[],[f298,f250])).
fof(f1125,plain,(
  ( ! [X90,X89] : (s(bool,'T_0') != s(bool,X89) | ~p(s(bool,X90))) ) | $spl8),
  inference(resolution,[],[f298,f227])).
fof(f227,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0] : ((~p(s(bool,X0)) | ~p(s(bool,'T_0')) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,X0)) & p(s(bool,'T_0')))))),
  inference(flattening,[],[f162])).
fof(f162,plain,(
  ! [X0] : (((~p(s(bool,X0)) | ~p(s(bool,'T_0'))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,X0)) & p(s(bool,'T_0')))))),
  inference(nnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0] : ((p(s(bool,X0)) & p(s(bool,'T_0'))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X11] : ((p(s(bool,X11)) & p(s(bool,'T_0'))) <=> p(s(bool,X11)))),
  file('thm.misc.EVEN_fromList2','thm.bool.AND_CLAUSES|split|1')).
fof(f1124,plain,(
  ( ! [X88,X87] : (s(bool,'T_0') != s(bool,X87) | ~p(s(bool,X88))) ) | $spl8),
  inference(resolution,[],[f298,f214])).
fof(f214,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f155])).
fof(f155,plain,(
  ! [X0] : ((~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,'T_0')) & p(s(bool,X0)))))),
  inference(flattening,[],[f154])).
fof(f154,plain,(
  ! [X0] : (((~p(s(bool,'T_0')) | ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,'T_0')) & p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0] : ((p(s(bool,'T_0')) & p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X11] : ((p(s(bool,'T_0')) & p(s(bool,X11))) <=> p(s(bool,X11)))),
  file('thm.misc.EVEN_fromList2','thm.bool.AND_CLAUSES|split|0')).
fof(f1123,plain,(
  ( ! [X85,X86] : (s(bool,'T_0') != s(bool,X85) | p(s(bool,X86))) ) | $spl8),
  inference(resolution,[],[f298,f210])).
fof(f1122,plain,(
  ( ! [X83,X84] : (s(bool,'T_0') != s(bool,X83) | ~p(s(bool,X84))) ) | $spl8),
  inference(resolution,[],[f298,f208])).
fof(f208,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f151])).
fof(f1121,plain,(
  ( ! [X81,X82] : (s(bool,'T_0') != s(bool,X81) | p(s(bool,X82))) ) | $spl8),
  inference(resolution,[],[f298,f207])).
fof(f1120,plain,(
  ( ! [X80,X79] : (s(bool,'T_0') != s(bool,X79) | p(s(bool,X80))) ) | $spl8),
  inference(resolution,[],[f298,f204])).
fof(f1119,plain,(
  ( ! [X78,X77] : (s(bool,'T_0') != s(bool,X77) | ~p(s(bool,X78))) ) | $spl8),
  inference(resolution,[],[f298,f202])).
fof(f1054,plain,(
  ( ! [X35,X34] : (p(s(bool,X34)) | s(bool,'F_0') != s(bool,X35)) ) | $spl2),
  inference(duplicate_literal_removal,[],[f1050])).
fof(f1050,plain,(
  ( ! [X35,X34] : (p(s(bool,X34)) | s(bool,'F_0') != s(bool,X35) | p(s(bool,X34))) ) | $spl2),
  inference(superposition,[],[f295,f229])).
fof(f1055,plain,(
  ( ! [X33,X32] : (p(s(bool,X32)) | s(bool,'F_0') != s(bool,X33)) ) | $spl2),
  inference(duplicate_literal_removal,[],[f1049])).
fof(f1049,plain,(
  ( ! [X33,X32] : (p(s(bool,X32)) | s(bool,'F_0') != s(bool,X33) | p(s(bool,X32))) ) | $spl2),
  inference(superposition,[],[f295,f231])).
fof(f1065,plain,(
  ( ! [X30,X31] : (p(s(bool,X30)) | s(bool,'F_0') != s(bool,X31)) ) | $spl2),
  inference(subsumption_resolution,[],[f1048,f295])).
fof(f1048,plain,(
  ( ! [X30,X31] : (p(s(bool,X30)) | s(bool,'F_0') != s(bool,X31) | s(bool,'T_0') = s(bool,X30)) ) | $spl2),
  inference(superposition,[],[f295,f250])).
fof(f1063,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | s(bool,'T_0') != s(bool,X25)) ) | $spl2),
  inference(subsumption_resolution,[],[f1045,f295])).
fof(f1045,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | s(bool,'T_0') != s(bool,X25) | s(bool,'F_0') = s(bool,X24)) ) | $spl2),
  inference(superposition,[],[f295,f250])).
fof(f1028,plain,(
  ( ! [X80,X79] : (s(bool,'F_0') != s(bool,X79) | ~p(s(bool,X80))) ) | $spl2),
  inference(resolution,[],[f295,f199])).
fof(f1059,plain,(
  ( ! [X78,X77] : (s(bool,'F_0') != s(bool,X77) | p(s(bool,X78))) ) | $spl2),
  inference(subsumption_resolution,[],[f1027,f238])).
fof(f1027,plain,(
  ( ! [X78,X77] : (s(bool,'F_0') != s(bool,X77) | p(s(bool,X78)) | ~p(s(bool,'T_0'))) ) | $spl2),
  inference(resolution,[],[f295,f203])).
fof(f1026,plain,(
  ( ! [X76,X75] : (s(bool,'F_0') != s(bool,X75) | p(s(bool,X76))) ) | $spl2),
  inference(resolution,[],[f295,f218])).
fof(f1025,plain,(
  ( ! [X74,X73] : (s(bool,'F_0') != s(bool,X73) | p(s(bool,X74))) ) | $spl2),
  inference(resolution,[],[f295,f220])).
fof(f1024,plain,(
  ( ! [X72,X71] : (s(bool,'F_0') != s(bool,X71) | p(s(bool,X72))) ) | $spl2),
  inference(resolution,[],[f295,f236])).
fof(f297,plain,(
  ( ! [X12,X11] : (~p(s(bool,X11)) | s(bool,X11) != s(bool,X12) | p(s(bool,X12))) ) | $spl6),
  inference(cnf_transformation,[],[f297_D])).
fof(f297_D,plain,(
  ( ! [X12,X11] : (~p(s(bool,X11)) | s(bool,X11) != s(bool,X12) | p(s(bool,X12))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f967,plain,(
  ( ! [X99,X97,X98] : (s(bool,'F_0') != s(bool,X97) | p(s(bool,X98)) | ~p(s(bool,X99)) | s(bool,X98) != s(bool,X99)) ) | $spl17),
  inference(subsumption_resolution,[],[f881,f251])).
fof(f881,plain,(
  ( ! [X99,X97,X98] : (s(bool,'F_0') != s(bool,X97) | p(s(bool,X98)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X99)) | s(bool,X98) != s(bool,X99)) ) | $spl17),
  inference(superposition,[],[f185,f530])).
fof(f958,plain,(
  ( ! [X68,X69,X67] : (s(bool,'F_0') != s(bool,X67) | ~p(s(bool,X68)) | p(s(bool,X69)) | s(bool,X68) != s(bool,X69)) ) | $spl17),
  inference(subsumption_resolution,[],[f871,f185])).
fof(f871,plain,(
  ( ! [X68,X69,X67] : (s(bool,'F_0') != s(bool,X67) | p(s(bool,X67)) | ~p(s(bool,X68)) | p(s(bool,X69)) | s(bool,X68) != s(bool,X69)) ) | $spl17),
  inference(superposition,[],[f183,f530])).
fof(f950,plain,(
  ( ! [X41,X42,X40] : (s(bool,'F_0') != s(bool,X40) | p(s(bool,X41)) | ~p(s(bool,X42)) | s(bool,X41) != s(bool,X42)) ) | $spl17),
  inference(subsumption_resolution,[],[f862,f251])).
fof(f862,plain,(
  ( ! [X41,X42,X40] : (s(bool,'F_0') != s(bool,X40) | p(s(bool,X41)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X42)) | s(bool,X41) != s(bool,X42)) ) | $spl17),
  inference(superposition,[],[f181,f530])).
fof(f945,plain,(
  ( ! [X24,X23,X22] : (s(bool,'F_0') != s(bool,X22) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X23) != s(bool,X24)) ) | $spl17),
  inference(subsumption_resolution,[],[f856,f185])).
fof(f856,plain,(
  ( ! [X24,X23,X22] : (s(bool,'F_0') != s(bool,X22) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X23) != s(bool,X24)) ) | $spl17),
  inference(superposition,[],[f179,f530])).
fof(f827,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))))) | $spl37),
  inference(cnf_transformation,[],[f827_D])).
fof(f827_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f821,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))))) | $spl15),
  inference(superposition,[],[f303,f246])).
fof(f820,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))))) | $spl15),
  inference(superposition,[],[f303,f248])).
fof(f798,plain,(
  $false | $spl4),
  inference(trivial_inequality_removal,[],[f781])).
fof(f781,plain,(
  s(bool,'F_0') != s(bool,'F_0') | $spl4),
  inference(superposition,[],[f296,f271])).
fof(f797,plain,(
  $false | $spl4),
  inference(equality_resolution,[],[f296])).
fof(f303,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))) | $spl15),
  inference(cnf_transformation,[],[f303_D])).
fof(f303_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f727,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2)))),
  inference(superposition,[],[f273,f246])).
fof(f726,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2)))),
  inference(superposition,[],[f273,f248])).
fof(f691,plain,(
  ( ! [X99,X97,X98] : (s(bool,'F_0') != s(bool,X97) | p(s(bool,X98)) | ~p(s(bool,X99)) | s(bool,X98) != s(bool,X99)) )),
  inference(subsumption_resolution,[],[f604,f251])).
fof(f604,plain,(
  ( ! [X99,X97,X98] : (s(bool,'F_0') != s(bool,X97) | p(s(bool,X98)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | ~p(s(bool,X99)) | s(bool,X98) != s(bool,X99)) )),
  inference(superposition,[],[f185,f271])).
fof(f682,plain,(
  ( ! [X68,X69,X67] : (s(bool,'F_0') != s(bool,X67) | ~p(s(bool,X68)) | p(s(bool,X69)) | s(bool,X68) != s(bool,X69)) )),
  inference(subsumption_resolution,[],[f594,f185])).
fof(f594,plain,(
  ( ! [X68,X69,X67] : (s(bool,'F_0') != s(bool,X67) | p(s(bool,X67)) | ~p(s(bool,X68)) | p(s(bool,X69)) | s(bool,X68) != s(bool,X69)) )),
  inference(superposition,[],[f183,f271])).
fof(f674,plain,(
  ( ! [X41,X42,X40] : (s(bool,'F_0') != s(bool,X40) | p(s(bool,X41)) | ~p(s(bool,X42)) | s(bool,X41) != s(bool,X42)) )),
  inference(subsumption_resolution,[],[f585,f251])).
fof(f585,plain,(
  ( ! [X41,X42,X40] : (s(bool,'F_0') != s(bool,X40) | p(s(bool,X41)) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) | ~p(s(bool,X42)) | s(bool,X41) != s(bool,X42)) )),
  inference(superposition,[],[f181,f271])).
fof(f668,plain,(
  ( ! [X24,X23,X22] : (s(bool,'F_0') != s(bool,X22) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X23) != s(bool,X24)) )),
  inference(subsumption_resolution,[],[f579,f185])).
fof(f579,plain,(
  ( ! [X24,X23,X22] : (s(bool,'F_0') != s(bool,X22) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X23) != s(bool,X24)) )),
  inference(superposition,[],[f179,f271])).
fof(f563,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2)))),
  inference(superposition,[],[f271,f246])).
fof(f562,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2)))),
  inference(superposition,[],[f271,f248])).
fof(f458,plain,(
  ( ! [X9] : (s(bool,X9) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,X9))) ) | $spl24),
  inference(cnf_transformation,[],[f458_D])).
fof(f458_D,plain,(
  ( ! [X9] : (s(bool,X9) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ~p(s(bool,X9))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f535,plain,(
  ( ! [X35,X34] : (p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X35) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl17),
  inference(resolution,[],[f305,f251])).
fof(f521,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X30) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X29) != s(bool,X31)) ) | $spl17),
  inference(resolution,[],[f305,f185])).
fof(f519,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl17),
  inference(resolution,[],[f305,f184])).
fof(f459,plain,(
  ( ! [X13] : (s(bool,X13) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl26),
  inference(cnf_transformation,[],[f459_D])).
fof(f459_D,plain,(
  ( ! [X13] : (s(bool,X13) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f518,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,X20)) | p(s(bool,X21)) | s(bool,X22) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X20) != s(bool,X21)) ) | $spl17),
  inference(resolution,[],[f305,f183])).
fof(f517,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl17),
  inference(resolution,[],[f305,f183])).
fof(f516,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X14) != s(bool,X16)) ) | $spl17),
  inference(resolution,[],[f305,f181])).
fof(f515,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,X11)) | p(s(bool,X12)) | s(bool,X13) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X11) != s(bool,X12)) ) | $spl17),
  inference(resolution,[],[f305,f179])).
fof(f514,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,X9) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl17),
  inference(resolution,[],[f305,f179])).
fof(f487,plain,(
  ( ! [X35,X34] : (p(s(bool,X34)) | p(s(bool,X35)) | s(bool,X35) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(resolution,[],[f304,f251])).
fof(f475,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X29) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X30) != s(bool,X31)) ) | $spl16),
  inference(resolution,[],[f304,f185])).
fof(f474,plain,(
  ( ! [X28,X26,X27] : (p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,X27) | s(bool,X28) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(resolution,[],[f304,f185])).
fof(f472,plain,(
  ( ! [X21,X22,X20] : (p(s(bool,X20)) | ~p(s(bool,X21)) | p(s(bool,X22)) | s(bool,X22) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(resolution,[],[f304,f184])).
fof(f471,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(resolution,[],[f304,f183])).
fof(f470,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,X14) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X15) != s(bool,X16)) ) | $spl16),
  inference(resolution,[],[f304,f181])).
fof(f469,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | ~p(s(bool,X12)) | s(bool,X11) != s(bool,X12) | s(bool,X13) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(resolution,[],[f304,f181])).
fof(f468,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,X9) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(resolution,[],[f304,f179])).
fof(f438,plain,(
  ( ! [X35,X34] : (p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X35) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl17),
  inference(resolution,[],[f305,f251])).
fof(f424,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X30) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X29) != s(bool,X31)) ) | $spl17),
  inference(resolution,[],[f305,f185])).
fof(f422,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl17),
  inference(resolution,[],[f305,f184])).
fof(f421,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,X20)) | p(s(bool,X21)) | s(bool,X22) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X20) != s(bool,X21)) ) | $spl17),
  inference(resolution,[],[f305,f183])).
fof(f420,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl17),
  inference(resolution,[],[f305,f183])).
fof(f419,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X14) != s(bool,X16)) ) | $spl17),
  inference(resolution,[],[f305,f181])).
fof(f418,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,X11)) | p(s(bool,X12)) | s(bool,X13) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X11) != s(bool,X12)) ) | $spl17),
  inference(resolution,[],[f305,f179])).
fof(f417,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,X9) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl17),
  inference(resolution,[],[f305,f179])).
fof(f414,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f382,f300])).
fof(f382,plain,(
  ( ! [X47] : (~p(s(bool,X47))) ) | $spl12),
  inference(resolution,[],[f300,f199])).
fof(f377,plain,(
  $false | $spl12),
  inference(resolution,[],[f300,f237])).
fof(f385,plain,(
  $false | $spl12),
  inference(resolution,[],[f300,f239])).
fof(f389,plain,(
  $false | $spl12),
  inference(resolution,[],[f300,f173])).
fof(f350,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))) | $spl22),
  inference(cnf_transformation,[],[f350_D])).
fof(f350_D,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f332,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2)))),
  inference(superposition,[],[f172,f246])).
fof(f331,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.num.num','const.arithmetic.ZERO_0'),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2)))),
  inference(superposition,[],[f172,f248])).
fof(f347,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))) ) | $spl18),
  inference(cnf_transformation,[],[f347_D])).
fof(f347_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f330,plain,(
  ( ! [X26,X27] : (p(s(bool,X26)) | p(s(bool,X27)) | s(bool,X27) != s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))) )),
  inference(resolution,[],[f172,f251])).
fof(f318,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1))))))) | s(bool,X22) != s(bool,X23)) )),
  inference(resolution,[],[f172,f185])).
fof(f348,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))) ) | $spl20),
  inference(cnf_transformation,[],[f348_D])).
fof(f348_D,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f317,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,X19) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))) )),
  inference(resolution,[],[f172,f185])).
fof(f315,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))) )),
  inference(resolution,[],[f172,f184])).
fof(f314,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))) )),
  inference(resolution,[],[f172,f183])).
fof(f313,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1))))))) | s(bool,X7) != s(bool,X8)) )),
  inference(resolution,[],[f172,f181])).
fof(f312,plain,(
  ( ! [X4,X5,X3] : (p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X4) | s(bool,X5) != s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))) )),
  inference(resolution,[],[f172,f181])).
fof(f311,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.bool.IN_2'(s('type.num.num',sK2),s(fun('type.num.num',bool),'const.sptree.domain_1'(s('type.sptree.spt'(sK0),'const.misc.fromList2_1'(s('type.list.list'(sK0),sK1)))))))) )),
  inference(resolution,[],[f172,f179])).
fof(f279,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2)))),
  inference(superposition,[],[f173,f246])).
fof(f278,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK2)))),
  inference(superposition,[],[f173,f248])).
fof(f294,plain,(
  ( ! [X9] : (~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) ) | $spl0),
  inference(cnf_transformation,[],[f294_D])).
fof(f294_D,plain,(
  ( ! [X9] : (~p(s(bool,X9)) | s(bool,X9) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f276,plain,(
  ( ! [X35,X34] : (p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X35) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) )),
  inference(resolution,[],[f173,f251])).
fof(f262,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X30) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2))) | s(bool,X29) != s(bool,X31)) )),
  inference(resolution,[],[f173,f185])).
fof(f260,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) )),
  inference(resolution,[],[f173,f184])).
fof(f296,plain,(
  ( ! [X13] : (s(bool,X13) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) ) | $spl4),
  inference(cnf_transformation,[],[f296_D])).
fof(f296_D,plain,(
  ( ! [X13] : (s(bool,X13) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f259,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,X20)) | p(s(bool,X21)) | s(bool,X22) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2))) | s(bool,X20) != s(bool,X21)) )),
  inference(resolution,[],[f173,f183])).
fof(f258,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) )),
  inference(resolution,[],[f173,f183])).
fof(f257,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,X15) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2))) | s(bool,X14) != s(bool,X16)) )),
  inference(resolution,[],[f173,f181])).
fof(f256,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,X11)) | p(s(bool,X12)) | s(bool,X13) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2))) | s(bool,X11) != s(bool,X12)) )),
  inference(resolution,[],[f173,f179])).
fof(f255,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,X9) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK2)))) )),
  inference(resolution,[],[f173,f179])).
% SZS output end Proof for thm.misc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 241
% Passive clauses: 2503
% Generated clauses: 19277
% Final active clauses: 148
% Final passive clauses: 1732
% Input formulas: 80
% Initial clauses: 79
% 
% Selected by SInE selection: 33
% SInE iterations: 1
% 
% Duplicate literals: 663
% Trivial inequalities: 543
% Fw subsumption resolutions: 3472
% Fw demodulations: 2043
% Bw demodulations: 56
% 
% Simple tautologies: 587
% Equational tautologies: 32
% Forward subsumptions: 8910
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 1189
% Forward superposition: 5585
% Backward superposition: 5342
% Self superposition: 64
% Equality factoring: 62
% Equality resolution: 83
% 
% Split clauses: 615
% Split components: 1299
% SAT solver clauses: 661
% SAT solver unit clauses: 20
% SAT solver binary clauses: 289
% 
% Sat splits: 615
% Sat splitting refutations: 35
% 
% Memory used [KB]: 7164
% Time elapsed: 0.512 s
% ------------------------------
% ------------------------------
% Success in time 12.25 s
