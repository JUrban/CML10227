Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.inferProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferProps
% SZS output start Proof for thm.inferProps
fof(f907,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f906,f216,f392,f390,f388,f904,f905])).
fof(f905,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f390,f217])).
fof(f217,plain,(
  ( ! [X4] : (s('type.ast.t',sK12) != s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',X4)))) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  (s('type.ast.t',sK12) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),sK13))) | s('type.ast.t',sK12) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',sK14))) | s('type.ast.t',sK12) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),sK15),s('type.ast.tctor',sK16)))) & ! [X4] : s('type.ast.t',sK12) != s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',X4))) & ! [X2,X3] : s('type.ast.t',sK12) != s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X2),s('type.ast.tctor',X3))) & ! [X1] : s('type.ast.t',sK12) != s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16])],[f134])).
fof(f134,plain,(
  ? [X0] : ((? [X8] : s('type.ast.t',X0) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X8))) | ? [X7] : s('type.ast.t',X0) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',X7))) | ? [X5,X6] : s('type.ast.t',X0) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X5),s('type.ast.tctor',X6)))) & ! [X4] : s('type.ast.t',X0) != s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',X4))) & ! [X2,X3] : s('type.ast.t',X0) != s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X2),s('type.ast.tctor',X3))) & ! [X1] : s('type.ast.t',X0) != s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X1))))),
  inference(rectify,[],[f94])).
fof(f94,plain,(
  ? [X0] : ((? [X4] : s('type.ast.t',X0) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X4))) | ? [X3] : s('type.ast.t',X0) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',X3))) | ? [X1,X2] : s('type.ast.t',X0) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X1),s('type.ast.tctor',X2)))) & ! [X8] : s('type.ast.t',X0) != s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',X8))) & ! [X6,X7] : s('type.ast.t',X0) != s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X6),s('type.ast.tctor',X7))) & ! [X5] : s('type.ast.t',X0) != s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X5))))),
  inference(flattening,[],[f93])).
fof(f93,plain,(
  ? [X0] : ((? [X4] : s('type.ast.t',X0) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X4))) | ? [X3] : s('type.ast.t',X0) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',X3))) | ? [X1,X2] : s('type.ast.t',X0) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X1),s('type.ast.tctor',X2)))) & (! [X8] : s('type.ast.t',X0) != s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',X8))) & ! [X6,X7] : s('type.ast.t',X0) != s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X6),s('type.ast.tctor',X7))) & ! [X5] : s('type.ast.t',X0) != s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X5)))))),
  inference(ennf_transformation,[],[f38])).
fof(f38,plain,(
  ~! [X0] : ((? [X4] : s('type.ast.t',X0) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X4))) | ? [X3] : s('type.ast.t',X0) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',X3))) | ? [X1,X2] : s('type.ast.t',X0) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X1),s('type.ast.tctor',X2)))) => (? [X8] : s('type.ast.t',X0) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',X8))) | ? [X6,X7] : s('type.ast.t',X0) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X6),s('type.ast.tctor',X7))) | ? [X5] : s('type.ast.t',X0) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X5)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((? [X7] : s('type.ast.t',X6) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X7))) | ? [X8] : s('type.ast.t',X6) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',X8))) | ? [X9,X10] : s('type.ast.t',X6) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X9),s('type.ast.tctor',X10)))) => (? [X8] : s('type.ast.t',X6) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',X8))) | ? [X9,X10] : s('type.ast.t',X6) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X9),s('type.ast.tctor',X10))) | ? [X7] : s('type.ast.t',X6) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((? [X7] : s('type.ast.t',X6) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X7))) | ? [X8] : s('type.ast.t',X6) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',X8))) | ? [X9,X10] : s('type.ast.t',X6) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X9),s('type.ast.tctor',X10)))) => (? [X8] : s('type.ast.t',X6) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',X8))) | ? [X9,X10] : s('type.ast.t',X6) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X9),s('type.ast.tctor',X10))) | ? [X7] : s('type.ast.t',X6) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X7)))))),
  file('thm.inferProps.inferProps_|49|64_prove_ltb','thm.inferProps.inferProps_|49|64_prove_ltb')).
fof(f904,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f392,f218])).
fof(f218,plain,(
  ( ! [X2,X3] : (s('type.ast.t',sK12) != s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X2),s('type.ast.tctor',X3)))) )),
  inference(cnf_transformation,[],[f135])).
fof(f388,plain,(
  s('type.ast.t',sK12) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),sK13))) | $spl0),
  inference(cnf_transformation,[],[f388_D])).
fof(f388_D,plain,(
  s('type.ast.t',sK12) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),sK13))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f390,plain,(
  s('type.ast.t',sK12) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',sK14))) | $spl2),
  inference(cnf_transformation,[],[f390_D])).
fof(f390_D,plain,(
  s('type.ast.t',sK12) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',sK14))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f392,plain,(
  s('type.ast.t',sK12) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),sK15),s('type.ast.tctor',sK16))) | $spl4),
  inference(cnf_transformation,[],[f392_D])).
fof(f392_D,plain,(
  s('type.ast.t',sK12) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),sK15),s('type.ast.tctor',sK16))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f216,plain,(
  s('type.ast.t',sK12) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),sK15),s('type.ast.tctor',sK16))) | s('type.ast.t',sK12) = s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',sK14))) | s('type.ast.t',sK12) = s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),sK13)))),
  inference(cnf_transformation,[],[f135])).
fof(f906,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f388,f219])).
fof(f219,plain,(
  ( ! [X1] : (s('type.ast.t',sK12) != s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X1)))) )),
  inference(cnf_transformation,[],[f135])).
% SZS output end Proof for thm.inferProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 119
% Passive clauses: 253
% Generated clauses: 685
% Final active clauses: 119
% Final passive clauses: 107
% Input formulas: 36
% Initial clauses: 167
% 
% Duplicate literals: 19
% Fw subsumption resolutions: 32
% 
% Simple tautologies: 63
% Equational tautologies: 2
% Forward subsumptions: 306
% 
% Binary resolution: 383
% Factoring: 65
% Equality resolution: 3
% 
% Split clauses: 30
% Split components: 62
% SAT solver clauses: 38
% SAT solver unit clauses: 7
% SAT solver binary clauses: 17
% SAT solver learnt clauses: 1
% 
% Sat splits: 30
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 37
% TWLsolver calls for satisfiability: 17
% 
% Memory used [KB]: 895
% Time elapsed: 0.046 s
% ------------------------------
% ------------------------------
% Success in time 0.056 s
