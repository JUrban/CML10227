Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.typeSysProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.typeSysProps
% SZS output start Proof for thm.typeSysProps
fof(f2495,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f2494])).
fof(f2494,plain,(
  s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK1)),sK2) != s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK1)),sK2)),
  inference(superposition,[],[f24,f31])).
fof(f31,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),X2) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),X2)))) )),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),X2) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),X2)))),
  inference(flattening,[],[f15])).
fof(f15,plain,(
  ! [X0,X1] : ! [X2] : s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),X2) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),X2)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7] : ! [X10] : s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X7)),X10) = s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X7)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X7)),'const.pair.,_2'(s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X7)),X10)))),
  file('thm.typeSysProps.merge_tenvC_empty','thm.evalProps.merge_alist_mod_env_empty')).
fof(f24,plain,(
  s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK1)),sK2) != s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK1)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK1)),'const.pair.,_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK1),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK1)),sK2)))),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK1)),sK2) != s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK1)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK1)),'const.pair.,_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK1),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK1)),sK2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f19])).
fof(f19,plain,(
  ? [X0,X1,X2] : s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),X2) != s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),X2)))),
  inference(ennf_transformation,[],[f11])).
fof(f11,plain,(
  ~! [X0,X1,X2] : s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),X2) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),X2)))),
  inference(flattening,[],[f10])).
fof(f10,plain,(
  ~! [X0,X1] : ! [X2] : s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),X2) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X1)),X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X7)),X8) = s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X7)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X7)),'const.pair.,_2'(s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X7)),X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X7)),X8) = s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X7)),'const.semanticPrimitives.merge_alist_mod_env_2'(s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X7)),'const.pair.,_2'(s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X7),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X7)),X8)))),
  file('thm.typeSysProps.merge_tenvC_empty','thm.typeSysProps.merge_tenvC_empty')).
% SZS output end Proof for thm.typeSysProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 21
% Passive clauses: 458
% Generated clauses: 2369
% Final active clauses: 19
% Final passive clauses: 429
% Input formulas: 8
% Initial clauses: 9
% 
% Duplicate literals: 291
% Trivial inequalities: 32
% Fw subsumption resolutions: 100
% 
% Simple tautologies: 91
% Equational tautologies: 80
% Forward subsumptions: 954
% 
% Binary resolution: 12
% Forward superposition: 692
% Backward superposition: 794
% Self superposition: 223
% Equality factoring: 202
% Equality resolution: 1
% 
% Split clauses: 114
% Split components: 228
% SAT solver clauses: 367
% SAT solver unit clauses: 217
% SAT solver binary clauses: 82
% 
% Sat splits: 114
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 367
% TWLsolver calls for satisfiability: 11
% 
% Memory used [KB]: 1279
% Time elapsed: 0.194 s
% ------------------------------
% ------------------------------
% Success in time 0.184 s
