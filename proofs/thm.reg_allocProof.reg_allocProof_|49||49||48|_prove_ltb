Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.reg_allocProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.reg_allocProof
% SZS output start Proof for thm.reg_allocProof
fof(f4378,plain,(
  $false),
  inference(equality_resolution,[],[f864])).
fof(f864,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),sK1),s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK2))) != s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X1),s('type.list.list'('type.num.num'),X2),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X0)))) )),
  inference(superposition,[],[f74,f107])).
fof(f107,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X1),s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK8(X2,X1,X0)),s('type.list.list'('type.num.num'),sK9(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X1),s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK8(X2,X1,X0)),s('type.list.list'('type.num.num'),sK9(X2,X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8,sK9])],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2] : ? [X3,X4] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3),s('type.list.list'('type.num.num'),X4))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X1),s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X10,X7,X8] : ? [X9,X11] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X9),s('type.list.list'('type.num.num'),X11))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X7),s('type.list.list'('type.num.num'),X10),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X8)))),
  file('thm.reg_allocProof.reg_allocProof_|49||49||48|_prove_ltb','thm.reg_allocProof.reg_allocProof_|49||48|3_prove_ltb')).
fof(f74,plain,(
  ( ! [X4,X3] : (s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3),s('type.list.list'('type.num.num'),X4))) != s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),sK1),s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK2)))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X3,X4] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3),s('type.list.list'('type.num.num'),X4))) != s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),sK1),s('type.list.list'('type.num.num'),sK0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f49])).
fof(f49,plain,(
  ? [X0,X1,X2] : ! [X3,X4] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3),s('type.list.list'('type.num.num'),X4))) != s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X1),s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1,X2] : ? [X3,X4] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3),s('type.list.list'('type.num.num'),X4))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X1),s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ? [X9,X10] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X9),s('type.list.list'('type.num.num'),X10))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X7),s('type.list.list'('type.num.num'),X6),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ? [X9,X10] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X9),s('type.list.list'('type.num.num'),X10))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X7),s('type.list.list'('type.num.num'),X6),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X8)))),
  file('thm.reg_allocProof.reg_allocProof_|49||49||48|_prove_ltb','thm.reg_allocProof.reg_allocProof_|49||49||48|_prove_ltb')).
% SZS output end Proof for thm.reg_allocProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 80
% Passive clauses: 444
% Generated clauses: 4185
% Final active clauses: 78
% Final passive clauses: 322
% Input formulas: 21
% Initial clauses: 39
% 
% Duplicate literals: 306
% Trivial inequalities: 260
% Fw subsumption resolutions: 416
% Fw demodulations: 267
% Bw demodulations: 2
% 
% Simple tautologies: 137
% Equational tautologies: 21
% Forward subsumptions: 2114
% 
% Binary resolution: 23
% Forward superposition: 1300
% Backward superposition: 1410
% Self superposition: 56
% Equality factoring: 49
% Equality resolution: 13
% 
% Split clauses: 143
% Split components: 297
% SAT solver clauses: 261
% SAT solver unit clauses: 13
% SAT solver binary clauses: 77
% 
% Sat splits: 143
% 
% TWLsolver clauses: 261
% TWLsolver calls for satisfiability: 39
% 
% Memory used [KB]: 2430
% Time elapsed: 0.190 s
% ------------------------------
% ------------------------------
% Success in time 0.19 s
