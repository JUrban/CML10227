Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.typeSoundInvariants
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.typeSoundInvariants
% SZS output start Proof for thm.typeSoundInvariants
fof(f699,plain,(
  $false),
  inference(subsumption_resolution,[],[f698,f24])).
fof(f24,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.typeSoundInvariants.datatype_store_t',aHL_TRUTH)).
fof(f698,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f23,f30])).
fof(f30,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0,X1] : s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X0,X1)))),
  inference(flattening,[],[f15])).
fof(f15,plain,(
  ! [X0] : ! [X1] : s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X0,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7] : ! [X8] : s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X7,X8)))),
  file('thm.typeSoundInvariants.datatype_store_t','thm.bool.DATATYPE_TAG_THM')).
fof(f23,plain,(
  ~p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool),happ(s(fun('type.typeSoundInvariants.store_t',fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool)),happ(s(fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),fun('type.typeSoundInvariants.store_t',fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool))),sK0),s(fun('type.ast.t','type.typeSoundInvariants.store_t'),'const.typeSoundInvariants.Ref_t_0'))),s('type.typeSoundInvariants.store_t','const.typeSoundInvariants.W8array_t_0'))),s(fun('type.ast.t','type.typeSoundInvariants.store_t'),'const.typeSoundInvariants.Varray_t_0'))))))),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ~p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool),happ(s(fun('type.typeSoundInvariants.store_t',fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool)),happ(s(fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),fun('type.typeSoundInvariants.store_t',fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool))),sK0),s(fun('type.ast.t','type.typeSoundInvariants.store_t'),'const.typeSoundInvariants.Ref_t_0'))),s('type.typeSoundInvariants.store_t','const.typeSoundInvariants.W8array_t_0'))),s(fun('type.ast.t','type.typeSoundInvariants.store_t'),'const.typeSoundInvariants.Varray_t_0'))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f19])).
fof(f19,plain,(
  ? [X0] : ~p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool),happ(s(fun('type.typeSoundInvariants.store_t',fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool)),happ(s(fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),fun('type.typeSoundInvariants.store_t',fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool))),X0),s(fun('type.ast.t','type.typeSoundInvariants.store_t'),'const.typeSoundInvariants.Ref_t_0'))),s('type.typeSoundInvariants.store_t','const.typeSoundInvariants.W8array_t_0'))),s(fun('type.ast.t','type.typeSoundInvariants.store_t'),'const.typeSoundInvariants.Varray_t_0'))))))),
  inference(ennf_transformation,[],[f11])).
fof(f11,plain,(
  ~! [X0] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool),happ(s(fun('type.typeSoundInvariants.store_t',fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool)),happ(s(fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),fun('type.typeSoundInvariants.store_t',fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool))),X0),s(fun('type.ast.t','type.typeSoundInvariants.store_t'),'const.typeSoundInvariants.Ref_t_0'))),s('type.typeSoundInvariants.store_t','const.typeSoundInvariants.W8array_t_0'))),s(fun('type.ast.t','type.typeSoundInvariants.store_t'),'const.typeSoundInvariants.Varray_t_0'))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool),happ(s(fun('type.typeSoundInvariants.store_t',fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool)),happ(s(fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),fun('type.typeSoundInvariants.store_t',fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool))),X6),s(fun('type.ast.t','type.typeSoundInvariants.store_t'),'const.typeSoundInvariants.Ref_t_0'))),s('type.typeSoundInvariants.store_t','const.typeSoundInvariants.W8array_t_0'))),s(fun('type.ast.t','type.typeSoundInvariants.store_t'),'const.typeSoundInvariants.Varray_t_0'))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool),happ(s(fun('type.typeSoundInvariants.store_t',fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool)),happ(s(fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),fun('type.typeSoundInvariants.store_t',fun(fun('type.ast.t','type.typeSoundInvariants.store_t'),bool))),X6),s(fun('type.ast.t','type.typeSoundInvariants.store_t'),'const.typeSoundInvariants.Ref_t_0'))),s('type.typeSoundInvariants.store_t','const.typeSoundInvariants.W8array_t_0'))),s(fun('type.ast.t','type.typeSoundInvariants.store_t'),'const.typeSoundInvariants.Varray_t_0'))))))),
  file('thm.typeSoundInvariants.datatype_store_t','thm.typeSoundInvariants.datatype_store_t')).
% SZS output end Proof for thm.typeSoundInvariants
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 20
% Passive clauses: 72
% Generated clauses: 637
% Final active clauses: 18
% Final passive clauses: 43
% Input formulas: 9
% Initial clauses: 9
% 
% Duplicate literals: 98
% Trivial inequalities: 14
% Fw subsumption resolutions: 24
% Fw demodulations: 30
% 
% Simple tautologies: 37
% Equational tautologies: 17
% Forward subsumptions: 329
% 
% Binary resolution: 6
% Forward superposition: 242
% Backward superposition: 114
% Self superposition: 49
% Equality factoring: 40
% Equality resolution: 4
% 
% Split clauses: 12
% Split components: 24
% SAT solver clauses: 21
% SAT solver unit clauses: 4
% SAT solver binary clauses: 15
% 
% Sat splits: 12
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 21
% TWLsolver calls for satisfiability: 9
% 
% Memory used [KB]: 767
% Time elapsed: 0.021 s
% ------------------------------
% ------------------------------
% Success in time 0.021 s
