Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.modSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.modSem
% SZS output start Proof for thm.modSem
fof(f6572,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f6571,f223,f457,f455,f453,f451,f449,f447,f445,f443,f441,f439,f437,f435,f433,f431,f429,f427,f425,f423,f421,f419,f417,f6569,f6568,f6567,f6566,f6565,f6564,f6563,f6012,f6011,f6010,f6009,f6008,f6007,f6006,f6005,f6004,f6003,f6002,f6001,f6570])).
fof(f6570,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f417,f226])).
fof(f226,plain,(
  ( ! [X67] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',X67)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  (s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',sK13))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),sK14))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK15),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK16))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK17),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK18))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK19))))),s('type.list.list'('type.modSem.v'),sK20))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK21),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK22))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK23))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK24),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK25))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK26))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK27),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK28),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK29))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK30))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK31),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK32),s('type.list.list'('type.modSem.v'),sK33))))))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK34),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK35))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK36))))),s('type.list.list'('type.modSem.v'),sK37))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK38),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK39))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK40))))),s('type.list.list'('type.modSem.v'),sK41))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK42),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK43))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK44))))),s('type.list.list'('type.modSem.v'),sK45))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK46),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK47))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),sK48),s('type.list.list'('type.modSem.v'),sK49))),s('type.list.list'('type.modSem.v'),sK50))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK51),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK52))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK53),s('type.list.list'('type.string.char'),sK54),s('type.modLang.exp',sK55))),s('type.list.list'('type.modSem.v'),sK56))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK57),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK58))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK59),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),sK60),s('type.list.list'('type.string.char'),sK61))),s('type.list.list'('type.modSem.v'),sK62))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK63),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK64))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',sK65))),s('type.list.list'('type.modSem.v'),sK66))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK67),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK68))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),sK69))),s('type.list.list'('type.modSem.v'),sK70))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK71),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),sK72),s('type.list.list'('type.string.char'),sK73))))))))),s('type.list.list'('type.modSem.v'),sK74))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK75),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK76))))))),s('type.list.list'('type.modSem.v'),sK77))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK78),s('type.list.list'('type.string.char'),sK79),s('type.modLang.exp',sK80))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK81),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),sK82),s('type.list.list'('type.string.char'),sK83))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',sK84))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),sK85)))) & ! [X72,X73] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X72),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X73))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) & ! [X68,X69,X70,X71] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X68),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X69))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X70))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X71),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) & ! [X67] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',X67))) & ! [X66] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),X66))) & ! [X62,X63,X64,X65] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X62),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X63))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X64))))),s('type.list.list'('type.modSem.v'),X65))))) & ! [X59,X60,X61] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X59),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X60))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X61))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) & ! [X53,X54,X55,X56,X57,X58] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X53),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X54))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X55))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X56),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X57),s('type.list.list'('type.modSem.v'),X58))))))))) & ! [X49,X50,X51,X52] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X49),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X50))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X51))))),s('type.list.list'('type.modSem.v'),X52))))) & ! [X45,X46,X47,X48] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X45),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X46))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X47))))),s('type.list.list'('type.modSem.v'),X48))))) & ! [X41,X42,X43,X44] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X41),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X42))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X43))))),s('type.list.list'('type.modSem.v'),X44))))) & ! [X36,X37,X38,X39,X40] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X36),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X37))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),X38),s('type.list.list'('type.modSem.v'),X39))),s('type.list.list'('type.modSem.v'),X40))))) & ! [X30,X31,X32,X33,X34,X35] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X30),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X31))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X32),s('type.list.list'('type.string.char'),X33),s('type.modLang.exp',X34))),s('type.list.list'('type.modSem.v'),X35))))) & ! [X24,X25,X26,X27,X28,X29] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X24),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X25))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X26),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X27),s('type.list.list'('type.string.char'),X28))),s('type.list.list'('type.modSem.v'),X29))))) & ! [X20,X21,X22,X23] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X20),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X21))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X22))),s('type.list.list'('type.modSem.v'),X23))))) & ! [X16,X17,X18,X19] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X16),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X17))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X18))),s('type.list.list'('type.modSem.v'),X19))))) & ! [X12,X13,X14,X15] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X12),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X13),s('type.list.list'('type.string.char'),X14))))))))),s('type.list.list'('type.modSem.v'),X15))) & ! [X9,X10,X11] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X10))))))),s('type.list.list'('type.modSem.v'),X11))) & ! [X6,X7,X8] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X6),s('type.list.list'('type.string.char'),X7),s('type.modLang.exp',X8))) & ! [X3,X4,X5] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X4),s('type.list.list'('type.string.char'),X5))) & ! [X2] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X2))) & ! [X1] : s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36,sK37,sK38,sK39,sK40,sK41,sK42,sK43,sK44,sK45,sK46,sK47,sK48,sK49,sK50,sK51,sK52,sK53,sK54,sK55,sK56,sK57,sK58,sK59,sK60,sK61,sK62,sK63,sK64,sK65,sK66,sK67,sK68,sK69,sK70,sK71,sK72,sK73,sK74,sK75,sK76,sK77,sK78,sK79,sK80,sK81,sK82,sK83,sK84,sK85])],[f137])).
fof(f137,plain,(
  ? [X0] : ((? [X146] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',X146))) | ? [X145] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),X145))) | ? [X143,X144] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X143),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X144))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) | ? [X139,X140,X141,X142] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X139),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X140))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X141))))),s('type.list.list'('type.modSem.v'),X142))))) | ? [X136,X137,X138] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X136),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X137))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X138))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) | ? [X132,X133,X134,X135] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X132),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X133))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X134))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X135),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) | ? [X126,X127,X128,X129,X130,X131] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X126),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X127))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X128))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X129),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X130),s('type.list.list'('type.modSem.v'),X131))))))))) | ? [X122,X123,X124,X125] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X122),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X123))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X124))))),s('type.list.list'('type.modSem.v'),X125))))) | ? [X118,X119,X120,X121] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X118),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X119))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X120))))),s('type.list.list'('type.modSem.v'),X121))))) | ? [X114,X115,X116,X117] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X114),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X115))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X116))))),s('type.list.list'('type.modSem.v'),X117))))) | ? [X109,X110,X111,X112,X113] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X109),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X110))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),X111),s('type.list.list'('type.modSem.v'),X112))),s('type.list.list'('type.modSem.v'),X113))))) | ? [X103,X104,X105,X106,X107,X108] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X103),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X104))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X105),s('type.list.list'('type.string.char'),X106),s('type.modLang.exp',X107))),s('type.list.list'('type.modSem.v'),X108))))) | ? [X97,X98,X99,X100,X101,X102] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X97),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X98))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X99),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X100),s('type.list.list'('type.string.char'),X101))),s('type.list.list'('type.modSem.v'),X102))))) | ? [X93,X94,X95,X96] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X93),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X94))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X95))),s('type.list.list'('type.modSem.v'),X96))))) | ? [X89,X90,X91,X92] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X89),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X90))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X91))),s('type.list.list'('type.modSem.v'),X92))))) | ? [X85,X86,X87,X88] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X85),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X86),s('type.list.list'('type.string.char'),X87))))))))),s('type.list.list'('type.modSem.v'),X88))) | ? [X82,X83,X84] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X82),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X83))))))),s('type.list.list'('type.modSem.v'),X84))) | ? [X79,X80,X81] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X79),s('type.list.list'('type.string.char'),X80),s('type.modLang.exp',X81))) | ? [X76,X77,X78] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X76),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X77),s('type.list.list'('type.string.char'),X78))) | ? [X75] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X75))) | ? [X74] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X74)))) & ! [X72,X73] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X72),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X73))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) & ! [X68,X69,X70,X71] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X68),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X69))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X70))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X71),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) & ! [X67] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',X67))) & ! [X66] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),X66))) & ! [X62,X63,X64,X65] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X62),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X63))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X64))))),s('type.list.list'('type.modSem.v'),X65))))) & ! [X59,X60,X61] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X59),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X60))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X61))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) & ! [X53,X54,X55,X56,X57,X58] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X53),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X54))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X55))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X56),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X57),s('type.list.list'('type.modSem.v'),X58))))))))) & ! [X49,X50,X51,X52] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X49),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X50))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X51))))),s('type.list.list'('type.modSem.v'),X52))))) & ! [X45,X46,X47,X48] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X45),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X46))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X47))))),s('type.list.list'('type.modSem.v'),X48))))) & ! [X41,X42,X43,X44] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X41),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X42))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X43))))),s('type.list.list'('type.modSem.v'),X44))))) & ! [X36,X37,X38,X39,X40] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X36),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X37))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),X38),s('type.list.list'('type.modSem.v'),X39))),s('type.list.list'('type.modSem.v'),X40))))) & ! [X30,X31,X32,X33,X34,X35] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X30),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X31))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X32),s('type.list.list'('type.string.char'),X33),s('type.modLang.exp',X34))),s('type.list.list'('type.modSem.v'),X35))))) & ! [X24,X25,X26,X27,X28,X29] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X24),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X25))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X26),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X27),s('type.list.list'('type.string.char'),X28))),s('type.list.list'('type.modSem.v'),X29))))) & ! [X20,X21,X22,X23] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X20),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X21))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X22))),s('type.list.list'('type.modSem.v'),X23))))) & ! [X16,X17,X18,X19] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X16),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X17))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X18))),s('type.list.list'('type.modSem.v'),X19))))) & ! [X12,X13,X14,X15] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X12),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X13),s('type.list.list'('type.string.char'),X14))))))))),s('type.list.list'('type.modSem.v'),X15))) & ! [X9,X10,X11] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X10))))))),s('type.list.list'('type.modSem.v'),X11))) & ! [X6,X7,X8] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X6),s('type.list.list'('type.string.char'),X7),s('type.modLang.exp',X8))) & ! [X3,X4,X5] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X4),s('type.list.list'('type.string.char'),X5))) & ! [X2] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X2))) & ! [X1] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X1))))),
  inference(rectify,[],[f97])).
fof(f97,plain,(
  ? [X0] : ((? [X73] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',X73))) | ? [X72] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),X72))) | ? [X70,X71] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X70),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X71))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) | ? [X66,X67,X68,X69] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X66),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X67))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X68))))),s('type.list.list'('type.modSem.v'),X69))))) | ? [X63,X64,X65] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X63),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X64))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X65))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) | ? [X59,X60,X61,X62] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X59),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X60))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X61))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X62),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) | ? [X53,X54,X55,X56,X57,X58] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X53),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X54))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X55))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X56),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X57),s('type.list.list'('type.modSem.v'),X58))))))))) | ? [X49,X50,X51,X52] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X49),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X50))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X51))))),s('type.list.list'('type.modSem.v'),X52))))) | ? [X45,X46,X47,X48] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X45),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X46))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X47))))),s('type.list.list'('type.modSem.v'),X48))))) | ? [X41,X42,X43,X44] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X41),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X42))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X43))))),s('type.list.list'('type.modSem.v'),X44))))) | ? [X36,X37,X38,X39,X40] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X36),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X37))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),X38),s('type.list.list'('type.modSem.v'),X39))),s('type.list.list'('type.modSem.v'),X40))))) | ? [X30,X31,X32,X33,X34,X35] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X30),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X31))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X32),s('type.list.list'('type.string.char'),X33),s('type.modLang.exp',X34))),s('type.list.list'('type.modSem.v'),X35))))) | ? [X24,X25,X26,X27,X28,X29] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X24),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X25))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X26),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X27),s('type.list.list'('type.string.char'),X28))),s('type.list.list'('type.modSem.v'),X29))))) | ? [X20,X21,X22,X23] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X20),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X21))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X22))),s('type.list.list'('type.modSem.v'),X23))))) | ? [X16,X17,X18,X19] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X16),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X17))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X18))),s('type.list.list'('type.modSem.v'),X19))))) | ? [X12,X13,X14,X15] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X12),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X13),s('type.list.list'('type.string.char'),X14))))))))),s('type.list.list'('type.modSem.v'),X15))) | ? [X9,X10,X11] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X10))))))),s('type.list.list'('type.modSem.v'),X11))) | ? [X6,X7,X8] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X6),s('type.list.list'('type.string.char'),X7),s('type.modLang.exp',X8))) | ? [X3,X4,X5] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X4),s('type.list.list'('type.string.char'),X5))) | ? [X2] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X2))) | ? [X1] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X1)))) & ! [X145,X146] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X145),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X146))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) & ! [X141,X142,X143,X144] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X141),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X142))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X143))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X144),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) & ! [X140] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',X140))) & ! [X139] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),X139))) & ! [X135,X136,X137,X138] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X135),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X136))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X137))))),s('type.list.list'('type.modSem.v'),X138))))) & ! [X132,X133,X134] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X132),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X133))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X134))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) & ! [X126,X127,X128,X129,X130,X131] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X126),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X127))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X128))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X129),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X130),s('type.list.list'('type.modSem.v'),X131))))))))) & ! [X122,X123,X124,X125] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X122),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X123))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X124))))),s('type.list.list'('type.modSem.v'),X125))))) & ! [X118,X119,X120,X121] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X118),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X119))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X120))))),s('type.list.list'('type.modSem.v'),X121))))) & ! [X114,X115,X116,X117] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X114),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X115))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X116))))),s('type.list.list'('type.modSem.v'),X117))))) & ! [X109,X110,X111,X112,X113] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X109),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X110))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),X111),s('type.list.list'('type.modSem.v'),X112))),s('type.list.list'('type.modSem.v'),X113))))) & ! [X103,X104,X105,X106,X107,X108] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X103),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X104))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X105),s('type.list.list'('type.string.char'),X106),s('type.modLang.exp',X107))),s('type.list.list'('type.modSem.v'),X108))))) & ! [X97,X98,X99,X100,X101,X102] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X97),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X98))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X99),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X100),s('type.list.list'('type.string.char'),X101))),s('type.list.list'('type.modSem.v'),X102))))) & ! [X93,X94,X95,X96] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X93),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X94))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X95))),s('type.list.list'('type.modSem.v'),X96))))) & ! [X89,X90,X91,X92] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X89),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X90))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X91))),s('type.list.list'('type.modSem.v'),X92))))) & ! [X85,X86,X87,X88] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X85),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X86),s('type.list.list'('type.string.char'),X87))))))))),s('type.list.list'('type.modSem.v'),X88))) & ! [X82,X83,X84] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X82),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X83))))))),s('type.list.list'('type.modSem.v'),X84))) & ! [X79,X80,X81] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X79),s('type.list.list'('type.string.char'),X80),s('type.modLang.exp',X81))) & ! [X76,X77,X78] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X76),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X77),s('type.list.list'('type.string.char'),X78))) & ! [X75] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X75))) & ! [X74] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X74))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ? [X0] : ((? [X73] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',X73))) | ? [X72] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),X72))) | ? [X70,X71] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X70),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X71))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) | ? [X66,X67,X68,X69] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X66),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X67))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X68))))),s('type.list.list'('type.modSem.v'),X69))))) | ? [X63,X64,X65] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X63),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X64))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X65))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) | ? [X59,X60,X61,X62] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X59),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X60))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X61))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X62),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) | ? [X53,X54,X55,X56,X57,X58] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X53),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X54))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X55))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X56),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X57),s('type.list.list'('type.modSem.v'),X58))))))))) | ? [X49,X50,X51,X52] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X49),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X50))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X51))))),s('type.list.list'('type.modSem.v'),X52))))) | ? [X45,X46,X47,X48] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X45),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X46))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X47))))),s('type.list.list'('type.modSem.v'),X48))))) | ? [X41,X42,X43,X44] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X41),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X42))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X43))))),s('type.list.list'('type.modSem.v'),X44))))) | ? [X36,X37,X38,X39,X40] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X36),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X37))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),X38),s('type.list.list'('type.modSem.v'),X39))),s('type.list.list'('type.modSem.v'),X40))))) | ? [X30,X31,X32,X33,X34,X35] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X30),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X31))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X32),s('type.list.list'('type.string.char'),X33),s('type.modLang.exp',X34))),s('type.list.list'('type.modSem.v'),X35))))) | ? [X24,X25,X26,X27,X28,X29] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X24),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X25))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X26),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X27),s('type.list.list'('type.string.char'),X28))),s('type.list.list'('type.modSem.v'),X29))))) | ? [X20,X21,X22,X23] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X20),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X21))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X22))),s('type.list.list'('type.modSem.v'),X23))))) | ? [X16,X17,X18,X19] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X16),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X17))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X18))),s('type.list.list'('type.modSem.v'),X19))))) | ? [X12,X13,X14,X15] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X12),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X13),s('type.list.list'('type.string.char'),X14))))))))),s('type.list.list'('type.modSem.v'),X15))) | ? [X9,X10,X11] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X10))))))),s('type.list.list'('type.modSem.v'),X11))) | ? [X6,X7,X8] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X6),s('type.list.list'('type.string.char'),X7),s('type.modLang.exp',X8))) | ? [X3,X4,X5] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X4),s('type.list.list'('type.string.char'),X5))) | ? [X2] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X2))) | ? [X1] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X1)))) & (! [X145,X146] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X145),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X146))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) & ! [X141,X142,X143,X144] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X141),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X142))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X143))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X144),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) & ! [X140] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',X140))) & ! [X139] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),X139))) & ! [X135,X136,X137,X138] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X135),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X136))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X137))))),s('type.list.list'('type.modSem.v'),X138))))) & ! [X132,X133,X134] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X132),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X133))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X134))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) & ! [X126,X127,X128,X129,X130,X131] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X126),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X127))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X128))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X129),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X130),s('type.list.list'('type.modSem.v'),X131))))))))) & ! [X122,X123,X124,X125] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X122),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X123))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X124))))),s('type.list.list'('type.modSem.v'),X125))))) & ! [X118,X119,X120,X121] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X118),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X119))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X120))))),s('type.list.list'('type.modSem.v'),X121))))) & ! [X114,X115,X116,X117] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X114),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X115))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X116))))),s('type.list.list'('type.modSem.v'),X117))))) & ! [X109,X110,X111,X112,X113] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X109),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X110))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),X111),s('type.list.list'('type.modSem.v'),X112))),s('type.list.list'('type.modSem.v'),X113))))) & ! [X103,X104,X105,X106,X107,X108] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X103),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X104))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X105),s('type.list.list'('type.string.char'),X106),s('type.modLang.exp',X107))),s('type.list.list'('type.modSem.v'),X108))))) & ! [X97,X98,X99,X100,X101,X102] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X97),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X98))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X99),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X100),s('type.list.list'('type.string.char'),X101))),s('type.list.list'('type.modSem.v'),X102))))) & ! [X93,X94,X95,X96] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X93),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X94))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X95))),s('type.list.list'('type.modSem.v'),X96))))) & ! [X89,X90,X91,X92] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X89),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X90))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X91))),s('type.list.list'('type.modSem.v'),X92))))) & ! [X85,X86,X87,X88] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X85),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X86),s('type.list.list'('type.string.char'),X87))))))))),s('type.list.list'('type.modSem.v'),X88))) & ! [X82,X83,X84] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X82),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X83))))))),s('type.list.list'('type.modSem.v'),X84))) & ! [X79,X80,X81] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X79),s('type.list.list'('type.string.char'),X80),s('type.modLang.exp',X81))) & ! [X76,X77,X78] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X76),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X77),s('type.list.list'('type.string.char'),X78))) & ! [X75] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X75))) & ! [X74] : s('type.modSem.v',X0) != s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X74)))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ((? [X73] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',X73))) | ? [X72] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),X72))) | ? [X70,X71] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X70),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X71))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) | ? [X66,X67,X68,X69] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X66),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X67))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X68))))),s('type.list.list'('type.modSem.v'),X69))))) | ? [X63,X64,X65] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X63),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X64))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X65))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) | ? [X59,X60,X61,X62] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X59),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X60))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X61))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X62),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) | ? [X53,X54,X55,X56,X57,X58] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X53),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X54))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X55))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X56),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X57),s('type.list.list'('type.modSem.v'),X58))))))))) | ? [X49,X50,X51,X52] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X49),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X50))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X51))))),s('type.list.list'('type.modSem.v'),X52))))) | ? [X45,X46,X47,X48] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X45),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X46))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X47))))),s('type.list.list'('type.modSem.v'),X48))))) | ? [X41,X42,X43,X44] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X41),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X42))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X43))))),s('type.list.list'('type.modSem.v'),X44))))) | ? [X36,X37,X38,X39,X40] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X36),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X37))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),X38),s('type.list.list'('type.modSem.v'),X39))),s('type.list.list'('type.modSem.v'),X40))))) | ? [X30,X31,X32,X33,X34,X35] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X30),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X31))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X32),s('type.list.list'('type.string.char'),X33),s('type.modLang.exp',X34))),s('type.list.list'('type.modSem.v'),X35))))) | ? [X24,X25,X26,X27,X28,X29] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X24),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X25))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X26),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X27),s('type.list.list'('type.string.char'),X28))),s('type.list.list'('type.modSem.v'),X29))))) | ? [X20,X21,X22,X23] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X20),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X21))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X22))),s('type.list.list'('type.modSem.v'),X23))))) | ? [X16,X17,X18,X19] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X16),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X17))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X18))),s('type.list.list'('type.modSem.v'),X19))))) | ? [X12,X13,X14,X15] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X12),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X13),s('type.list.list'('type.string.char'),X14))))))))),s('type.list.list'('type.modSem.v'),X15))) | ? [X9,X10,X11] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X10))))))),s('type.list.list'('type.modSem.v'),X11))) | ? [X6,X7,X8] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X6),s('type.list.list'('type.string.char'),X7),s('type.modLang.exp',X8))) | ? [X3,X4,X5] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X4),s('type.list.list'('type.string.char'),X5))) | ? [X2] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X2))) | ? [X1] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X1)))) => (? [X145,X146] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X145),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X146))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) | ? [X141,X142,X143,X144] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X141),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X142))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X143))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X144),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) | ? [X140] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',X140))) | ? [X139] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),X139))) | ? [X135,X136,X137,X138] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X135),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X136))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X137))))),s('type.list.list'('type.modSem.v'),X138))))) | ? [X132,X133,X134] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X132),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X133))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X134))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) | ? [X126,X127,X128,X129,X130,X131] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X126),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X127))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X128))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X129),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X130),s('type.list.list'('type.modSem.v'),X131))))))))) | ? [X122,X123,X124,X125] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X122),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X123))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X124))))),s('type.list.list'('type.modSem.v'),X125))))) | ? [X118,X119,X120,X121] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X118),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X119))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X120))))),s('type.list.list'('type.modSem.v'),X121))))) | ? [X114,X115,X116,X117] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X114),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X115))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X116))))),s('type.list.list'('type.modSem.v'),X117))))) | ? [X109,X110,X111,X112,X113] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X109),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X110))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),X111),s('type.list.list'('type.modSem.v'),X112))),s('type.list.list'('type.modSem.v'),X113))))) | ? [X103,X104,X105,X106,X107,X108] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X103),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X104))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X105),s('type.list.list'('type.string.char'),X106),s('type.modLang.exp',X107))),s('type.list.list'('type.modSem.v'),X108))))) | ? [X97,X98,X99,X100,X101,X102] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X97),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X98))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X99),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X100),s('type.list.list'('type.string.char'),X101))),s('type.list.list'('type.modSem.v'),X102))))) | ? [X93,X94,X95,X96] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X93),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X94))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X95))),s('type.list.list'('type.modSem.v'),X96))))) | ? [X89,X90,X91,X92] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X89),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X90))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X91))),s('type.list.list'('type.modSem.v'),X92))))) | ? [X85,X86,X87,X88] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X85),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X86),s('type.list.list'('type.string.char'),X87))))))))),s('type.list.list'('type.modSem.v'),X88))) | ? [X82,X83,X84] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X82),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X83))))))),s('type.list.list'('type.modSem.v'),X84))) | ? [X79,X80,X81] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X79),s('type.list.list'('type.string.char'),X80),s('type.modLang.exp',X81))) | ? [X76,X77,X78] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X76),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X77),s('type.list.list'('type.string.char'),X78))) | ? [X75] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X75))) | ? [X74] : s('type.modSem.v',X0) = s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X74)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((? [X7] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',X7))) | ? [X8] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),X8))) | ? [X9,X10] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) | ? [X11,X12,X13,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X13))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X15] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X15))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) | ? [X9,X10,X16,X17] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X16))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X17),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) | ? [X11,X12,X15,X18,X19,X20] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X15))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X18),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X19),s('type.list.list'('type.modSem.v'),X20))))))))) | ? [X11,X12,X21,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X21))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X22,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X22))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X23,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X23))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X24,X25,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),X24),s('type.list.list'('type.modSem.v'),X25))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X26,X27,X28,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X26),s('type.list.list'('type.string.char'),X27),s('type.modLang.exp',X28))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X29,X30,X31,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X29),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X30),s('type.list.list'('type.string.char'),X31))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X32,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X32))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X33,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X33))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X34,X35,X8] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X34),s('type.list.list'('type.string.char'),X35))))))))),s('type.list.list'('type.modSem.v'),X8))) | ? [X11,X36,X8] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X36))))))),s('type.list.list'('type.modSem.v'),X8))) | ? [X37,X38,X39] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X37),s('type.list.list'('type.string.char'),X38),s('type.modLang.exp',X39))) | ? [X40,X41,X42] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X40),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X41),s('type.list.list'('type.string.char'),X42))) | ? [X43] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X43))) | ? [X44] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X44)))) => (? [X9,X10] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) | ? [X9,X10,X16,X17] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X16))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X17),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) | ? [X7] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',X7))) | ? [X8] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),X8))) | ? [X11,X12,X13,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X13))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X15] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X15))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) | ? [X11,X12,X15,X18,X19,X20] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X15))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X18),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X19),s('type.list.list'('type.modSem.v'),X20))))))))) | ? [X11,X12,X21,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X21))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X22,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X22))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X23,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X23))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X24,X25,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),X24),s('type.list.list'('type.modSem.v'),X25))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X26,X27,X28,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X26),s('type.list.list'('type.string.char'),X27),s('type.modLang.exp',X28))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X29,X30,X31,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X29),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X30),s('type.list.list'('type.string.char'),X31))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X32,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X32))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X33,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X33))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X34,X35,X8] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X34),s('type.list.list'('type.string.char'),X35))))))))),s('type.list.list'('type.modSem.v'),X8))) | ? [X11,X36,X8] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X36))))))),s('type.list.list'('type.modSem.v'),X8))) | ? [X37,X38,X39] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X37),s('type.list.list'('type.string.char'),X38),s('type.modLang.exp',X39))) | ? [X40,X41,X42] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X40),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X41),s('type.list.list'('type.string.char'),X42))) | ? [X43] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X43))) | ? [X44] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X44)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((? [X7] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',X7))) | ? [X8] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),X8))) | ? [X9,X10] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) | ? [X11,X12,X13,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X13))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X15] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X15))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) | ? [X9,X10,X16,X17] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X16))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X17),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) | ? [X11,X12,X15,X18,X19,X20] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X15))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X18),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X19),s('type.list.list'('type.modSem.v'),X20))))))))) | ? [X11,X12,X21,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X21))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X22,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X22))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X23,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X23))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X24,X25,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),X24),s('type.list.list'('type.modSem.v'),X25))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X26,X27,X28,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X26),s('type.list.list'('type.string.char'),X27),s('type.modLang.exp',X28))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X29,X30,X31,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X29),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X30),s('type.list.list'('type.string.char'),X31))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X32,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X32))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X33,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X33))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X34,X35,X8] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X34),s('type.list.list'('type.string.char'),X35))))))))),s('type.list.list'('type.modSem.v'),X8))) | ? [X11,X36,X8] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X36))))))),s('type.list.list'('type.modSem.v'),X8))) | ? [X37,X38,X39] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X37),s('type.list.list'('type.string.char'),X38),s('type.modLang.exp',X39))) | ? [X40,X41,X42] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X40),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X41),s('type.list.list'('type.string.char'),X42))) | ? [X43] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X43))) | ? [X44] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X44)))) => (? [X9,X10] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) | ? [X9,X10,X16,X17] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X16))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X17),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) | ? [X7] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',X7))) | ? [X8] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),X8))) | ? [X11,X12,X13,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X13))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X15] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X15))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) | ? [X11,X12,X15,X18,X19,X20] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X15))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X18),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X19),s('type.list.list'('type.modSem.v'),X20))))))))) | ? [X11,X12,X21,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X21))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X22,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X22))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X23,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X23))))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X24,X25,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),X24),s('type.list.list'('type.modSem.v'),X25))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X26,X27,X28,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X26),s('type.list.list'('type.string.char'),X27),s('type.modLang.exp',X28))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X29,X30,X31,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X29),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X30),s('type.list.list'('type.string.char'),X31))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X32,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X32))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X12,X33,X14] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X33))),s('type.list.list'('type.modSem.v'),X14))))) | ? [X11,X34,X35,X8] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X34),s('type.list.list'('type.string.char'),X35))))))))),s('type.list.list'('type.modSem.v'),X8))) | ? [X11,X36,X8] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X36))))))),s('type.list.list'('type.modSem.v'),X8))) | ? [X37,X38,X39] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X37),s('type.list.list'('type.string.char'),X38),s('type.modLang.exp',X39))) | ? [X40,X41,X42] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X40),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X41),s('type.list.list'('type.string.char'),X42))) | ? [X43] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X43))) | ? [X44] : s('type.modSem.v',X6) = s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X44)))))),
  file('thm.modSem.modSem_2|48||48|_prove_ltb','thm.modSem.modSem_2|48||48|_prove_ltb')).
fof(f6001,plain,(
  $false | $spl22),
  inference(subsumption_resolution,[],[f439,f235])).
fof(f235,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X30),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X31))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X32),s('type.list.list'('type.string.char'),X33),s('type.modLang.exp',X34))),s('type.list.list'('type.modSem.v'),X35)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6002,plain,(
  $false | $spl28),
  inference(subsumption_resolution,[],[f445,f238])).
fof(f238,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X16),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X17))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X18))),s('type.list.list'('type.modSem.v'),X19)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6003,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f429,f230])).
fof(f230,plain,(
  ( ! [X57,X54,X58,X56,X55,X53] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X53),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X54))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X55))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X56),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X57),s('type.list.list'('type.modSem.v'),X58)))))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6004,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f435,f233])).
fof(f233,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X41),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X42))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X43))))),s('type.list.list'('type.modSem.v'),X44)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6005,plain,(
  $false | $spl20),
  inference(subsumption_resolution,[],[f437,f234])).
fof(f234,plain,(
  ( ! [X39,X37,X38,X36,X40] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X36),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X37))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),X38),s('type.list.list'('type.modSem.v'),X39))),s('type.list.list'('type.modSem.v'),X40)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6006,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f457,f244])).
fof(f244,plain,(
  ( ! [X1] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),X1)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6007,plain,(
  $false | $spl38),
  inference(subsumption_resolution,[],[f455,f243])).
fof(f243,plain,(
  ( ! [X2] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6008,plain,(
  $false | $spl34),
  inference(subsumption_resolution,[],[f451,f241])).
fof(f241,plain,(
  ( ! [X6,X8,X7] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X6),s('type.list.list'('type.string.char'),X7),s('type.modLang.exp',X8)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6009,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f421,f224])).
fof(f224,plain,(
  ( ! [X72,X73] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X72),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X73))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6010,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f423,f228])).
fof(f228,plain,(
  ( ! [X64,X62,X65,X63] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X62),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X63))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X64))))),s('type.list.list'('type.modSem.v'),X65)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6011,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f427,f225])).
fof(f225,plain,(
  ( ! [X70,X68,X71,X69] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X68),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X69))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X70))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',X71),s('type.list.list'('type.modSem.v'),'const.list.NIL_0')))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6012,plain,(
  $false | $spl32),
  inference(subsumption_resolution,[],[f449,f240])).
fof(f240,plain,(
  ( ! [X10,X11,X9] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X10))))))),s('type.list.list'('type.modSem.v'),X11)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6563,plain,(
  $false | $spl24),
  inference(subsumption_resolution,[],[f441,f236])).
fof(f236,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X24),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X25))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X26),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X27),s('type.list.list'('type.string.char'),X28))),s('type.list.list'('type.modSem.v'),X29)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6564,plain,(
  $false | $spl30),
  inference(subsumption_resolution,[],[f447,f239])).
fof(f239,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X12),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X13),s('type.list.list'('type.string.char'),X14))))))))),s('type.list.list'('type.modSem.v'),X15)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6565,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f425,f229])).
fof(f229,plain,(
  ( ! [X61,X59,X60] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X59),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X60))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X61))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6566,plain,(
  $false | $spl26),
  inference(subsumption_resolution,[],[f443,f237])).
fof(f237,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X20),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X21))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',X22))),s('type.list.list'('type.modSem.v'),X23)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6567,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f431,f231])).
fof(f231,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X49),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X50))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X51))))),s('type.list.list'('type.modSem.v'),X52)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6568,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f453,f242])).
fof(f242,plain,(
  ( ! [X4,X5,X3] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),X4),s('type.list.list'('type.string.char'),X5)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6569,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f433,f232])).
fof(f232,plain,(
  ( ! [X47,X45,X48,X46] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X45),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X46))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X47))))),s('type.list.list'('type.modSem.v'),X48)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f417,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',sK13))) | $spl0),
  inference(cnf_transformation,[],[f417_D])).
fof(f417_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',sK13))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f419,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),sK14))) | $spl2),
  inference(cnf_transformation,[],[f419_D])).
fof(f419_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),sK14))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f421,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK15),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK16))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) | $spl4),
  inference(cnf_transformation,[],[f421_D])).
fof(f421_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK15),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK16))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f423,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK17),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK18))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK19))))),s('type.list.list'('type.modSem.v'),sK20))))) | $spl6),
  inference(cnf_transformation,[],[f423_D])).
fof(f423_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK17),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK18))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK19))))),s('type.list.list'('type.modSem.v'),sK20))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f425,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK21),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK22))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK23))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) | $spl8),
  inference(cnf_transformation,[],[f425_D])).
fof(f425_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK21),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK22))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK23))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f427,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK24),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK25))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK26))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK27),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) | $spl10),
  inference(cnf_transformation,[],[f427_D])).
fof(f427_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK24),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK25))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK26))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK27),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f429,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK28),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK29))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK30))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK31),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK32),s('type.list.list'('type.modSem.v'),sK33))))))))) | $spl12),
  inference(cnf_transformation,[],[f429_D])).
fof(f429_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK28),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK29))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK30))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK31),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK32),s('type.list.list'('type.modSem.v'),sK33))))))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f431,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK34),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK35))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK36))))),s('type.list.list'('type.modSem.v'),sK37))))) | $spl14),
  inference(cnf_transformation,[],[f431_D])).
fof(f431_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK34),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK35))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK36))))),s('type.list.list'('type.modSem.v'),sK37))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f433,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK38),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK39))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK40))))),s('type.list.list'('type.modSem.v'),sK41))))) | $spl16),
  inference(cnf_transformation,[],[f433_D])).
fof(f433_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK38),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK39))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK40))))),s('type.list.list'('type.modSem.v'),sK41))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f435,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK42),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK43))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK44))))),s('type.list.list'('type.modSem.v'),sK45))))) | $spl18),
  inference(cnf_transformation,[],[f435_D])).
fof(f435_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK42),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK43))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK44))))),s('type.list.list'('type.modSem.v'),sK45))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f437,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK46),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK47))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),sK48),s('type.list.list'('type.modSem.v'),sK49))),s('type.list.list'('type.modSem.v'),sK50))))) | $spl20),
  inference(cnf_transformation,[],[f437_D])).
fof(f437_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK46),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK47))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),sK48),s('type.list.list'('type.modSem.v'),sK49))),s('type.list.list'('type.modSem.v'),sK50))))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f439,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK51),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK52))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK53),s('type.list.list'('type.string.char'),sK54),s('type.modLang.exp',sK55))),s('type.list.list'('type.modSem.v'),sK56))))) | $spl22),
  inference(cnf_transformation,[],[f439_D])).
fof(f439_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK51),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK52))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK53),s('type.list.list'('type.string.char'),sK54),s('type.modLang.exp',sK55))),s('type.list.list'('type.modSem.v'),sK56))))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f441,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK57),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK58))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK59),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),sK60),s('type.list.list'('type.string.char'),sK61))),s('type.list.list'('type.modSem.v'),sK62))))) | $spl24),
  inference(cnf_transformation,[],[f441_D])).
fof(f441_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK57),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK58))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK59),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),sK60),s('type.list.list'('type.string.char'),sK61))),s('type.list.list'('type.modSem.v'),sK62))))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f443,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK63),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK64))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',sK65))),s('type.list.list'('type.modSem.v'),sK66))))) | $spl26),
  inference(cnf_transformation,[],[f443_D])).
fof(f443_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK63),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK64))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',sK65))),s('type.list.list'('type.modSem.v'),sK66))))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f445,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK67),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK68))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),sK69))),s('type.list.list'('type.modSem.v'),sK70))))) | $spl28),
  inference(cnf_transformation,[],[f445_D])).
fof(f445_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK67),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK68))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),sK69))),s('type.list.list'('type.modSem.v'),sK70))))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f447,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK71),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),sK72),s('type.list.list'('type.string.char'),sK73))))))))),s('type.list.list'('type.modSem.v'),sK74))) | $spl30),
  inference(cnf_transformation,[],[f447_D])).
fof(f447_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK71),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),sK72),s('type.list.list'('type.string.char'),sK73))))))))),s('type.list.list'('type.modSem.v'),sK74))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f449,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK75),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK76))))))),s('type.list.list'('type.modSem.v'),sK77))) | $spl32),
  inference(cnf_transformation,[],[f449_D])).
fof(f449_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK75),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK76))))))),s('type.list.list'('type.modSem.v'),sK77))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f451,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK78),s('type.list.list'('type.string.char'),sK79),s('type.modLang.exp',sK80))) | $spl34),
  inference(cnf_transformation,[],[f451_D])).
fof(f451_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK78),s('type.list.list'('type.string.char'),sK79),s('type.modLang.exp',sK80))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f453,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK81),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),sK82),s('type.list.list'('type.string.char'),sK83))) | $spl36),
  inference(cnf_transformation,[],[f453_D])).
fof(f453_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK81),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),sK82),s('type.list.list'('type.string.char'),sK83))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f455,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',sK84))) | $spl38),
  inference(cnf_transformation,[],[f455_D])).
fof(f455_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',sK84))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f457,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),sK85))) | $spl40),
  inference(cnf_transformation,[],[f457_D])).
fof(f457_D,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),sK85))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f223,plain,(
  s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),sK85))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',sK84))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK81),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),sK82),s('type.list.list'('type.string.char'),sK83))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK78),s('type.list.list'('type.string.char'),sK79),s('type.modLang.exp',sK80))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK75),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK76))))))),s('type.list.list'('type.modSem.v'),sK77))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK71),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),sK72),s('type.list.list'('type.string.char'),sK73))))))))),s('type.list.list'('type.modSem.v'),sK74))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK67),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK68))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Vectorv_1'(s('type.list.list'('type.modSem.v'),sK69))),s('type.list.list'('type.modSem.v'),sK70))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK63),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK64))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Loc_1'(s('type.num.num',sK65))),s('type.list.list'('type.modSem.v'),sK66))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK57),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK58))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Recclosure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK59),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),sK60),s('type.list.list'('type.string.char'),sK61))),s('type.list.list'('type.modSem.v'),sK62))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK51),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK52))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Closure_3'(s('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),sK53),s('type.list.list'('type.string.char'),sK54),s('type.modLang.exp',sK55))),s('type.list.list'('type.modSem.v'),sK56))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK46),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK47))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),sK48),s('type.list.list'('type.modSem.v'),sK49))),s('type.list.list'('type.modSem.v'),sK50))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK42),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK43))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK44))))),s('type.list.list'('type.modSem.v'),sK45))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK38),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK39))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK40))))),s('type.list.list'('type.modSem.v'),sK41))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK34),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK35))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK36))))),s('type.list.list'('type.modSem.v'),sK37))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK28),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK29))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK30))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK31),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK32),s('type.list.list'('type.modSem.v'),sK33))))))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK24),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK25))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK26))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v',sK27),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK21),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK22))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK23))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK17),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK18))))))))),s('type.list.list'('type.modSem.v'),'const.list.CONS_2'(s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK19))))),s('type.list.list'('type.modSem.v'),sK20))))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),sK15),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK16))))))))),s('type.list.list'('type.modSem.v'),'const.list.NIL_0'))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),sK14))) | s('type.modSem.v',sK12) = s('type.modSem.v','const.modSem.Litv_1'(s('type.ast.lit',sK13)))),
  inference(cnf_transformation,[],[f138])).
fof(f6571,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f419,f227])).
fof(f227,plain,(
  ( ! [X66] : (s('type.modSem.v',sK12) != s('type.modSem.v','const.modSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.modSem.v'),X66)))) )),
  inference(cnf_transformation,[],[f138])).
% SZS output end Proof for thm.modSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 454
% Passive clauses: 2644
% Generated clauses: 6342
% Final active clauses: 454
% Final passive clauses: 1970
% Input formulas: 37
% Initial clauses: 189
% 
% Duplicate literals: 176
% Trivial inequalities: 29
% Fw subsumption resolutions: 406
% 
% Simple tautologies: 155
% Equational tautologies: 42
% Forward subsumptions: 2834
% 
% Binary resolution: 4248
% Factoring: 898
% Forward superposition: 230
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 119
% Split components: 258
% SAT solver clauses: 286
% SAT solver unit clauses: 27
% SAT solver binary clauses: 45
% SAT solver learnt clauses: 1
% 
% Sat splits: 119
% Sat splitting refutations: 21
% 
% TWLsolver clauses: 285
% TWLsolver calls for satisfiability: 233
% 
% Memory used [KB]: 3965
% Time elapsed: 0.169 s
% ------------------------------
% ------------------------------
% Success in time 0.175 s
