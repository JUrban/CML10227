Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.decSem
% (127967)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 177
% Passive clauses: 3479
% Generated clauses: 22906
% Final active clauses: 117
% Final passive clauses: 3019
% Input formulas: 68
% Initial clauses: 77
% 
% Duplicate literals: 870
% Trivial inequalities: 166
% Fw subsumption resolutions: 2066
% Fw demodulations: 4030
% Bw demodulations: 50
% 
% Simple tautologies: 195
% Equational tautologies: 52
% Forward subsumptions: 11362
% 
% Binary resolution: 474
% Factoring: 3
% Forward superposition: 8560
% Backward superposition: 6138
% Self superposition: 223
% Equality factoring: 106
% Equality resolution: 16
% 
% Split clauses: 250
% Split components: 500
% SAT solver clauses: 773
% SAT solver unit clauses: 37
% SAT solver binary clauses: 115
% 
% Sat splits: 250
% Sat splitting refutations: 10
% 
% TWLsolver clauses: 771
% TWLsolver calls for satisfiability: 140
% 
% Memory used [KB]: 15095
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.decSem
% (127987)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 128
% Passive clauses: 991
% Generated clauses: 15024
% Final active clauses: 95
% Final passive clauses: 727
% Input formulas: 68
% Initial clauses: 77
% 
% Duplicate literals: 523
% Trivial inequalities: 46
% Fw subsumption resolutions: 721
% Fw demodulations: 1547
% Bw demodulations: 156
% Condensations: 1176
% 
% Simple tautologies: 66
% Equational tautologies: 42
% Forward subsumptions: 8201
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 263
% Factoring: 1
% Forward superposition: 4916
% Backward superposition: 4321
% Self superposition: 213
% Equality factoring: 82
% Equality resolution: 3
% 
% Split clauses: 85
% Split components: 170
% SAT solver clauses: 1759
% SAT solver unit clauses: 131
% SAT solver binary clauses: 56
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 85
% Sat splitting refutations: 16
% 
% TWLsolver clauses: 1758
% TWLsolver calls for satisfiability: 257
% 
% Memory used [KB]: 22387
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.decSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.decSem
% SZS output start Proof for thm.decSem
fof(f29561,plain,(
  $false),
  inference(subsumption_resolution,[],[f29560,f213])).
fof(f213,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f32])).
fof(f32,axiom,(
  p(s(bool,'T_0'))),
  file('thm.decSem.state_fupdfupds_comp|split|7','thm.bool.TRUTH')).
fof(f29560,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f29558,f3154])).
fof(f3154,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f2011,f294])).
fof(f294,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f215,f216])).
fof(f216,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.decSem.state_fupdfupds_comp|split|7',aHL_BOOL_CASES)).
fof(f215,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.decSem.state_fupdfupds_comp|split|7',aHL_FALSITY)).
fof(f2011,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X1))))) )),
  inference(backward_demodulation,[],[f1934,f604])).
fof(f604,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.combin.o_3'(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(fun(X0,X0),'_i_0_0'),s(X0,X1))))) )),
  inference(forward_demodulation,[],[f570,f267])).
fof(f267,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))) )),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(flattening,[],[f150])).
fof(f150,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X14,X6,X15] : ! [X10,X9,X17] : s(X14,'const.combin.o_3'(s(fun(X6,X14),X10),s(fun(X15,X6),X9),s(X15,X17))) = s(X14,happ(s(fun(X6,X14),X10),s(X6,happ(s(fun(X15,X6),X9),s(X15,X17)))))),
  file('thm.decSem.state_fupdfupds_comp|split|7','thm.combin.o_THM')).
fof(f570,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1))))))) )),
  inference(unit_resulting_resolution,[],[f217,f264])).
fof(f264,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f211])).
fof(f211,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2))))))),
  inference(nnf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X39,X40,X41] : (p(s(bool,happ(s(fun(X39,bool),happ(s(fun(X39,fun(X39,bool)),'=_0'),s(X39,X40))),s(X39,X41)))) <=> s(X39,X40) = s(X39,X41))),
  file('thm.decSem.state_fupdfupds_comp|split|7',arity_0_HL_EQ)).
fof(f217,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(flattening,[],[f73])).
fof(f73,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(rectify,[],[f67])).
fof(f67,axiom,(
  ! [X34] : ! [X36] : s(X34,X36) = s(X34,happ(s(fun(X34,X34),'_i_0_0'),s(X34,X36)))),
  file('thm.decSem.state_fupdfupds_comp|split|7','_i0_ax')).
fof(f1934,plain,(
  ( ! [X52,X50,X51,X49] : (s(X51,happ(s(fun(X49,X51),X52),s(X49,X50))) = s(X51,'const.combin.o_3'(s(fun(X49,X51),X52),s(fun(X49,X49),'_i_0_0'),s(X49,X50)))) )),
  inference(superposition,[],[f267,f217])).
fof(f29558,plain,(
  ~p(s(bool,happ(s(fun(fun(sK0,'type.decSem.state'(sK1)),bool),happ(s(fun(fun(sK0,'type.decSem.state'(sK1)),fun(fun(sK0,'type.decSem.state'(sK1)),bool)),'=_0'),s(fun(sK0,'type.decSem.state'(sK1)),'const.combin.o_2'(s(fun('type.decSem.state'(sK1),'type.decSem.state'(sK1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK4),s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK3))))),s(fun(sK0,'type.decSem.state'(sK1)),sK2))))),s(fun(sK0,'type.decSem.state'(sK1)),'const.combin.o_2'(s(fun('type.decSem.state'(sK1),'type.decSem.state'(sK1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK4),s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK3))))),s(fun(sK0,'type.decSem.state'(sK1)),sK2))))))),
  inference(backward_demodulation,[],[f29502,f7890])).
fof(f7890,plain,(
  ~p(s(bool,happ(s(fun(fun(sK0,'type.decSem.state'(sK1)),bool),happ(s(fun(fun(sK0,'type.decSem.state'(sK1)),fun(fun(sK0,'type.decSem.state'(sK1)),bool)),'=_0'),s(fun(sK0,'type.decSem.state'(sK1)),'const.combin.o_2'(s(fun('type.decSem.state'(sK1),'type.decSem.state'(sK1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK4))),s(fun(sK0,'type.decSem.state'(sK1)),'const.combin.o_2'(s(fun('type.decSem.state'(sK1),'type.decSem.state'(sK1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK3))),s(fun(sK0,'type.decSem.state'(sK1)),sK2))))))),s(fun(sK0,'type.decSem.state'(sK1)),'const.combin.o_2'(s(fun('type.decSem.state'(sK1),'type.decSem.state'(sK1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK4),s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK3))))),s(fun(sK0,'type.decSem.state'(sK1)),sK2))))))),
  inference(unit_resulting_resolution,[],[f212,f263])).
fof(f263,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f211])).
fof(f212,plain,(
  s(fun(sK0,'type.decSem.state'(sK1)),'const.combin.o_2'(s(fun('type.decSem.state'(sK1),'type.decSem.state'(sK1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK4),s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK3))))),s(fun(sK0,'type.decSem.state'(sK1)),sK2))) != s(fun(sK0,'type.decSem.state'(sK1)),'const.combin.o_2'(s(fun('type.decSem.state'(sK1),'type.decSem.state'(sK1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK4))),s(fun(sK0,'type.decSem.state'(sK1)),'const.combin.o_2'(s(fun('type.decSem.state'(sK1),'type.decSem.state'(sK1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK3))),s(fun(sK0,'type.decSem.state'(sK1)),sK2)))))),
  inference(cnf_transformation,[],[f199])).
fof(f199,plain,(
  s(fun(sK0,'type.decSem.state'(sK1)),'const.combin.o_2'(s(fun('type.decSem.state'(sK1),'type.decSem.state'(sK1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK4),s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK3))))),s(fun(sK0,'type.decSem.state'(sK1)),sK2))) != s(fun(sK0,'type.decSem.state'(sK1)),'const.combin.o_2'(s(fun('type.decSem.state'(sK1),'type.decSem.state'(sK1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK4))),s(fun(sK0,'type.decSem.state'(sK1)),'const.combin.o_2'(s(fun('type.decSem.state'(sK1),'type.decSem.state'(sK1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),sK3))),s(fun(sK0,'type.decSem.state'(sK1)),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f194])).
fof(f194,plain,(
  ? [X0,X1,X2,X3,X4] : s(fun(X0,'type.decSem.state'(X1)),'const.combin.o_2'(s(fun('type.decSem.state'(X1),'type.decSem.state'(X1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X4),s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3))))),s(fun(X0,'type.decSem.state'(X1)),X2))) != s(fun(X0,'type.decSem.state'(X1)),'const.combin.o_2'(s(fun('type.decSem.state'(X1),'type.decSem.state'(X1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X4))),s(fun(X0,'type.decSem.state'(X1)),'const.combin.o_2'(s(fun('type.decSem.state'(X1),'type.decSem.state'(X1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3))),s(fun(X0,'type.decSem.state'(X1)),X2)))))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1,X2,X3,X4] : s(fun(X0,'type.decSem.state'(X1)),'const.combin.o_2'(s(fun('type.decSem.state'(X1),'type.decSem.state'(X1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X4),s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3))))),s(fun(X0,'type.decSem.state'(X1)),X2))) = s(fun(X0,'type.decSem.state'(X1)),'const.combin.o_2'(s(fun('type.decSem.state'(X1),'type.decSem.state'(X1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X4))),s(fun(X0,'type.decSem.state'(X1)),'const.combin.o_2'(s(fun('type.decSem.state'(X1),'type.decSem.state'(X1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3))),s(fun(X0,'type.decSem.state'(X1)),X2)))))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : s(fun(X0,'type.decSem.state'(X1)),'const.combin.o_2'(s(fun('type.decSem.state'(X1),'type.decSem.state'(X1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X4),s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3))))),s(fun(X0,'type.decSem.state'(X1)),X2))) = s(fun(X0,'type.decSem.state'(X1)),'const.combin.o_2'(s(fun('type.decSem.state'(X1),'type.decSem.state'(X1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X4))),s(fun(X0,'type.decSem.state'(X1)),'const.combin.o_2'(s(fun('type.decSem.state'(X1),'type.decSem.state'(X1)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3))),s(fun(X0,'type.decSem.state'(X1)),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : s(fun(X6,'type.decSem.state'(X7)),'const.combin.o_2'(s(fun('type.decSem.state'(X7),'type.decSem.state'(X7)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X10),s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X9))))),s(fun(X6,'type.decSem.state'(X7)),X8))) = s(fun(X6,'type.decSem.state'(X7)),'const.combin.o_2'(s(fun('type.decSem.state'(X7),'type.decSem.state'(X7)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X10))),s(fun(X6,'type.decSem.state'(X7)),'const.combin.o_2'(s(fun('type.decSem.state'(X7),'type.decSem.state'(X7)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X9))),s(fun(X6,'type.decSem.state'(X7)),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : s(fun(X6,'type.decSem.state'(X7)),'const.combin.o_2'(s(fun('type.decSem.state'(X7),'type.decSem.state'(X7)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X10),s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X9))))),s(fun(X6,'type.decSem.state'(X7)),X8))) = s(fun(X6,'type.decSem.state'(X7)),'const.combin.o_2'(s(fun('type.decSem.state'(X7),'type.decSem.state'(X7)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X10))),s(fun(X6,'type.decSem.state'(X7)),'const.combin.o_2'(s(fun('type.decSem.state'(X7),'type.decSem.state'(X7)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X9))),s(fun(X6,'type.decSem.state'(X7)),X8)))))),
  file('thm.decSem.state_fupdfupds_comp|split|7','thm.decSem.state_fupdfupds_comp|split|7')).
fof(f29502,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X3,'type.decSem.state'(X0)),'const.combin.o_2'(s(fun('type.decSem.state'(X0),'type.decSem.state'(X0)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X1),s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2))))),s(fun(X3,'type.decSem.state'(X0)),X4))) = s(fun(X3,'type.decSem.state'(X0)),'const.combin.o_2'(s(fun('type.decSem.state'(X0),'type.decSem.state'(X0)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X1))),s(fun(X3,'type.decSem.state'(X0)),'const.combin.o_2'(s(fun('type.decSem.state'(X0),'type.decSem.state'(X0)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2))),s(fun(X3,'type.decSem.state'(X0)),X4)))))) )),
  inference(superposition,[],[f272,f225])).
fof(f225,plain,(
  ( ! [X2,X0,X1] : (s(fun('type.decSem.state'(X0),'type.decSem.state'(X0)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X1))))) = s(fun('type.decSem.state'(X0),'type.decSem.state'(X0)),'const.combin.o_2'(s(fun('type.decSem.state'(X0),'type.decSem.state'(X0)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2))),s(fun('type.decSem.state'(X0),'type.decSem.state'(X0)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X1)))))) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0,X1,X2] : s(fun('type.decSem.state'(X0),'type.decSem.state'(X0)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X1))))) = s(fun('type.decSem.state'(X0),'type.decSem.state'(X0)),'const.combin.o_2'(s(fun('type.decSem.state'(X0),'type.decSem.state'(X0)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2))),s(fun('type.decSem.state'(X0),'type.decSem.state'(X0)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X1)))))),
  inference(flattening,[],[f87])).
fof(f87,plain,(
  ! [X0] : ! [X1,X2] : s(fun('type.decSem.state'(X0),'type.decSem.state'(X0)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X1))))) = s(fun('type.decSem.state'(X0),'type.decSem.state'(X0)),'const.combin.o_2'(s(fun('type.decSem.state'(X0),'type.decSem.state'(X0)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2))),s(fun('type.decSem.state'(X0),'type.decSem.state'(X0)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X1)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : ! [X9,X10] : s(fun('type.decSem.state'(X7),'type.decSem.state'(X7)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X10),s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X9))))) = s(fun('type.decSem.state'(X7),'type.decSem.state'(X7)),'const.combin.o_2'(s(fun('type.decSem.state'(X7),'type.decSem.state'(X7)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X10))),s(fun('type.decSem.state'(X7),'type.decSem.state'(X7)),'const.decSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X9)))))),
  file('thm.decSem.state_fupdfupds_comp|split|7','thm.decSem.state_fupdfupds_comp|split|6')).
fof(f272,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))) )),
  inference(cnf_transformation,[],[f161])).
fof(f161,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(flattening,[],[f160])).
fof(f160,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X14,X6,X20,X15] : ! [X10,X9,X8] : s(fun(X20,X14),'const.combin.o_2'(s(fun(X6,X14),X10),s(fun(X20,X6),'const.combin.o_2'(s(fun(X15,X6),X9),s(fun(X20,X15),X8))))) = s(fun(X20,X14),'const.combin.o_2'(s(fun(X15,X14),'const.combin.o_2'(s(fun(X6,X14),X10),s(fun(X15,X6),X9))),s(fun(X20,X15),X8)))),
  file('thm.decSem.state_fupdfupds_comp|split|7','thm.combin.o_ASSOC')).
% SZS output end Proof for thm.decSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 215
% Passive clauses: 4985
% Generated clauses: 33225
% Final active clauses: 97
% Final passive clauses: 1149
% Input formulas: 68
% Initial clauses: 77
% 
% Duplicate literals: 880
% Trivial inequalities: 82
% Fw subsumption resolutions: 1270
% Fw demodulations: 4353
% Bw demodulations: 3418
% Condensations: 1298
% Global subsumptions: 1
% 
% Simple tautologies: 82
% Equational tautologies: 202
% Forward subsumptions: 19820
% Fw demodulations to eq. taut.: 1
% Bw demodulations to eq. taut.: 124
% 
% Unit resulting resolution: 958
% Factoring: 1
% Forward superposition: 8619
% Backward superposition: 7805
% Self superposition: 283
% Equality factoring: 110
% Equality resolution: 3
% 
% Split clauses: 36
% Split components: 72
% SAT solver clauses: 5222
% SAT solver unit clauses: 729
% SAT solver binary clauses: 3008
% 
% Sat splits: 36
% Sat splitting refutations: 162
% 
% Memory used [KB]: 27376
% Time elapsed: 1.865 s
% ------------------------------
% ------------------------------
% Success in time 3.211 s
