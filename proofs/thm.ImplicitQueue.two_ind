Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.ImplicitQueue
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ImplicitQueue
% SZS output start Proof for thm.ImplicitQueue
fof(f4780,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4770,f173,f111,f115,f113,f126,f148,f150,f682,f149,f683])).
fof(f683,plain,(
  ( ! [X28,X27] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(sK0),X27),s('type.ImplicitQueue.times'(sK0),X28)))))) ) | $spl8),
  inference(cnf_transformation,[],[f683_D])).
fof(f683_D,plain,(
  ( ! [X28,X27] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(sK0),X27),s('type.ImplicitQueue.times'(sK0),X28)))))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f149,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(cnf_transformation,[],[f149_D])).
fof(f149_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f682,plain,(
  ( ! [X28,X29,X27] : (s(bool,'T_0') = s(bool,X29) | s(bool,'T_0') = s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(sK0),X27),s('type.ImplicitQueue.times'(sK0),X28)))))) )),
  inference(subsumption_resolution,[],[f495,f106])).
fof(f106,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f79,f80])).
fof(f80,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.ImplicitQueue.two_ind',aHL_BOOL_CASES)).
fof(f79,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.ImplicitQueue.two_ind',aHL_FALSITY)).
fof(f495,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,X29)) | s(bool,'T_0') = s(bool,X29) | s(bool,'T_0') = s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(sK0),X27),s('type.ImplicitQueue.times'(sK0),X28)))))) )),
  inference(superposition,[],[f74,f104])).
fof(f104,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f80,f80])).
fof(f74,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(sK0),X4),s('type.ImplicitQueue.times'(sK0),X5))))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X4,X5] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(sK0),X4),s('type.ImplicitQueue.times'(sK0),X5)))))) & p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Zero_0')))) & ! [X3] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),X3)))))) & ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f66])).
fof(f66,plain,(
  ? [X0,X1] : (! [X4,X5] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(X0),X4),s('type.ImplicitQueue.times'(X0),X5)))))) & p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Zero_0')))) & ! [X3] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X3)))))) & ? [X2] : ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),X2)))))),
  inference(rectify,[],[f59])).
fof(f59,plain,(
  ? [X0,X1] : (! [X3,X4] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(X0),X3),s('type.ImplicitQueue.times'(X0),X4)))))) & p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Zero_0')))) & ! [X2] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X2)))))) & ? [X5] : ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),X5)))))),
  inference(flattening,[],[f58])).
fof(f58,plain,(
  ? [X0,X1] : ((! [X3,X4] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(X0),X3),s('type.ImplicitQueue.times'(X0),X4)))))) & p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Zero_0')))) & ! [X2] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X2))))))) & ? [X5] : ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),X5)))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1] : ((! [X3,X4] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(X0),X3),s('type.ImplicitQueue.times'(X0),X4)))))) & p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Zero_0')))) & ! [X2] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X2))))))) => ! [X5] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),X5)))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1] : ((! [X3,X4] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(X0),X3),s('type.ImplicitQueue.times'(X0),X4)))))) & p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Zero_0')))) & ! [X2] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X2))))))) => ! [X5] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),X5)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((! [X8,X9] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X6),bool),X7),s('type.ImplicitQueue.digit'(X6),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(X6),X8),s('type.ImplicitQueue.times'(X6),X9)))))) & p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X6),bool),X7),s('type.ImplicitQueue.digit'(X6),'const.ImplicitQueue.Zero_0')))) & ! [X10] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X6),bool),X7),s('type.ImplicitQueue.digit'(X6),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X6),X10))))))) => ! [X10] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X6),bool),X7),s('type.ImplicitQueue.digit'(X6),X10)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((! [X8,X9] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X6),bool),X7),s('type.ImplicitQueue.digit'(X6),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(X6),X8),s('type.ImplicitQueue.times'(X6),X9)))))) & p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X6),bool),X7),s('type.ImplicitQueue.digit'(X6),'const.ImplicitQueue.Zero_0')))) & ! [X10] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X6),bool),X7),s('type.ImplicitQueue.digit'(X6),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X6),X10))))))) => ! [X10] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X6),bool),X7),s('type.ImplicitQueue.digit'(X6),X10)))))),
  file('thm.ImplicitQueue.two_ind','thm.ImplicitQueue.two_ind')).
fof(f150,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) | $spl6),
  inference(cnf_transformation,[],[f150_D])).
fof(f150_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f148,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f144,f106])).
fof(f144,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f91,f80])).
fof(f91,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X11,X12] : ((p(s(bool,X11)) => p(s(bool,X12))) => ((p(s(bool,X12)) => p(s(bool,X11))) => s(bool,X11) = s(bool,X12)))),
  file('thm.ImplicitQueue.two_ind','thm.bool.IMP_ANTISYM_AX')).
fof(f126,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f116,f79])).
fof(f116,plain,(
  p(s(bool,'F_0')) | $spl0),
  inference(backward_demodulation,[],[f113,f75])).
fof(f75,plain,(
  p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Zero_0'))))),
  inference(cnf_transformation,[],[f67])).
fof(f113,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f113_D])).
fof(f113_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f115,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f115_D])).
fof(f115_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f111,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f80])).
fof(f173,plain,(
  $false | ($spl3 | $spl4)),
  inference(trivial_inequality_removal,[],[f170])).
fof(f170,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl3 | $spl4)),
  inference(superposition,[],[f115,f149])).
fof(f4770,plain,(
  ( ! [X4] : (s(bool,'T_0') = s(bool,X4)) ) | ($spl6 | $spl8)),
  inference(subsumption_resolution,[],[f4754,f106])).
fof(f4754,plain,(
  ( ! [X4] : (p(s(bool,X4)) | s(bool,'T_0') = s(bool,X4)) ) | ($spl6 | $spl8)),
  inference(superposition,[],[f4711,f312])).
fof(f312,plain,(
  ( ! [X5] : (s(bool,X5) = s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),sK2))) | s(bool,'T_0') = s(bool,X5)) ) | $spl6),
  inference(subsumption_resolution,[],[f307,f79])).
fof(f307,plain,(
  ( ! [X5] : (p(s(bool,'F_0')) | s(bool,X5) = s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),sK2))) | s(bool,'T_0') = s(bool,X5)) ) | $spl6),
  inference(superposition,[],[f151,f188])).
fof(f188,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),sK2))) | $spl6),
  inference(resolution,[],[f77,f150])).
fof(f77,plain,(
  ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),sK2))))),
  inference(cnf_transformation,[],[f67])).
fof(f151,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f145,f79])).
fof(f145,plain,(
  ( ! [X2,X3] : (p(s(bool,'F_0')) | p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f91,f80])).
fof(f4711,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),X0))))) ) | $spl8),
  inference(subsumption_resolution,[],[f4710,f78])).
fof(f78,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.ImplicitQueue.two_ind',aHL_TRUTH)).
fof(f4710,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),X0))))) ) | $spl8),
  inference(forward_demodulation,[],[f4709,f112])).
fof(f112,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Zero_0')))),
  inference(subsumption_resolution,[],[f108,f79])).
fof(f108,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Zero_0')))),
  inference(superposition,[],[f75,f80])).
fof(f4709,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),X0)))) | ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Zero_0'))))) ) | $spl8),
  inference(subsumption_resolution,[],[f4708,f78])).
fof(f4708,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),X0)))) | ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Zero_0'))))) ) | $spl8),
  inference(forward_demodulation,[],[f4707,f683])).
fof(f4707,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(sK0),sK4(sK1,sK0)),s('type.ImplicitQueue.times'(sK0),sK5(sK1,sK0))))))) | p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),X0)))) | ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Zero_0'))))) )),
  inference(subsumption_resolution,[],[f4666,f78])).
fof(f4666,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(sK0),sK4(sK1,sK0)),s('type.ImplicitQueue.times'(sK0),sK5(sK1,sK0))))))) | p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),X0)))) | ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.Zero_0'))))) )),
  inference(superposition,[],[f82,f223])).
fof(f223,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),X0)))))) )),
  inference(subsumption_resolution,[],[f222,f79])).
fof(f222,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),X0)))))) )),
  inference(superposition,[],[f76,f80])).
fof(f76,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(sK0),bool),sK1),s('type.ImplicitQueue.digit'(sK0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(sK0),X3))))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f82,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),sK3(X1,X0))))))) | ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(X0),sK4(X1,X0)),s('type.ImplicitQueue.times'(X0),sK5(X1,X0))))))) | p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),X2)))) | ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Zero_0'))))) )),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1] : (~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Zero_0')))) | ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),sK3(X1,X0))))))) | ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(X0),sK4(X1,X0)),s('type.ImplicitQueue.times'(X0),sK5(X1,X0))))))) | ! [X2] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4,sK5])],[f68])).
fof(f68,plain,(
  ! [X0,X1] : (~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Zero_0')))) | ? [X5] : ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X5)))))) | ? [X3,X4] : ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(X0),X3),s('type.ImplicitQueue.times'(X0),X4)))))) | ! [X2] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),X2)))))),
  inference(rectify,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : (~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Zero_0')))) | ? [X4] : ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X4)))))) | ? [X2,X3] : ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(X0),X2),s('type.ImplicitQueue.times'(X0),X3)))))) | ! [X5] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),X5)))))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0,X1] : ((~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Zero_0')))) | ? [X4] : ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X4)))))) | ? [X2,X3] : ~p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(X0),X2),s('type.ImplicitQueue.times'(X0),X3))))))) | ! [X5] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),X5)))))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1] : ((p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Zero_0')))) & ! [X4] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X4)))))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(X0),X2),s('type.ImplicitQueue.times'(X0),X3))))))) => ! [X5] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),X5)))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0] : ! [X1] : ((p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Zero_0')))) & ! [X4] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X0),X4)))))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(X0),X2),s('type.ImplicitQueue.times'(X0),X3))))))) => ! [X5] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X0),bool),X1),s('type.ImplicitQueue.digit'(X0),X5)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X7] : ((p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X6),bool),X7),s('type.ImplicitQueue.digit'(X6),'const.ImplicitQueue.Zero_0')))) & ! [X13] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X6),bool),X7),s('type.ImplicitQueue.digit'(X6),'const.ImplicitQueue.One_1'(s('type.ImplicitQueue.times'(X6),X13)))))) & ! [X13,X14] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X6),bool),X7),s('type.ImplicitQueue.digit'(X6),'const.ImplicitQueue.Two_2'(s('type.ImplicitQueue.times'(X6),X13),s('type.ImplicitQueue.times'(X6),X14))))))) => ! [X15] : p(s(bool,happ(s(fun('type.ImplicitQueue.digit'(X6),bool),X7),s('type.ImplicitQueue.digit'(X6),X15)))))),
  file('thm.ImplicitQueue.two_ind','thm.ImplicitQueue.digit_induction')).
% SZS output end Proof for thm.ImplicitQueue
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 71
% Passive clauses: 1051
% Generated clauses: 4638
% Final active clauses: 55
% Final passive clauses: 864
% Input formulas: 21
% Initial clauses: 30
% 
% Duplicate literals: 228
% Trivial inequalities: 23
% Fw subsumption resolutions: 349
% Fw demodulations: 377
% Bw demodulations: 11
% 
% Simple tautologies: 40
% Equational tautologies: 34
% Forward subsumptions: 2450
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 100
% Factoring: 1
% Forward superposition: 1624
% Backward superposition: 1681
% Self superposition: 113
% Equality factoring: 66
% Equality resolution: 1
% 
% Split clauses: 66
% Split components: 132
% SAT solver clauses: 147
% SAT solver unit clauses: 17
% SAT solver binary clauses: 38
% SAT solver learnt clauses: 1
% 
% Sat splits: 66
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 143
% TWLsolver calls for satisfiability: 39
% 
% Memory used [KB]: 5756
% Time elapsed: 0.139 s
% ------------------------------
% ------------------------------
% Success in time 0.131 s
