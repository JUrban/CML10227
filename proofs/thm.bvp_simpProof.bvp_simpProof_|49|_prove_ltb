Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.bvp_simpProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvp_simpProof
% SZS output start Proof for thm.bvp_simpProof
fof(f27265,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f27247,f27128,f27127,f62,f89])).
fof(f89,plain,(
  ~p(s(bool,'F_0')) | $spl1),
  inference(cnf_transformation,[],[f89_D])).
fof(f89_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f62,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.bvp_simpProof.bvp_simpProof_|49|_prove_ltb',aHL_FALSITY)).
fof(f27127,plain,(
  s('type.bvp.prog','const.bvp.Skip_0') = s('type.bvp.prog',sK2) | $spl224),
  inference(cnf_transformation,[],[f27127_D])).
fof(f27127_D,plain,(
  s('type.bvp.prog','const.bvp.Skip_0') = s('type.bvp.prog',sK2) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f27128,plain,(
  s('type.bvp.prog','const.bvp.Skip_0') = s('type.bvp.prog',sK2) | $spl1),
  inference(subsumption_resolution,[],[f26967,f91])).
fof(f91,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(resolution,[],[f66,f89])).
fof(f66,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.bvp_simpProof.bvp_simpProof_|49|_prove_ltb','thm.bool.EQ_CLAUSES|split|1')).
fof(f26967,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.bvp.prog','const.bvp.Skip_0') = s('type.bvp.prog',sK2)),
  inference(superposition,[],[f26964,f97])).
fof(f97,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,sK5(X0,X1)) | s('type.bvp.prog','const.bvp.Skip_0') = s('type.bvp.prog',X0)) )),
  inference(resolution,[],[f84,f71])).
fof(f71,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.bvp_simpProof.bvp_simpProof_|49|_prove_ltb','thm.bool.EQ_CLAUSES|split|3')).
fof(f84,plain,(
  ( ! [X0,X1] : (~p(s(bool,sK5(X1,X0))) | s('type.bvp.prog','const.bvp.Skip_0') = s('type.bvp.prog',X1)) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1] : ((~p(s(bool,sK5(X1,X0))) | s('type.bvp.prog','const.bvp.Skip_0') = s('type.bvp.prog',X1)) & (s('type.bvp.prog','const.bvp.Skip_0') != s('type.bvp.prog',X1) | p(s(bool,sK5(X1,X0)))) & s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',X0),s('type.bvp.prog',X1))) = s('type.bvp.prog','const.bool.COND_3'(s(bool,sK5(X1,X0)),s('type.bvp.prog',X0),s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X0),s('type.bvp.prog',X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5])],[f57])).
fof(f57,plain,(
  ! [X0,X1] : ? [X2] : ((~p(s(bool,X2)) | s('type.bvp.prog','const.bvp.Skip_0') = s('type.bvp.prog',X1)) & (s('type.bvp.prog','const.bvp.Skip_0') != s('type.bvp.prog',X1) | p(s(bool,X2))) & s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',X0),s('type.bvp.prog',X1))) = s('type.bvp.prog','const.bool.COND_3'(s(bool,X2),s('type.bvp.prog',X0),s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X0),s('type.bvp.prog',X1))))))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0,X1] : ? [X2] : (((~p(s(bool,X2)) | s('type.bvp.prog','const.bvp.Skip_0') = s('type.bvp.prog',X1)) & (s('type.bvp.prog','const.bvp.Skip_0') != s('type.bvp.prog',X1) | p(s(bool,X2)))) & s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',X0),s('type.bvp.prog',X1))) = s('type.bvp.prog','const.bool.COND_3'(s(bool,X2),s('type.bvp.prog',X0),s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X0),s('type.bvp.prog',X1))))))),
  inference(nnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1] : ? [X2] : ((p(s(bool,X2)) <=> s('type.bvp.prog','const.bvp.Skip_0') = s('type.bvp.prog',X1)) & s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',X0),s('type.bvp.prog',X1))) = s('type.bvp.prog','const.bool.COND_3'(s(bool,X2),s('type.bvp.prog',X0),s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X0),s('type.bvp.prog',X1))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X9,X8] : ? [X14] : ((p(s(bool,X14)) <=> s('type.bvp.prog','const.bvp.Skip_0') = s('type.bvp.prog',X8)) & s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',X9),s('type.bvp.prog',X8))) = s('type.bvp.prog','const.bool.COND_3'(s(bool,X14),s('type.bvp.prog',X9),s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X9),s('type.bvp.prog',X8))))))),
  file('thm.bvp_simpProof.bvp_simpProof_|49|_prove_ltb','thm.bvp_simp.pSeq_def')).
fof(f26964,plain,(
  s(bool,'T_0') = s(bool,sK5(sK2,sK3))),
  inference(trivial_inequality_removal,[],[f26918])).
fof(f26918,plain,(
  s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',sK3),s('type.bvp.prog',sK2))),s('type.bvpSem.state'(sK0),sK1))))) != s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',sK3),s('type.bvp.prog',sK2))),s('type.bvpSem.state'(sK0),sK1))))) | s(bool,'T_0') = s(bool,sK5(sK2,sK3))),
  inference(superposition,[],[f59,f2400])).
fof(f2400,plain,(
  ( ! [X52,X51] : (s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',X52),s('type.bvp.prog',X51))) = s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X52),s('type.bvp.prog',X51))) | s(bool,'T_0') = s(bool,sK5(X51,X52))) )),
  inference(superposition,[],[f184,f86])).
fof(f86,plain,(
  ( ! [X0,X1] : (s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',X0),s('type.bvp.prog',X1))) = s('type.bvp.prog','const.bool.COND_3'(s(bool,sK5(X1,X0)),s('type.bvp.prog',X0),s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X0),s('type.bvp.prog',X1)))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f184,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.bool.COND_3'(s(bool,X0),s(X1,X3),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f77,f64])).
fof(f64,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.bvp_simpProof.bvp_simpProof_|49|_prove_ltb',aHL_BOOL_CASES)).
fof(f77,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f36])).
fof(f36,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X10,X11] : s(X6,X11) = s(X6,'const.bool.COND_3'(s(bool,'F_0'),s(X6,X10),s(X6,X11)))),
  file('thm.bvp_simpProof.bvp_simpProof_|49|_prove_ltb','thm.bool.COND_CLAUSES|split|1')).
fof(f59,plain,(
  s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',sK3),s('type.bvp.prog',sK2))),s('type.bvpSem.state'(sK0),sK1))))) != s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',sK3),s('type.bvp.prog',sK2))),s('type.bvpSem.state'(sK0),sK1)))))),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',sK3),s('type.bvp.prog',sK2))),s('type.bvpSem.state'(sK0),sK1))))) != s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',sK3),s('type.bvp.prog',sK2))),s('type.bvpSem.state'(sK0),sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f44])).
fof(f44,plain,(
  ? [X0,X1,X2,X3] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',X3),s('type.bvp.prog',X2))),s('type.bvpSem.state'(X0),X1))))) != s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X3),s('type.bvp.prog',X2))),s('type.bvpSem.state'(X0),X1)))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ~! [X0,X1,X2,X3] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',X3),s('type.bvp.prog',X2))),s('type.bvpSem.state'(X0),X1))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X3),s('type.bvp.prog',X2))),s('type.bvpSem.state'(X0),X1)))))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ~! [X0] : ! [X1,X2,X3] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',X3),s('type.bvp.prog',X2))),s('type.bvpSem.state'(X0),X1))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X3),s('type.bvp.prog',X2))),s('type.bvpSem.state'(X0),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',X9),s('type.bvp.prog',X8))),s('type.bvpSem.state'(X6),X7))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X9),s('type.bvp.prog',X8))),s('type.bvpSem.state'(X6),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',X9),s('type.bvp.prog',X8))),s('type.bvpSem.state'(X6),X7))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X9),s('type.bvp.prog',X8))),s('type.bvpSem.state'(X6),X7)))))),
  file('thm.bvp_simpProof.bvp_simpProof_|49|_prove_ltb','thm.bvp_simpProof.bvp_simpProof_|49|_prove_ltb')).
fof(f27247,plain,(
  $false | $spl224),
  inference(trivial_inequality_removal,[],[f27246])).
fof(f27246,plain,(
  s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK3),s('type.bvpSem.state'(sK0),sK1))))) != s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK3),s('type.bvpSem.state'(sK0),sK1))))) | $spl224),
  inference(forward_demodulation,[],[f27245,f228])).
fof(f228,plain,(
  ( ! [X0] : (s('type.bvp.prog',X0) = s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',X0),s('type.bvp.prog','const.bvp.Skip_0')))) )),
  inference(forward_demodulation,[],[f215,f76])).
fof(f76,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : ! [X10,X11] : s(X6,X10) = s(X6,'const.bool.COND_3'(s(bool,'T_0'),s(X6,X10),s(X6,X11)))),
  file('thm.bvp_simpProof.bvp_simpProof_|49|_prove_ltb','thm.bool.COND_CLAUSES|split|0')).
fof(f215,plain,(
  ( ! [X0] : (s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',X0),s('type.bvp.prog','const.bvp.Skip_0'))) = s('type.bvp.prog','const.bool.COND_3'(s(bool,'T_0'),s('type.bvp.prog',X0),s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X0),s('type.bvp.prog','const.bvp.Skip_0')))))) )),
  inference(superposition,[],[f86,f101])).
fof(f101,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,sK5('const.bvp.Skip_0',X0))) )),
  inference(resolution,[],[f99,f67])).
fof(f67,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f50])).
fof(f99,plain,(
  ( ! [X0] : (p(s(bool,sK5('const.bvp.Skip_0',X0)))) )),
  inference(equality_resolution,[],[f85])).
fof(f85,plain,(
  ( ! [X0,X1] : (s('type.bvp.prog','const.bvp.Skip_0') != s('type.bvp.prog',X1) | p(s(bool,sK5(X1,X0)))) )),
  inference(cnf_transformation,[],[f58])).
fof(f27245,plain,(
  s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK3),s('type.bvpSem.state'(sK0),sK1))))) != s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',sK3),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(sK0),sK1))))) | $spl224),
  inference(forward_demodulation,[],[f27194,f78])).
fof(f78,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X1),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X1),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(X0),X2)))))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0] : ! [X1,X2] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X1),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(X0),X2)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X15,X7] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog',X15),s('type.bvpSem.state'(X6),X7))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X15),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(X6),X7)))))),
  file('thm.bvp_simpProof.bvp_simpProof_|49|_prove_ltb','thm.bvp_simpProof.bvp_simpProof_|48|_prove_ltb')).
fof(f27194,plain,(
  s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.pSeq_2'(s('type.bvp.prog',sK3),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(sK0),sK1))))) != s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',sK3),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(sK0),sK1))))) | $spl224),
  inference(backward_demodulation,[],[f27127,f59])).
% SZS output end Proof for thm.bvp_simpProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 170
% Passive clauses: 3352
% Generated clauses: 26733
% Final active clauses: 144
% Final passive clauses: 2866
% Input formulas: 18
% Initial clauses: 28
% 
% Duplicate literals: 812
% Trivial inequalities: 482
% Fw subsumption resolutions: 3567
% Fw demodulations: 4905
% Bw demodulations: 24
% 
% Simple tautologies: 377
% Equational tautologies: 39
% Forward subsumptions: 12918
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 448
% Factoring: 2
% Forward superposition: 9477
% Backward superposition: 6593
% Self superposition: 189
% Equality factoring: 75
% Equality resolution: 37
% 
% Split clauses: 242
% Split components: 497
% SAT solver clauses: 561
% SAT solver unit clauses: 45
% SAT solver binary clauses: 125
% SAT solver learnt clauses: 1
% 
% Sat splits: 242
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 555
% TWLsolver calls for satisfiability: 162
% 
% Memory used [KB]: 14072
% Time elapsed: 0.538 s
% ------------------------------
% ------------------------------
% Success in time 0.54 s
