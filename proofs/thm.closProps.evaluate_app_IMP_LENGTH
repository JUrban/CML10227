Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.closProps
% (89968)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 117
% Passive clauses: 3476
% Generated clauses: 15791
% Final active clauses: 115
% Final passive clauses: 3258
% Input formulas: 43
% Initial clauses: 70
% 
% Duplicate literals: 494
% Trivial inequalities: 323
% Fw subsumption resolutions: 1281
% Fw demodulations: 1615
% 
% Simple tautologies: 366
% Equational tautologies: 23
% Forward subsumptions: 7725
% 
% Binary resolution: 61
% Forward superposition: 6251
% Backward superposition: 5265
% Self superposition: 234
% Equality factoring: 61
% Equality resolution: 47
% 
% Split clauses: 223
% Split components: 449
% SAT solver clauses: 457
% SAT solver unit clauses: 25
% SAT solver binary clauses: 104
% 
% Sat splits: 223
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 457
% TWLsolver calls for satisfiability: 78
% 
% Memory used [KB]: 20596
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.closProps
% (89982)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 72
% Passive clauses: 1031
% Generated clauses: 8586
% Final active clauses: 72
% Final passive clauses: 934
% Input formulas: 43
% Initial clauses: 70
% 
% Duplicate literals: 305
% Trivial inequalities: 129
% Fw subsumption resolutions: 327
% Fw demodulations: 598
% Bw demodulations: 24
% Condensations: 615
% Global subsumptions: 4
% 
% Simple tautologies: 172
% Equational tautologies: 20
% Forward subsumptions: 3931
% 
% Binary resolution: 43
% Forward superposition: 2679
% Backward superposition: 2534
% Self superposition: 161
% Equality factoring: 46
% Equality resolution: 18
% 
% Split clauses: 37
% Split components: 76
% SAT solver clauses: 1525
% SAT solver unit clauses: 100
% SAT solver binary clauses: 41
% SAT solver learnt clauses: 8
% 
% Sat splits: 37
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1509
% TWLsolver calls for satisfiability: 237
% 
% Memory used [KB]: 20724
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.closProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.closProps
% SZS output start Proof for thm.closProps
fof(f12342,plain,(
  $false),
  inference(subsumption_resolution,[],[f12341,f154])).
fof(f154,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.closProps.evaluate_app_IMP_LENGTH',aHL_FALSITY)).
fof(f12341,plain,(
  p(s(bool,'F_0'))),
  inference(forward_demodulation,[],[f12340,f666])).
fof(f666,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK6))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(unit_resulting_resolution,[],[f577,f155])).
fof(f155,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.closProps.evaluate_app_IMP_LENGTH',aHL_BOOL_CASES)).
fof(f577,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK6))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(unit_resulting_resolution,[],[f152,f534,f231])).
fof(f231,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | s(bool,X0) != s(bool,X1) | p(s(bool,X1))) )),
  inference(condensation,[],[f230])).
fof(f230,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1) | s(bool,X0) != s(bool,X2)) )),
  inference(condensation,[],[f207])).
fof(f207,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f148])).
fof(f148,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f126])).
fof(f126,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X14,X19,X15,X20] : ((s(bool,X14) = s(bool,X19) & (p(s(bool,X19)) => s(bool,X15) = s(bool,X20))) => ((p(s(bool,X14)) => p(s(bool,X15))) <=> (p(s(bool,X19)) => p(s(bool,X20)))))),
  file('thm.closProps.evaluate_app_IMP_LENGTH','thm.bool.IMP_CONG')).
fof(f534,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK6))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(unit_resulting_resolution,[],[f151,f184])).
fof(f184,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2))))))),
  inference(nnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X48,X49,X50] : (p(s(bool,happ(s(fun(X48,bool),happ(s(fun(X48,fun(X48,bool)),'=_0'),s(X48,X49))),s(X48,X50)))) <=> s(X48,X49) = s(X48,X50))),
  file('thm.closProps.evaluate_app_IMP_LENGTH',arity_0_HL_EQ)).
fof(f151,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK6))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f128])).
fof(f128,plain,(
  s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(sK0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),sK6))),s('type.closSem.state'(sK0),sK5))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(sK0)),'const.closSem.evaluate_app_4'(s('type.option.option'('type.num.num'),sK4),s('type.closSem.v',sK3),s('type.list.list'('type.closSem.v'),sK2),s('type.closSem.state'(sK0),sK1))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK6))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6])],[f117])).
fof(f117,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),X6))),s('type.closSem.state'(X0),X5))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),'const.closSem.evaluate_app_4'(s('type.option.option'('type.num.num'),X4),s('type.closSem.v',X3),s('type.list.list'('type.closSem.v'),X2),s('type.closSem.state'(X0),X1))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X6))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(ennf_transformation,[],[f46])).
fof(f46,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),X6))),s('type.closSem.state'(X0),X5))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),'const.closSem.evaluate_app_4'(s('type.option.option'('type.num.num'),X4),s('type.closSem.v',X3),s('type.list.list'('type.closSem.v'),X2),s('type.closSem.state'(X0),X1))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X6))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ~! [X0] : ! [X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),X6))),s('type.closSem.state'(X0),X5))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),'const.closSem.evaluate_app_4'(s('type.option.option'('type.num.num'),X4),s('type.closSem.v',X3),s('type.list.list'('type.closSem.v'),X2),s('type.closSem.state'(X0),X1))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X6))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10,X11,X12] : (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X6)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),X12))),s('type.closSem.state'(X6),X11))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X6)),'const.closSem.evaluate_app_4'(s('type.option.option'('type.num.num'),X10),s('type.closSem.v',X9),s('type.list.list'('type.closSem.v'),X8),s('type.closSem.state'(X6),X7))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X12))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10,X11,X12] : (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X6)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),X12))),s('type.closSem.state'(X6),X11))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X6)),'const.closSem.evaluate_app_4'(s('type.option.option'('type.num.num'),X10),s('type.closSem.v',X9),s('type.list.list'('type.closSem.v'),X8),s('type.closSem.state'(X6),X7))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),X12))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  file('thm.closProps.evaluate_app_IMP_LENGTH','thm.closProps.evaluate_app_IMP_LENGTH')).
fof(f152,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.closProps.evaluate_app_IMP_LENGTH',aHL_TRUTH)).
fof(f12340,plain,(
  p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),sK6))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(forward_demodulation,[],[f12339,f4096])).
fof(f4096,plain,(
  ( ! [X191,X194,X192,X190,X195,X193] : (s(X192,happ(s(fun(X193,X192),happ(s(fun('type.num.num',fun(X193,X192)),X194),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X190),X191))))),s(X193,X195))) = s(X192,happ(s(fun('type.list.list'(X190),X192),'_dst_x0x1x0_3'(s(fun('type.num.num',fun(X193,X192)),X194),s(fun('type.list.list'(X190),'type.num.num'),'const.list.LENGTH_0'),s(X193,X195))),s('type.list.list'(X190),X191)))) )),
  inference(superposition,[],[f209,f172])).
fof(f172,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num',happ(s(fun('type.list.list'(X0),'type.num.num'),'const.list.LENGTH_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1] : s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num',happ(s(fun('type.list.list'(X0),'type.num.num'),'const.list.LENGTH_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0] : ! [X1] : s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num',happ(s(fun('type.list.list'(X0),'type.num.num'),'const.list.LENGTH_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X6] : ! [X35] : s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X35))) = s('type.num.num',happ(s(fun('type.list.list'(X6),'type.num.num'),'const.list.LENGTH_0'),s('type.list.list'(X6),X35)))),
  file('thm.closProps.evaluate_app_IMP_LENGTH','ARITY_0_1_const.list.LENGTH')).
fof(f209,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X1,fun(X3,X0)),X4),s(fun(X2,X1),X5),s(X3,X6))),s(X2,X7))) = s(X0,happ(s(fun(X3,X0),happ(s(fun(X1,fun(X3,X0)),X4),s(X1,happ(s(fun(X2,X1),X5),s(X2,X7))))),s(X3,X6)))) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X1,fun(X3,X0)),X4),s(fun(X2,X1),X5),s(X3,X6))),s(X2,X7))) = s(X0,happ(s(fun(X3,X0),happ(s(fun(X1,fun(X3,X0)),X4),s(X1,happ(s(fun(X2,X1),X5),s(X2,X7))))),s(X3,X6)))),
  inference(flattening,[],[f95])).
fof(f95,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6,X7] : s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X1,fun(X3,X0)),X4),s(fun(X2,X1),X5),s(X3,X6))),s(X2,X7))) = s(X0,happ(s(fun(X3,X0),happ(s(fun(X1,fun(X3,X0)),X4),s(X1,happ(s(fun(X2,X1),X5),s(X2,X7))))),s(X3,X6)))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X36,X37,X38,X42] : ! [X39,X40,X43,X41] : s(X36,happ(s(fun(X38,X36),'_dst_x0x1x0_3'(s(fun(X37,fun(X42,X36)),X39),s(fun(X38,X37),X40),s(X42,X43))),s(X38,X41))) = s(X36,happ(s(fun(X42,X36),happ(s(fun(X37,fun(X42,X36)),X39),s(X37,happ(s(fun(X38,X37),X40),s(X38,X41))))),s(X42,X43)))),
  file('thm.closProps.evaluate_app_IMP_LENGTH','_dst_x0x1x0_ax')).
fof(f12339,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closSem.v'),bool),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num',bool)),'=_0'),s(fun('type.list.list'('type.closSem.v'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.closSem.v'),sK6))))),
  inference(forward_demodulation,[],[f12338,f194])).
fof(f194,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X1,happ(s(fun(X2,X1),X4),s(X2,X3))) = s(X1,'const.semanticPrimitives.result_CASE_3'(s('type.semanticPrimitives.result'(X2,X0),'const.semanticPrimitives.Rval_1'(s(X2,X3))),s(fun(X2,X1),X4),s(fun('type.semanticPrimitives.error_result'(X0),X1),X5)))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X1,happ(s(fun(X2,X1),X4),s(X2,X3))) = s(X1,'const.semanticPrimitives.result_CASE_3'(s('type.semanticPrimitives.result'(X2,X0),'const.semanticPrimitives.Rval_1'(s(X2,X3))),s(fun(X2,X1),X4),s(fun('type.semanticPrimitives.error_result'(X0),X1),X5)))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X1,happ(s(fun(X2,X1),X4),s(X2,X3))) = s(X1,'const.semanticPrimitives.result_CASE_3'(s('type.semanticPrimitives.result'(X2,X0),'const.semanticPrimitives.Rval_1'(s(X2,X3))),s(fun(X2,X1),X4),s(fun('type.semanticPrimitives.error_result'(X0),X1),X5)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X27,X26,X6] : ! [X33,X28,X34] : s(X26,happ(s(fun(X6,X26),X28),s(X6,X33))) = s(X26,'const.semanticPrimitives.result_CASE_3'(s('type.semanticPrimitives.result'(X6,X27),'const.semanticPrimitives.Rval_1'(s(X6,X33))),s(fun(X6,X26),X28),s(fun('type.semanticPrimitives.error_result'(X27),X26),X34)))),
  file('thm.closProps.evaluate_app_IMP_LENGTH','thm.semanticPrimitives.result_case_def|split|0')).
fof(f12338,plain,(
  p(s(bool,'const.semanticPrimitives.result_CASE_3'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),sK6))),s(fun('type.list.list'('type.closSem.v'),bool),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num',bool)),'=_0'),s(fun('type.list.list'('type.closSem.v'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),'_dst_x0_1'(s(bool,'T_0'))))))),
  inference(forward_demodulation,[],[f12337,f171])).
fof(f171,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X38] : ! [X40] : s(X38,X40) = s(X38,happ(s(fun(X38,X38),'_i_0_0'),s(X38,X40)))),
  file('thm.closProps.evaluate_app_IMP_LENGTH','_i0_ax')).
fof(f12337,plain,(
  p(s(bool,'const.semanticPrimitives.result_CASE_3'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),happ(s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v')),'_i_0_0'),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),sK6))))),s(fun('type.list.list'('type.closSem.v'),bool),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num',bool)),'=_0'),s(fun('type.list.list'('type.closSem.v'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),'_dst_x0_1'(s(bool,'T_0'))))))),
  inference(forward_demodulation,[],[f12336,f10240])).
fof(f10240,plain,(
  ( ! [X6,X12,X10,X8,X7,X13,X11,X9] : (s(X6,'const.semanticPrimitives.result_CASE_3'(s('type.semanticPrimitives.result'(X8,X7),X9),s(fun(X8,X6),X10),s(fun('type.semanticPrimitives.error_result'(X7),X6),X11))) = s(X6,happ(s(fun(X12,X6),'_dst_x0x0x0x0_4'(s(fun('type.semanticPrimitives.result'(X8,X7),fun(fun(X8,X6),fun(fun('type.semanticPrimitives.error_result'(X7),X6),X6))),'const.semanticPrimitives.result_CASE_0'),s('type.semanticPrimitives.result'(X8,X7),X9),s(fun(X8,X6),X10),s(fun('type.semanticPrimitives.error_result'(X7),X6),X11))),s(X12,X13)))) )),
  inference(superposition,[],[f199,f215])).
fof(f215,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s(X1,happ(s(fun(X0,X1),'_dst_x0x0x0x0_4'(s(fun(X2,fun(X3,fun(X4,X1))),X5),s(X2,X6),s(X3,X7),s(X4,X8))),s(X0,X9))) = s(X1,happ(s(fun(X4,X1),happ(s(fun(X3,fun(X4,X1)),happ(s(fun(X2,fun(X3,fun(X4,X1))),X5),s(X2,X6))),s(X3,X7))),s(X4,X8)))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : s(X1,happ(s(fun(X0,X1),'_dst_x0x0x0x0_4'(s(fun(X2,fun(X3,fun(X4,X1))),X5),s(X2,X6),s(X3,X7),s(X4,X8))),s(X0,X9))) = s(X1,happ(s(fun(X4,X1),happ(s(fun(X3,fun(X4,X1)),happ(s(fun(X2,fun(X3,fun(X4,X1))),X5),s(X2,X6))),s(X3,X7))),s(X4,X8)))),
  inference(flattening,[],[f107])).
fof(f107,plain,(
  ! [X0,X1,X2,X3,X4] : ! [X5,X6,X7,X8,X9] : s(X1,happ(s(fun(X0,X1),'_dst_x0x0x0x0_4'(s(fun(X2,fun(X3,fun(X4,X1))),X5),s(X2,X6),s(X3,X7),s(X4,X8))),s(X0,X9))) = s(X1,happ(s(fun(X4,X1),happ(s(fun(X3,fun(X4,X1)),happ(s(fun(X2,fun(X3,fun(X4,X1))),X5),s(X2,X6))),s(X3,X7))),s(X4,X8)))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X38,X36,X37,X42,X44] : ! [X39,X40,X43,X47,X41] : s(X36,happ(s(fun(X38,X36),'_dst_x0x0x0x0_4'(s(fun(X37,fun(X42,fun(X44,X36))),X39),s(X37,X40),s(X42,X43),s(X44,X47))),s(X38,X41))) = s(X36,happ(s(fun(X44,X36),happ(s(fun(X42,fun(X44,X36)),happ(s(fun(X37,fun(X42,fun(X44,X36))),X39),s(X37,X40))),s(X42,X43))),s(X44,X47)))),
  file('thm.closProps.evaluate_app_IMP_LENGTH','_dst_x0x0x0x0_ax')).
fof(f199,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X2,'const.semanticPrimitives.result_CASE_3'(s('type.semanticPrimitives.result'(X0,X1),X3),s(fun(X0,X2),X4),s(fun('type.semanticPrimitives.error_result'(X1),X2),X5))) = s(X2,happ(s(fun(fun('type.semanticPrimitives.error_result'(X1),X2),X2),happ(s(fun(fun(X0,X2),fun(fun('type.semanticPrimitives.error_result'(X1),X2),X2)),happ(s(fun('type.semanticPrimitives.result'(X0,X1),fun(fun(X0,X2),fun(fun('type.semanticPrimitives.error_result'(X1),X2),X2))),'const.semanticPrimitives.result_CASE_0'),s('type.semanticPrimitives.result'(X0,X1),X3))),s(fun(X0,X2),X4))),s(fun('type.semanticPrimitives.error_result'(X1),X2),X5)))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X2,'const.semanticPrimitives.result_CASE_3'(s('type.semanticPrimitives.result'(X0,X1),X3),s(fun(X0,X2),X4),s(fun('type.semanticPrimitives.error_result'(X1),X2),X5))) = s(X2,happ(s(fun(fun('type.semanticPrimitives.error_result'(X1),X2),X2),happ(s(fun(fun(X0,X2),fun(fun('type.semanticPrimitives.error_result'(X1),X2),X2)),happ(s(fun('type.semanticPrimitives.result'(X0,X1),fun(fun(X0,X2),fun(fun('type.semanticPrimitives.error_result'(X1),X2),X2))),'const.semanticPrimitives.result_CASE_0'),s('type.semanticPrimitives.result'(X0,X1),X3))),s(fun(X0,X2),X4))),s(fun('type.semanticPrimitives.error_result'(X1),X2),X5)))),
  inference(flattening,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X2,'const.semanticPrimitives.result_CASE_3'(s('type.semanticPrimitives.result'(X0,X1),X3),s(fun(X0,X2),X4),s(fun('type.semanticPrimitives.error_result'(X1),X2),X5))) = s(X2,happ(s(fun(fun('type.semanticPrimitives.error_result'(X1),X2),X2),happ(s(fun(fun(X0,X2),fun(fun('type.semanticPrimitives.error_result'(X1),X2),X2)),happ(s(fun('type.semanticPrimitives.result'(X0,X1),fun(fun(X0,X2),fun(fun('type.semanticPrimitives.error_result'(X1),X2),X2))),'const.semanticPrimitives.result_CASE_0'),s('type.semanticPrimitives.result'(X0,X1),X3))),s(fun(X0,X2),X4))),s(fun('type.semanticPrimitives.error_result'(X1),X2),X5)))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X6,X27,X26] : ! [X35,X51,X52] : s(X26,'const.semanticPrimitives.result_CASE_3'(s('type.semanticPrimitives.result'(X6,X27),X35),s(fun(X6,X26),X51),s(fun('type.semanticPrimitives.error_result'(X27),X26),X52))) = s(X26,happ(s(fun(fun('type.semanticPrimitives.error_result'(X27),X26),X26),happ(s(fun(fun(X6,X26),fun(fun('type.semanticPrimitives.error_result'(X27),X26),X26)),happ(s(fun('type.semanticPrimitives.result'(X6,X27),fun(fun(X6,X26),fun(fun('type.semanticPrimitives.error_result'(X27),X26),X26))),'const.semanticPrimitives.result_CASE_0'),s('type.semanticPrimitives.result'(X6,X27),X35))),s(fun(X6,X26),X51))),s(fun('type.semanticPrimitives.error_result'(X27),X26),X52)))),
  file('thm.closProps.evaluate_app_IMP_LENGTH','ARITY_0_3_const.semanticPrimitives.result_CASE')).
fof(f12336,plain,(
  p(s(bool,happ(s(fun('type.closSem.state'(sK0),bool),'_dst_x0x0x0x0_4'(s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),fun(fun('type.list.list'('type.closSem.v'),bool),fun(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),bool))),'const.semanticPrimitives.result_CASE_0'),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),happ(s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v')),'_i_0_0'),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),sK6))))),s(fun('type.list.list'('type.closSem.v'),bool),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num',bool)),'=_0'),s(fun('type.list.list'('type.closSem.v'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),'_dst_x0_1'(s(bool,'T_0'))))),s('type.closSem.state'(sK0),sK5))))),
  inference(forward_demodulation,[],[f12335,f218])).
fof(f218,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s(fun(X0,X1),'_dst_x0x0x0x0_4'(s(fun(X2,fun(X4,fun(X5,X1))),X6),s(X2,happ(s(fun(X3,X2),X7),s(X3,X10))),s(X4,X8),s(X5,X9))) = s(fun(X0,X1),happ(s(fun(X3,fun(X0,X1)),'_dst_x00x10x00x00_4'(s(fun(X2,fun(X4,fun(X5,X1))),X6),s(fun(X3,X2),X7),s(X4,X8),s(X5,X9))),s(X3,X10)))) )),
  inference(cnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : s(fun(X0,X1),'_dst_x0x0x0x0_4'(s(fun(X2,fun(X4,fun(X5,X1))),X6),s(X2,happ(s(fun(X3,X2),X7),s(X3,X10))),s(X4,X8),s(X5,X9))) = s(fun(X0,X1),happ(s(fun(X3,fun(X0,X1)),'_dst_x00x10x00x00_4'(s(fun(X2,fun(X4,fun(X5,X1))),X6),s(fun(X3,X2),X7),s(X4,X8),s(X5,X9))),s(X3,X10)))),
  inference(flattening,[],[f113])).
fof(f113,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ! [X6,X7,X8,X9,X10] : s(fun(X0,X1),'_dst_x0x0x0x0_4'(s(fun(X2,fun(X4,fun(X5,X1))),X6),s(X2,happ(s(fun(X3,X2),X7),s(X3,X10))),s(X4,X8),s(X5,X9))) = s(fun(X0,X1),happ(s(fun(X3,fun(X0,X1)),'_dst_x00x10x00x00_4'(s(fun(X2,fun(X4,fun(X5,X1))),X6),s(fun(X3,X2),X7),s(X4,X8),s(X5,X9))),s(X3,X10)))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X37,X36,X42,X38,X44,X45] : ! [X39,X40,X43,X47,X41] : s(fun(X37,X36),'_dst_x0x0x0x0_4'(s(fun(X42,fun(X44,fun(X45,X36))),X39),s(X42,happ(s(fun(X38,X42),X40),s(X38,X41))),s(X44,X43),s(X45,X47))) = s(fun(X37,X36),happ(s(fun(X38,fun(X37,X36)),'_dst_x00x10x00x00_4'(s(fun(X42,fun(X44,fun(X45,X36))),X39),s(fun(X38,X42),X40),s(X44,X43),s(X45,X47))),s(X38,X41)))),
  file('thm.closProps.evaluate_app_IMP_LENGTH','_dst_x00x10x00x00_ax')).
fof(f12335,plain,(
  p(s(bool,happ(s(fun('type.closSem.state'(sK0),bool),happ(s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),fun('type.closSem.state'(sK0),bool)),'_dst_x00x10x00x00_4'(s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),fun(fun('type.list.list'('type.closSem.v'),bool),fun(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),bool))),'const.semanticPrimitives.result_CASE_0'),s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v')),'_i_0_0'),s(fun('type.list.list'('type.closSem.v'),bool),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num',bool)),'=_0'),s(fun('type.list.list'('type.closSem.v'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),'_dst_x0_1'(s(bool,'T_0'))))),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),sK6))))),s('type.closSem.state'(sK0),sK5))))),
  inference(forward_demodulation,[],[f12235,f197])).
fof(f197,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X5),s(X1,X4))),s(X2,X3))) = s(X0,'const.pair.pair_CASE_2'(s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X3))),s(fun(X1,fun(X2,X0)),X5)))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X5),s(X1,X4))),s(X2,X3))) = s(X0,'const.pair.pair_CASE_2'(s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X3))),s(fun(X1,fun(X2,X0)),X5)))),
  inference(flattening,[],[f86])).
fof(f86,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X5),s(X1,X4))),s(X2,X3))) = s(X0,'const.pair.pair_CASE_2'(s('type.pair.prod'(X1,X2),'const.pair.,_2'(s(X1,X4),s(X2,X3))),s(fun(X1,fun(X2,X0)),X5)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6,X27,X26] : ! [X15,X14,X28] : s(X6,happ(s(fun(X26,X6),happ(s(fun(X27,fun(X26,X6)),X28),s(X27,X14))),s(X26,X15))) = s(X6,'const.pair.pair_CASE_2'(s('type.pair.prod'(X27,X26),'const.pair.,_2'(s(X27,X14),s(X26,X15))),s(fun(X27,fun(X26,X6)),X28)))),
  file('thm.closProps.evaluate_app_IMP_LENGTH','thm.pair.pair_case_thm')).
fof(f12235,plain,(
  p(s(bool,'const.pair.pair_CASE_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(sK0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),sK6))),s('type.closSem.state'(sK0),sK5))),s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),fun('type.closSem.state'(sK0),bool)),'_dst_x00x10x00x00_4'(s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),fun(fun('type.list.list'('type.closSem.v'),bool),fun(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),bool))),'const.semanticPrimitives.result_CASE_0'),s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v')),'_i_0_0'),s(fun('type.list.list'('type.closSem.v'),bool),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num',bool)),'=_0'),s(fun('type.list.list'('type.closSem.v'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),'_dst_x0_1'(s(bool,'T_0'))))))))),
  inference(superposition,[],[f179,f150])).
fof(f150,plain,(
  s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(sK0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),sK6))),s('type.closSem.state'(sK0),sK5))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(sK0)),'const.closSem.evaluate_app_4'(s('type.option.option'('type.num.num'),sK4),s('type.closSem.v',sK3),s('type.list.list'('type.closSem.v'),sK2),s('type.closSem.state'(sK0),sK1)))),
  inference(cnf_transformation,[],[f128])).
fof(f179,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.pair.pair_CASE_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),'const.closSem.evaluate_app_4'(s('type.option.option'('type.num.num'),X1),s('type.closSem.v',X2),s('type.list.list'('type.closSem.v'),X3),s('type.closSem.state'(X0),X4))),s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),fun('type.closSem.state'(X0),bool)),'_dst_x00x10x00x00_4'(s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),fun(fun('type.list.list'('type.closSem.v'),bool),fun(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),bool))),'const.semanticPrimitives.result_CASE_0'),s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v')),'_i_0_0'),s(fun('type.list.list'('type.closSem.v'),bool),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num',bool)),'=_0'),s(fun('type.list.list'('type.closSem.v'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),'_dst_x0_1'(s(bool,'T_0'))))))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2,X3,X4] : p(s(bool,'const.pair.pair_CASE_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),'const.closSem.evaluate_app_4'(s('type.option.option'('type.num.num'),X1),s('type.closSem.v',X2),s('type.list.list'('type.closSem.v'),X3),s('type.closSem.state'(X0),X4))),s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),fun('type.closSem.state'(X0),bool)),'_dst_x00x10x00x00_4'(s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),fun(fun('type.list.list'('type.closSem.v'),bool),fun(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),bool))),'const.semanticPrimitives.result_CASE_0'),s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v')),'_i_0_0'),s(fun('type.list.list'('type.closSem.v'),bool),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num',bool)),'=_0'),s(fun('type.list.list'('type.closSem.v'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),'_dst_x0_1'(s(bool,'T_0'))))))))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : p(s(bool,'const.pair.pair_CASE_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),'const.closSem.evaluate_app_4'(s('type.option.option'('type.num.num'),X1),s('type.closSem.v',X2),s('type.list.list'('type.closSem.v'),X3),s('type.closSem.state'(X0),X4))),s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),fun('type.closSem.state'(X0),bool)),'_dst_x00x10x00x00_4'(s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),fun(fun('type.list.list'('type.closSem.v'),bool),fun(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),bool))),'const.semanticPrimitives.result_CASE_0'),s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v')),'_i_0_0'),s(fun('type.list.list'('type.closSem.v'),bool),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num',bool)),'=_0'),s(fun('type.list.list'('type.closSem.v'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),'_dst_x0_1'(s(bool,'T_0'))))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X21] : ! [X22,X23,X24,X25] : p(s(bool,'const.pair.pair_CASE_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X21)),'const.closSem.evaluate_app_4'(s('type.option.option'('type.num.num'),X22),s('type.closSem.v',X23),s('type.list.list'('type.closSem.v'),X24),s('type.closSem.state'(X21),X25))),s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),fun('type.closSem.state'(X21),bool)),'_dst_x00x10x00x00_4'(s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),fun(fun('type.list.list'('type.closSem.v'),bool),fun(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),bool))),'const.semanticPrimitives.result_CASE_0'),s(fun('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v')),'_i_0_0'),s(fun('type.list.list'('type.closSem.v'),bool),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.num.num',bool)),'=_0'),s(fun('type.list.list'('type.closSem.v'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(fun('type.semanticPrimitives.error_result'('type.closSem.v'),bool),'_dst_x0_1'(s(bool,'T_0'))))))))),
  file('thm.closProps.evaluate_app_IMP_LENGTH','thm.closProps.closProps_52_prove_ltb|split|1')).
% SZS output end Proof for thm.closProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 101
% Passive clauses: 1400
% Generated clauses: 12202
% Final active clauses: 88
% Final passive clauses: 1166
% Input formulas: 43
% Initial clauses: 70
% 
% Duplicate literals: 191
% Trivial inequalities: 81
% Fw subsumption resolutions: 108
% Fw demodulations: 1839
% Bw demodulations: 142
% Condensations: 299
% 
% Simple tautologies: 132
% Equational tautologies: 150
% Forward subsumptions: 7974
% Bw demodulations to eq. taut.: 2
% 
% Unit resulting resolution: 1159
% Forward superposition: 4424
% Backward superposition: 3566
% Self superposition: 198
% Equality factoring: 34
% Equality resolution: 7
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 1423
% SAT solver unit clauses: 570
% SAT solver binary clauses: 453
% 
% Sat splits: 7
% Sat splitting refutations: 7
% 
% Memory used [KB]: 34157
% Time elapsed: 1.040 s
% ------------------------------
% ------------------------------
% Success in time 2.36 s
