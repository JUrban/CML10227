Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.typeSysProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.typeSysProps
% SZS output start Proof for thm.typeSysProps
fof(f122,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f121,f41,f64,f62,f116,f40,f65])).
fof(f65,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.ast.t',bool),sK0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X4))))))) ) | $spl4),
  inference(cnf_transformation,[],[f65_D])).
fof(f65_D,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.ast.t',bool),sK0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X4))))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f40,plain,(
  ( ! [X4,X3] : (p(s(bool,happ(s(fun('type.ast.t',bool),sK0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X3)))))) | p(s(bool,happ(s(fun('type.ast.t',bool),sK0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X4))))))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  (! [X4] : p(s(bool,happ(s(fun('type.ast.t',bool),sK0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X4)))))) | ! [X3] : p(s(bool,happ(s(fun('type.ast.t',bool),sK0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X3))))))) & (~p(s(bool,happ(s(fun('type.ast.t',bool),sK0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),sK1)))))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),sK0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),sK2)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f31])).
fof(f31,plain,(
  ? [X0] : ((! [X4] : p(s(bool,happ(s(fun('type.ast.t',bool),X0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X4)))))) | ! [X3] : p(s(bool,happ(s(fun('type.ast.t',bool),X0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X3))))))) & (? [X2] : ~p(s(bool,happ(s(fun('type.ast.t',bool),X0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X2)))))) | ? [X1] : ~p(s(bool,happ(s(fun('type.ast.t',bool),X0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X1))))))))),
  inference(rectify,[],[f30])).
fof(f30,plain,(
  ? [X0] : ((! [X1] : p(s(bool,happ(s(fun('type.ast.t',bool),X0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X1)))))) | ! [X2] : p(s(bool,happ(s(fun('type.ast.t',bool),X0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X2))))))) & (? [X1] : ~p(s(bool,happ(s(fun('type.ast.t',bool),X0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X1)))))) | ? [X2] : ~p(s(bool,happ(s(fun('type.ast.t',bool),X0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X2))))))))),
  inference(nnf_transformation,[],[f26])).
fof(f26,plain,(
  ? [X0] : (! [X1] : p(s(bool,happ(s(fun('type.ast.t',bool),X0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X1)))))) <~> ! [X2] : p(s(bool,happ(s(fun('type.ast.t',bool),X0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X2)))))))),
  inference(ennf_transformation,[],[f14])).
fof(f14,plain,(
  ~! [X0] : (! [X1] : p(s(bool,happ(s(fun('type.ast.t',bool),X0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X1)))))) <=> ! [X2] : p(s(bool,happ(s(fun('type.ast.t',bool),X0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X2)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (! [X7] : p(s(bool,happ(s(fun('type.ast.t',bool),X6),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X7)))))) <=> ! [X7] : p(s(bool,happ(s(fun('type.ast.t',bool),X6),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X7)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (! [X7] : p(s(bool,happ(s(fun('type.ast.t',bool),X6),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X7)))))) <=> ! [X7] : p(s(bool,happ(s(fun('type.ast.t',bool),X6),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),X7)))))))),
  file('thm.typeSysProps.typeSysProps_27_prove_ltb','thm.typeSysProps.typeSysProps_27_prove_ltb')).
fof(f116,plain,(
  $false | ($spl1 | $spl4)),
  inference(resolution,[],[f65,f62])).
fof(f62,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),sK0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),sK1)))))) | $spl1),
  inference(cnf_transformation,[],[f62_D])).
fof(f62_D,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),sK0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),sK1)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f64,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),sK0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),sK2)))))) | $spl3),
  inference(cnf_transformation,[],[f64_D])).
fof(f64_D,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),sK0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),sK2)))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f41,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),sK0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),sK2)))))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),sK0),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),sK1))))))),
  inference(cnf_transformation,[],[f32])).
fof(f121,plain,(
  $false | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f64,f65])).
% SZS output end Proof for thm.typeSysProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 12
% Passive clauses: 36
% Generated clauses: 80
% Final active clauses: 11
% Final passive clauses: 14
% Input formulas: 12
% Initial clauses: 21
% 
% Duplicate literals: 1
% Trivial inequalities: 2
% Fw subsumption resolutions: 4
% 
% Simple tautologies: 8
% Equational tautologies: 4
% Forward subsumptions: 27
% 
% Binary resolution: 21
% Factoring: 1
% Forward superposition: 8
% Backward superposition: 13
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 1
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 6
% SAT solver unit clauses: 1
% SAT solver binary clauses: 4
% SAT solver learnt clauses: 1
% 
% Sat splits: 2
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 4
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 639
% Time elapsed: 0.016 s
% ------------------------------
% ------------------------------
% Success in time 0.03 s
