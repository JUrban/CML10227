Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvp_to_wordProps
% (55196)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 95
% Passive clauses: 1752
% Generated clauses: 13008
% Final active clauses: 92
% Final passive clauses: 1523
% Input formulas: 26
% Initial clauses: 62
% 
% Duplicate literals: 647
% Trivial inequalities: 234
% Fw subsumption resolutions: 2584
% Fw demodulations: 1492
% Bw demodulations: 2
% 
% Simple tautologies: 348
% Equational tautologies: 78
% Forward subsumptions: 4952
% 
% Binary resolution: 276
% Factoring: 1
% Forward superposition: 3515
% Backward superposition: 3740
% Self superposition: 219
% Equality factoring: 206
% Equality resolution: 35
% 
% Split clauses: 559
% Split components: 1126
% SAT solver clauses: 1056
% SAT solver unit clauses: 27
% SAT solver binary clauses: 189
% 
% Sat splits: 559
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1055
% TWLsolver calls for satisfiability: 163
% 
% Memory used [KB]: 6908
% Time elapsed: 0.619 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.bvp_to_wordProps
% (55234)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit

% Active clauses: 58
% Passive clauses: 338
% Generated clauses: 4710
% Final active clauses: 55
% Final passive clauses: 261
% Input formulas: 26
% Initial clauses: 62
% 
% Duplicate literals: 435
% Trivial inequalities: 60
% Fw subsumption resolutions: 541
% Fw demodulations: 163
% Bw demodulations: 20
% Condensations: 758
% Global subsumptions: 4
% 
% Simple tautologies: 104
% Equational tautologies: 39
% Forward subsumptions: 1777
% 
% Binary resolution: 119
% Factoring: 2
% Forward superposition: 875
% Backward superposition: 1153
% Self superposition: 112
% Equality factoring: 101
% Equality resolution: 18
% 
% Split clauses: 88
% Split components: 177
% SAT solver clauses: 572
% SAT solver unit clauses: 58
% SAT solver binary clauses: 39
% SAT solver learnt clauses: 8
% 
% Sat splits: 88
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 556
% TWLsolver calls for satisfiability: 331
% 
% Memory used [KB]: 4733
% Time elapsed: 0.734 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.bvp_to_wordProps
% (55263)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 425
% Passive clauses: 5664
% Generated clauses: 133213
% Final active clauses: 166
% Final passive clauses: 872
% Input formulas: 26
% Initial clauses: 62
% Discarded non-redundant clauses: 1419
% 
% Duplicate literals: 6440
% Trivial inequalities: 1005
% Fw subsumption resolutions: 13348
% Fw demodulations: 18843
% Bw demodulations: 2543
% Condensations: 15861
% Global subsumptions: 183
% 
% Simple tautologies: 1917
% Equational tautologies: 1131
% Forward subsumptions: 68312
% Fw demodulations to eq. taut.: 24
% Bw demodulations to eq. taut.: 257
% 
% Unit resulting resolution: 4883
% Factoring: 1
% Forward superposition: 34841
% Backward superposition: 28394
% Self superposition: 688
% Equality factoring: 434
% Equality resolution: 63
% 
% Split clauses: 300
% Split components: 609
% SAT solver clauses: 6597
% SAT solver unit clauses: 28
% SAT solver binary clauses: 294
% 
% Sat splits: 300
% Sat splitting refutations: 148
% 
% Memory used [KB]: 60638
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.bvp_to_wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvp_to_wordProps
% SZS output start Proof for thm.bvp_to_wordProps
fof(f5081,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f238,f239,f240,f241,f242,f243,f244,f245,f246,f247,f797,f798,f823,f853,f851,f824,f857,f855,f1165,f1172,f1185,f1345,f1352,f1350,f1869,f1870,f1895,f1896,f2026,f271,f2910,f2911,f2936,f1927,f2937,f1933,f1931,f3280,f3287,f3294,f3305,f3312,f3450,f3451,f3479,f3517,f3515,f3480,f3521,f3519,f3673,f3225,f3679,f3234,f3677,f3683,f1929,f3681,f2025,f2024,f2023,f2020,f2019,f2018,f2017,f3944,f3945,f268,f3946,f3947,f269,f3950,f3951,f3952,f273,f4306,f4307,f4336,f4308,f4309,f4337,f4310,f4311,f267,f4312,f4313,f266,f4314,f4341,f275,f4315,f4339,f277,f4541,f4585,f4592,f4608,f4612,f4610,f4649,f4837,f4840,f4611,f4839,f5067,f5076,f5078,f5080])).
fof(f5080,plain,(
  $false | ($spl34 | $spl41)),
  inference(subsumption_resolution,[],[f5079,f203])).
fof(f203,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(subsumption_resolution,[],[f196,f97])).
fof(f97,plain,(
  p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0'))))),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,sK12),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) & p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) & ! [X13,X14] : (s('type.wordSem.word_loc'(sK0),sK2) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X13))) | s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X14))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),X13),s('type.fcp.cart'(bool,sK0),X14))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12])],[f61])).
fof(f61,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X11),s(bool,X12),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X6),s('type.num.num',X5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X7),s(fun('type.fcp.cart'(bool,X0),bool),X10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X9))),s('type.wordSem.word_loc'(X0),X2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X8))),s('type.wordSem.word_loc'(X0),X1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X3)))))))) & p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0')))) & ! [X13,X14] : (s('type.wordSem.word_loc'(X0),X2) != s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X13))) | s('type.wordSem.word_loc'(X0),X1) != s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X14))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',X8))) != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,X0),X13),s('type.fcp.cart'(bool,X0),X14)))))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : ((p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X11),s(bool,X12),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X6),s('type.num.num',X5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X7),s(fun('type.fcp.cart'(bool,X0),bool),X10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X9))),s('type.wordSem.word_loc'(X0),X2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X8))),s('type.wordSem.word_loc'(X0),X1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X3)))))))) & p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0'))))) & ! [X13,X14] : (s('type.wordSem.word_loc'(X0),X2) != s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X13))) | s('type.wordSem.word_loc'(X0),X1) != s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X14))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',X8))) != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,X0),X13),s('type.fcp.cart'(bool,X0),X14)))))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : ((p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X11),s(bool,X12),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X6),s('type.num.num',X5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X7),s(fun('type.fcp.cart'(bool,X0),bool),X10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X9))),s('type.wordSem.word_loc'(X0),X2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X8))),s('type.wordSem.word_loc'(X0),X1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X3)))))))) & p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0'))))) => ? [X13,X14] : (s('type.wordSem.word_loc'(X0),X2) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X13))) & s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X14))) & s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',X8))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,X0),X13),s('type.fcp.cart'(bool,X0),X14)))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ~! [X0] : ! [X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12] : ((p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X11),s(bool,X12),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X6),s('type.num.num',X5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X4),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X7),s(fun('type.fcp.cart'(bool,X0),bool),X10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X9))),s('type.wordSem.word_loc'(X0),X2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X8))),s('type.wordSem.word_loc'(X0),X1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X3)))))))) & p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0'))))) => ? [X13,X14] : (s('type.wordSem.word_loc'(X0),X2) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X13))) & s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X14))) & s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',X8))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,X0),X13),s('type.fcp.cart'(bool,X0),X14)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : ((p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X17),s(bool,X18),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X12),s('type.num.num',X11),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X10),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X13),s(fun('type.fcp.cart'(bool,X6),bool),X16),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X15))),s('type.wordSem.word_loc'(X6),X8))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X14))),s('type.wordSem.word_loc'(X6),X7))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6))),X9)))))))) & p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X6),'const.bool.the_value_0'))))) => ? [X19,X20] : (s('type.wordSem.word_loc'(X6),X8) = s('type.wordSem.word_loc'(X6),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X6),X19))) & s('type.wordSem.word_loc'(X6),X7) = s('type.wordSem.word_loc'(X6),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X6),X20))) & s(bool,'const.integer.int_lt_2'(s('type.integer.int',X15),s('type.integer.int',X14))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,X6),X19),s('type.fcp.cart'(bool,X6),X20)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : ((p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X17),s(bool,X18),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X12),s('type.num.num',X11),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X10),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X13),s(fun('type.fcp.cart'(bool,X6),bool),X16),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X15))),s('type.wordSem.word_loc'(X6),X8))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X14))),s('type.wordSem.word_loc'(X6),X7))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6))),X9)))))))) & p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X6),'const.bool.the_value_0'))))) => ? [X19,X20] : (s('type.wordSem.word_loc'(X6),X8) = s('type.wordSem.word_loc'(X6),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X6),X19))) & s('type.wordSem.word_loc'(X6),X7) = s('type.wordSem.word_loc'(X6),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X6),X20))) & s(bool,'const.integer.int_lt_2'(s('type.integer.int',X15),s('type.integer.int',X14))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,X6),X19),s('type.fcp.cart'(bool,X6),X20)))))),
  file('thm.bvp_to_wordProps.memory_rel_Number_LESS','thm.bvp_to_wordProps.memory_rel_Number_LESS')).
fof(f196,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0'))))),
  inference(superposition,[],[f161,f115])).
fof(f115,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X23] : (s(bool,'T_0') = s(bool,X23) <=> p(s(bool,X23)))),
  file('thm.bvp_to_wordProps.memory_rel_Number_LESS','thm.bool.EQ_CLAUSES|split|0')).
fof(f161,plain,(
  s(bool,'F_0') != s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))),
  inference(resolution,[],[f97,f110])).
fof(f110,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X23] : (s(bool,'F_0') = s(bool,X23) <=> ~p(s(bool,X23)))),
  file('thm.bvp_to_wordProps.memory_rel_Number_LESS','thm.bool.EQ_CLAUSES|split|2')).
fof(f5079,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl34 | $spl41)),
  inference(forward_demodulation,[],[f4371,f4605])).
fof(f4605,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) | $spl41),
  inference(trivial_inequality_removal,[],[f4604])).
fof(f4604,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) | $spl41),
  inference(superposition,[],[f3520,f118])).
fof(f118,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.bvp_to_wordProps.memory_rel_Number_LESS',aHL_BOOL_CASES)).
fof(f3520,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) | $spl41),
  inference(cnf_transformation,[],[f3520_D])).
fof(f3520_D,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f4371,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) | $spl34),
  inference(forward_demodulation,[],[f4346,f3515])).
fof(f4346,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8)))))),
  inference(resolution,[],[f4290,f562])).
fof(f562,plain,(
  ( ! [X0] : (~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',X0)))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',X0))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X0)))))) )),
  inference(subsumption_resolution,[],[f561,f154])).
fof(f154,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f108])).
fof(f108,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : ! [X24] : (s(X6,X24) = s(X6,X24) <=> p(s(bool,'T_0')))),
  file('thm.bvp_to_wordProps.memory_rel_Number_LESS','thm.bool.REFL_CLAUSE')).
fof(f561,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',X0))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X0))))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',X0))))) )),
  inference(forward_demodulation,[],[f539,f163])).
fof(f163,plain,(
  s(bool,'T_0') = s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))),
  inference(resolution,[],[f97,f115])).
fof(f539,plain,(
  ( ! [X0] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',X0))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X0))))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',X0)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0'))))) )),
  inference(resolution,[],[f265,f99])).
fof(f99,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X1))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X2))),s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X1))))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.integer.int',X1)))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.integer.int',X2)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0'))))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0')))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.integer.int',X2)))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.integer.int',X1)))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X1))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X2))),s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X1))))))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0')))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.integer.int',X2)))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.integer.int',X1))))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X1))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X2))),s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X1))))))),
  inference(ennf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0')))) & p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.integer.int',X2)))) & p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.integer.int',X1))))) => s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X1))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X2))),s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X1))))))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0] : ! [X1,X2] : ((p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0')))) & p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.integer.int',X2)))) & p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.integer.int',X1))))) => s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X1))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X2))),s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X1))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X14,X15] : ((p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X6),'const.bool.the_value_0')))) & p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.integer.int',X15)))) & p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.integer.int',X14))))) => s(bool,'const.integer.int_lt_2'(s('type.integer.int',X15),s('type.integer.int',X14))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,X6),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X15))),s('type.fcp.cart'(bool,X6),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X14))))))),
  file('thm.bvp_to_wordProps.memory_rel_Number_LESS','thm.bvp_to_wordProps.num_less_thm')).
fof(f265,plain,(
  p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9))))),
  inference(subsumption_resolution,[],[f224,f97])).
fof(f224,plain,(
  p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0'))))),
  inference(resolution,[],[f96,f120])).
fof(f120,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.integer.int',X7)))) | ~p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X9),s(bool,X10),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X5),s('type.num.num',X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X8),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X7))),s('type.wordSem.word_loc'(X0),X2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X1)))))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0'))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : (~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0')))) | ~p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X9),s(bool,X10),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X5),s('type.num.num',X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X8),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X7))),s('type.wordSem.word_loc'(X0),X2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X1)))))) | (s('type.wordSem.word_loc'(X0),X2) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X7))))) & p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.integer.int',X7))))))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : ((~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0')))) | ~p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X9),s(bool,X10),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X5),s('type.num.num',X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X8),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X7))),s('type.wordSem.word_loc'(X0),X2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X1))))))) | (s('type.wordSem.word_loc'(X0),X2) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X7))))) & p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.integer.int',X7))))))),
  inference(ennf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : ((p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0')))) & p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X9),s(bool,X10),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X5),s('type.num.num',X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X8),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X7))),s('type.wordSem.word_loc'(X0),X2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X1))))))) => (s('type.wordSem.word_loc'(X0),X2) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X7))))) & p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.integer.int',X7))))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : ((p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0')))) & p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X9),s(bool,X10),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X5),s('type.num.num',X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X8),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X7))),s('type.wordSem.word_loc'(X0),X2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X1))))))) => (s('type.wordSem.word_loc'(X0),X2) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X7))))) & p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.integer.int',X7))))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X9,X32,X10,X11,X12,X13,X33,X16,X17,X18] : ((p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X6),'const.bool.the_value_0')))) & p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X17),s(bool,X18),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X12),s('type.num.num',X11),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X10),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X13),s(fun('type.fcp.cart'(bool,X6),bool),X16),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X33))),s('type.wordSem.word_loc'(X6),X32))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6))),X9))))))) => (s('type.wordSem.word_loc'(X6),X32) = s('type.wordSem.word_loc'(X6),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X6),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X33))))) & p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.integer.int',X33))))))),
  file('thm.bvp_to_wordProps.memory_rel_Number_LESS','thm.bvp_to_wordProps.memory_rel_Number_IMP')).
fof(f96,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,sK12),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3))))))))),
  inference(cnf_transformation,[],[f71])).
fof(f4290,plain,(
  p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8))))),
  inference(resolution,[],[f225,f157])).
fof(f157,plain,(
  ( ! [X14,X12,X10,X19,X17,X15,X13,X11,X18,X16] : (~p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X11),s(bool,X12),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X13),s('type.num.num',X14),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),X15),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),X16),s(fun('type.fcp.cart'(bool,sK0),bool),X17),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X10))),s('type.wordSem.word_loc'(sK0),X18))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),X19)))))) | p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',X10))))) )),
  inference(resolution,[],[f97,f120])).
fof(f225,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,sK12),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3))))))),
  inference(resolution,[],[f96,f150])).
fof(f150,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X8),s(bool,X9),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X5),s('type.num.num',X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X7),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X1)))) | ~p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X8),s(bool,X9),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X5),s('type.num.num',X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X7),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),X2),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X1))))))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : (~p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X8),s(bool,X9),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X5),s('type.num.num',X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X7),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),X2),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X1)))))) | p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X8),s(bool,X9),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X5),s('type.num.num',X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X7),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X1)))))),
  inference(ennf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X8),s(bool,X9),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X5),s('type.num.num',X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X7),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),X2),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X1)))))) => p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X8),s(bool,X9),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X5),s('type.num.num',X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X7),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X1)))))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5,X6,X7,X8,X9] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X8),s(bool,X9),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X5),s('type.num.num',X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X7),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),X2),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X1)))))) => p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X8),s(bool,X9),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X5),s('type.num.num',X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X7),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X1)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6] : ! [X9,X32,X10,X11,X12,X13,X16,X17,X18] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X17),s(bool,X18),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X12),s('type.num.num',X11),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X10),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X13),s(fun('type.fcp.cart'(bool,X6),bool),X16),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6)),X32),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6))),X9)))))) => p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X17),s(bool,X18),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X12),s('type.num.num',X11),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X10),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X13),s(fun('type.fcp.cart'(bool,X6),bool),X16),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X6))),X9)))))),
  file('thm.bvp_to_wordProps.memory_rel_Number_LESS','thm.bvp_to_wordProps.memory_rel_tail')).
fof(f5078,plain,(
  $false | ($spl34 | $spl41)),
  inference(subsumption_resolution,[],[f5077,f203])).
fof(f5077,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl34 | $spl41)),
  inference(forward_demodulation,[],[f4464,f4605])).
fof(f4464,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) | $spl34),
  inference(forward_demodulation,[],[f4453,f3515])).
fof(f4453,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8)))))),
  inference(trivial_inequality_removal,[],[f4402])).
fof(f4402,plain,(
  s(bool,'T_0') != s(bool,'T_0') | s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8)))))),
  inference(superposition,[],[f766,f4354])).
fof(f4354,plain,(
  s(bool,'T_0') = s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))),
  inference(resolution,[],[f4290,f115])).
fof(f766,plain,(
  ( ! [X16] : (s(bool,'T_0') != s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',X16))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',X16))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X16)))))) )),
  inference(resolution,[],[f562,f114])).
fof(f114,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f77])).
fof(f5076,plain,(
  $false | ($spl34 | $spl41)),
  inference(subsumption_resolution,[],[f5075,f203])).
fof(f5075,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl34 | $spl41)),
  inference(forward_demodulation,[],[f4468,f4605])).
fof(f4468,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) | $spl34),
  inference(forward_demodulation,[],[f4467,f3515])).
fof(f4467,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8)))))),
  inference(subsumption_resolution,[],[f4404,f154])).
fof(f4404,plain,(
  ~p(s(bool,'T_0')) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8)))))),
  inference(superposition,[],[f562,f4354])).
fof(f5067,plain,(
  $false | ($spl35 | $spl41)),
  inference(subsumption_resolution,[],[f5066,f4828])).
fof(f4828,plain,(
  s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) | $spl35),
  inference(trivial_inequality_removal,[],[f4827])).
fof(f4827,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) | $spl35),
  inference(superposition,[],[f3514,f118])).
fof(f3514,plain,(
  s(bool,'F_0') != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) | $spl35),
  inference(cnf_transformation,[],[f3514_D])).
fof(f3514_D,plain,(
  s(bool,'F_0') != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f5066,plain,(
  s(bool,'T_0') != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) | $spl41),
  inference(trivial_inequality_removal,[],[f5061])).
fof(f5061,plain,(
  s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),sK1) | s(bool,'T_0') != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) | $spl41),
  inference(superposition,[],[f4805,f4289])).
fof(f4289,plain,(
  s('type.wordSem.word_loc'(sK0),sK1) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8)))))),
  inference(resolution,[],[f225,f156])).
fof(f156,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (~p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X2),s(bool,X3),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X4),s('type.num.num',X5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),X6),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),X7),s(fun('type.fcp.cart'(bool,sK0),bool),X8),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X1))),s('type.wordSem.word_loc'(sK0),X0))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),X9)))))) | s('type.wordSem.word_loc'(sK0),X0) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X1)))))) )),
  inference(resolution,[],[f97,f119])).
fof(f119,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.wordSem.word_loc'(X0),X2) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X7))))) | ~p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',X9),s(bool,X10),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X5),s('type.num.num',X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X3),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X8),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X7))),s('type.wordSem.word_loc'(X0),X2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(X0))),X1)))))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0'))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f4805,plain,(
  ( ! [X0] : (s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0))) | s(bool,'T_0') != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),X0)))) ) | $spl41),
  inference(trivial_inequality_removal,[],[f4799])).
fof(f4799,plain,(
  ( ! [X0] : (s('type.wordSem.word_loc'(sK0),sK2) != s('type.wordSem.word_loc'(sK0),sK2) | s(bool,'T_0') != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),X0))) | s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0)))) ) | $spl41),
  inference(superposition,[],[f4701,f264])).
fof(f264,plain,(
  s('type.wordSem.word_loc'(sK0),sK2) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9)))))),
  inference(subsumption_resolution,[],[f223,f97])).
fof(f223,plain,(
  s('type.wordSem.word_loc'(sK0),sK2) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0'))))),
  inference(resolution,[],[f96,f119])).
fof(f4701,plain,(
  ( ! [X14,X13] : (s('type.wordSem.word_loc'(sK0),sK2) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X13))) | s(bool,'T_0') != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),X13),s('type.fcp.cart'(bool,sK0),X14))) | s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X14)))) ) | $spl41),
  inference(backward_demodulation,[],[f4605,f98])).
fof(f98,plain,(
  ( ! [X14,X13] : (s('type.wordSem.word_loc'(sK0),sK2) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X13))) | s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X14))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),X13),s('type.fcp.cart'(bool,sK0),X14)))) )),
  inference(cnf_transformation,[],[f71])).
fof(f4839,plain,(
  p(s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8)))))) | $spl58),
  inference(cnf_transformation,[],[f4839_D])).
fof(f4839_D,plain,(
  p(s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8)))))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f4611,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0)) ) | $spl56),
  inference(cnf_transformation,[],[f4611_D])).
fof(f4611_D,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0)) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f4840,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,X1) | p(s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))))) ) | $spl35),
  inference(subsumption_resolution,[],[f4819,f110])).
fof(f4819,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,X1) | p(s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8)))))) | p(s(bool,X1))) ) | $spl35),
  inference(superposition,[],[f3514,f100])).
fof(f100,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X21,X22] : ((p(s(bool,X21)) => p(s(bool,X22))) => ((p(s(bool,X22)) => p(s(bool,X21))) => s(bool,X21) = s(bool,X22)))),
  file('thm.bvp_to_wordProps.memory_rel_Number_LESS','thm.bool.IMP_ANTISYM_AX')).
fof(f4837,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | p(s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))))) ) | $spl35),
  inference(subsumption_resolution,[],[f4818,f110])).
fof(f4818,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | p(s(bool,X0)) | p(s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))))) ) | $spl35),
  inference(superposition,[],[f3514,f100])).
fof(f4649,plain,(
  $false | $spl56),
  inference(equality_resolution,[],[f4611])).
fof(f4610,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8)))) | $spl54),
  inference(cnf_transformation,[],[f4610_D])).
fof(f4610_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8)))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f4612,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))))) ) | $spl41),
  inference(subsumption_resolution,[],[f4596,f110])).
fof(f4596,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8)))) | p(s(bool,X1))) ) | $spl41),
  inference(superposition,[],[f3520,f100])).
fof(f4608,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))))) ) | $spl41),
  inference(subsumption_resolution,[],[f4595,f110])).
fof(f4595,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | p(s(bool,X0)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))))) ) | $spl41),
  inference(superposition,[],[f3520,f100])).
fof(f4592,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f4591,f149])).
fof(f149,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.bvp_to_wordProps.memory_rel_Number_LESS',aHL_TRUTH)).
fof(f4591,plain,(
  ~p(s(bool,'T_0')) | $spl40),
  inference(forward_demodulation,[],[f4590,f163])).
fof(f4590,plain,(
  ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl40),
  inference(subsumption_resolution,[],[f4589,f154])).
fof(f4589,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl40),
  inference(forward_demodulation,[],[f4588,f545])).
fof(f545,plain,(
  s(bool,'T_0') = s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))),
  inference(resolution,[],[f265,f115])).
fof(f4588,plain,(
  ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl40),
  inference(subsumption_resolution,[],[f4587,f154])).
fof(f4587,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl40),
  inference(forward_demodulation,[],[f4586,f4354])).
fof(f4586,plain,(
  ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl40),
  inference(subsumption_resolution,[],[f4565,f3521])).
fof(f4565,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl40),
  inference(superposition,[],[f4534,f99])).
fof(f4534,plain,(
  s(bool,'F_0') != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) | $spl40),
  inference(trivial_inequality_removal,[],[f4515])).
fof(f4515,plain,(
  s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),sK1) | s(bool,'F_0') != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) | $spl40),
  inference(superposition,[],[f3555,f4289])).
fof(f3555,plain,(
  ( ! [X0] : (s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0))) | s(bool,'F_0') != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),X0)))) ) | $spl40),
  inference(backward_demodulation,[],[f3521,f690])).
fof(f690,plain,(
  ( ! [X0] : (s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),X0)))) )),
  inference(trivial_inequality_removal,[],[f681])).
fof(f681,plain,(
  ( ! [X0] : (s('type.wordSem.word_loc'(sK0),sK2) != s('type.wordSem.word_loc'(sK0),sK2) | s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),X0)))) )),
  inference(superposition,[],[f98,f264])).
fof(f4585,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f4584,f203])).
fof(f4584,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl40),
  inference(forward_demodulation,[],[f4583,f4354])).
fof(f4583,plain,(
  s(bool,'F_0') = s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8))) | $spl40),
  inference(subsumption_resolution,[],[f4564,f3521])).
fof(f4564,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) | s(bool,'F_0') = s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8))) | $spl40),
  inference(superposition,[],[f4534,f764])).
fof(f764,plain,(
  ( ! [X14] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',X14))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X14))))) | s(bool,'F_0') = s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',X14)))) )),
  inference(resolution,[],[f562,f111])).
fof(f111,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f75])).
fof(f4541,plain,(
  $false | ($spl34 | $spl40)),
  inference(subsumption_resolution,[],[f4534,f3515])).
fof(f277,plain,(
  s(bool,'T_0') = s(bool,sK12) | $spl12),
  inference(cnf_transformation,[],[f277_D])).
fof(f277_D,plain,(
  s(bool,'T_0') = s(bool,sK12) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f4339,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'F_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | $spl50),
  inference(cnf_transformation,[],[f4339_D])).
fof(f4339_D,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'F_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f4315,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'F_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | s(bool,'T_0') = s(bool,sK12)),
  inference(superposition,[],[f225,f118])).
fof(f275,plain,(
  s(bool,'F_0') = s(bool,sK12) | $spl10),
  inference(cnf_transformation,[],[f275_D])).
fof(f275_D,plain,(
  s(bool,'F_0') = s(bool,sK12) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f4341,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | $spl52),
  inference(cnf_transformation,[],[f4341_D])).
fof(f4341_D,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f4314,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | s(bool,'F_0') = s(bool,sK12)),
  inference(superposition,[],[f225,f118])).
fof(f266,plain,(
  ~p(s(bool,sK12)) | $spl1),
  inference(cnf_transformation,[],[f266_D])).
fof(f266_D,plain,(
  ~p(s(bool,sK12)) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f4313,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | ~p(s(bool,sK12))),
  inference(superposition,[],[f225,f117])).
fof(f117,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X23] : (s(bool,'T_0') = s(bool,X23) <=> p(s(bool,X23)))),
  file('thm.bvp_to_wordProps.memory_rel_Number_LESS','thm.bool.EQ_CLAUSES|split|1')).
fof(f4312,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | ~p(s(bool,sK12))),
  inference(superposition,[],[f225,f115])).
fof(f267,plain,(
  p(s(bool,sK12)) | $spl0),
  inference(cnf_transformation,[],[f267_D])).
fof(f267_D,plain,(
  p(s(bool,sK12)) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f4311,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'F_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | p(s(bool,sK12))),
  inference(superposition,[],[f225,f113])).
fof(f113,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X23] : (s(bool,'F_0') = s(bool,X23) <=> ~p(s(bool,X23)))),
  file('thm.bvp_to_wordProps.memory_rel_Number_LESS','thm.bool.EQ_CLAUSES|split|3')).
fof(f4310,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'F_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | p(s(bool,sK12))),
  inference(superposition,[],[f225,f111])).
fof(f4337,plain,(
  ( ! [X2] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | ~p(s(bool,X2))) ) | $spl48),
  inference(cnf_transformation,[],[f4337_D])).
fof(f4337_D,plain,(
  ( ! [X2] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | ~p(s(bool,X2))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f4309,plain,(
  ( ! [X3] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X3),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | ~p(s(bool,X3)) | ~p(s(bool,sK12))) )),
  inference(superposition,[],[f225,f103])).
fof(f103,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f65])).
fof(f4308,plain,(
  ( ! [X2] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | ~p(s(bool,sK12)) | ~p(s(bool,X2))) )),
  inference(superposition,[],[f225,f103])).
fof(f4336,plain,(
  ( ! [X0] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X0),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | p(s(bool,X0))) ) | $spl46),
  inference(cnf_transformation,[],[f4336_D])).
fof(f4336_D,plain,(
  ( ! [X0] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X0),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | p(s(bool,X0))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f4307,plain,(
  ( ! [X1] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | p(s(bool,sK12)) | p(s(bool,X1))) )),
  inference(superposition,[],[f225,f100])).
fof(f4306,plain,(
  ( ! [X0] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X0),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | p(s(bool,X0)) | p(s(bool,sK12))) )),
  inference(superposition,[],[f225,f100])).
fof(f273,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | $spl8),
  inference(cnf_transformation,[],[f273_D])).
fof(f273_D,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f3952,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | s(bool,'F_0') = s(bool,sK12)),
  inference(superposition,[],[f96,f118])).
fof(f3951,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | ~p(s(bool,sK12))),
  inference(superposition,[],[f96,f117])).
fof(f3950,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | ~p(s(bool,sK12))),
  inference(superposition,[],[f96,f115])).
fof(f269,plain,(
  ( ! [X2] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | ~p(s(bool,X2))) ) | $spl4),
  inference(cnf_transformation,[],[f269_D])).
fof(f269_D,plain,(
  ( ! [X2] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | ~p(s(bool,X2))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f3947,plain,(
  ( ! [X3] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X3),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | ~p(s(bool,X3)) | ~p(s(bool,sK12))) )),
  inference(superposition,[],[f96,f103])).
fof(f3946,plain,(
  ( ! [X2] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | ~p(s(bool,sK12)) | ~p(s(bool,X2))) )),
  inference(superposition,[],[f96,f103])).
fof(f268,plain,(
  ( ! [X0] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X0),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | p(s(bool,X0))) ) | $spl2),
  inference(cnf_transformation,[],[f268_D])).
fof(f268_D,plain,(
  ( ! [X0] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X0),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | p(s(bool,X0))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f3945,plain,(
  ( ! [X1] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | p(s(bool,sK12)) | p(s(bool,X1))) )),
  inference(superposition,[],[f96,f100])).
fof(f3944,plain,(
  ( ! [X0] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X0),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | p(s(bool,X0)) | p(s(bool,sK12))) )),
  inference(superposition,[],[f96,f100])).
fof(f2017,plain,(
  ( ! [X0] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X0),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | p(s(bool,X0)) | p(s(bool,sK12))) )),
  inference(superposition,[],[f96,f100])).
fof(f2018,plain,(
  ( ! [X1] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | p(s(bool,sK12)) | p(s(bool,X1))) )),
  inference(superposition,[],[f96,f100])).
fof(f2019,plain,(
  ( ! [X2] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | ~p(s(bool,sK12)) | ~p(s(bool,X2))) )),
  inference(superposition,[],[f96,f103])).
fof(f2020,plain,(
  ( ! [X3] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X3),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | ~p(s(bool,X3)) | ~p(s(bool,sK12))) )),
  inference(superposition,[],[f96,f103])).
fof(f2023,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | ~p(s(bool,sK12))),
  inference(superposition,[],[f96,f115])).
fof(f2024,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | ~p(s(bool,sK12))),
  inference(superposition,[],[f96,f117])).
fof(f2025,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | s(bool,'F_0') = s(bool,sK12)),
  inference(superposition,[],[f96,f118])).
fof(f3681,plain,(
  ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | $spl45),
  inference(cnf_transformation,[],[f3681_D])).
fof(f3681_D,plain,(
  ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f1929,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | $spl28),
  inference(cnf_transformation,[],[f1929_D])).
fof(f1929_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f3683,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | $spl30),
  inference(subsumption_resolution,[],[f3682,f154])).
fof(f3682,plain,(
  ~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | $spl30),
  inference(forward_demodulation,[],[f3338,f163])).
fof(f3338,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl30),
  inference(subsumption_resolution,[],[f3337,f154])).
fof(f3337,plain,(
  ~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl30),
  inference(forward_demodulation,[],[f3235,f545])).
fof(f3235,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl30),
  inference(superposition,[],[f99,f1931])).
fof(f3677,plain,(
  s(bool,'F_0') = s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8))) | $spl42),
  inference(cnf_transformation,[],[f3677_D])).
fof(f3677_D,plain,(
  s(bool,'F_0') = s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f3234,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | s(bool,'F_0') = s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8))) | $spl30),
  inference(superposition,[],[f1362,f1931])).
fof(f1362,plain,(
  ( ! [X14] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK9))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X14))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | s(bool,'F_0') = s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',X14)))) )),
  inference(resolution,[],[f564,f111])).
fof(f564,plain,(
  ( ! [X1] : (~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',X1)))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',sK9))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X1))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9)))))) )),
  inference(subsumption_resolution,[],[f563,f154])).
fof(f563,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',sK9))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X1))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',X1))))) )),
  inference(forward_demodulation,[],[f540,f163])).
fof(f540,plain,(
  ( ! [X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',sK9))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',X1))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',X1)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0'))))) )),
  inference(resolution,[],[f265,f99])).
fof(f3679,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | $spl30),
  inference(subsumption_resolution,[],[f3678,f154])).
fof(f3678,plain,(
  ~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | $spl30),
  inference(forward_demodulation,[],[f3346,f163])).
fof(f3346,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl30),
  inference(subsumption_resolution,[],[f3345,f154])).
fof(f3345,plain,(
  ~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl30),
  inference(forward_demodulation,[],[f3226,f545])).
fof(f3226,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl30),
  inference(superposition,[],[f1931,f99])).
fof(f3225,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | s(bool,'F_0') = s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8))) | $spl30),
  inference(superposition,[],[f1931,f1362])).
fof(f3673,plain,(
  $false | $spl0),
  inference(trivial_inequality_removal,[],[f3668])).
fof(f3668,plain,(
  s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),sK1) | $spl0),
  inference(superposition,[],[f3503,f2589])).
fof(f2589,plain,(
  s('type.wordSem.word_loc'(sK0),sK1) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) | $spl0),
  inference(resolution,[],[f2142,f156])).
fof(f2142,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | $spl0),
  inference(resolution,[],[f2053,f150])).
fof(f2053,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | $spl0),
  inference(backward_demodulation,[],[f1968,f96])).
fof(f1968,plain,(
  s(bool,'T_0') = s(bool,sK12) | $spl0),
  inference(resolution,[],[f267,f115])).
fof(f3503,plain,(
  ( ! [X0] : (s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0)))) ) | $spl0),
  inference(subsumption_resolution,[],[f3502,f690])).
fof(f3502,plain,(
  ( ! [X0] : (s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),X0)))) ) | $spl0),
  inference(forward_demodulation,[],[f3440,f2589])).
fof(f3440,plain,(
  ( ! [X0] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),X0))) | s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0))) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8)))))) ) | $spl0),
  inference(superposition,[],[f2642,f104])).
fof(f104,plain,(
  ( ! [X2,X0,X1] : (s('type.fcp.cart'(bool,X0),X1) = s('type.fcp.cart'(bool,X0),X2) | s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X1))) != s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X2)))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2] : ((s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X1))) != s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X2))) | s('type.fcp.cart'(bool,X0),X1) = s('type.fcp.cart'(bool,X0),X2)) & (s('type.fcp.cart'(bool,X0),X1) != s('type.fcp.cart'(bool,X0),X2) | s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X1))) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X2)))))),
  inference(nnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2] : (s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X1))) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X2))) <=> s('type.fcp.cart'(bool,X0),X1) = s('type.fcp.cart'(bool,X0),X2))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0] : ! [X1,X2] : (s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X1))) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X2))) <=> s('type.fcp.cart'(bool,X0),X1) = s('type.fcp.cart'(bool,X0),X2))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6] : ! [X28,X34] : (s('type.wordSem.word_loc'(X6),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X6),X28))) = s('type.wordSem.word_loc'(X6),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X6),X34))) <=> s('type.fcp.cart'(bool,X6),X28) = s('type.fcp.cart'(bool,X6),X34))),
  file('thm.bvp_to_wordProps.memory_rel_Number_LESS','thm.wordSem.word_loc_|49||49||split|0')).
fof(f2642,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) | $spl0),
  inference(resolution,[],[f2590,f562])).
fof(f2590,plain,(
  p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | $spl0),
  inference(resolution,[],[f2142,f157])).
fof(f3519,plain,(
  s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) | $spl38),
  inference(cnf_transformation,[],[f3519_D])).
fof(f3519_D,plain,(
  s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f3521,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) | $spl40),
  inference(cnf_transformation,[],[f3521_D])).
fof(f3521_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f3480,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) | s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) | $spl0),
  inference(superposition,[],[f118,f2642])).
fof(f3515,plain,(
  s(bool,'F_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) | $spl34),
  inference(cnf_transformation,[],[f3515_D])).
fof(f3515_D,plain,(
  s(bool,'F_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f3517,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) | $spl36),
  inference(cnf_transformation,[],[f3517_D])).
fof(f3517_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f3479,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) | s(bool,'F_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) | $spl0),
  inference(superposition,[],[f118,f2642])).
fof(f3451,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) | s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) | $spl0),
  inference(superposition,[],[f2642,f118])).
fof(f3450,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) | s(bool,'F_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))))) | $spl0),
  inference(superposition,[],[f2642,f118])).
fof(f3312,plain,(
  $false | ($spl0 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f3311,f149])).
fof(f3311,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f3310,f163])).
fof(f3310,plain,(
  ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl0 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f3309,f154])).
fof(f3309,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl0 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f3308,f2650])).
fof(f2650,plain,(
  s(bool,'T_0') = s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8))) | $spl0),
  inference(resolution,[],[f2590,f115])).
fof(f3308,plain,(
  ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl0 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f3307,f154])).
fof(f3307,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl0 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f3306,f545])).
fof(f3306,plain,(
  ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl0 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f3235,f3184])).
fof(f3184,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | ($spl0 | $spl26)),
  inference(subsumption_resolution,[],[f3137,f147])).
fof(f147,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.bvp_to_wordProps.memory_rel_Number_LESS',aHL_FALSITY)).
fof(f3137,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | ($spl0 | $spl26)),
  inference(superposition,[],[f114,f3001])).
fof(f3001,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | ($spl0 | $spl26)),
  inference(backward_demodulation,[],[f1927,f2641])).
fof(f2641,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | $spl0),
  inference(resolution,[],[f2590,f564])).
fof(f3305,plain,(
  $false | ($spl0 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f3304,f203])).
fof(f3304,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f3303,f2650])).
fof(f3303,plain,(
  s(bool,'F_0') = s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8))) | ($spl0 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f3234,f3184])).
fof(f3294,plain,(
  $false | ($spl0 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f3293,f149])).
fof(f3293,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f3292,f163])).
fof(f3292,plain,(
  ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl0 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f3291,f154])).
fof(f3291,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl0 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f3290,f2650])).
fof(f3290,plain,(
  ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl0 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f3289,f154])).
fof(f3289,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl0 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f3288,f545])).
fof(f3288,plain,(
  ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl0 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f3226,f3184])).
fof(f3287,plain,(
  $false | ($spl0 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f3286,f203])).
fof(f3286,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl26 | $spl30)),
  inference(forward_demodulation,[],[f3285,f2650])).
fof(f3285,plain,(
  s(bool,'F_0') = s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8))) | ($spl0 | $spl26 | $spl30)),
  inference(subsumption_resolution,[],[f3225,f3184])).
fof(f3280,plain,(
  $false | ($spl26 | $spl30)),
  inference(subsumption_resolution,[],[f3220,f203])).
fof(f3220,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl26 | $spl30)),
  inference(backward_demodulation,[],[f1931,f1927])).
fof(f1931,plain,(
  s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | $spl30),
  inference(cnf_transformation,[],[f1931_D])).
fof(f1931_D,plain,(
  s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f1933,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | $spl32),
  inference(cnf_transformation,[],[f1933_D])).
fof(f1933_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f2937,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | $spl0),
  inference(superposition,[],[f118,f2641])).
fof(f1927,plain,(
  s(bool,'F_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | $spl26),
  inference(cnf_transformation,[],[f1927_D])).
fof(f1927_D,plain,(
  s(bool,'F_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f2936,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | s(bool,'F_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | $spl0),
  inference(superposition,[],[f118,f2641])).
fof(f2911,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | $spl0),
  inference(superposition,[],[f2641,f118])).
fof(f2910,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | s(bool,'F_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | $spl0),
  inference(superposition,[],[f2641,f118])).
fof(f271,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'F_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | $spl6),
  inference(cnf_transformation,[],[f271_D])).
fof(f271_D,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'F_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f2026,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'F_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | s(bool,'T_0') = s(bool,sK12)),
  inference(superposition,[],[f96,f118])).
fof(f1896,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | $spl1),
  inference(superposition,[],[f118,f1533])).
fof(f1533,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | $spl1),
  inference(resolution,[],[f1527,f564])).
fof(f1527,plain,(
  p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | $spl1),
  inference(subsumption_resolution,[],[f1526,f154])).
fof(f1526,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | $spl1),
  inference(forward_demodulation,[],[f1481,f163])).
fof(f1481,plain,(
  p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK8)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl1),
  inference(resolution,[],[f403,f120])).
fof(f403,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'F_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))) | $spl1),
  inference(resolution,[],[f303,f150])).
fof(f303,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'F_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | $spl1),
  inference(backward_demodulation,[],[f283,f96])).
fof(f283,plain,(
  s(bool,'F_0') = s(bool,sK12) | $spl1),
  inference(resolution,[],[f266,f111])).
fof(f1895,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | s(bool,'F_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | $spl1),
  inference(superposition,[],[f118,f1533])).
fof(f1870,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | $spl1),
  inference(superposition,[],[f1533,f118])).
fof(f1869,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))) | s(bool,'F_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK8))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | $spl1),
  inference(superposition,[],[f1533,f118])).
fof(f1350,plain,(
  ( ! [X0,X1] : (s('type.wordSem.word_loc'(sK0),sK2) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0))) | s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0))) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X1))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),X1),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9)))))) ) | $spl22),
  inference(cnf_transformation,[],[f1350_D])).
fof(f1350_D,plain,(
  ( ! [X0,X1] : (s('type.wordSem.word_loc'(sK0),sK2) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0))) | s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0))) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X1))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),X1),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9)))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f1352,plain,(
  s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),sK2) | $spl25),
  inference(cnf_transformation,[],[f1352_D])).
fof(f1352_D,plain,(
  s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),sK2) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f1345,plain,(
  ( ! [X0,X1] : (s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),sK2) | s('type.wordSem.word_loc'(sK0),sK2) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),X1),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0))) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X1)))) )),
  inference(superposition,[],[f182,f264])).
fof(f182,plain,(
  ( ! [X2,X0,X1] : (s('type.wordSem.word_loc'(sK0),sK1) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X2))) | s('type.wordSem.word_loc'(sK0),sK2) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X1))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK8))) != s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),X0),s('type.fcp.cart'(bool,sK0),X2))) | s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0))) != s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X1)))) )),
  inference(superposition,[],[f98,f104])).
fof(f1185,plain,(
  $false | ($spl14 | $spl18)),
  inference(subsumption_resolution,[],[f1184,f149])).
fof(f1184,plain,(
  ~p(s(bool,'T_0')) | ($spl14 | $spl18)),
  inference(forward_demodulation,[],[f1183,f163])).
fof(f1183,plain,(
  ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl14 | $spl18)),
  inference(subsumption_resolution,[],[f1182,f154])).
fof(f1182,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl14 | $spl18)),
  inference(forward_demodulation,[],[f1181,f545])).
fof(f1181,plain,(
  ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl14 | $spl18)),
  inference(subsumption_resolution,[],[f1163,f1047])).
fof(f1047,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) | $spl14),
  inference(subsumption_resolution,[],[f1004,f147])).
fof(f1004,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) | $spl14),
  inference(superposition,[],[f114,f888])).
fof(f888,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) | $spl14),
  inference(backward_demodulation,[],[f851,f785])).
fof(f785,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9)))))),
  inference(subsumption_resolution,[],[f770,f154])).
fof(f770,plain,(
  ~p(s(bool,'T_0')) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9)))))),
  inference(superposition,[],[f562,f545])).
fof(f1163,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl18),
  inference(duplicate_literal_removal,[],[f1122])).
fof(f1122,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl18),
  inference(superposition,[],[f99,f855])).
fof(f1172,plain,(
  $false | ($spl14 | $spl18)),
  inference(subsumption_resolution,[],[f1171,f149])).
fof(f1171,plain,(
  ~p(s(bool,'T_0')) | ($spl14 | $spl18)),
  inference(forward_demodulation,[],[f1170,f163])).
fof(f1170,plain,(
  ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl14 | $spl18)),
  inference(subsumption_resolution,[],[f1169,f154])).
fof(f1169,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl14 | $spl18)),
  inference(forward_demodulation,[],[f1168,f545])).
fof(f1168,plain,(
  ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | ($spl14 | $spl18)),
  inference(subsumption_resolution,[],[f1164,f1047])).
fof(f1164,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl18),
  inference(duplicate_literal_removal,[],[f1114])).
fof(f1114,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.bvp_to_wordProps.small_int_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.integer.int',sK9)))) | ~p(s(bool,'const.labProps.good_dimindex_1'(s('type.bool.itself'(sK0),'const.bool.the_value_0')))) | $spl18),
  inference(superposition,[],[f855,f99])).
fof(f1165,plain,(
  $false | ($spl14 | $spl18)),
  inference(subsumption_resolution,[],[f1111,f203])).
fof(f1111,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl14 | $spl18)),
  inference(backward_demodulation,[],[f855,f851])).
fof(f855,plain,(
  s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | $spl18),
  inference(cnf_transformation,[],[f855_D])).
fof(f855_D,plain,(
  s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f857,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) | $spl20),
  inference(cnf_transformation,[],[f857_D])).
fof(f857_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f824,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) | s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9)))))),
  inference(superposition,[],[f118,f785])).
fof(f851,plain,(
  s(bool,'F_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) | $spl14),
  inference(cnf_transformation,[],[f851_D])).
fof(f851_D,plain,(
  s(bool,'F_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f853,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) | $spl16),
  inference(cnf_transformation,[],[f853_D])).
fof(f853_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f823,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) | s(bool,'F_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9)))))),
  inference(superposition,[],[f118,f785])).
fof(f798,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) | s(bool,'T_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9)))))),
  inference(superposition,[],[f785,f118])).
fof(f797,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK9),s('type.integer.int',sK9))) | s(bool,'F_0') = s(bool,'const.words.word_lt_2'(s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9))),s('type.fcp.cart'(bool,sK0),'const.bvp_to_wordProps.Smallnum_1'(s('type.integer.int',sK9)))))),
  inference(superposition,[],[f785,f118])).
fof(f247,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'F_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | s(bool,'T_0') = s(bool,sK12)),
  inference(superposition,[],[f96,f118])).
fof(f246,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | s(bool,'F_0') = s(bool,sK12)),
  inference(superposition,[],[f96,f118])).
fof(f245,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | ~p(s(bool,sK12))),
  inference(superposition,[],[f96,f117])).
fof(f244,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'T_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | ~p(s(bool,sK12))),
  inference(superposition,[],[f96,f115])).
fof(f243,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'F_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | p(s(bool,sK12))),
  inference(superposition,[],[f96,f113])).
fof(f242,plain,(
  p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,'F_0'),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | p(s(bool,sK12))),
  inference(superposition,[],[f96,f111])).
fof(f241,plain,(
  ( ! [X3] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X3),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | ~p(s(bool,X3)) | ~p(s(bool,sK12))) )),
  inference(superposition,[],[f96,f103])).
fof(f240,plain,(
  ( ! [X2] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | ~p(s(bool,sK12)) | ~p(s(bool,X2))) )),
  inference(superposition,[],[f96,f103])).
fof(f239,plain,(
  ( ! [X1] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | p(s(bool,sK12)) | p(s(bool,X1))) )),
  inference(superposition,[],[f96,f100])).
fof(f238,plain,(
  ( ! [X0] : (p(s(bool,'const.bvp_to_wordProps.memory_rel_8'(s('type.bvp_to_word.config',sK11),s(bool,X0),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK6),s('type.num.num',sK5),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK4),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK7),s(fun('type.fcp.cart'(bool,sK0),bool),sK10),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK9))),s('type.wordSem.word_loc'(sK0),sK2))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),'const.list.CONS_2'(s('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0)),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK8))),s('type.wordSem.word_loc'(sK0),sK1))),s('type.list.list'('type.pair.prod'('type.bvlSem.v','type.wordSem.word_loc'(sK0))),sK3)))))))) | p(s(bool,X0)) | p(s(bool,sK12))) )),
  inference(superposition,[],[f96,f100])).
% SZS output end Proof for thm.bvp_to_wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 164
% Passive clauses: 1199
% Generated clauses: 4979
% Final active clauses: 85
% Final passive clauses: 526
% Input formulas: 26
% Initial clauses: 58
% 
% Selected by SInE selection: 24
% SInE iterations: 1
% 
% Duplicate literals: 97
% Trivial inequalities: 129
% Fw subsumption resolutions: 584
% Fw demodulations: 882
% Bw demodulations: 34
% 
% Simple tautologies: 156
% Equational tautologies: 1
% Forward subsumptions: 1995
% 
% Binary resolution: 465
% Forward superposition: 1473
% Backward superposition: 1179
% Equality resolution: 21
% 
% Split clauses: 60
% Split components: 120
% SAT solver clauses: 78
% SAT solver unit clauses: 4
% SAT solver binary clauses: 49
% 
% Sat splits: 60
% Sat splitting refutations: 17
% 
% Memory used [KB]: 3326
% Time elapsed: 0.195 s
% ------------------------------
% ------------------------------
% Success in time 11.964 s
