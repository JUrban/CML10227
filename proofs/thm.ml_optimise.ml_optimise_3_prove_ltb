Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.ml_optimise
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ml_optimise
% SZS output start Proof for thm.ml_optimise
fof(f4840,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4839,f223,f430,f428,f426,f424,f422,f420,f418,f416,f414,f412,f410,f408,f4837,f4836,f4835,f4834,f4833,f4832,f4831,f4830,f4829,f4229,f4838])).
fof(f4838,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f410,f234])).
fof(f234,plain,(
  ( ! [X6,X4,X5] : (s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X4),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X5),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X6)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  (s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK13),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',sK14))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK15),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',sK16),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK17))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK18),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',sK19))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK20),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),sK21),s('type.list.list'('type.ast.exp'),sK22))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK23),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK24))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK25),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),sK26),s('type.ast.exp',sK27))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK28),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',sK29),s('type.list.list'('type.ast.exp'),sK30))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK31),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',sK32),s('type.ast.exp',sK33),s('type.ast.exp',sK34))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK35),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',sK36),s('type.ast.exp',sK37),s('type.ast.exp',sK38))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK39),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',sK40),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK41))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK42),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),sK43),s('type.ast.exp',sK44),s('type.ast.exp',sK45))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK46),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK47),s('type.ast.exp',sK48)))))) & ! [X35,X36] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X35),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X36))))) & ! [X33,X34] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X33),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X34))))) & ! [X31,X32] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X31),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X32))))) & ! [X28,X29,X30] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X28),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X29),s('type.list.list'('type.ast.exp'),X30))))) & ! [X25,X26,X27] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X25),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X26),s('type.ast.exp',X27))))) & ! [X22,X23,X24] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X22),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',X23),s('type.list.list'('type.ast.exp'),X24))))) & ! [X18,X19,X20,X21] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X18),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X19),s('type.ast.exp',X20),s('type.ast.exp',X21))))) & ! [X14,X15,X16,X17] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X14),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X15),s('type.ast.exp',X16),s('type.ast.exp',X17))))) & ! [X11,X12,X13] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X11),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X12),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X13))))) & ! [X7,X8,X9,X10] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X8),s('type.ast.exp',X9),s('type.ast.exp',X10))))) & ! [X4,X5,X6] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X4),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X5),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X6))))) & ! [X1,X2,X3] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X1),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X2),s('type.ast.exp',X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36,sK37,sK38,sK39,sK40,sK41,sK42,sK43,sK44,sK45,sK46,sK47,sK48])],[f137])).
fof(f137,plain,(
  ? [X0] : ((? [X71,X72] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X71),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X72))))) | ? [X68,X69,X70] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X68),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X69),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X70))))) | ? [X66,X67] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X66),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X67))))) | ? [X63,X64,X65] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X63),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X64),s('type.list.list'('type.ast.exp'),X65))))) | ? [X61,X62] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X61),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X62))))) | ? [X58,X59,X60] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X58),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X59),s('type.ast.exp',X60))))) | ? [X55,X56,X57] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X55),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',X56),s('type.list.list'('type.ast.exp'),X57))))) | ? [X51,X52,X53,X54] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X51),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X52),s('type.ast.exp',X53),s('type.ast.exp',X54))))) | ? [X47,X48,X49,X50] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X47),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X48),s('type.ast.exp',X49),s('type.ast.exp',X50))))) | ? [X44,X45,X46] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X44),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X45),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X46))))) | ? [X40,X41,X42,X43] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X40),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X41),s('type.ast.exp',X42),s('type.ast.exp',X43))))) | ? [X37,X38,X39] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X37),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X38),s('type.ast.exp',X39)))))) & ! [X35,X36] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X35),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X36))))) & ! [X33,X34] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X33),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X34))))) & ! [X31,X32] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X31),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X32))))) & ! [X28,X29,X30] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X28),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X29),s('type.list.list'('type.ast.exp'),X30))))) & ! [X25,X26,X27] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X25),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X26),s('type.ast.exp',X27))))) & ! [X22,X23,X24] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X22),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',X23),s('type.list.list'('type.ast.exp'),X24))))) & ! [X18,X19,X20,X21] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X18),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X19),s('type.ast.exp',X20),s('type.ast.exp',X21))))) & ! [X14,X15,X16,X17] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X14),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X15),s('type.ast.exp',X16),s('type.ast.exp',X17))))) & ! [X11,X12,X13] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X11),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X12),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X13))))) & ! [X7,X8,X9,X10] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X8),s('type.ast.exp',X9),s('type.ast.exp',X10))))) & ! [X4,X5,X6] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X4),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X5),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X6))))) & ! [X1,X2,X3] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X1),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X2),s('type.ast.exp',X3))))))),
  inference(rectify,[],[f97])).
fof(f97,plain,(
  ? [X0] : ((? [X35,X36] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X35),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X36))))) | ? [X32,X33,X34] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X32),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X33),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X34))))) | ? [X30,X31] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X30),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X31))))) | ? [X27,X28,X29] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X27),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X28),s('type.list.list'('type.ast.exp'),X29))))) | ? [X25,X26] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X25),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X26))))) | ? [X22,X23,X24] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X22),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X23),s('type.ast.exp',X24))))) | ? [X19,X20,X21] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X19),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',X20),s('type.list.list'('type.ast.exp'),X21))))) | ? [X15,X16,X17,X18] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X15),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X16),s('type.ast.exp',X17),s('type.ast.exp',X18))))) | ? [X11,X12,X13,X14] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X11),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X12),s('type.ast.exp',X13),s('type.ast.exp',X14))))) | ? [X8,X9,X10] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X8),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X9),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X10))))) | ? [X4,X5,X6,X7] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X4),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X5),s('type.ast.exp',X6),s('type.ast.exp',X7))))) | ? [X1,X2,X3] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X1),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X2),s('type.ast.exp',X3)))))) & ! [X71,X72] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X71),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X72))))) & ! [X69,X70] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X69),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X70))))) & ! [X67,X68] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X67),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X68))))) & ! [X64,X65,X66] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X64),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X65),s('type.list.list'('type.ast.exp'),X66))))) & ! [X61,X62,X63] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X61),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X62),s('type.ast.exp',X63))))) & ! [X58,X59,X60] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X58),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',X59),s('type.list.list'('type.ast.exp'),X60))))) & ! [X54,X55,X56,X57] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X54),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X55),s('type.ast.exp',X56),s('type.ast.exp',X57))))) & ! [X50,X51,X52,X53] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X50),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X51),s('type.ast.exp',X52),s('type.ast.exp',X53))))) & ! [X47,X48,X49] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X47),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X48),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X49))))) & ! [X43,X44,X45,X46] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X43),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X44),s('type.ast.exp',X45),s('type.ast.exp',X46))))) & ! [X40,X41,X42] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X40),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X41),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X42))))) & ! [X37,X38,X39] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X37),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X38),s('type.ast.exp',X39))))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ? [X0] : ((? [X35,X36] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X35),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X36))))) | ? [X32,X33,X34] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X32),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X33),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X34))))) | ? [X30,X31] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X30),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X31))))) | ? [X27,X28,X29] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X27),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X28),s('type.list.list'('type.ast.exp'),X29))))) | ? [X25,X26] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X25),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X26))))) | ? [X22,X23,X24] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X22),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X23),s('type.ast.exp',X24))))) | ? [X19,X20,X21] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X19),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',X20),s('type.list.list'('type.ast.exp'),X21))))) | ? [X15,X16,X17,X18] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X15),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X16),s('type.ast.exp',X17),s('type.ast.exp',X18))))) | ? [X11,X12,X13,X14] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X11),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X12),s('type.ast.exp',X13),s('type.ast.exp',X14))))) | ? [X8,X9,X10] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X8),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X9),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X10))))) | ? [X4,X5,X6,X7] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X4),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X5),s('type.ast.exp',X6),s('type.ast.exp',X7))))) | ? [X1,X2,X3] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X1),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X2),s('type.ast.exp',X3)))))) & (! [X71,X72] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X71),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X72))))) & ! [X69,X70] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X69),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X70))))) & ! [X67,X68] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X67),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X68))))) & ! [X64,X65,X66] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X64),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X65),s('type.list.list'('type.ast.exp'),X66))))) & ! [X61,X62,X63] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X61),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X62),s('type.ast.exp',X63))))) & ! [X58,X59,X60] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X58),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',X59),s('type.list.list'('type.ast.exp'),X60))))) & ! [X54,X55,X56,X57] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X54),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X55),s('type.ast.exp',X56),s('type.ast.exp',X57))))) & ! [X50,X51,X52,X53] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X50),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X51),s('type.ast.exp',X52),s('type.ast.exp',X53))))) & ! [X47,X48,X49] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X47),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X48),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X49))))) & ! [X43,X44,X45,X46] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X43),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X44),s('type.ast.exp',X45),s('type.ast.exp',X46))))) & ! [X40,X41,X42] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X40),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X41),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X42))))) & ! [X37,X38,X39] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X37),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X38),s('type.ast.exp',X39)))))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ((? [X35,X36] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X35),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X36))))) | ? [X32,X33,X34] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X32),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X33),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X34))))) | ? [X30,X31] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X30),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X31))))) | ? [X27,X28,X29] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X27),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X28),s('type.list.list'('type.ast.exp'),X29))))) | ? [X25,X26] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X25),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X26))))) | ? [X22,X23,X24] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X22),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X23),s('type.ast.exp',X24))))) | ? [X19,X20,X21] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X19),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',X20),s('type.list.list'('type.ast.exp'),X21))))) | ? [X15,X16,X17,X18] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X15),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X16),s('type.ast.exp',X17),s('type.ast.exp',X18))))) | ? [X11,X12,X13,X14] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X11),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X12),s('type.ast.exp',X13),s('type.ast.exp',X14))))) | ? [X8,X9,X10] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X8),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X9),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X10))))) | ? [X4,X5,X6,X7] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X4),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X5),s('type.ast.exp',X6),s('type.ast.exp',X7))))) | ? [X1,X2,X3] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X1),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X2),s('type.ast.exp',X3)))))) => (? [X71,X72] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X71),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X72))))) | ? [X69,X70] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X69),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X70))))) | ? [X67,X68] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X67),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X68))))) | ? [X64,X65,X66] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X64),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X65),s('type.list.list'('type.ast.exp'),X66))))) | ? [X61,X62,X63] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X61),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X62),s('type.ast.exp',X63))))) | ? [X58,X59,X60] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X58),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',X59),s('type.list.list'('type.ast.exp'),X60))))) | ? [X54,X55,X56,X57] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X54),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X55),s('type.ast.exp',X56),s('type.ast.exp',X57))))) | ? [X50,X51,X52,X53] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X50),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X51),s('type.ast.exp',X52),s('type.ast.exp',X53))))) | ? [X47,X48,X49] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X47),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X48),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X49))))) | ? [X43,X44,X45,X46] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X43),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X44),s('type.ast.exp',X45),s('type.ast.exp',X46))))) | ? [X40,X41,X42] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X40),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X41),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X42))))) | ? [X37,X38,X39] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X0) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X37),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X38),s('type.ast.exp',X39)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((? [X7,X8] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X8))))) | ? [X7,X9,X10] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X9),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X10))))) | ? [X7,X11] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X11))))) | ? [X7,X12,X13] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X12),s('type.list.list'('type.ast.exp'),X13))))) | ? [X7,X14] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X14))))) | ? [X7,X14,X9] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X14),s('type.ast.exp',X9))))) | ? [X7,X15,X13] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',X15),s('type.list.list'('type.ast.exp'),X13))))) | ? [X7,X16,X17,X18] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X16),s('type.ast.exp',X17),s('type.ast.exp',X18))))) | ? [X7,X17,X18,X19] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X17),s('type.ast.exp',X18),s('type.ast.exp',X19))))) | ? [X7,X9,X10] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X9),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X10))))) | ? [X7,X14,X17,X18] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X14),s('type.ast.exp',X17),s('type.ast.exp',X18))))) | ? [X7,X20,X21] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X20),s('type.ast.exp',X21)))))) => (? [X7,X11] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X11))))) | ? [X7,X8] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X8))))) | ? [X7,X14] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X14))))) | ? [X7,X12,X13] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X12),s('type.list.list'('type.ast.exp'),X13))))) | ? [X7,X14,X9] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X14),s('type.ast.exp',X9))))) | ? [X7,X15,X13] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',X15),s('type.list.list'('type.ast.exp'),X13))))) | ? [X7,X16,X17,X18] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X16),s('type.ast.exp',X17),s('type.ast.exp',X18))))) | ? [X7,X17,X18,X19] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X17),s('type.ast.exp',X18),s('type.ast.exp',X19))))) | ? [X7,X9,X10] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X9),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X10))))) | ? [X7,X14,X17,X18] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X14),s('type.ast.exp',X17),s('type.ast.exp',X18))))) | ? [X7,X9,X10] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X9),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X10))))) | ? [X7,X20,X21] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X20),s('type.ast.exp',X21)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((? [X7,X8] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X8))))) | ? [X7,X9,X10] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X9),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X10))))) | ? [X7,X11] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X11))))) | ? [X7,X12,X13] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X12),s('type.list.list'('type.ast.exp'),X13))))) | ? [X7,X14] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X14))))) | ? [X7,X14,X9] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X14),s('type.ast.exp',X9))))) | ? [X7,X15,X13] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',X15),s('type.list.list'('type.ast.exp'),X13))))) | ? [X7,X16,X17,X18] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X16),s('type.ast.exp',X17),s('type.ast.exp',X18))))) | ? [X7,X17,X18,X19] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X17),s('type.ast.exp',X18),s('type.ast.exp',X19))))) | ? [X7,X9,X10] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X9),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X10))))) | ? [X7,X14,X17,X18] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X14),s('type.ast.exp',X17),s('type.ast.exp',X18))))) | ? [X7,X20,X21] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X20),s('type.ast.exp',X21)))))) => (? [X7,X11] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X11))))) | ? [X7,X8] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X8))))) | ? [X7,X14] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X14))))) | ? [X7,X12,X13] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X12),s('type.list.list'('type.ast.exp'),X13))))) | ? [X7,X14,X9] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X14),s('type.ast.exp',X9))))) | ? [X7,X15,X13] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',X15),s('type.list.list'('type.ast.exp'),X13))))) | ? [X7,X16,X17,X18] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X16),s('type.ast.exp',X17),s('type.ast.exp',X18))))) | ? [X7,X17,X18,X19] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X17),s('type.ast.exp',X18),s('type.ast.exp',X19))))) | ? [X7,X9,X10] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X9),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X10))))) | ? [X7,X14,X17,X18] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X14),s('type.ast.exp',X17),s('type.ast.exp',X18))))) | ? [X7,X9,X10] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X9),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X10))))) | ? [X7,X20,X21] : s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),X6) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X20),s('type.ast.exp',X21)))))))),
  file('thm.ml_optimise.ml_optimise_3_prove_ltb','thm.ml_optimise.ml_optimise_3_prove_ltb')).
fof(f4229,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f420,f229])).
fof(f229,plain,(
  ( ! [X24,X23,X22] : (s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X22),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',X23),s('type.list.list'('type.ast.exp'),X24)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4829,plain,(
  $false | $spl22),
  inference(subsumption_resolution,[],[f430,f235])).
fof(f235,plain,(
  ( ! [X2,X3,X1] : (s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X1),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X2),s('type.ast.exp',X3)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4830,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f424,f231])).
fof(f231,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X14),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X15),s('type.ast.exp',X16),s('type.ast.exp',X17)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4831,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f416,f226])).
fof(f226,plain,(
  ( ! [X31,X32] : (s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X31),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X32)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4832,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f422,f230])).
fof(f230,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X18),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X19),s('type.ast.exp',X20),s('type.ast.exp',X21)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4833,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f412,f224])).
fof(f224,plain,(
  ( ! [X35,X36] : (s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X35),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X36)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4834,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f408,f225])).
fof(f225,plain,(
  ( ! [X33,X34] : (s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X33),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X34)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4835,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f418,f228])).
fof(f228,plain,(
  ( ! [X26,X27,X25] : (s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X25),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X26),s('type.ast.exp',X27)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4836,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f414,f227])).
fof(f227,plain,(
  ( ! [X30,X28,X29] : (s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X28),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X29),s('type.list.list'('type.ast.exp'),X30)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4837,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f426,f232])).
fof(f232,plain,(
  ( ! [X12,X13,X11] : (s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X11),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X12),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X13)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f408,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK13),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',sK14))))) | $spl0),
  inference(cnf_transformation,[],[f408_D])).
fof(f408_D,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK13),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',sK14))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f410,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK15),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',sK16),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK17))))) | $spl2),
  inference(cnf_transformation,[],[f410_D])).
fof(f410_D,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK15),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',sK16),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK17))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f412,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK18),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',sK19))))) | $spl4),
  inference(cnf_transformation,[],[f412_D])).
fof(f412_D,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK18),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',sK19))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f414,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK20),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),sK21),s('type.list.list'('type.ast.exp'),sK22))))) | $spl6),
  inference(cnf_transformation,[],[f414_D])).
fof(f414_D,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK20),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),sK21),s('type.list.list'('type.ast.exp'),sK22))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f416,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK23),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK24))))) | $spl8),
  inference(cnf_transformation,[],[f416_D])).
fof(f416_D,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK23),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK24))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f418,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK25),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),sK26),s('type.ast.exp',sK27))))) | $spl10),
  inference(cnf_transformation,[],[f418_D])).
fof(f418_D,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK25),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),sK26),s('type.ast.exp',sK27))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f420,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK28),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',sK29),s('type.list.list'('type.ast.exp'),sK30))))) | $spl12),
  inference(cnf_transformation,[],[f420_D])).
fof(f420_D,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK28),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',sK29),s('type.list.list'('type.ast.exp'),sK30))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f422,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK31),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',sK32),s('type.ast.exp',sK33),s('type.ast.exp',sK34))))) | $spl14),
  inference(cnf_transformation,[],[f422_D])).
fof(f422_D,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK31),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',sK32),s('type.ast.exp',sK33),s('type.ast.exp',sK34))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f424,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK35),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',sK36),s('type.ast.exp',sK37),s('type.ast.exp',sK38))))) | $spl16),
  inference(cnf_transformation,[],[f424_D])).
fof(f424_D,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK35),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',sK36),s('type.ast.exp',sK37),s('type.ast.exp',sK38))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f426,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK39),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',sK40),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK41))))) | $spl18),
  inference(cnf_transformation,[],[f426_D])).
fof(f426_D,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK39),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',sK40),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK41))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f428,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK42),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),sK43),s('type.ast.exp',sK44),s('type.ast.exp',sK45))))) | $spl20),
  inference(cnf_transformation,[],[f428_D])).
fof(f428_D,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK42),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),sK43),s('type.ast.exp',sK44),s('type.ast.exp',sK45))))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f430,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK46),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK47),s('type.ast.exp',sK48))))) | $spl22),
  inference(cnf_transformation,[],[f430_D])).
fof(f430_D,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK46),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK47),s('type.ast.exp',sK48))))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f223,plain,(
  s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK46),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK47),s('type.ast.exp',sK48))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK42),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),sK43),s('type.ast.exp',sK44),s('type.ast.exp',sK45))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK39),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',sK40),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK41))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK35),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',sK36),s('type.ast.exp',sK37),s('type.ast.exp',sK38))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK31),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',sK32),s('type.ast.exp',sK33),s('type.ast.exp',sK34))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK28),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',sK29),s('type.list.list'('type.ast.exp'),sK30))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK25),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),sK26),s('type.ast.exp',sK27))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK23),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK24))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK20),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),sK21),s('type.list.list'('type.ast.exp'),sK22))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK18),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',sK19))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK15),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',sK16),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK17))))) | s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) = s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),sK13),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',sK14)))))),
  inference(cnf_transformation,[],[f138])).
fof(f4839,plain,(
  $false | $spl20),
  inference(subsumption_resolution,[],[f428,f233])).
fof(f233,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),sK12) != s('type.pair.prod'(fun('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s(fun('type.ast.exp','type.ast.exp'),X7),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X8),s('type.ast.exp',X9),s('type.ast.exp',X10)))))) )),
  inference(cnf_transformation,[],[f138])).
% SZS output end Proof for thm.ml_optimise
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 397
% Passive clauses: 1471
% Generated clauses: 4610
% Final active clauses: 397
% Final passive clauses: 877
% Input formulas: 37
% Initial clauses: 180
% 
% Duplicate literals: 155
% Trivial inequalities: 29
% Fw subsumption resolutions: 318
% 
% Simple tautologies: 145
% Equational tautologies: 34
% Forward subsumptions: 2436
% 
% Binary resolution: 2816
% Factoring: 806
% Forward superposition: 162
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 111
% Split components: 233
% SAT solver clauses: 229
% SAT solver unit clauses: 18
% SAT solver binary clauses: 45
% SAT solver learnt clauses: 1
% 
% Sat splits: 111
% Sat splitting refutations: 12
% 
% TWLsolver clauses: 228
% TWLsolver calls for satisfiability: 192
% 
% Memory used [KB]: 2558
% Time elapsed: 0.201 s
% ------------------------------
% ------------------------------
% Success in time 0.21 s
