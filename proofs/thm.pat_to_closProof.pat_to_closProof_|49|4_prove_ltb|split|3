Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.pat_to_closProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pat_to_closProof
% SZS output start Proof for thm.pat_to_closProof
fof(f782,plain,(
  $false),
  inference(subsumption_resolution,[],[f746,f745])).
fof(f745,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11)))),
  inference(duplicate_literal_removal,[],[f442])).
fof(f442,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11)))),
  inference(cnf_transformation,[],[f333])).
fof(f333,plain,(
  (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11)))) & (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11])],[f332])).
fof(f332,plain,(
  ? [X0,X1] : ((s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) & (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f297])).
fof(f297,plain,(
  ? [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <~> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),
  inference(ennf_transformation,[],[f140])).
fof(f140,plain,(
  ~! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),
  inference(flattening,[],[f139])).
fof(f139,plain,(
  ~! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))))),
  file('thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|3','thm.pat_to_closProof.pat_to_closProof_|49|4_prove_ltb|split|3')).
fof(f746,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11)))),
  inference(duplicate_literal_removal,[],[f443])).
fof(f443,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK10),sK11)))),
  inference(cnf_transformation,[],[f333])).
% SZS output end Proof for thm.pat_to_closProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 38
% Passive clauses: 206
% Generated clauses: 332
% Final active clauses: 38
% Final passive clauses: 163
% Input formulas: 137
% Initial clauses: 297
% 
% Duplicate literals: 7
% Trivial inequalities: 1
% Fw subsumption resolutions: 1
% 
% Simple tautologies: 70
% Equational tautologies: 1
% Forward subsumptions: 13
% 
% Binary resolution: 6
% Forward superposition: 6
% Backward superposition: 6
% 
% Split clauses: 32
% Split components: 64
% SAT solver clauses: 37
% SAT solver unit clauses: 5
% SAT solver binary clauses: 32
% 
% Sat splits: 32
% 
% TWLsolver clauses: 37
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 895
% Time elapsed: 0.016 s
% ------------------------------
% ------------------------------
% Success in time 0.032 s
