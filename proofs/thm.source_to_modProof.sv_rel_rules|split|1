Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.source_to_modProof
% (56672)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 189
% Passive clauses: 3288
% Generated clauses: 11109
% Final active clauses: 187
% Final passive clauses: 2973
% Input formulas: 37
% Initial clauses: 425
% 
% Duplicate literals: 519
% Trivial inequalities: 149
% Fw subsumption resolutions: 1629
% Fw demodulations: 251
% Bw demodulations: 2
% 
% Simple tautologies: 285
% Equational tautologies: 71
% Forward subsumptions: 4087
% 
% Binary resolution: 585
% Factoring: 2
% Forward superposition: 3166
% Backward superposition: 3879
% Self superposition: 205
% Equality factoring: 168
% Equality resolution: 17
% 
% Split clauses: 334
% Split components: 673
% SAT solver clauses: 954
% SAT solver unit clauses: 33
% SAT solver binary clauses: 368
% 
% Sat splits: 334
% 
% TWLsolver clauses: 954
% TWLsolver calls for satisfiability: 135
% 
% Memory used [KB]: 5884
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.source_to_modProof
% (56700)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 154
% Passive clauses: 923
% Generated clauses: 13449
% Final active clauses: 143
% Final passive clauses: 604
% Input formulas: 37
% Initial clauses: 425
% 
% Duplicate literals: 356
% Trivial inequalities: 144
% Fw subsumption resolutions: 1625
% Fw demodulations: 1126
% Bw demodulations: 167
% Condensations: 1561
% Global subsumptions: 17
% 
% Simple tautologies: 192
% Equational tautologies: 14
% Forward subsumptions: 6227
% 
% Binary resolution: 76
% Factoring: 1
% Forward superposition: 3539
% Backward superposition: 3000
% Self superposition: 173
% Equality factoring: 43
% Equality resolution: 26
% 
% Split clauses: 68
% Split components: 139
% SAT solver clauses: 1632
% SAT solver unit clauses: 436
% SAT solver binary clauses: 211
% SAT solver learnt clauses: 35
% SAT solver learnt literals: 23
% 
% Sat splits: 68
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 1571
% TWLsolver calls for satisfiability: 10553
% 
% Memory used [KB]: 11513
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.source_to_modProof
% (56721)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 684
% Passive clauses: 8929
% Generated clauses: 145179
% Final active clauses: 311
% Final passive clauses: 964
% Input formulas: 37
% Initial clauses: 425
% Discarded non-redundant clauses: 11375
% 
% Duplicate literals: 6123
% Trivial inequalities: 894
% Fw subsumption resolutions: 11570
% Fw demodulations: 15551
% Bw demodulations: 4857
% Condensations: 16033
% Global subsumptions: 538
% 
% Simple tautologies: 1264
% Equational tautologies: 623
% Forward subsumptions: 80121
% Bw demodulations to eq. taut.: 203
% 
% Unit resulting resolution: 7596
% Factoring: 11
% Forward superposition: 44000
% Backward superposition: 30809
% Self superposition: 481
% Equality factoring: 211
% Equality resolution: 60
% 
% Split clauses: 304
% Split components: 610
% SAT solver clauses: 10934
% SAT solver unit clauses: 738
% SAT solver binary clauses: 2432
% 
% Sat splits: 304
% Sat splitting refutations: 856
% 
% Memory used [KB]: 86096
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.source_to_modProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.source_to_modProof
% SZS output start Proof for thm.source_to_modProof
fof(f900,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f899])).
fof(f899,plain,(
  s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44))) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44)))),
  inference(equality_resolution,[],[f892])).
fof(f892,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44))) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0)))) )),
  inference(subsumption_resolution,[],[f859,f711])).
fof(f711,plain,(
  ~sP1(sK43,'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44)),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44)))),
  inference(resolution,[],[f292,f362])).
fof(f362,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))) | ~sP1(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))) | sP1(X0,X1,X2)) & (~sP1(X0,X1,X2) | p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))))),
  inference(nnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))) <=> sP1(X0,X1,X2))),
  inference(definition_folding,[],[f74,f77,f76])).
fof(f76,plain,(
  ! [X4,X6,X5] : (sP0(X4,X6,X5) <=> ? [X10,X11] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X10))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X11))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.semanticPrimitives.v',X10),s('type.modSem.v',X11))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f77,plain,(
  ! [X0,X1,X2] : (sP1(X0,X1,X2) <=> ! [X3] : (? [X4,X5,X6] : ((sP0(X4,X6,X5) | ? [X9] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))) | ? [X7,X8] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X7))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X8))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.list.list'('type.semanticPrimitives.v'),X7),s('type.list.list'('type.modSem.v'),X8)))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f74,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))) <=> ! [X3] : (? [X4,X5,X6] : ((? [X10,X11] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X10))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X11))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.semanticPrimitives.v',X10),s('type.modSem.v',X11))))) | ? [X9] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))) | ? [X7,X8] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X7))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X8))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.list.list'('type.semanticPrimitives.v'),X7),s('type.list.list'('type.modSem.v'),X8)))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))))),
  inference(ennf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))) <=> ! [X3] : (! [X4,X5,X6] : ((? [X10,X11] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X10))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X11))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.semanticPrimitives.v',X10),s('type.modSem.v',X11))))) | ? [X9] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))) | ? [X7,X8] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X7))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X8))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.list.list'('type.semanticPrimitives.v'),X7),s('type.list.list'('type.modSem.v'),X8)))))) => p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6))))) => p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X5,X8,X9] : (p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X5),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X8),s('type.semanticPrimitives.store_v'('type.modSem.v'),X9)))) <=> ! [X10] : (! [X11,X12,X13] : ((? [X14,X15] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X12) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X14))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X13) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X15))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X11),s('type.semanticPrimitives.v',X14),s('type.modSem.v',X15))))) | ? [X7] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X12) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X13) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7)))) | ? [X16,X17] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X12) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X16))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X13) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X17))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X11),s('type.list.list'('type.semanticPrimitives.v'),X16),s('type.list.list'('type.modSem.v'),X17)))))) => p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X10),s('type.list.list'('type.option.option'('type.modSem.v')),X11))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X12))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X13))))) => p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X10),s('type.list.list'('type.option.option'('type.modSem.v')),X5))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X8))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X9))))))),
  file('thm.source_to_modProof.sv_rel_rules|split|1','thm.source_to_modProof.sv_rel_def')).
fof(f292,plain,(
  ~p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK43),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44))),s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44))))))),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ~p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK43),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44))),s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK43,sK44])],[f70])).
fof(f70,plain,(
  ? [X0,X1] : ~p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1] : p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X6),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))),s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X6),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))),s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7))))))),
  file('thm.source_to_modProof.sv_rel_rules|split|1','thm.source_to_modProof.sv_rel_rules|split|1')).
fof(f859,plain,(
  ( ! [X0] : (sP1(sK43,'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44)),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44))) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0)))) )),
  inference(resolution,[],[f740,f354])).
fof(f354,plain,(
  ( ! [X6,X4,X2,X0,X5,X1,X9] : (sP1(X0,X1,X2) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),sK51(X2,X1,X0)),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6)))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0,X1,X2] : ((~sP1(X0,X1,X2) | ! [X10] : (((sP0(sK45(X10,X2,X1,X0),sK47(X10,X2,X1,X0),sK46(X10,X2,X1,X0)) | (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),sK46(X10,X2,X1,X0)) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK48(X10,X2,X1,X0)))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),sK47(X10,X2,X1,X0)) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK48(X10,X2,X1,X0))))) | (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),sK46(X10,X2,X1,X0)) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),sK49(X10,X2,X1,X0)))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),sK47(X10,X2,X1,X0)) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),sK50(X10,X2,X1,X0)))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK45(X10,X2,X1,X0)),s('type.list.list'('type.semanticPrimitives.v'),sK49(X10,X2,X1,X0)),s('type.list.list'('type.modSem.v'),sK50(X10,X2,X1,X0))))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X10),s('type.list.list'('type.option.option'('type.modSem.v')),sK45(X10,X2,X1,X0)))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),sK46(X10,X2,X1,X0)))),s('type.semanticPrimitives.store_v'('type.modSem.v'),sK47(X10,X2,X1,X0)))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X10),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))))) & ((! [X4,X5,X6] : ((~sP0(X4,X6,X5) & ! [X9] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))) & ! [X7,X8] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X7))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X8))) | ~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.list.list'('type.semanticPrimitives.v'),X7),s('type.list.list'('type.modSem.v'),X8)))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),sK51(X2,X1,X0)),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),sK51(X2,X1,X0)),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))) | sP1(X0,X1,X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK45,sK46,sK47,sK48,sK49,sK50,sK51])],[f152])).
fof(f152,plain,(
  ! [X0,X1,X2] : ((~sP1(X0,X1,X2) | ! [X10] : (? [X11,X12,X13] : ((sP0(X11,X13,X12) | ? [X16] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X12) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X16))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X13) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X16)))) | ? [X14,X15] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X12) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X14))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X13) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X15))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X11),s('type.list.list'('type.semanticPrimitives.v'),X14),s('type.list.list'('type.modSem.v'),X15)))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X10),s('type.list.list'('type.option.option'('type.modSem.v')),X11))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X12))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X13))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X10),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))))) & (? [X3] : (! [X4,X5,X6] : ((~sP0(X4,X6,X5) & ! [X9] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))) & ! [X7,X8] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X7))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X8))) | ~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.list.list'('type.semanticPrimitives.v'),X7),s('type.list.list'('type.modSem.v'),X8)))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))) | sP1(X0,X1,X2)))),
  inference(rectify,[],[f151])).
fof(f151,plain,(
  ! [X0,X1,X2] : ((~sP1(X0,X1,X2) | ! [X3] : (? [X4,X5,X6] : ((sP0(X4,X6,X5) | ? [X9] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))) | ? [X7,X8] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X7))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X8))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.list.list'('type.semanticPrimitives.v'),X7),s('type.list.list'('type.modSem.v'),X8)))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))))) & (? [X3] : (! [X4,X5,X6] : ((~sP0(X4,X6,X5) & ! [X9] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))) & ! [X7,X8] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X7))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X8))) | ~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.list.list'('type.semanticPrimitives.v'),X7),s('type.list.list'('type.modSem.v'),X8)))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))) | sP1(X0,X1,X2)))),
  inference(nnf_transformation,[],[f77])).
fof(f740,plain,(
  ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),sK51('const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44)),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44)),sK43)),s('type.list.list'('type.option.option'('type.modSem.v')),sK43))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44))))),s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK44))))))),
  inference(resolution,[],[f711,f356])).
fof(f356,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),sK51(X2,X1,X0)),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))) )),
  inference(cnf_transformation,[],[f153])).
% SZS output end Proof for thm.source_to_modProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 382
% Passive clauses: 35
% Generated clauses: 187
% Final active clauses: 381
% Final passive clauses: 18
% Input formulas: 37
% Initial clauses: 413
% 
% Selected by SInE selection: 28
% SInE iterations: 1
% 
% Duplicate literals: 10
% Trivial inequalities: 8
% Fw subsumption resolutions: 16
% Fw demodulations: 24
% Bw demodulations: 1
% 
% Simple tautologies: 50
% Forward subsumptions: 96
% 
% Binary resolution: 46
% Forward superposition: 53
% Backward superposition: 36
% Equality resolution: 1
% 
% SAT solver clauses: 1
% 
% Memory used [KB]: 4221
% Time elapsed: 0.058 s
% ------------------------------
% ------------------------------
% Success in time 11.8 s
