Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_freeProof
% (1952)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 95
% Passive clauses: 2915
% Generated clauses: 20039
% Final active clauses: 85
% Final passive clauses: 2706
% Input formulas: 21
% Initial clauses: 51
% 
% Duplicate literals: 1190
% Trivial inequalities: 291
% Fw subsumption resolutions: 2503
% Fw demodulations: 1858
% Bw demodulations: 5
% 
% Simple tautologies: 420
% Equational tautologies: 93
% Forward subsumptions: 8432
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 34
% Forward superposition: 8910
% Backward superposition: 4436
% Self superposition: 326
% Equality factoring: 246
% Equality resolution: 21
% 
% Split clauses: 961
% Split components: 1950
% SAT solver clauses: 2362
% SAT solver unit clauses: 261
% SAT solver binary clauses: 639
% 
% Sat splits: 961
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 2352
% TWLsolver calls for satisfiability: 116
% 
% Memory used [KB]: 7675
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.clos_freeProof
% (1962)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 81
% Passive clauses: 384
% Generated clauses: 10548
% Final active clauses: 55
% Final passive clauses: 184
% Input formulas: 21
% Initial clauses: 51
% 
% Duplicate literals: 1463
% Trivial inequalities: 150
% Fw subsumption resolutions: 608
% Fw demodulations: 386
% Bw demodulations: 122
% Condensations: 1893
% Global subsumptions: 12
% 
% Simple tautologies: 199
% Equational tautologies: 62
% Forward subsumptions: 4103
% Bw demodulations to eq. taut.: 16
% 
% Binary resolution: 16
% Forward superposition: 2732
% Backward superposition: 2654
% Self superposition: 216
% Equality factoring: 179
% Equality resolution: 15
% 
% Split clauses: 149
% Split components: 304
% SAT solver clauses: 948
% SAT solver unit clauses: 68
% SAT solver binary clauses: 86
% SAT solver learnt clauses: 25
% SAT solver learnt literals: 1
% 
% Sat splits: 149
% Sat splitting refutations: 10
% 
% TWLsolver clauses: 899
% TWLsolver calls for satisfiability: 177
% 
% Memory used [KB]: 6524
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.clos_freeProof
% (1966)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 484
% Passive clauses: 5098
% Generated clauses: 117531
% Final active clauses: 28
% Final passive clauses: 324
% Input formulas: 21
% Initial clauses: 51
% 
% Duplicate literals: 7776
% Trivial inequalities: 948
% Fw subsumption resolutions: 8632
% Fw demodulations: 7056
% Bw demodulations: 3321
% Condensations: 15786
% Global subsumptions: 1362
% 
% Simple tautologies: 1137
% Equational tautologies: 1628
% Forward subsumptions: 66266
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 108
% 
% Unit resulting resolution: 3933
% Forward superposition: 26808
% Backward superposition: 19752
% Self superposition: 850
% Equality factoring: 488
% Equality resolution: 127
% 
% Split clauses: 519
% Split components: 1045
% SAT solver clauses: 8866
% SAT solver unit clauses: 44
% SAT solver binary clauses: 405
% 
% Sat splits: 519
% Sat splitting refutations: 1366
% 
% Memory used [KB]: 50532
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.clos_freeProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_freeProof
% SZS output start Proof for thm.clos_freeProof
fof(f867,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f142,f147,f145,f143,f188,f412,f413,f442,f381,f378,f446,f444,f447,f448,f366,f450,f451,f452,f453,f454,f455,f456,f457,f458,f459,f460,f461,f462,f463,f464,f465,f466,f467,f468,f469,f470,f471,f472,f473,f445,f474,f480,f502,f519,f151,f149,f588,f435,f589,f439,f609,f612,f434,f433,f613,f438,f437,f624,f787,f790,f793,f801,f866])).
fof(f866,plain,(
  $false | ($spl3 | $spl6 | $spl8 | $spl10)),
  inference(subsumption_resolution,[],[f865,f175])).
fof(f175,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(subsumption_resolution,[],[f173,f147])).
fof(f173,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | $spl3),
  inference(superposition,[],[f147,f88])).
fof(f88,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.clos_freeProof.clos_freeProof_|48|_prove_ltb',aHL_BOOL_CASES)).
fof(f865,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl3 | $spl6 | $spl8 | $spl10)),
  inference(forward_demodulation,[],[f864,f435])).
fof(f864,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | ($spl3 | $spl6 | $spl8)),
  inference(forward_demodulation,[],[f785,f433])).
fof(f785,plain,(
  s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f760,f175])).
fof(f760,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl6),
  inference(superposition,[],[f757,f165])).
fof(f165,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(sK0,X0),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3))))) | s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,X0))) = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,X0)))) )),
  inference(subsumption_resolution,[],[f163,f132])).
fof(f132,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.clos_freeProof.clos_freeProof_|48|_prove_ltb',aHL_TRUTH)).
fof(f163,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,X0))) = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,X0))) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(sK0,X0),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) )),
  inference(superposition,[],[f83,f88])).
fof(f83,plain,(
  ( ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(sK0,X4),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) | s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,X4))) = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,X4)))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(sK0,X4),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) | s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,X4))) = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,X4)))) & s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK2),s('type.list.list'(sK0),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f44])).
fof(f44,plain,(
  ? [X0,X1,X2,X3] : (! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))) | s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))) = s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) & s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X3))) != s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X2),s('type.list.list'(X0),X3))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3] : (! [X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))) => s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))) = s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) => s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X3))) = s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X2),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2,X3] : (! [X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))) => s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))) = s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) => s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X3))) = s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X2),s('type.list.list'(X0),X3))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : (! [X10] : (p(s(bool,'const.bool.IN_2'(s(X6,X10),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X9)))))) => s(bool,happ(s(fun(X6,bool),X7),s(X6,X10))) = s(bool,happ(s(fun(X6,bool),X8),s(X6,X10)))) => s(bool,'const.list.EXISTS_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),X9))) = s(bool,'const.list.EXISTS_2'(s(fun(X6,bool),X8),s('type.list.list'(X6),X9))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : (! [X10] : (p(s(bool,'const.bool.IN_2'(s(X6,X10),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X9)))))) => s(bool,happ(s(fun(X6,bool),X7),s(X6,X10))) = s(bool,happ(s(fun(X6,bool),X8),s(X6,X10)))) => s(bool,'const.list.EXISTS_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),X9))) = s(bool,'const.list.EXISTS_2'(s(fun(X6,bool),X8),s('type.list.list'(X6),X9))))),
  file('thm.clos_freeProof.clos_freeProof_|48|_prove_ltb','thm.clos_freeProof.clos_freeProof_|48|_prove_ltb')).
fof(f757,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3))))) | $spl6),
  inference(trivial_inequality_removal,[],[f749])).
fof(f749,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3))))) | $spl6),
  inference(superposition,[],[f745,f150])).
fof(f150,plain,(
  s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | $spl6),
  inference(cnf_transformation,[],[f150_D])).
fof(f150_D,plain,(
  s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f745,plain,(
  ( ! [X2] : (s(bool,'F_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X2),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,X2,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) ) | $spl6),
  inference(subsumption_resolution,[],[f743,f131])).
fof(f131,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.clos_freeProof.clos_freeProof_|48|_prove_ltb',aHL_FALSITY)).
fof(f743,plain,(
  ( ! [X2] : (p(s(bool,'F_0')) | s(bool,'F_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X2),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,X2,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) ) | $spl6),
  inference(superposition,[],[f731,f88])).
fof(f731,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,X0,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) | s(bool,'F_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3)))) ) | $spl6),
  inference(equality_resolution,[],[f715])).
fof(f715,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),sK3) != s('type.list.list'(sK0),X1) | p(s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,X0,sK3,X1,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) | s(bool,'F_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),X1)))) ) | $spl6),
  inference(forward_demodulation,[],[f138,f150])).
fof(f138,plain,(
  ( ! [X0,X1] : (s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),X1))) | p(s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,X0,sK3,X1,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) | s('type.list.list'(sK0),sK3) != s('type.list.list'(sK0),X1)) )),
  inference(superposition,[],[f84,f85])).
fof(f85,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X3),s('type.list.list'(X0),X1))) = s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X4),s('type.list.list'(X0),X2))) | p(s(bool,'const.bool.IN_2'(s(X0,sK4(X4,X3,X2,X1,X0)),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2)) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2) | (p(s(bool,'const.bool.IN_2'(s(X0,sK4(X4,X3,X2,X1,X0)),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) & s(bool,happ(s(fun(X0,bool),X3),s(X0,sK4(X4,X3,X2,X1,X0)))) != s(bool,happ(s(fun(X0,bool),X4),s(X0,sK4(X4,X3,X2,X1,X0))))) | s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X3),s('type.list.list'(X0),X1))) = s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X4),s('type.list.list'(X0),X2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4])],[f46])).
fof(f46,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2) | ? [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) & s(bool,happ(s(fun(X0,bool),X3),s(X0,X5))) != s(bool,happ(s(fun(X0,bool),X4),s(X0,X5)))) | s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X3),s('type.list.list'(X0),X1))) = s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X4),s('type.list.list'(X0),X2))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2) | ? [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) & s(bool,happ(s(fun(X0,bool),X3),s(X0,X5))) != s(bool,happ(s(fun(X0,bool),X4),s(X0,X5))))) | s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X3),s('type.list.list'(X0),X1))) = s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X4),s('type.list.list'(X0),X2))))),
  inference(ennf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2) & ! [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) => s(bool,happ(s(fun(X0,bool),X3),s(X0,X5))) = s(bool,happ(s(fun(X0,bool),X4),s(X0,X5))))) => s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X3),s('type.list.list'(X0),X1))) = s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X4),s('type.list.list'(X0),X2))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : ((s('type.list.list'(X0),X1) = s('type.list.list'(X0),X2) & ! [X5] : (p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X2)))))) => s(bool,happ(s(fun(X0,bool),X3),s(X0,X5))) = s(bool,happ(s(fun(X0,bool),X4),s(X0,X5))))) => s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X3),s('type.list.list'(X0),X1))) = s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X4),s('type.list.list'(X0),X2))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X11,X12,X8,X13] : ((s('type.list.list'(X6),X11) = s('type.list.list'(X6),X12) & ! [X10] : (p(s(bool,'const.bool.IN_2'(s(X6,X10),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X12)))))) => s(bool,happ(s(fun(X6,bool),X8),s(X6,X10))) = s(bool,happ(s(fun(X6,bool),X13),s(X6,X10))))) => s(bool,'const.list.EXISTS_2'(s(fun(X6,bool),X8),s('type.list.list'(X6),X11))) = s(bool,'const.list.EXISTS_2'(s(fun(X6,bool),X13),s('type.list.list'(X6),X12))))),
  file('thm.clos_freeProof.clos_freeProof_|48|_prove_ltb','thm.list.EXISTS_CONG')).
fof(f84,plain,(
  s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK2),s('type.list.list'(sK0),sK3)))),
  inference(cnf_transformation,[],[f52])).
fof(f801,plain,(
  $false | ($spl3 | $spl8 | $spl12)),
  inference(subsumption_resolution,[],[f800,f175])).
fof(f800,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl8 | $spl12)),
  inference(forward_demodulation,[],[f433,f437])).
fof(f793,plain,(
  $false | ($spl6 | $spl11 | $spl12)),
  inference(subsumption_resolution,[],[f792,f434])).
fof(f792,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | ($spl6 | $spl12)),
  inference(forward_demodulation,[],[f791,f437])).
fof(f791,plain,(
  s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl6),
  inference(subsumption_resolution,[],[f764,f132])).
fof(f764,plain,(
  ~p(s(bool,'T_0')) | s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl6),
  inference(superposition,[],[f83,f757])).
fof(f790,plain,(
  $false | ($spl3 | $spl6 | $spl11 | $spl12)),
  inference(subsumption_resolution,[],[f789,f434])).
fof(f789,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | ($spl3 | $spl6 | $spl12)),
  inference(forward_demodulation,[],[f788,f437])).
fof(f788,plain,(
  s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f763,f175])).
fof(f763,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl6),
  inference(superposition,[],[f165,f757])).
fof(f787,plain,(
  $false | ($spl3 | $spl6 | $spl11 | $spl12)),
  inference(subsumption_resolution,[],[f786,f434])).
fof(f786,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | ($spl3 | $spl6 | $spl12)),
  inference(forward_demodulation,[],[f785,f437])).
fof(f624,plain,(
  $false | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f623,f434])).
fof(f623,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl15),
  inference(trivial_inequality_removal,[],[f622])).
fof(f622,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl15),
  inference(superposition,[],[f438,f88])).
fof(f437,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl12),
  inference(cnf_transformation,[],[f437_D])).
fof(f437_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f438,plain,(
  s(bool,'F_0') != s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl15),
  inference(cnf_transformation,[],[f438_D])).
fof(f438_D,plain,(
  s(bool,'F_0') != s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f613,plain,(
  s(bool,'F_0') != s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl17),
  inference(superposition,[],[f443,f88])).
fof(f443,plain,(
  s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) != s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl17),
  inference(cnf_transformation,[],[f443_D])).
fof(f443_D,plain,(
  s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) != s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f433,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl8),
  inference(cnf_transformation,[],[f433_D])).
fof(f433_D,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f434,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl11),
  inference(cnf_transformation,[],[f434_D])).
fof(f434_D,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f612,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | s(bool,'F_0') = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl17),
  inference(superposition,[],[f443,f88])).
fof(f609,plain,(
  $false | ($spl3 | $spl4 | $spl16)),
  inference(subsumption_resolution,[],[f608,f147])).
fof(f608,plain,(
  s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | ($spl4 | $spl16)),
  inference(forward_demodulation,[],[f607,f149])).
fof(f607,plain,(
  s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK2),s('type.list.list'(sK0),sK3))) | $spl16),
  inference(trivial_inequality_removal,[],[f590])).
fof(f590,plain,(
  s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) != s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK2),s('type.list.list'(sK0),sK3))) | s('type.list.list'(sK0),sK3) != s('type.list.list'(sK0),sK3) | $spl16),
  inference(superposition,[],[f86,f444])).
fof(f86,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X3),s('type.list.list'(X0),X1))) = s(bool,'const.list.EXISTS_2'(s(fun(X0,bool),X4),s('type.list.list'(X0),X2))) | s(bool,happ(s(fun(X0,bool),X3),s(X0,sK4(X4,X3,X2,X1,X0)))) != s(bool,happ(s(fun(X0,bool),X4),s(X0,sK4(X4,X3,X2,X1,X0)))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),X2)) )),
  inference(cnf_transformation,[],[f53])).
fof(f439,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl14),
  inference(cnf_transformation,[],[f439_D])).
fof(f439_D,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f589,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl16),
  inference(superposition,[],[f444,f88])).
fof(f435,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl10),
  inference(cnf_transformation,[],[f435_D])).
fof(f435_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f588,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | s(bool,'F_0') = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl16),
  inference(superposition,[],[f444,f88])).
fof(f149,plain,(
  s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK2),s('type.list.list'(sK0),sK3))) | $spl4),
  inference(cnf_transformation,[],[f149_D])).
fof(f149_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK2),s('type.list.list'(sK0),sK3))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f151,plain,(
  s(bool,'F_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | $spl7),
  inference(cnf_transformation,[],[f151_D])).
fof(f151_D,plain,(
  s(bool,'F_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f519,plain,(
  s(bool,'F_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK2),s('type.list.list'(sK0),sK3)))),
  inference(superposition,[],[f84,f88])).
fof(f502,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f501,f193])).
fof(f193,plain,(
  s(bool,'F_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | $spl0),
  inference(backward_demodulation,[],[f145,f84])).
fof(f501,plain,(
  s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | $spl3),
  inference(trivial_inequality_removal,[],[f499])).
fof(f499,plain,(
  s(bool,'T_0') != s(bool,'T_0') | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | $spl3),
  inference(superposition,[],[f147,f88])).
fof(f480,plain,(
  $false | ($spl0 | $spl2 | $spl6)),
  inference(subsumption_resolution,[],[f476,f475])).
fof(f475,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f193,f146])).
fof(f146,plain,(
  s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | $spl2),
  inference(cnf_transformation,[],[f146_D])).
fof(f146_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f476,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl2 | $spl6)),
  inference(forward_demodulation,[],[f150,f146])).
fof(f474,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(sK2,X1,bool,sK0))))) ) | $spl46),
  inference(cnf_transformation,[],[f474_D])).
fof(f474_D,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(sK2,X1,bool,sK0))))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f445,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl19),
  inference(cnf_transformation,[],[f445_D])).
fof(f445_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f473,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(sK2,X1,bool,sK0))))) ) | $spl2),
  inference(subsumption_resolution,[],[f307,f304])).
fof(f304,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,f(s(sK0,sK5(sK2,X0,bool,sK0)))) | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(sK2,X0,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f303,f88])).
fof(f303,plain,(
  ( ! [X0] : (s(bool,f(s(sK0,sK5(sK2,X0,bool,sK0)))) != s(bool,g(s(sK0,sK5(sK2,X0,bool,sK0)))) | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3)))) ) | $spl2),
  inference(forward_demodulation,[],[f136,f146])).
fof(f136,plain,(
  ( ! [X0] : (s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,f(s(sK0,sK5(sK2,X0,bool,sK0)))) != s(bool,g(s(sK0,sK5(sK2,X0,bool,sK0))))) )),
  inference(superposition,[],[f84,f87])).
fof(f87,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,X1),X2) = s(fun(X0,X1),X3) | s(X1,f(s(X0,sK5(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK5(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK5(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK5(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5])],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.clos_freeProof.clos_freeProof_|48|_prove_ltb',aHL_EXT)).
fof(f307,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(sK2,X1,bool,sK0)))) | s(bool,'T_0') = s(bool,f(s(sK0,sK5(sK2,X1,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f304,f88])).
fof(f472,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(sK2,X0,bool,sK0))))) ) | $spl44),
  inference(cnf_transformation,[],[f472_D])).
fof(f472_D,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(sK2,X0,bool,sK0))))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f471,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(sK2,X0,bool,sK0))))) ) | $spl2),
  inference(subsumption_resolution,[],[f309,f305])).
fof(f305,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,f(s(sK0,sK5(sK2,X1,bool,sK0)))) | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(sK2,X1,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f303,f88])).
fof(f309,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(sK2,X0,bool,sK0)))) | s(bool,'F_0') = s(bool,f(s(sK0,sK5(sK2,X0,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f305,f88])).
fof(f470,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(sK2,X1,bool,sK0))))) ) | $spl42),
  inference(cnf_transformation,[],[f470_D])).
fof(f470_D,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(sK2,X1,bool,sK0))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f469,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(sK2,X1,bool,sK0))))) ) | $spl0),
  inference(subsumption_resolution,[],[f316,f261])).
fof(f261,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,f(s(sK0,sK5(sK2,X0,bool,sK0)))) | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(sK2,X0,bool,sK0))))) ) | $spl0),
  inference(superposition,[],[f194,f88])).
fof(f194,plain,(
  ( ! [X0] : (s(bool,f(s(sK0,sK5(sK2,X0,bool,sK0)))) != s(bool,g(s(sK0,sK5(sK2,X0,bool,sK0)))) | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3)))) ) | $spl0),
  inference(superposition,[],[f145,f87])).
fof(f316,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(sK2,X1,bool,sK0)))) | s(bool,'T_0') = s(bool,f(s(sK0,sK5(sK2,X1,bool,sK0))))) ) | $spl0),
  inference(superposition,[],[f261,f88])).
fof(f468,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(X1,sK2,bool,sK0))))) ) | $spl40),
  inference(cnf_transformation,[],[f468_D])).
fof(f468_D,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(X1,sK2,bool,sK0))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f467,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(X1,sK2,bool,sK0))))) ) | $spl2),
  inference(subsumption_resolution,[],[f322,f319])).
fof(f319,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,f(s(sK0,sK5(X0,sK2,bool,sK0)))) | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(X0,sK2,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f318,f88])).
fof(f318,plain,(
  ( ! [X1] : (s(bool,f(s(sK0,sK5(X1,sK2,bool,sK0)))) != s(bool,g(s(sK0,sK5(X1,sK2,bool,sK0)))) | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3)))) ) | $spl2),
  inference(forward_demodulation,[],[f137,f146])).
fof(f137,plain,(
  ( ! [X1] : (s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,f(s(sK0,sK5(X1,sK2,bool,sK0)))) != s(bool,g(s(sK0,sK5(X1,sK2,bool,sK0))))) )),
  inference(superposition,[],[f84,f87])).
fof(f322,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(X1,sK2,bool,sK0)))) | s(bool,'T_0') = s(bool,f(s(sK0,sK5(X1,sK2,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f319,f88])).
fof(f466,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(X0,sK2,bool,sK0))))) ) | $spl38),
  inference(cnf_transformation,[],[f466_D])).
fof(f466_D,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(X0,sK2,bool,sK0))))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f465,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(X0,sK2,bool,sK0))))) ) | $spl2),
  inference(subsumption_resolution,[],[f324,f320])).
fof(f320,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,f(s(sK0,sK5(X1,sK2,bool,sK0)))) | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(X1,sK2,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f318,f88])).
fof(f324,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(X0,sK2,bool,sK0)))) | s(bool,'F_0') = s(bool,f(s(sK0,sK5(X0,sK2,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f320,f88])).
fof(f464,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(sK2,X0,bool,sK0))))) ) | $spl36),
  inference(cnf_transformation,[],[f464_D])).
fof(f464_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(sK2,X0,bool,sK0))))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f463,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(sK2,X0,bool,sK0))))) ) | $spl0),
  inference(subsumption_resolution,[],[f327,f262])).
fof(f262,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,f(s(sK0,sK5(sK2,X1,bool,sK0)))) | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(sK2,X1,bool,sK0))))) ) | $spl0),
  inference(superposition,[],[f194,f88])).
fof(f327,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(sK2,X0,bool,sK0)))) | s(bool,'F_0') = s(bool,f(s(sK0,sK5(sK2,X0,bool,sK0))))) ) | $spl0),
  inference(superposition,[],[f262,f88])).
fof(f462,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(X1,sK2,bool,sK0))))) ) | $spl34),
  inference(cnf_transformation,[],[f462_D])).
fof(f462_D,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(X1,sK2,bool,sK0))))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f461,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(X1,sK2,bool,sK0))))) ) | $spl0),
  inference(subsumption_resolution,[],[f331,f263])).
fof(f263,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,f(s(sK0,sK5(X0,sK2,bool,sK0)))) | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(X0,sK2,bool,sK0))))) ) | $spl0),
  inference(superposition,[],[f195,f88])).
fof(f195,plain,(
  ( ! [X1] : (s(bool,f(s(sK0,sK5(X1,sK2,bool,sK0)))) != s(bool,g(s(sK0,sK5(X1,sK2,bool,sK0)))) | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3)))) ) | $spl0),
  inference(superposition,[],[f145,f87])).
fof(f331,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(X1,sK2,bool,sK0)))) | s(bool,'T_0') = s(bool,f(s(sK0,sK5(X1,sK2,bool,sK0))))) ) | $spl0),
  inference(superposition,[],[f263,f88])).
fof(f460,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(X0,sK2,bool,sK0))))) ) | $spl32),
  inference(cnf_transformation,[],[f460_D])).
fof(f460_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(X0,sK2,bool,sK0))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f459,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(X0,sK2,bool,sK0))))) ) | $spl0),
  inference(subsumption_resolution,[],[f334,f264])).
fof(f264,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,f(s(sK0,sK5(X1,sK2,bool,sK0)))) | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(X1,sK2,bool,sK0))))) ) | $spl0),
  inference(superposition,[],[f195,f88])).
fof(f334,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(X0,sK2,bool,sK0)))) | s(bool,'F_0') = s(bool,f(s(sK0,sK5(X0,sK2,bool,sK0))))) ) | $spl0),
  inference(superposition,[],[f264,f88])).
fof(f458,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(sK1,X1,bool,sK0))))) ) | $spl30),
  inference(cnf_transformation,[],[f458_D])).
fof(f458_D,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(sK1,X1,bool,sK0))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f457,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(sK1,X1,bool,sK0))))) ) | $spl2),
  inference(subsumption_resolution,[],[f338,f290])).
fof(f290,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,f(s(sK0,sK5(sK1,X0,bool,sK0)))) | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(sK1,X0,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f224,f88])).
fof(f224,plain,(
  ( ! [X0] : (s(bool,f(s(sK0,sK5(sK1,X0,bool,sK0)))) != s(bool,g(s(sK0,sK5(sK1,X0,bool,sK0)))) | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3)))) ) | $spl2),
  inference(superposition,[],[f146,f87])).
fof(f338,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(sK1,X1,bool,sK0)))) | s(bool,'T_0') = s(bool,f(s(sK0,sK5(sK1,X1,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f290,f88])).
fof(f456,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(sK1,X0,bool,sK0))))) ) | $spl28),
  inference(cnf_transformation,[],[f456_D])).
fof(f456_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(sK1,X0,bool,sK0))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f455,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(sK1,X0,bool,sK0))))) ) | $spl2),
  inference(subsumption_resolution,[],[f340,f291])).
fof(f291,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,f(s(sK0,sK5(sK1,X1,bool,sK0)))) | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(sK1,X1,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f224,f88])).
fof(f340,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(sK1,X0,bool,sK0)))) | s(bool,'F_0') = s(bool,f(s(sK0,sK5(sK1,X0,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f291,f88])).
fof(f454,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(X1,sK1,bool,sK0))))) ) | $spl26),
  inference(cnf_transformation,[],[f454_D])).
fof(f454_D,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(X1,sK1,bool,sK0))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f453,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(X1,sK1,bool,sK0))))) ) | $spl2),
  inference(subsumption_resolution,[],[f344,f292])).
fof(f292,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,f(s(sK0,sK5(X0,sK1,bool,sK0)))) | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(X0,sK1,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f225,f88])).
fof(f225,plain,(
  ( ! [X1] : (s(bool,f(s(sK0,sK5(X1,sK1,bool,sK0)))) != s(bool,g(s(sK0,sK5(X1,sK1,bool,sK0)))) | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3)))) ) | $spl2),
  inference(superposition,[],[f146,f87])).
fof(f344,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,g(s(sK0,sK5(X1,sK1,bool,sK0)))) | s(bool,'T_0') = s(bool,f(s(sK0,sK5(X1,sK1,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f292,f88])).
fof(f452,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(X0,sK1,bool,sK0))))) ) | $spl24),
  inference(cnf_transformation,[],[f452_D])).
fof(f452_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(X0,sK1,bool,sK0))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f451,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(X0,sK1,bool,sK0))))) ) | $spl2),
  inference(subsumption_resolution,[],[f346,f293])).
fof(f293,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,f(s(sK0,sK5(X1,sK1,bool,sK0)))) | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X1),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(X1,sK1,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f225,f88])).
fof(f346,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,g(s(sK0,sK5(X0,sK1,bool,sK0)))) | s(bool,'F_0') = s(bool,f(s(sK0,sK5(X0,sK1,bool,sK0))))) ) | $spl2),
  inference(superposition,[],[f293,f88])).
fof(f450,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,sK2,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3))))) | $spl22),
  inference(cnf_transformation,[],[f450_D])).
fof(f450_D,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,sK2,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3))))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f366,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,sK2,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3))))) | ($spl0 | $spl2)),
  inference(superposition,[],[f363,f145])).
fof(f363,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X2),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,X2,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) ) | $spl2),
  inference(subsumption_resolution,[],[f361,f131])).
fof(f361,plain,(
  ( ! [X2] : (p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X2),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,X2,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) ) | $spl2),
  inference(superposition,[],[f349,f88])).
fof(f349,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,X0,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),sK3)))) ) | $spl2),
  inference(equality_resolution,[],[f333])).
fof(f333,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),sK3) != s('type.list.list'(sK0),X1) | p(s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,X0,sK3,X1,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) | s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X0),s('type.list.list'(sK0),X1)))) ) | $spl2),
  inference(forward_demodulation,[],[f138,f146])).
fof(f448,plain,(
  ( ! [X13] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,X13,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) ) | $spl20),
  inference(cnf_transformation,[],[f448_D])).
fof(f448_D,plain,(
  ( ! [X13] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,X13,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f447,plain,(
  ( ! [X13] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,X13,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) ) | $spl2),
  inference(subsumption_resolution,[],[f373,f363])).
fof(f373,plain,(
  ( ! [X13] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,X13,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3))))) | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),X13),s('type.list.list'(sK0),sK3)))) ) | $spl2),
  inference(superposition,[],[f363,f88])).
fof(f444,plain,(
  s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl16),
  inference(cnf_transformation,[],[f444_D])).
fof(f444_D,plain,(
  s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f446,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl18),
  inference(cnf_transformation,[],[f446_D])).
fof(f446_D,plain,(
  s(bool,'T_0') = s(bool,'F_0') <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f378,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl2),
  inference(superposition,[],[f375,f165])).
fof(f375,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3))))) | $spl2),
  inference(trivial_inequality_removal,[],[f367])).
fof(f367,plain,(
  s(bool,'T_0') != s(bool,'T_0') | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3))))) | $spl2),
  inference(superposition,[],[f363,f146])).
fof(f381,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | $spl2),
  inference(superposition,[],[f165,f375])).
fof(f442,plain,(
  $false | ($spl0 | $spl2 | $spl7)),
  inference(subsumption_resolution,[],[f441,f189])).
fof(f189,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl7),
  inference(subsumption_resolution,[],[f185,f151])).
fof(f185,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | $spl7),
  inference(superposition,[],[f151,f88])).
fof(f441,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl2 | $spl7)),
  inference(forward_demodulation,[],[f440,f146])).
fof(f440,plain,(
  s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | ($spl0 | $spl2 | $spl7)),
  inference(forward_demodulation,[],[f431,f145])).
fof(f431,plain,(
  s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK2),s('type.list.list'(sK0),sK3))) | ($spl2 | $spl7)),
  inference(trivial_inequality_removal,[],[f414])).
fof(f414,plain,(
  s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) != s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK2),s('type.list.list'(sK0),sK3))) | s('type.list.list'(sK0),sK3) != s('type.list.list'(sK0),sK3) | ($spl2 | $spl7)),
  inference(superposition,[],[f86,f403])).
fof(f403,plain,(
  s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f378,f189])).
fof(f413,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | ($spl2 | $spl7)),
  inference(superposition,[],[f403,f88])).
fof(f412,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | s(bool,'F_0') = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK4(sK2,sK1,sK3,sK3,sK0)))) | ($spl2 | $spl7)),
  inference(superposition,[],[f403,f88])).
fof(f188,plain,(
  $false | ($spl3 | $spl7)),
  inference(subsumption_resolution,[],[f187,f147])).
fof(f187,plain,(
  s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | $spl7),
  inference(trivial_inequality_removal,[],[f186])).
fof(f186,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | $spl7),
  inference(superposition,[],[f151,f88])).
fof(f143,plain,(
  s(bool,'F_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | s(bool,'T_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK2),s('type.list.list'(sK0),sK3)))),
  inference(superposition,[],[f84,f88])).
fof(f145,plain,(
  s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK2),s('type.list.list'(sK0),sK3))) | $spl0),
  inference(cnf_transformation,[],[f145_D])).
fof(f145_D,plain,(
  s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK2),s('type.list.list'(sK0),sK3))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f147,plain,(
  s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | $spl3),
  inference(cnf_transformation,[],[f147_D])).
fof(f147_D,plain,(
  s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f142,plain,(
  s(bool,'T_0') != s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK3))) | s(bool,'F_0') = s(bool,'const.list.EXISTS_2'(s(fun(sK0,bool),sK2),s('type.list.list'(sK0),sK3)))),
  inference(superposition,[],[f84,f88])).
% SZS output end Proof for thm.clos_freeProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 104
% Passive clauses: 269
% Generated clauses: 754
% Final active clauses: 52
% Final passive clauses: 76
% Input formulas: 21
% Initial clauses: 51
% 
% Selected by SInE selection: 21
% SInE iterations: 1
% 
% Duplicate literals: 21
% Trivial inequalities: 44
% Fw subsumption resolutions: 79
% Fw demodulations: 26
% Bw demodulations: 5
% 
% Simple tautologies: 104
% Forward subsumptions: 225
% 
% Binary resolution: 23
% Forward superposition: 266
% Backward superposition: 229
% Equality resolution: 3
% 
% Split clauses: 25
% Split components: 50
% SAT solver clauses: 37
% SAT solver binary clauses: 6
% 
% Sat splits: 25
% Sat splitting refutations: 11
% 
% Memory used [KB]: 1151
% Time elapsed: 0.026 s
% ------------------------------
% ------------------------------
% Success in time 11.777 s
