Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.closProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.closProps
% SZS output start Proof for thm.closProps
fof(f5479,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f5478,f223,f433,f431,f429,f427,f425,f423,f421,f419,f417,f415,f413,f411,f409,f5476,f5475,f5474,f5473,f5472,f5471,f4835,f4834,f4833,f4678,f4677,f5477])).
fof(f5477,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f413,f227])).
fof(f227,plain,(
  ( ! [X33,X31,X34,X32] : (s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X31),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X32),s('type.closLang.exp',X33),s('type.closLang.exp',X34))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  (s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK13),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK14),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK15))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK16),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',sK17),s('type.closLang.exp',sK18),s('type.closLang.exp',sK19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK20),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),sK21),s('type.closLang.exp',sK22))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK23),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',sK24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK25),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',sK26),s('type.closLang.exp',sK27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK28),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',sK29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK30),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK31),s('type.list.list'('type.closLang.exp'),sK32))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK33),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),sK34),s('type.closLang.exp',sK35),s('type.list.list'('type.closLang.exp'),sK36))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK37),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK38),s('type.option.option'('type.list.list'('type.num.num')),sK39),s('type.num.num',sK40),s('type.closLang.exp',sK41))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK42),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),sK43),s('type.option.option'('type.list.list'('type.num.num')),sK44),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK45),s('type.closLang.exp',sK46))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK47),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK48),s('type.list.list'('type.closLang.exp'),sK49))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK50),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK53),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK51),s('type.list.list'('type.closLang.exp'),sK52)))))))) & ! [X41] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X41),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X37,X38,X39,X40] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X37),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X38),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X39),s('type.list.list'('type.closLang.exp'),X40))))))) & ! [X35,X36] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X35),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X36))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X31,X32,X33,X34] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X31),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X32),s('type.closLang.exp',X33),s('type.closLang.exp',X34))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X28,X29,X30] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X28),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X29),s('type.closLang.exp',X30))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X26,X27] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X26),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X24,X25] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X24),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X21,X22,X23] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X21),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X17,X18,X19,X20] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X17),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X18),s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),X20))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X12,X13,X14,X15,X16] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X12),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X13),s('type.option.option'('type.list.list'('type.num.num')),X14),s('type.num.num',X15),s('type.closLang.exp',X16))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X7,X8,X9,X10,X11] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X8),s('type.option.option'('type.list.list'('type.num.num')),X9),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X10),s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X4,X5,X6] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X4),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X5),s('type.closLang.exp',X6))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X1,X2,X3] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X2),s('type.list.list'('type.closLang.exp'),X3))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36,sK37,sK38,sK39,sK40,sK41,sK42,sK43,sK44,sK45,sK46,sK47,sK48,sK49,sK50,sK51,sK52,sK53])],[f137])).
fof(f137,plain,(
  ? [X0] : ((? [X82] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X82),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X80,X81] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X80),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X81))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X76,X77,X78,X79] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X76),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X77),s('type.closLang.exp',X78),s('type.closLang.exp',X79))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X73,X74,X75] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X73),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X74),s('type.closLang.exp',X75))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X71,X72] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X71),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X72))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X68,X69,X70] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X68),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X69),s('type.closLang.exp',X70))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X66,X67] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X66),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X67))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X63,X64,X65] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X63),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X64),s('type.list.list'('type.closLang.exp'),X65))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X59,X60,X61,X62] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X59),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X60),s('type.closLang.exp',X61),s('type.list.list'('type.closLang.exp'),X62))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X54,X55,X56,X57,X58] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X54),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X55),s('type.option.option'('type.list.list'('type.num.num')),X56),s('type.num.num',X57),s('type.closLang.exp',X58))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X49,X50,X51,X52,X53] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X50),s('type.option.option'('type.list.list'('type.num.num')),X51),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X52),s('type.closLang.exp',X53))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X46,X47,X48] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X46),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X47),s('type.list.list'('type.closLang.exp'),X48))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X42,X43,X44,X45] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X42),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X43),s('type.list.list'('type.closLang.exp'),X44)))))))) & ! [X41] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X41),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X37,X38,X39,X40] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X37),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X38),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X39),s('type.list.list'('type.closLang.exp'),X40))))))) & ! [X35,X36] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X35),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X36))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X31,X32,X33,X34] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X31),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X32),s('type.closLang.exp',X33),s('type.closLang.exp',X34))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X28,X29,X30] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X28),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X29),s('type.closLang.exp',X30))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X26,X27] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X26),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X24,X25] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X24),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X21,X22,X23] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X21),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X17,X18,X19,X20] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X17),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X18),s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),X20))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X12,X13,X14,X15,X16] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X12),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X13),s('type.option.option'('type.list.list'('type.num.num')),X14),s('type.num.num',X15),s('type.closLang.exp',X16))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X7,X8,X9,X10,X11] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X8),s('type.option.option'('type.list.list'('type.num.num')),X9),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X10),s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X4,X5,X6] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X4),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X5),s('type.closLang.exp',X6))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X1,X2,X3] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X2),s('type.list.list'('type.closLang.exp'),X3))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),
  inference(rectify,[],[f97])).
fof(f97,plain,(
  ? [X0] : ((? [X41] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X41),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X39,X40] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X39),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X40))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X35,X36,X37,X38] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X35),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X36),s('type.closLang.exp',X37),s('type.closLang.exp',X38))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X32,X33,X34] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X32),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X33),s('type.closLang.exp',X34))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X30,X31] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X30),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X27,X28,X29] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X28),s('type.closLang.exp',X29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X25,X26] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X25),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X26))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X22,X23,X24] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X22),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X23),s('type.list.list'('type.closLang.exp'),X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X18,X19,X20,X21] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X18),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X19),s('type.closLang.exp',X20),s('type.list.list'('type.closLang.exp'),X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X13,X14,X15,X16,X17] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X13),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X14),s('type.option.option'('type.list.list'('type.num.num')),X15),s('type.num.num',X16),s('type.closLang.exp',X17))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X8,X9,X10,X11,X12] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X9),s('type.option.option'('type.list.list'('type.num.num')),X10),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X5,X6,X7] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X5),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X6),s('type.list.list'('type.closLang.exp'),X7))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X1,X2,X3,X4] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X4),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X2),s('type.list.list'('type.closLang.exp'),X3)))))))) & ! [X82] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X82),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X78,X79,X80,X81] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X78),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X79),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X80),s('type.list.list'('type.closLang.exp'),X81))))))) & ! [X76,X77] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X76),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X77))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X72,X73,X74,X75] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X72),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X73),s('type.closLang.exp',X74),s('type.closLang.exp',X75))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X69,X70,X71] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X69),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X70),s('type.closLang.exp',X71))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X67,X68] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X67),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X68))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X65,X66] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X65),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X66))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X62,X63,X64] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X62),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),X64))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X58,X59,X60,X61] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X58),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X59),s('type.closLang.exp',X60),s('type.list.list'('type.closLang.exp'),X61))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X53,X54,X55,X56,X57] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X53),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X54),s('type.option.option'('type.list.list'('type.num.num')),X55),s('type.num.num',X56),s('type.closLang.exp',X57))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X48,X49,X50,X51,X52] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X48),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X49),s('type.option.option'('type.list.list'('type.num.num')),X50),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X51),s('type.closLang.exp',X52))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X45,X46,X47] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X46),s('type.closLang.exp',X47))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X42,X43,X44] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X42),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X43),s('type.list.list'('type.closLang.exp'),X44))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ? [X0] : ((? [X41] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X41),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X39,X40] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X39),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X40))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X35,X36,X37,X38] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X35),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X36),s('type.closLang.exp',X37),s('type.closLang.exp',X38))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X32,X33,X34] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X32),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X33),s('type.closLang.exp',X34))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X30,X31] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X30),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X27,X28,X29] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X28),s('type.closLang.exp',X29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X25,X26] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X25),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X26))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X22,X23,X24] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X22),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X23),s('type.list.list'('type.closLang.exp'),X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X18,X19,X20,X21] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X18),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X19),s('type.closLang.exp',X20),s('type.list.list'('type.closLang.exp'),X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X13,X14,X15,X16,X17] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X13),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X14),s('type.option.option'('type.list.list'('type.num.num')),X15),s('type.num.num',X16),s('type.closLang.exp',X17))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X8,X9,X10,X11,X12] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X9),s('type.option.option'('type.list.list'('type.num.num')),X10),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X5,X6,X7] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X5),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X6),s('type.list.list'('type.closLang.exp'),X7))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X1,X2,X3,X4] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X4),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X2),s('type.list.list'('type.closLang.exp'),X3)))))))) & (! [X82] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X82),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & ! [X78,X79,X80,X81] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X78),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X79),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X80),s('type.list.list'('type.closLang.exp'),X81))))))) & ! [X76,X77] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X76),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X77))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X72,X73,X74,X75] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X72),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X73),s('type.closLang.exp',X74),s('type.closLang.exp',X75))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X69,X70,X71] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X69),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X70),s('type.closLang.exp',X71))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X67,X68] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X67),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X68))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X65,X66] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X65),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X66))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X62,X63,X64] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X62),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),X64))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X58,X59,X60,X61] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X58),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X59),s('type.closLang.exp',X60),s('type.list.list'('type.closLang.exp'),X61))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X53,X54,X55,X56,X57] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X53),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X54),s('type.option.option'('type.list.list'('type.num.num')),X55),s('type.num.num',X56),s('type.closLang.exp',X57))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X48,X49,X50,X51,X52] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X48),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X49),s('type.option.option'('type.list.list'('type.num.num')),X50),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X51),s('type.closLang.exp',X52))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X45,X46,X47] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X46),s('type.closLang.exp',X47))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) & ! [X42,X43,X44] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X42),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X43),s('type.list.list'('type.closLang.exp'),X44))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ((? [X41] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X41),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X39,X40] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X39),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X40))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X35,X36,X37,X38] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X35),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X36),s('type.closLang.exp',X37),s('type.closLang.exp',X38))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X32,X33,X34] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X32),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X33),s('type.closLang.exp',X34))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X30,X31] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X30),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X27,X28,X29] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X28),s('type.closLang.exp',X29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X25,X26] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X25),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X26))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X22,X23,X24] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X22),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X23),s('type.list.list'('type.closLang.exp'),X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X18,X19,X20,X21] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X18),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X19),s('type.closLang.exp',X20),s('type.list.list'('type.closLang.exp'),X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X13,X14,X15,X16,X17] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X13),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X14),s('type.option.option'('type.list.list'('type.num.num')),X15),s('type.num.num',X16),s('type.closLang.exp',X17))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X8,X9,X10,X11,X12] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X9),s('type.option.option'('type.list.list'('type.num.num')),X10),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X5,X6,X7] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X5),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X6),s('type.list.list'('type.closLang.exp'),X7))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X1,X2,X3,X4] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X4),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X2),s('type.list.list'('type.closLang.exp'),X3)))))))) => (? [X82] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X82),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X78,X79,X80,X81] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X78),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X79),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X80),s('type.list.list'('type.closLang.exp'),X81))))))) | ? [X76,X77] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X76),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X77))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X72,X73,X74,X75] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X72),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X73),s('type.closLang.exp',X74),s('type.closLang.exp',X75))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X69,X70,X71] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X69),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X70),s('type.closLang.exp',X71))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X67,X68] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X67),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X68))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X65,X66] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X65),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X66))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X62,X63,X64] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X62),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),X64))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X58,X59,X60,X61] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X58),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X59),s('type.closLang.exp',X60),s('type.list.list'('type.closLang.exp'),X61))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X53,X54,X55,X56,X57] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X53),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X54),s('type.option.option'('type.list.list'('type.num.num')),X55),s('type.num.num',X56),s('type.closLang.exp',X57))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X48,X49,X50,X51,X52] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X48),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X49),s('type.option.option'('type.list.list'('type.num.num')),X50),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X51),s('type.closLang.exp',X52))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X45,X46,X47] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X46),s('type.closLang.exp',X47))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X42,X43,X44] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X0) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X42),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X43),s('type.list.list'('type.closLang.exp'),X44))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((? [X7] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X7,X8] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9,X10,X11] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X9),s('type.closLang.exp',X10),s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X12,X10] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X12),s('type.closLang.exp',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9,X10] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X9),s('type.closLang.exp',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X13,X12] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X13),s('type.list.list'('type.closLang.exp'),X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X14,X9,X10] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X14),s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X15,X16,X17,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X15),s('type.option.option'('type.list.list'('type.num.num')),X16),s('type.num.num',X17),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X15,X16,X18,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X15),s('type.option.option'('type.list.list'('type.num.num')),X16),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X18),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X19,X12] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X19),s('type.list.list'('type.closLang.exp'),X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X20,X12,X21] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X21),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X20),s('type.list.list'('type.closLang.exp'),X12)))))))) => (? [X7] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X7,X21,X20,X12] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X21),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X20),s('type.list.list'('type.closLang.exp'),X12))))))) | ? [X7,X8] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9,X10,X11] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X9),s('type.closLang.exp',X10),s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X12,X10] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X12),s('type.closLang.exp',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X19,X12] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X19),s('type.list.list'('type.closLang.exp'),X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X14,X9,X10] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X14),s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X15,X16,X17,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X15),s('type.option.option'('type.list.list'('type.num.num')),X16),s('type.num.num',X17),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X15,X16,X18,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X15),s('type.option.option'('type.list.list'('type.num.num')),X16),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X18),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9,X10] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X9),s('type.closLang.exp',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X13,X12] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X13),s('type.list.list'('type.closLang.exp'),X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((? [X7] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X7,X8] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9,X10,X11] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X9),s('type.closLang.exp',X10),s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X12,X10] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X12),s('type.closLang.exp',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9,X10] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X9),s('type.closLang.exp',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X13,X12] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X13),s('type.list.list'('type.closLang.exp'),X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X14,X9,X10] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X14),s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X15,X16,X17,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X15),s('type.option.option'('type.list.list'('type.num.num')),X16),s('type.num.num',X17),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X15,X16,X18,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X15),s('type.option.option'('type.list.list'('type.num.num')),X16),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X18),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X19,X12] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X19),s('type.list.list'('type.closLang.exp'),X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X20,X12,X21] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X21),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X20),s('type.list.list'('type.closLang.exp'),X12)))))))) => (? [X7] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | ? [X7,X21,X20,X12] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X21),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X20),s('type.list.list'('type.closLang.exp'),X12))))))) | ? [X7,X8] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9,X10,X11] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X9),s('type.closLang.exp',X10),s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X12,X10] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X12),s('type.closLang.exp',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X19,X12] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X19),s('type.list.list'('type.closLang.exp'),X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X14,X9,X10] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X14),s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X15,X16,X17,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X15),s('type.option.option'('type.list.list'('type.num.num')),X16),s('type.num.num',X17),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X15,X16,X18,X9] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X15),s('type.option.option'('type.list.list'('type.num.num')),X16),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X18),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X9,X10] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X9),s('type.closLang.exp',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ? [X7,X13,X12] : s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),X6) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X13),s('type.list.list'('type.closLang.exp'),X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))))),
  file('thm.closProps.closProps_43_prove_ltb','thm.closProps.closProps_43_prove_ltb')).
fof(f4677,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f423,f236])).
fof(f236,plain,(
  ( ! [X2,X3,X1] : (s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X2),s('type.list.list'('type.closLang.exp'),X3))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4678,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f411,f226])).
fof(f226,plain,(
  ( ! [X35,X36] : (s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X35),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X36))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4833,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f427,f233])).
fof(f233,plain,(
  ( ! [X14,X12,X15,X13,X16] : (s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X12),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X13),s('type.option.option'('type.list.list'('type.num.num')),X14),s('type.num.num',X15),s('type.closLang.exp',X16))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4834,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f419,f235])).
fof(f235,plain,(
  ( ! [X6,X4,X5] : (s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X4),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X5),s('type.closLang.exp',X6))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4835,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f421,f230])).
fof(f230,plain,(
  ( ! [X24,X25] : (s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X24),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f5471,plain,(
  $false | $spl20),
  inference(subsumption_resolution,[],[f429,f234])).
fof(f234,plain,(
  ( ! [X10,X8,X7,X11,X9] : (s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X8),s('type.option.option'('type.list.list'('type.num.num')),X9),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X10),s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f5472,plain,(
  $false | $spl24),
  inference(subsumption_resolution,[],[f433,f225])).
fof(f225,plain,(
  ( ! [X39,X37,X38,X40] : (s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X37),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X38),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X39),s('type.list.list'('type.closLang.exp'),X40)))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f5473,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f409,f224])).
fof(f224,plain,(
  ( ! [X41] : (s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X41),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f5474,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f417,f229])).
fof(f229,plain,(
  ( ! [X26,X27] : (s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X26),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f5475,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f415,f228])).
fof(f228,plain,(
  ( ! [X30,X28,X29] : (s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X28),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X29),s('type.closLang.exp',X30))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f5476,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f425,f232])).
fof(f232,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X17),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X18),s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),X20))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f409,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK13),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) | $spl0),
  inference(cnf_transformation,[],[f409_D])).
fof(f409_D,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK13),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f411,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK14),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK15))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl2),
  inference(cnf_transformation,[],[f411_D])).
fof(f411_D,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK14),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK15))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f413,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK16),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',sK17),s('type.closLang.exp',sK18),s('type.closLang.exp',sK19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl4),
  inference(cnf_transformation,[],[f413_D])).
fof(f413_D,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK16),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',sK17),s('type.closLang.exp',sK18),s('type.closLang.exp',sK19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f415,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK20),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),sK21),s('type.closLang.exp',sK22))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl6),
  inference(cnf_transformation,[],[f415_D])).
fof(f415_D,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK20),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),sK21),s('type.closLang.exp',sK22))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f417,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK23),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',sK24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl8),
  inference(cnf_transformation,[],[f417_D])).
fof(f417_D,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK23),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',sK24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f419,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK25),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',sK26),s('type.closLang.exp',sK27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl10),
  inference(cnf_transformation,[],[f419_D])).
fof(f419_D,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK25),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',sK26),s('type.closLang.exp',sK27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f421,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK28),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',sK29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl12),
  inference(cnf_transformation,[],[f421_D])).
fof(f421_D,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK28),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',sK29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f423,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK30),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK31),s('type.list.list'('type.closLang.exp'),sK32))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl14),
  inference(cnf_transformation,[],[f423_D])).
fof(f423_D,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK30),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK31),s('type.list.list'('type.closLang.exp'),sK32))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f425,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK33),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),sK34),s('type.closLang.exp',sK35),s('type.list.list'('type.closLang.exp'),sK36))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl16),
  inference(cnf_transformation,[],[f425_D])).
fof(f425_D,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK33),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),sK34),s('type.closLang.exp',sK35),s('type.list.list'('type.closLang.exp'),sK36))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f427,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK37),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK38),s('type.option.option'('type.list.list'('type.num.num')),sK39),s('type.num.num',sK40),s('type.closLang.exp',sK41))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl18),
  inference(cnf_transformation,[],[f427_D])).
fof(f427_D,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK37),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK38),s('type.option.option'('type.list.list'('type.num.num')),sK39),s('type.num.num',sK40),s('type.closLang.exp',sK41))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f429,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK42),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),sK43),s('type.option.option'('type.list.list'('type.num.num')),sK44),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK45),s('type.closLang.exp',sK46))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl20),
  inference(cnf_transformation,[],[f429_D])).
fof(f429_D,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK42),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),sK43),s('type.option.option'('type.list.list'('type.num.num')),sK44),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK45),s('type.closLang.exp',sK46))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f431,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK47),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK48),s('type.list.list'('type.closLang.exp'),sK49))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl22),
  inference(cnf_transformation,[],[f431_D])).
fof(f431_D,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK47),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK48),s('type.list.list'('type.closLang.exp'),sK49))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f433,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK50),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK53),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK51),s('type.list.list'('type.closLang.exp'),sK52))))))) | $spl24),
  inference(cnf_transformation,[],[f433_D])).
fof(f433_D,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK50),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK53),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK51),s('type.list.list'('type.closLang.exp'),sK52))))))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f223,plain,(
  s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK50),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK53),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK51),s('type.list.list'('type.closLang.exp'),sK52))))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK47),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK48),s('type.list.list'('type.closLang.exp'),sK49))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK42),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),sK43),s('type.option.option'('type.list.list'('type.num.num')),sK44),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK45),s('type.closLang.exp',sK46))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK37),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK38),s('type.option.option'('type.list.list'('type.num.num')),sK39),s('type.num.num',sK40),s('type.closLang.exp',sK41))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK33),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),sK34),s('type.closLang.exp',sK35),s('type.list.list'('type.closLang.exp'),sK36))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK30),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK31),s('type.list.list'('type.closLang.exp'),sK32))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK28),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',sK29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK25),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',sK26),s('type.closLang.exp',sK27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK23),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',sK24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK20),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),sK21),s('type.closLang.exp',sK22))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK16),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',sK17),s('type.closLang.exp',sK18),s('type.closLang.exp',sK19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK14),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK15))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',sK13),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f138])).
fof(f5478,plain,(
  $false | $spl22),
  inference(subsumption_resolution,[],[f431,f231])).
fof(f231,plain,(
  ( ! [X23,X21,X22] : (s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),sK12) != s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.pair.,_2'(s('type.num.num',X21),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f138])).
% SZS output end Proof for thm.closProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 428
% Passive clauses: 1855
% Generated clauses: 5249
% Final active clauses: 428
% Final passive clauses: 1213
% Input formulas: 37
% Initial clauses: 181
% 
% Duplicate literals: 159
% Trivial inequalities: 29
% Fw subsumption resolutions: 354
% 
% Simple tautologies: 147
% Equational tautologies: 42
% Forward subsumptions: 2609
% 
% Binary resolution: 3332
% Factoring: 850
% Forward superposition: 194
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 119
% Split components: 250
% SAT solver clauses: 278
% SAT solver unit clauses: 19
% SAT solver binary clauses: 45
% SAT solver learnt clauses: 1
% 
% Sat splits: 119
% Sat splitting refutations: 13
% 
% TWLsolver clauses: 277
% TWLsolver calls for satisfiability: 225
% 
% Memory used [KB]: 2942
% Time elapsed: 0.142 s
% ------------------------------
% ------------------------------
% Success in time 0.16 s
