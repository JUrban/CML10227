Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.RedBlackSet
% (15364)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 350
% Passive clauses: 3151
% Generated clauses: 19035
% Final active clauses: 129
% Final passive clauses: 1989
% Input formulas: 56
% Initial clauses: 71
% 
% Duplicate literals: 385
% Trivial inequalities: 123
% Fw subsumption resolutions: 676
% Fw demodulations: 3455
% Bw demodulations: 145
% 
% Simple tautologies: 106
% Equational tautologies: 31
% Forward subsumptions: 11319
% Fw demodulations to eq. taut.: 8
% Bw demodulations to eq. taut.: 13
% 
% Binary resolution: 34
% Forward superposition: 7331
% Backward superposition: 6498
% Self superposition: 105
% Equality factoring: 46
% Equality resolution: 13
% 
% Split clauses: 92
% Split components: 184
% SAT solver clauses: 176
% SAT solver unit clauses: 2
% SAT solver binary clauses: 44
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 92
% Sat splitting refutations: 15
% 
% TWLsolver clauses: 175
% TWLsolver calls for satisfiability: 49
% 
% Memory used [KB]: 10362
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.RedBlackSet
% (15408)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 291
% Passive clauses: 1558
% Generated clauses: 26582
% Final active clauses: 177
% Final passive clauses: 777
% Input formulas: 56
% Initial clauses: 71
% 
% Duplicate literals: 277
% Trivial inequalities: 284
% Fw subsumption resolutions: 1023
% Fw demodulations: 5384
% Bw demodulations: 554
% Condensations: 281
% Global subsumptions: 12
% 
% Simple tautologies: 53
% Equational tautologies: 28
% Forward subsumptions: 13630
% Fw demodulations to eq. taut.: 64
% Bw demodulations to eq. taut.: 10
% 
% Binary resolution: 15
% Forward superposition: 8552
% Backward superposition: 7251
% Self superposition: 109
% Equality factoring: 40
% Equality resolution: 26
% 
% Split clauses: 20
% Split components: 40
% SAT solver clauses: 3031
% SAT solver unit clauses: 148
% SAT solver binary clauses: 43
% SAT solver learnt clauses: 24
% 
% Sat splits: 20
% Sat splitting refutations: 215
% 
% TWLsolver clauses: 2983
% TWLsolver calls for satisfiability: 398
% 
% Memory used [KB]: 18293
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.RedBlackSet
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.RedBlackSet
% SZS output start Proof for thm.RedBlackSet
fof(f9646,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f348,f353,f351,f576,f591,f583,f593,f597,f895,f897,f905,f903,f908,f2432,f2434,f2442,f2440,f5684,f5686,f5698,f5696,f7360,f7267,f7364,f7380,f7383,f7362,f7382,f7531,f7438,f7535,f7551,f7554,f7533,f7553,f7619,f7702,f7700,f7620,f7706,f7704,f7789,f7890,f7888,f7790,f7894,f7892,f9608,f9309])).
fof(f9309,plain,(
  $false | ($spl11 | $spl12)),
  inference(unit_resulting_resolution,[],[f134,f7183])).
fof(f7183,plain,(
  ( ! [X2,X0,X1] : (s(X2,X0) = s(X2,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'),s(X2,X1),s(X2,X0)))) ) | ($spl11 | $spl12)),
  inference(forward_demodulation,[],[f7164,f180])).
fof(f180,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f91])).
fof(f91,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X11,X12] : s(X6,X12) = s(X6,'const.bool.COND_3'(s(bool,'F_0'),s(X6,X11),s(X6,X12)))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.bool.COND_CLAUSES|split|1')).
fof(f7164,plain,(
  ( ! [X2,X0,X1] : (s(X2,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'),s(X2,X1),s(X2,X0))) = s(X2,'const.bool.COND_3'(s(bool,'F_0'),s(X2,X1),s(X2,X0)))) ) | ($spl11 | $spl12)),
  inference(superposition,[],[f185,f7108])).
fof(f7108,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,sK3(X0,X1,'const.RedBlackSet.Black_0',X2))) ) | ($spl11 | $spl12)),
  inference(forward_demodulation,[],[f7061,f905])).
fof(f7061,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,sK3(X0,X1,'const.RedBlackSet.Black_0',X2))) ) | $spl11),
  inference(unit_resulting_resolution,[],[f806,f3129,f6536])).
fof(f6536,plain,(
  ( ! [X8,X7] : (p(s(bool,X7)) | s(bool,X7) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f135,f337])).
fof(f337,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f163,f163])).
fof(f163,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.RedBlackSet.color_case_def|split|1',aHL_BOOL_CASES)).
fof(f135,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.RedBlackSet.color_case_def|split|1',aHL_TRUTH)).
fof(f3129,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) | $spl11),
  inference(backward_demodulation,[],[f3111,f902])).
fof(f902,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl11),
  inference(cnf_transformation,[],[f902_D])).
fof(f902_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f3111,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.ZERO_0')),
  inference(forward_demodulation,[],[f3110,f634])).
fof(f634,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f618,f181])).
fof(f181,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f93])).
fof(f93,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : ! [X11,X12] : s(X6,X11) = s(X6,'const.bool.COND_3'(s(bool,'T_0'),s(X6,X11),s(X6,X12)))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.bool.COND_CLAUSES|split|0')).
fof(f618,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f181,f173])).
fof(f173,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X13] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X13))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.numeral.numeral_distrib|split|18')).
fof(f3110,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f3109,f2908])).
fof(f2908,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f2891,f172])).
fof(f172,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f121])).
fof(f2891,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f2798,f148])).
fof(f148,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X13] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X13)))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.arithmetic.MULT|split|0')).
fof(f2798,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f191,f634])).
fof(f191,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X13,X14] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X14))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.numeral.numeral_distrib|split|5')).
fof(f3109,plain,(
  ( ! [X55] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X55)))))) )),
  inference(subsumption_resolution,[],[f2982,f3035])).
fof(f3035,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))),
  inference(forward_demodulation,[],[f2916,f149])).
fof(f149,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X13] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.num.|48|_0')))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.numeral.numeral_distrib|split|4')).
fof(f2916,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f2891,f138])).
fof(f138,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Red_0')))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Red_0')))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.RedBlackSet.color2num_thm|split|0')).
fof(f2982,plain,(
  ( ! [X55] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X55)))))) )),
  inference(superposition,[],[f172,f2891])).
fof(f806,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,sK3(X0,X1,'const.RedBlackSet.Black_0',X2)))) )),
  inference(unit_resulting_resolution,[],[f600,f183])).
fof(f183,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,sK3(X3,X2,X1,X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1)))) )),
  inference(cnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,sK3(X3,X2,X1,X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1)))) & (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1))) | p(s(bool,sK3(X3,X2,X1,X0)))) & s(X0,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color',X1),s(X0,X2),s(X0,X3))) = s(X0,'const.bool.COND_3'(s(bool,sK3(X3,X2,X1,X0)),s(X0,X2),s(X0,X3))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3])],[f126])).
fof(f126,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((~p(s(bool,X4)) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1)))) & (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1))) | p(s(bool,X4))) & s(X0,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color',X1),s(X0,X2),s(X0,X3))) = s(X0,'const.bool.COND_3'(s(bool,X4),s(X0,X2),s(X0,X3))))),
  inference(flattening,[],[f125])).
fof(f125,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : (((~p(s(bool,X4)) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1)))) & (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1))) | p(s(bool,X4)))) & s(X0,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color',X1),s(X0,X2),s(X0,X3))) = s(X0,'const.bool.COND_3'(s(bool,X4),s(X0,X2),s(X0,X3))))),
  inference(nnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((p(s(bool,X4)) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1)))) & s(X0,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color',X1),s(X0,X2),s(X0,X3))) = s(X0,'const.bool.COND_3'(s(bool,X4),s(X0,X2),s(X0,X3))))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ! [X0] : ! [X1,X2,X3] : ? [X4] : ((p(s(bool,X4)) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X1)))) & s(X0,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color',X1),s(X0,X2),s(X0,X3))) = s(X0,'const.bool.COND_3'(s(bool,X4),s(X0,X2),s(X0,X3))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X9,X7,X8] : ? [X10] : ((p(s(bool,X10)) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color',X9)))) & s(X6,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color',X9),s(X6,X7),s(X6,X8))) = s(X6,'const.bool.COND_3'(s(bool,X10),s(X6,X7),s(X6,X8))))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.RedBlackSet.color_CASE')).
fof(f600,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0')))),
  inference(subsumption_resolution,[],[f588,f209])).
fof(f209,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f168,f141])).
fof(f141,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.RedBlackSet.color_case_def|split|1',aHL_FALSITY)).
fof(f168,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13))) <=> p(s(bool,'F_0')))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.numeral.numeral_eq|split|1')).
fof(f588,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f172,f139])).
fof(f139,plain,(
  s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.RedBlackSet.color2num_thm|split|1')).
fof(f185,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color',X1),s(X0,X2),s(X0,X3))) = s(X0,'const.bool.COND_3'(s(bool,sK3(X3,X2,X1,X0)),s(X0,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f127])).
fof(f134,plain,(
  s(sK0,sK2) != s(sK0,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'),s(sK0,sK1),s(sK0,sK2)))),
  inference(cnf_transformation,[],[f116])).
fof(f116,plain,(
  s(sK0,sK2) != s(sK0,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'),s(sK0,sK1),s(sK0,sK2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f114])).
fof(f114,plain,(
  ? [X0,X1,X2] : s(X0,X2) != s(X0,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'),s(X0,X1),s(X0,X2)))),
  inference(ennf_transformation,[],[f59])).
fof(f59,plain,(
  ~! [X0,X1,X2] : s(X0,X2) = s(X0,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f58])).
fof(f58,plain,(
  ~! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s(X6,X8) = s(X6,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'),s(X6,X7),s(X6,X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s(X6,X8) = s(X6,'const.RedBlackSet.color_CASE_3'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'),s(X6,X7),s(X6,X8)))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.RedBlackSet.color_case_def|split|1')).
fof(f9608,plain,(
  $false | ($spl11 | $spl12)),
  inference(trivial_inequality_removal,[],[f9607])).
fof(f9607,plain,(
  s(sK0,sK2) != s(sK0,sK2) | ($spl11 | $spl12)),
  inference(superposition,[],[f134,f7183])).
fof(f7892,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl46),
  inference(cnf_transformation,[],[f7892_D])).
fof(f7892_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f7894,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) | $spl48),
  inference(cnf_transformation,[],[f7894_D])).
fof(f7894_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f7790,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f410,f3133])).
fof(f3133,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(backward_demodulation,[],[f3111,f1091])).
fof(f1091,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f159,f139])).
fof(f159,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X13] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X13))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.numeral.numeral_distrib|split|16')).
fof(f410,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f154,f163])).
fof(f154,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X13] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X13))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.numeral.numeral_distrib|split|32')).
fof(f7888,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl42),
  inference(cnf_transformation,[],[f7888_D])).
fof(f7888_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f7890,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) | $spl44),
  inference(cnf_transformation,[],[f7890_D])).
fof(f7890_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f7789,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f410,f3131])).
fof(f3131,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(backward_demodulation,[],[f3111,f995])).
fof(f995,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f158,f139])).
fof(f158,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X13] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.numeral.numeral_distrib|split|14')).
fof(f7704,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl38),
  inference(cnf_transformation,[],[f7704_D])).
fof(f7704_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f7706,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) | $spl40),
  inference(cnf_transformation,[],[f7706_D])).
fof(f7706_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f7620,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f385,f3133])).
fof(f385,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f153,f163])).
fof(f153,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X13] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X13))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.numeral.numeral_distrib|split|33')).
fof(f7700,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl34),
  inference(cnf_transformation,[],[f7700_D])).
fof(f7700_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f7702,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) | $spl36),
  inference(cnf_transformation,[],[f7702_D])).
fof(f7702_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f7619,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f385,f3131])).
fof(f7553,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl32),
  inference(cnf_transformation,[],[f7553_D])).
fof(f7553_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f7533,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | $spl29),
  inference(cnf_transformation,[],[f7533_D])).
fof(f7533_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f7554,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(forward_demodulation,[],[f7509,f3237])).
fof(f3237,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0')))))))),
  inference(forward_demodulation,[],[f3148,f206])).
fof(f206,plain,(
  s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),
  inference(forward_demodulation,[],[f140,f139])).
fof(f140,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f26])).
fof(f26,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.numeral.numeral_distrib|split|13')).
fof(f3148,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(backward_demodulation,[],[f3111,f1614])).
fof(f1614,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f159,f1027])).
fof(f1027,plain,(
  s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f996,f206])).
fof(f996,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f158,f634])).
fof(f7509,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f3116,f3133])).
fof(f3116,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(backward_demodulation,[],[f3111,f172])).
fof(f7551,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0')))))),
  inference(forward_demodulation,[],[f7550,f137])).
fof(f137,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f28])).
fof(f28,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.prim_rec.PRE|split|0')).
fof(f7550,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(forward_demodulation,[],[f7505,f3237])).
fof(f7505,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f3046,f3133])).
fof(f3046,plain,(
  ( ! [X25] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(backward_demodulation,[],[f3035,f1553])).
fof(f1553,plain,(
  ( ! [X25] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f200,f137])).
fof(f200,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f131])).
fof(f131,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X13,X14] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) <=> s('type.num.num',X13) = s('type.num.num',X14))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.numeral.numeral_distrib|split|19')).
fof(f7535,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl30),
  inference(cnf_transformation,[],[f7535_D])).
fof(f7535_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f7438,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f3116,f3133])).
fof(f7531,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0')))))),
  inference(forward_demodulation,[],[f7434,f137])).
fof(f7434,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f3046,f3133])).
fof(f7382,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl26),
  inference(cnf_transformation,[],[f7382_D])).
fof(f7382_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f7362,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | $spl23),
  inference(cnf_transformation,[],[f7362_D])).
fof(f7362_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f7383,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(forward_demodulation,[],[f7338,f3236])).
fof(f3236,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0')))))))),
  inference(forward_demodulation,[],[f3147,f206])).
fof(f3147,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(backward_demodulation,[],[f3111,f1613])).
fof(f1613,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f158,f1027])).
fof(f7338,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f3116,f3131])).
fof(f7380,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0')))))),
  inference(forward_demodulation,[],[f7379,f137])).
fof(f7379,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(forward_demodulation,[],[f7334,f3236])).
fof(f7334,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f3046,f3131])).
fof(f7364,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl24),
  inference(cnf_transformation,[],[f7364_D])).
fof(f7364_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f7267,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f3116,f3131])).
fof(f7360,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0')))))),
  inference(forward_demodulation,[],[f7263,f137])).
fof(f7263,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f3046,f3131])).
fof(f5696,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl18),
  inference(cnf_transformation,[],[f5696_D])).
fof(f5696_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f5698,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | $spl20),
  inference(cnf_transformation,[],[f5698_D])).
fof(f5698_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f5686,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f163,f3120])).
fof(f3120,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(backward_demodulation,[],[f3111,f409])).
fof(f409,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f154,f139])).
fof(f5684,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f3120,f163])).
fof(f2440,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl14),
  inference(cnf_transformation,[],[f2440_D])).
fof(f2440_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f2442,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | $spl16),
  inference(cnf_transformation,[],[f2442_D])).
fof(f2442_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f2434,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f163,f384])).
fof(f384,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f153,f139])).
fof(f2432,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f384,f163])).
fof(f908,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f907,f135])).
fof(f907,plain,(
  ~p(s(bool,'T_0')) | $spl10),
  inference(backward_demodulation,[],[f906,f142])).
fof(f142,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f47])).
fof(f47,axiom,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.numeral.numeral_distrib|split|34')).
fof(f906,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) | $spl10),
  inference(backward_demodulation,[],[f903,f654])).
fof(f654,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f154,f634])).
fof(f903,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl10),
  inference(cnf_transformation,[],[f903_D])).
fof(f903_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f905,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) | $spl12),
  inference(cnf_transformation,[],[f905_D])).
fof(f905_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f897,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f163,f654])).
fof(f895,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f654,f163])).
fof(f597,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) ) | $spl8),
  inference(cnf_transformation,[],[f597_D])).
fof(f597_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f593,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | $spl7),
  inference(cnf_transformation,[],[f593_D])).
fof(f593_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f583,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f172,f207])).
fof(f207,plain,(
  ( ! [X0] : (s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f157,f139])).
fof(f157,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X13] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.num.|48|_0')))),
  file('thm.RedBlackSet.color_case_def|split|1','thm.numeral.numeral_distrib|split|11')).
fof(f591,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl4),
  inference(cnf_transformation,[],[f591_D])).
fof(f591_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f576,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.RedBlackSet.color2num_1'(s('type.RedBlackSet.color','const.RedBlackSet.Black_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f172,f139])).
fof(f351,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f351_D])).
fof(f351_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f353,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f353_D])).
fof(f353_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f348,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f163])).
% SZS output end Proof for thm.RedBlackSet
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 190
% Passive clauses: 835
% Generated clauses: 9449
% Final active clauses: 131
% Final passive clauses: 515
% Input formulas: 56
% Initial clauses: 71
% 
% Duplicate literals: 122
% Trivial inequalities: 52
% Fw subsumption resolutions: 88
% Fw demodulations: 1330
% Bw demodulations: 186
% Condensations: 166
% 
% Simple tautologies: 23
% Equational tautologies: 36
% Forward subsumptions: 6494
% Fw demodulations to eq. taut.: 279
% Bw demodulations to eq. taut.: 1
% 
% Unit resulting resolution: 714
% Forward superposition: 3685
% Backward superposition: 2913
% Self superposition: 68
% Equality factoring: 28
% Equality resolution: 11
% 
% Split clauses: 21
% Split components: 42
% SAT solver clauses: 882
% SAT solver unit clauses: 411
% SAT solver binary clauses: 335
% 
% Sat splits: 21
% Sat splitting refutations: 3
% 
% Memory used [KB]: 6908
% Time elapsed: 0.266 s
% ------------------------------
% ------------------------------
% Success in time 1.6 s
