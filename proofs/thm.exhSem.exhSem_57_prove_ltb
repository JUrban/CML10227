Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.exhSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.exhSem
% SZS output start Proof for thm.exhSem
fof(f4653,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4652,f223,f421,f419,f417,f415,f413,f411,f409,f407,f405,f4650,f4649,f4648,f4647,f4646,f4262,f3978,f4651])).
fof(f4651,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f419,f231])).
fof(f231,plain,(
  ( ! [X2] : (s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  (s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK13))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK15),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK16),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK17),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK18),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK19),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK20),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK21),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK22),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK23),s('type.list.list'('type.exhSem.v'),sK24))))))))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK25),s('type.list.list'('type.string.char'),sK26),s('type.exhLang.exp',sK27))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),sK29),s('type.list.list'('type.string.char'),sK30))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',sK31))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),sK32)))) & ! [X20] : s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X20),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) & ! [X17,X18,X19] : s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X17),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X19),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) & ! [X16] : s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X16))) & ! [X14,X15] : s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X14),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X15),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) & ! [X9,X10,X11,X12,X13] : s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X9),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X11),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X12),s('type.list.list'('type.exhSem.v'),X13))))))))) & ! [X6,X7,X8] : s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X6),s('type.list.list'('type.string.char'),X7),s('type.exhLang.exp',X8))) & ! [X3,X4,X5] : s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),X4),s('type.list.list'('type.string.char'),X5))) & ! [X2] : s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X2))) & ! [X1] : s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32])],[f137])).
fof(f137,plain,(
  ? [X0] : ((? [X40] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40))) | ? [X39] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X39),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ? [X37,X38] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X37),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X38),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) | ? [X34,X35,X36] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X34),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X35),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X36),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) | ? [X29,X30,X31,X32,X33] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X29),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X30),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X31),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X32),s('type.list.list'('type.exhSem.v'),X33))))))))) | ? [X26,X27,X28] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X26),s('type.list.list'('type.string.char'),X27),s('type.exhLang.exp',X28))) | ? [X23,X24,X25] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X23),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),X24),s('type.list.list'('type.string.char'),X25))) | ? [X22] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X22))) | ? [X21] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X21)))) & ! [X20] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X20),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) & ! [X17,X18,X19] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X17),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X19),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) & ! [X16] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X16))) & ! [X14,X15] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X14),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X15),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) & ! [X9,X10,X11,X12,X13] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X9),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X11),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X12),s('type.list.list'('type.exhSem.v'),X13))))))))) & ! [X6,X7,X8] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X6),s('type.list.list'('type.string.char'),X7),s('type.exhLang.exp',X8))) & ! [X3,X4,X5] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),X4),s('type.list.list'('type.string.char'),X5))) & ! [X2] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X2))) & ! [X1] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X1))))),
  inference(rectify,[],[f97])).
fof(f97,plain,(
  ? [X0] : ((? [X20] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X20))) | ? [X19] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X19),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ? [X17,X18] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X17),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) | ? [X14,X15,X16] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X14),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X15),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X16),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) | ? [X9,X10,X11,X12,X13] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X9),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X11),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X12),s('type.list.list'('type.exhSem.v'),X13))))))))) | ? [X6,X7,X8] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X6),s('type.list.list'('type.string.char'),X7),s('type.exhLang.exp',X8))) | ? [X3,X4,X5] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),X4),s('type.list.list'('type.string.char'),X5))) | ? [X2] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X2))) | ? [X1] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X1)))) & ! [X40] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X40),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) & ! [X37,X38,X39] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X37),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X38),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X39),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) & ! [X36] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X36))) & ! [X34,X35] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X34),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X35),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) & ! [X29,X30,X31,X32,X33] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X29),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X30),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X31),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X32),s('type.list.list'('type.exhSem.v'),X33))))))))) & ! [X26,X27,X28] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X26),s('type.list.list'('type.string.char'),X27),s('type.exhLang.exp',X28))) & ! [X23,X24,X25] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X23),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),X24),s('type.list.list'('type.string.char'),X25))) & ! [X22] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X22))) & ! [X21] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X21))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ? [X0] : ((? [X20] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X20))) | ? [X19] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X19),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ? [X17,X18] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X17),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) | ? [X14,X15,X16] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X14),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X15),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X16),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) | ? [X9,X10,X11,X12,X13] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X9),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X11),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X12),s('type.list.list'('type.exhSem.v'),X13))))))))) | ? [X6,X7,X8] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X6),s('type.list.list'('type.string.char'),X7),s('type.exhLang.exp',X8))) | ? [X3,X4,X5] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),X4),s('type.list.list'('type.string.char'),X5))) | ? [X2] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X2))) | ? [X1] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X1)))) & (! [X40] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X40),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) & ! [X37,X38,X39] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X37),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X38),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X39),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) & ! [X36] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X36))) & ! [X34,X35] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X34),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X35),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) & ! [X29,X30,X31,X32,X33] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X29),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X30),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X31),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X32),s('type.list.list'('type.exhSem.v'),X33))))))))) & ! [X26,X27,X28] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X26),s('type.list.list'('type.string.char'),X27),s('type.exhLang.exp',X28))) & ! [X23,X24,X25] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X23),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),X24),s('type.list.list'('type.string.char'),X25))) & ! [X22] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X22))) & ! [X21] : s('type.exhSem.v',X0) != s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X21)))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ((? [X20] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X20))) | ? [X19] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X19),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ? [X17,X18] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X17),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) | ? [X14,X15,X16] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X14),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X15),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X16),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) | ? [X9,X10,X11,X12,X13] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X9),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X11),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X12),s('type.list.list'('type.exhSem.v'),X13))))))))) | ? [X6,X7,X8] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X6),s('type.list.list'('type.string.char'),X7),s('type.exhLang.exp',X8))) | ? [X3,X4,X5] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),X4),s('type.list.list'('type.string.char'),X5))) | ? [X2] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X2))) | ? [X1] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X1)))) => (? [X40] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X40),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ? [X37,X38,X39] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X37),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X38),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X39),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) | ? [X36] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X36))) | ? [X34,X35] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X34),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X35),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) | ? [X29,X30,X31,X32,X33] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X29),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X30),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X31),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X32),s('type.list.list'('type.exhSem.v'),X33))))))))) | ? [X26,X27,X28] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X26),s('type.list.list'('type.string.char'),X27),s('type.exhLang.exp',X28))) | ? [X23,X24,X25] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X23),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),X24),s('type.list.list'('type.string.char'),X25))) | ? [X22] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X22))) | ? [X21] : s('type.exhSem.v',X0) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X21)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((? [X7] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))) | ? [X8] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ? [X9,X10] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X9),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) | ? [X8,X11,X12] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X11),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X12),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) | ? [X9,X10,X13,X14,X15] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X9),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),X15))))))))) | ? [X16,X17,X18] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X16),s('type.list.list'('type.string.char'),X17),s('type.exhLang.exp',X18))) | ? [X19,X20,X21] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X19),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),X20),s('type.list.list'('type.string.char'),X21))) | ? [X22] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X22))) | ? [X23] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X23)))) => (? [X8] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ? [X8,X11,X12] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X11),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X12),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) | ? [X7] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))) | ? [X9,X10] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X9),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) | ? [X9,X10,X13,X14,X15] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X9),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),X15))))))))) | ? [X16,X17,X18] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X16),s('type.list.list'('type.string.char'),X17),s('type.exhLang.exp',X18))) | ? [X19,X20,X21] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X19),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),X20),s('type.list.list'('type.string.char'),X21))) | ? [X22] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X22))) | ? [X23] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X23)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((? [X7] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))) | ? [X8] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ? [X9,X10] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X9),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) | ? [X8,X11,X12] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X11),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X12),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) | ? [X9,X10,X13,X14,X15] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X9),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),X15))))))))) | ? [X16,X17,X18] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X16),s('type.list.list'('type.string.char'),X17),s('type.exhLang.exp',X18))) | ? [X19,X20,X21] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X19),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),X20),s('type.list.list'('type.string.char'),X21))) | ? [X22] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X22))) | ? [X23] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X23)))) => (? [X8] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ? [X8,X11,X12] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X11),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X12),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) | ? [X7] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))) | ? [X9,X10] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X9),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) | ? [X9,X10,X13,X14,X15] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X9),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),X15))))))))) | ? [X16,X17,X18] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X16),s('type.list.list'('type.string.char'),X17),s('type.exhLang.exp',X18))) | ? [X19,X20,X21] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X19),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),X20),s('type.list.list'('type.string.char'),X21))) | ? [X22] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X22))) | ? [X23] : s('type.exhSem.v',X6) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X23)))))),
  file('thm.exhSem.exhSem_57_prove_ltb','thm.exhSem.exhSem_57_prove_ltb')).
fof(f3978,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f415,f229])).
fof(f229,plain,(
  ( ! [X6,X8,X7] : (s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X6),s('type.list.list'('type.string.char'),X7),s('type.exhLang.exp',X8)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4262,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f411,f225])).
fof(f225,plain,(
  ( ! [X19,X17,X18] : (s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X17),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X19),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4646,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f413,f228])).
fof(f228,plain,(
  ( ! [X12,X10,X13,X11,X9] : (s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X9),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X11),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X12),s('type.list.list'('type.exhSem.v'),X13)))))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4647,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f421,f232])).
fof(f232,plain,(
  ( ! [X1] : (s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X1)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4648,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f407,f224])).
fof(f224,plain,(
  ( ! [X20] : (s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X20),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4649,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f409,f227])).
fof(f227,plain,(
  ( ! [X14,X15] : (s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',X14),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X15),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4650,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f405,f226])).
fof(f226,plain,(
  ( ! [X16] : (s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X16)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f405,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK13))) | $spl0),
  inference(cnf_transformation,[],[f405_D])).
fof(f405_D,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK13))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f407,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | $spl2),
  inference(cnf_transformation,[],[f407_D])).
fof(f407_D,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f409,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK15),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK16),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) | $spl4),
  inference(cnf_transformation,[],[f409_D])).
fof(f409_D,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK15),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK16),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f411,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK17),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK18),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK19),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) | $spl6),
  inference(cnf_transformation,[],[f411_D])).
fof(f411_D,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK17),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK18),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK19),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f413,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK20),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK21),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK22),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK23),s('type.list.list'('type.exhSem.v'),sK24))))))))) | $spl8),
  inference(cnf_transformation,[],[f413_D])).
fof(f413_D,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK20),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK21),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK22),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK23),s('type.list.list'('type.exhSem.v'),sK24))))))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f415,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK25),s('type.list.list'('type.string.char'),sK26),s('type.exhLang.exp',sK27))) | $spl10),
  inference(cnf_transformation,[],[f415_D])).
fof(f415_D,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK25),s('type.list.list'('type.string.char'),sK26),s('type.exhLang.exp',sK27))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f417,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),sK29),s('type.list.list'('type.string.char'),sK30))) | $spl12),
  inference(cnf_transformation,[],[f417_D])).
fof(f417_D,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),sK29),s('type.list.list'('type.string.char'),sK30))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f419,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',sK31))) | $spl14),
  inference(cnf_transformation,[],[f419_D])).
fof(f419_D,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',sK31))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f421,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),sK32))) | $spl16),
  inference(cnf_transformation,[],[f421_D])).
fof(f421_D,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),sK32))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f223,plain,(
  s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),sK32))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',sK31))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),sK29),s('type.list.list'('type.string.char'),sK30))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK25),s('type.list.list'('type.string.char'),sK26),s('type.exhLang.exp',sK27))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK20),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK21),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK22),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK23),s('type.list.list'('type.exhSem.v'),sK24))))))))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK17),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK18),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK19),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK15),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK16),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num',sK14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.exhSem.v',sK12) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK13)))),
  inference(cnf_transformation,[],[f138])).
fof(f4652,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f417,f230])).
fof(f230,plain,(
  ( ! [X4,X5,X3] : (s('type.exhSem.v',sK12) != s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),X4),s('type.list.list'('type.string.char'),X5)))) )),
  inference(cnf_transformation,[],[f138])).
% SZS output end Proof for thm.exhSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 373
% Passive clauses: 1462
% Generated clauses: 4423
% Final active clauses: 373
% Final passive clauses: 908
% Input formulas: 37
% Initial clauses: 177
% 
% Duplicate literals: 153
% Trivial inequalities: 25
% Fw subsumption resolutions: 299
% 
% Simple tautologies: 145
% Equational tautologies: 30
% Forward subsumptions: 2305
% 
% Binary resolution: 2713
% Factoring: 771
% Forward superposition: 154
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 14
% 
% Split clauses: 100
% Split components: 208
% SAT solver clauses: 195
% SAT solver unit clauses: 15
% SAT solver binary clauses: 41
% SAT solver learnt clauses: 1
% 
% Sat splits: 100
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 194
% TWLsolver calls for satisfiability: 166
% 
% Memory used [KB]: 2302
% Time elapsed: 0.164 s
% ------------------------------
% ------------------------------
% Success in time 0.151 s
