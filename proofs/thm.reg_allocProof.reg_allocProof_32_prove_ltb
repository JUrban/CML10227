Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.reg_allocProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.reg_allocProof
% SZS output start Proof for thm.reg_allocProof
fof(f13540,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f13511,f57,f86,f56,f90,f123,f125,f124,f148])).
fof(f148,plain,(
  $false | ($spl1 | $spl6 | $spl12)),
  inference(subsumption_resolution,[],[f129,f90])).
fof(f129,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl12)),
  inference(backward_demodulation,[],[f124,f86])).
fof(f124,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f124_D])).
fof(f124_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f125,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) | $spl14),
  inference(cnf_transformation,[],[f125_D])).
fof(f125_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f123,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl1),
  inference(subsumption_resolution,[],[f119,f93])).
fof(f93,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl1),
  inference(superposition,[],[f86,f58])).
fof(f58,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.reg_allocProof.reg_allocProof_32_prove_ltb',aHL_BOOL_CASES)).
fof(f119,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f79,f58])).
fof(f79,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X11,X12] : ((p(s(bool,X11)) => p(s(bool,X12))) => ((p(s(bool,X12)) => p(s(bool,X11))) => s(bool,X11) = s(bool,X12)))),
  file('thm.reg_allocProof.reg_allocProof_32_prove_ltb','thm.bool.IMP_ANTISYM_AX')).
fof(f90,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f90_D])).
fof(f90_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f56,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.reg_allocProof.reg_allocProof_32_prove_ltb',aHL_TRUTH)).
fof(f86,plain,(
  ~p(s(bool,'F_0')) | $spl1),
  inference(cnf_transformation,[],[f86_D])).
fof(f86_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f57,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.reg_allocProof.reg_allocProof_32_prove_ltb',aHL_FALSITY)).
fof(f13511,plain,(
  $false | ($spl1 | $spl6 | $spl14)),
  inference(subsumption_resolution,[],[f13510,f86])).
fof(f13510,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl6 | $spl14)),
  inference(forward_demodulation,[],[f13509,f168])).
fof(f168,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(sK0,sK1),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK4))))) | $spl14),
  inference(resolution,[],[f55,f125])).
fof(f55,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(sK0,sK1),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK4))))))),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK1),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) & s('type.list.list'(sK0),sK3) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK4))) & s(sK0,sK1) != s(sK0,sK2) & ~p(s(bool,'const.bool.IN_2'(s(sK0,sK1),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK4))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f33])).
fof(f33,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X4))) & s(X0,X1) != s(X0,X2) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X4)))))))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ? [X0,X1,X2,X3,X4] : ((p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X4))) & s(X0,X1) != s(X0,X2)) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X4)))))))),
  inference(ennf_transformation,[],[f17])).
fof(f17,plain,(
  ~! [X0,X1,X2,X3,X4] : ((p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X4))) & s(X0,X1) != s(X0,X2)) => p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X4)))))))),
  inference(flattening,[],[f16])).
fof(f16,plain,(
  ~! [X0] : ! [X1,X2,X3,X4] : ((p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X3) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X4))) & ~s(X0,X1) = s(X0,X2)) => p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X4)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10] : ((p(s(bool,'const.bool.IN_2'(s(X6,X7),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X9) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X10))) & ~s(X6,X7) = s(X6,X8)) => p(s(bool,'const.bool.IN_2'(s(X6,X7),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X10)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10] : ((p(s(bool,'const.bool.IN_2'(s(X6,X7),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X9) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X10))) & ~s(X6,X7) = s(X6,X8)) => p(s(bool,'const.bool.IN_2'(s(X6,X7),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X10)))))))),
  file('thm.reg_allocProof.reg_allocProof_32_prove_ltb','thm.reg_allocProof.reg_allocProof_32_prove_ltb')).
fof(f13509,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK1),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK4)))))) | ($spl1 | $spl6)),
  inference(subsumption_resolution,[],[f13508,f54])).
fof(f54,plain,(
  s(sK0,sK1) != s(sK0,sK2)),
  inference(cnf_transformation,[],[f38])).
fof(f13508,plain,(
  s(sK0,sK1) = s(sK0,sK2) | p(s(bool,'const.bool.IN_2'(s(sK0,sK1),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK4)))))) | ($spl1 | $spl6)),
  inference(subsumption_resolution,[],[f13475,f90])).
fof(f13475,plain,(
  ~p(s(bool,'T_0')) | s(sK0,sK1) = s(sK0,sK2) | p(s(bool,'const.bool.IN_2'(s(sK0,sK1),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK4)))))) | $spl1),
  inference(superposition,[],[f1078,f167])).
fof(f167,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK1),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3))))) | $spl1),
  inference(subsumption_resolution,[],[f166,f86])).
fof(f166,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK1),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))),
  inference(superposition,[],[f52,f58])).
fof(f52,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK1),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3))))))),
  inference(cnf_transformation,[],[f38])).
fof(f1078,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.IN_2'(s(sK0,X0),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) | s(sK0,sK2) = s(sK0,X0) | p(s(bool,'const.bool.IN_2'(s(sK0,X0),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK4))))))) )),
  inference(superposition,[],[f76,f53])).
fof(f53,plain,(
  s('type.list.list'(sK0),sK3) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK4)))),
  inference(cnf_transformation,[],[f38])).
fof(f76,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))))) | s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))))) | s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) & ((s(X0,X1) != s(X0,X2) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))))))))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))))) | (s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))))) & ((s(X0,X1) != s(X0,X2) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))))))))),
  inference(nnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))))) <=> (s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3)))))))) <=> (s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X7,X8,X13] : (p(s(bool,'const.bool.IN_2'(s(X6,X7),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X13)))))))) <=> (s(X6,X7) = s(X6,X8) | p(s(bool,'const.bool.IN_2'(s(X6,X7),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X13))))))))),
  file('thm.reg_allocProof.reg_allocProof_32_prove_ltb','thm.list.MEM|split|1')).
% SZS output end Proof for thm.reg_allocProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 99
% Passive clauses: 1642
% Generated clauses: 13178
% Final active clauses: 80
% Final passive clauses: 1354
% Input formulas: 14
% Initial clauses: 32
% 
% Duplicate literals: 679
% Trivial inequalities: 177
% Fw subsumption resolutions: 1737
% Fw demodulations: 1784
% Bw demodulations: 12
% 
% Simple tautologies: 226
% Equational tautologies: 43
% Forward subsumptions: 6094
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 204
% Factoring: 1
% Forward superposition: 4219
% Backward superposition: 3916
% Self superposition: 171
% Equality factoring: 105
% Equality resolution: 15
% 
% Split clauses: 450
% Split components: 921
% SAT solver clauses: 910
% SAT solver unit clauses: 7
% SAT solver binary clauses: 87
% SAT solver learnt clauses: 1
% 
% Sat splits: 450
% Sat splitting refutations: 14
% 
% TWLsolver clauses: 888
% TWLsolver calls for satisfiability: 90
% 
% Memory used [KB]: 6268
% Time elapsed: 0.216 s
% ------------------------------
% ------------------------------
% Success in time 0.22 s
