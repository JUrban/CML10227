Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.clos_removeProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_removeProof
% SZS output start Proof for thm.clos_removeProof
fof(f463,plain,(
  $false),
  inference(subsumption_resolution,[],[f462,f46])).
fof(f46,plain,(
  ( ! [X2,X0,X1] : (s(X0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2] : s(X0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0] : ! [X1,X2] : s(X0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X8,X7] : s(X6,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.list.list'(X6),X8))) = s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.TL_1'(s('type.list.list'(X6),X8)))))),
  file('thm.clos_removeProof.ELplus|49|','thm.list.EL|split|1')).
fof(f462,plain,(
  s(sK0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.list.list'(sK0),sK2))) != s(sK0,'const.list.EL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),'const.list.TL_1'(s('type.list.list'(sK0),sK2)))))),
  inference(forward_demodulation,[],[f36,f40])).
fof(f40,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X9] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.clos_removeProof.ELplus|49|','thm.arithmetic.ADD|49|')).
fof(f36,plain,(
  s(sK0,'const.list.EL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),'const.list.TL_1'(s('type.list.list'(sK0),sK2))))) != s(sK0,'const.list.EL_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(sK0),sK2)))),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  s(sK0,'const.list.EL_2'(s('type.num.num',sK1),s('type.list.list'(sK0),'const.list.TL_1'(s('type.list.list'(sK0),sK2))))) != s(sK0,'const.list.EL_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(sK0),sK2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f30])).
fof(f30,plain,(
  ? [X0,X1,X2] : s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X2))))) != s(X0,'const.list.EL_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X2)))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1,X2] : s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X2))))) = s(X0,'const.list.EL_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f14])).
fof(f14,plain,(
  ~! [X0] : ! [X1,X2] : s(X0,'const.list.EL_2'(s('type.num.num',X1),s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X2))))) = s(X0,'const.list.EL_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.TL_1'(s('type.list.list'(X6),X8))))) = s(X6,'const.list.EL_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X6),X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.TL_1'(s('type.list.list'(X6),X8))))) = s(X6,'const.list.EL_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X6),X8)))),
  file('thm.clos_removeProof.ELplus|49|','thm.clos_removeProof.ELplus|49|')).
% SZS output end Proof for thm.clos_removeProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 18
% Passive clauses: 93
% Generated clauses: 414
% Final active clauses: 16
% Final passive clauses: 64
% Input formulas: 12
% Initial clauses: 14
% 
% Duplicate literals: 62
% Trivial inequalities: 4
% Fw subsumption resolutions: 2
% Fw demodulations: 29
% 
% Simple tautologies: 18
% Equational tautologies: 16
% Forward subsumptions: 192
% 
% Binary resolution: 4
% Forward superposition: 115
% Backward superposition: 114
% Self superposition: 37
% Equality factoring: 30
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 5
% SAT solver unit clauses: 3
% SAT solver binary clauses: 2
% 
% Sat splits: 2
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 5
% TWLsolver calls for satisfiability: 3
% 
% Memory used [KB]: 895
% Time elapsed: 0.022 s
% ------------------------------
% ------------------------------
% Success in time 0.041 s
