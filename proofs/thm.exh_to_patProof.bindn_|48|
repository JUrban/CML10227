Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.exh_to_patProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.exh_to_patProof
% SZS output start Proof for thm.exh_to_patProof
fof(f2583,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f2577])).
fof(f2577,plain,(
  s(fun('type.num.num',fun('type.num.num',bool)),sK0) != s(fun('type.num.num',fun('type.num.num',bool)),sK0)),
  inference(superposition,[],[f31,f2344])).
fof(f2344,plain,(
  ( ! [X2] : (s(fun('type.num.num',fun('type.num.num',bool)),X2) = s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bindn_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',fun('type.num.num',bool)),X2)))) )),
  inference(superposition,[],[f2336,f40])).
fof(f40,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.arithmetic.FUNPOW_3'(s(fun(X0,X0),X2),s('type.num.num','const.num.|48|_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.arithmetic.FUNPOW_3'(s(fun(X0,X0),X2),s('type.num.num','const.num.|48|_0'),s(X0,X1)))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.arithmetic.FUNPOW_3'(s(fun(X0,X0),X2),s('type.num.num','const.num.|48|_0'),s(X0,X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : ! [X8,X9] : s(X7,X8) = s(X7,'const.arithmetic.FUNPOW_3'(s(fun(X7,X7),X9),s('type.num.num','const.num.|48|_0'),s(X7,X8)))),
  file('thm.exh_to_patProof.bindn_|48|','thm.arithmetic.FUNPOW_|48|')).
fof(f2336,plain,(
  ( ! [X0,X1] : (s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bindn_2'(s('type.num.num',X0),s(fun('type.num.num',fun('type.num.num',bool)),X1))) = s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.FUNPOW_3'(s(fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool))),'const.exh_to_patProof.bind_0'),s('type.num.num',X0),s(fun('type.num.num',fun('type.num.num',bool)),X1)))) )),
  inference(forward_demodulation,[],[f1072,f42])).
fof(f42,plain,(
  ( ! [X0,X1] : (s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bindn_2'(s('type.num.num',X0),s(fun('type.num.num',fun('type.num.num',bool)),X1))) = s(fun('type.num.num',fun('type.num.num',bool)),happ(s(fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool))),happ(s(fun('type.num.num',fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool)))),'const.exh_to_patProof.bindn_0'),s('type.num.num',X0))),s(fun('type.num.num',fun('type.num.num',bool)),X1)))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0,X1] : s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bindn_2'(s('type.num.num',X0),s(fun('type.num.num',fun('type.num.num',bool)),X1))) = s(fun('type.num.num',fun('type.num.num',bool)),happ(s(fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool))),happ(s(fun('type.num.num',fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool)))),'const.exh_to_patProof.bindn_0'),s('type.num.num',X0))),s(fun('type.num.num',fun('type.num.num',bool)),X1)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X10,X11] : s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bindn_2'(s('type.num.num',X10),s(fun('type.num.num',fun('type.num.num',bool)),X11))) = s(fun('type.num.num',fun('type.num.num',bool)),happ(s(fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool))),happ(s(fun('type.num.num',fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool)))),'const.exh_to_patProof.bindn_0'),s('type.num.num',X10))),s(fun('type.num.num',fun('type.num.num',bool)),X11)))),
  file('thm.exh_to_patProof.bindn_|48|','ARITY_0_2_const.exh_to_patProof.bindn')).
fof(f1072,plain,(
  ( ! [X0,X1] : (s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.FUNPOW_3'(s(fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool))),'const.exh_to_patProof.bind_0'),s('type.num.num',X0),s(fun('type.num.num',fun('type.num.num',bool)),X1))) = s(fun('type.num.num',fun('type.num.num',bool)),happ(s(fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool))),happ(s(fun('type.num.num',fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool)))),'const.exh_to_patProof.bindn_0'),s('type.num.num',X0))),s(fun('type.num.num',fun('type.num.num',bool)),X1)))) )),
  inference(superposition,[],[f41,f34])).
fof(f34,plain,(
  s(fun('type.num.num',fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool)))),'const.exh_to_patProof.bindn_0') = s(fun('type.num.num',fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool)))),'const.arithmetic.FUNPOW_1'(s(fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool))),'const.exh_to_patProof.bind_0')))),
  inference(cnf_transformation,[],[f10])).
fof(f10,axiom,(
  s(fun('type.num.num',fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool)))),'const.exh_to_patProof.bindn_0') = s(fun('type.num.num',fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool)))),'const.arithmetic.FUNPOW_1'(s(fun(fun('type.num.num',fun('type.num.num',bool)),fun('type.num.num',fun('type.num.num',bool))),'const.exh_to_patProof.bind_0')))),
  file('thm.exh_to_patProof.bindn_|48|','thm.exh_to_patProof.bindn_def')).
fof(f41,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.arithmetic.FUNPOW_3'(s(fun(X0,X0),X1),s('type.num.num',X2),s(X0,X3))) = s(X0,happ(s(fun(X0,X0),happ(s(fun('type.num.num',fun(X0,X0)),'const.arithmetic.FUNPOW_1'(s(fun(X0,X0),X1))),s('type.num.num',X2))),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.arithmetic.FUNPOW_3'(s(fun(X0,X0),X1),s('type.num.num',X2),s(X0,X3))) = s(X0,happ(s(fun(X0,X0),happ(s(fun('type.num.num',fun(X0,X0)),'const.arithmetic.FUNPOW_1'(s(fun(X0,X0),X1))),s('type.num.num',X2))),s(X0,X3)))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ! [X0] : ! [X1,X2,X3] : s(X0,'const.arithmetic.FUNPOW_3'(s(fun(X0,X0),X1),s('type.num.num',X2),s(X0,X3))) = s(X0,happ(s(fun(X0,X0),happ(s(fun('type.num.num',fun(X0,X0)),'const.arithmetic.FUNPOW_1'(s(fun(X0,X0),X1))),s('type.num.num',X2))),s(X0,X3)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X7] : ! [X10,X11,X12] : s(X7,'const.arithmetic.FUNPOW_3'(s(fun(X7,X7),X10),s('type.num.num',X11),s(X7,X12))) = s(X7,happ(s(fun(X7,X7),happ(s(fun('type.num.num',fun(X7,X7)),'const.arithmetic.FUNPOW_1'(s(fun(X7,X7),X10))),s('type.num.num',X11))),s(X7,X12)))),
  file('thm.exh_to_patProof.bindn_|48|','ARITY_1_3_const.arithmetic.FUNPOW')).
fof(f31,plain,(
  s(fun('type.num.num',fun('type.num.num',bool)),sK0) != s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bindn_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',fun('type.num.num',bool)),sK0)))),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  s(fun('type.num.num',fun('type.num.num',bool)),sK0) != s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bindn_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',fun('type.num.num',bool)),sK0)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f26])).
fof(f26,plain,(
  ? [X0] : s(fun('type.num.num',fun('type.num.num',bool)),X0) != s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bindn_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',fun('type.num.num',bool)),X0)))),
  inference(ennf_transformation,[],[f14])).
fof(f14,plain,(
  ~! [X0] : s(fun('type.num.num',fun('type.num.num',bool)),X0) = s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bindn_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',fun('type.num.num',bool)),X0)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s(fun('type.num.num',fun('type.num.num',bool)),X6) = s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bindn_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',fun('type.num.num',bool)),X6)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s(fun('type.num.num',fun('type.num.num',bool)),X6) = s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bindn_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',fun('type.num.num',bool)),X6)))),
  file('thm.exh_to_patProof.bindn_|48|','thm.exh_to_patProof.bindn_|48|')).
% SZS output end Proof for thm.exh_to_patProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 49
% Passive clauses: 294
% Generated clauses: 2459
% Final active clauses: 45
% Final passive clauses: 201
% Input formulas: 12
% Initial clauses: 13
% 
% Duplicate literals: 277
% Trivial inequalities: 50
% Fw subsumption resolutions: 210
% Fw demodulations: 154
% Bw demodulations: 2
% 
% Simple tautologies: 85
% Equational tautologies: 20
% Forward subsumptions: 1241
% 
% Binary resolution: 6
% Forward superposition: 1046
% Backward superposition: 532
% Self superposition: 72
% Equality factoring: 46
% Equality resolution: 8
% 
% Split clauses: 98
% Split components: 204
% SAT solver clauses: 163
% SAT solver unit clauses: 9
% SAT solver binary clauses: 58
% 
% Sat splits: 98
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 163
% TWLsolver calls for satisfiability: 31
% 
% Memory used [KB]: 2174
% Time elapsed: 0.128 s
% ------------------------------
% ------------------------------
% Success in time 0.13 s
