Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordProps
% SZS output start Proof for thm.wordProps
fof(f12165,plain,(
  $false),
  inference(equality_resolution,[],[f2590])).
fof(f2590,plain,(
  ( ! [X10,X11] : (s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK2)),'type.wordSem.state'(sK2,sK3)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(sK2)),X10),s('type.wordSem.state'(sK2,sK3),X11))) != s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK2)),'type.wordSem.state'(sK2,sK3)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(sK2)),sK71(sK12,sK10,sK9,sK8,sK7,sK6,'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK11))),s('type.wordSem.state'(sK2,sK3),sK5)),sK4,sK3,sK2)),s('type.wordSem.state'(sK2,sK3),sK72(sK12,sK10,sK9,sK8,sK7,sK6,'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK11))),s('type.wordSem.state'(sK2,sK3),sK5)),sK4,sK3,sK2))))) )),
  inference(superposition,[],[f84,f124])).
fof(f124,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(X0)),sK71(X9,X8,X7,X6,X5,X4,X3,X2,X1,X0)),s('type.wordSem.state'(X0,X1),sK72(X9,X8,X7,X6,X5,X4,X3,X2,X1,X0)))) = s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(X0),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.wordLang.prog'(X0),X8),s('type.wordSem.state'(X0,X1),'const.wordSem.call_env_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X9),s('type.wordSem.state'(X0,X1),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X7),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X5),s('type.num.num',X4))))))))),s('type.wordSem.state'(X0,X1),'const.wordSem.dec_clock_1'(s('type.wordSem.state'(X0,X1),X3)))))))))))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(X0)),sK71(X9,X8,X7,X6,X5,X4,X3,X2,X1,X0)),s('type.wordSem.state'(X0,X1),sK72(X9,X8,X7,X6,X5,X4,X3,X2,X1,X0)))) = s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(X0),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.wordLang.prog'(X0),X8),s('type.wordSem.state'(X0,X1),'const.wordSem.call_env_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X9),s('type.wordSem.state'(X0,X1),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X7),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X5),s('type.num.num',X4))))))))),s('type.wordSem.state'(X0,X1),'const.wordSem.dec_clock_1'(s('type.wordSem.state'(X0,X1),X3)))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK71,sK72])],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(X0)),X10),s('type.wordSem.state'(X0,X1),X11))) = s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(X0),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.wordLang.prog'(X0),X8),s('type.wordSem.state'(X0,X1),'const.wordSem.call_env_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X9),s('type.wordSem.state'(X0,X1),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X7),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X5),s('type.num.num',X4))))))))),s('type.wordSem.state'(X0,X1),'const.wordSem.dec_clock_1'(s('type.wordSem.state'(X0,X1),X3)))))))))))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(X0)),X10),s('type.wordSem.state'(X0,X1),X11))) = s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(X0),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.wordLang.prog'(X0),X8),s('type.wordSem.state'(X0,X1),'const.wordSem.call_env_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X9),s('type.wordSem.state'(X0,X1),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X7),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X5),s('type.num.num',X4))))))))),s('type.wordSem.state'(X0,X1),'const.wordSem.dec_clock_1'(s('type.wordSem.state'(X0,X1),X3)))))))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X16] : ? [X17,X18] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(X6)),'type.wordSem.state'(X6,X7)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(X6)),X17),s('type.wordSem.state'(X6,X7),X18))) = s('type.pair.prod'('type.option.option'('type.wordSem.result'(X6)),'type.wordSem.state'(X6,X7)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(X6),'type.wordSem.state'(X6,X7)),'const.pair.,_2'(s('type.wordLang.prog'(X6),X14),s('type.wordSem.state'(X6,X7),'const.wordSem.call_env_2'(s('type.list.list'('type.wordSem.word_loc'(X6)),X16),s('type.wordSem.state'(X6,X7),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X6),X12),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X11),s('type.num.num',X10))))))))),s('type.wordSem.state'(X6,X7),'const.wordSem.dec_clock_1'(s('type.wordSem.state'(X6,X7),X9)))))))))))),
  file('thm.wordProps.wordProps_53_prove_ltb','thm.wordProps.wordProps_52_prove_ltb')).
fof(f84,plain,(
  ( ! [X12,X11] : (s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK2)),'type.wordSem.state'(sK2,sK3)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(sK2)),X11),s('type.wordSem.state'(sK2,sK3),X12))) != s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK2)),'type.wordSem.state'(sK2,sK3)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(sK2),'type.wordSem.state'(sK2,sK3)),'const.pair.,_2'(s('type.wordLang.prog'(sK2),sK10),s('type.wordSem.state'(sK2,sK3),'const.wordSem.call_env_2'(s('type.list.list'('type.wordSem.word_loc'(sK2)),sK12),s('type.wordSem.state'(sK2,sK3),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(sK2)),sK4),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK2),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK2),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',sK9),s('type.pair.prod'('type.wordLang.prog'(sK2),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(sK2),sK8),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK7),s('type.num.num',sK6))))))))),s('type.wordSem.state'(sK2,sK3),'const.wordSem.dec_clock_1'(s('type.wordSem.state'(sK2,sK3),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK11))),s('type.wordSem.state'(sK2,sK3),sK5)))))))))))))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X11,X12] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK2)),'type.wordSem.state'(sK2,sK3)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(sK2)),X11),s('type.wordSem.state'(sK2,sK3),X12))) != s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK2)),'type.wordSem.state'(sK2,sK3)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(sK2),'type.wordSem.state'(sK2,sK3)),'const.pair.,_2'(s('type.wordLang.prog'(sK2),sK10),s('type.wordSem.state'(sK2,sK3),'const.wordSem.call_env_2'(s('type.list.list'('type.wordSem.word_loc'(sK2)),sK12),s('type.wordSem.state'(sK2,sK3),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(sK2)),sK4),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK2),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK2),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',sK9),s('type.pair.prod'('type.wordLang.prog'(sK2),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(sK2),sK8),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK7),s('type.num.num',sK6))))))))),s('type.wordSem.state'(sK2,sK3),'const.wordSem.dec_clock_1'(s('type.wordSem.state'(sK2,sK3),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK11))),s('type.wordSem.state'(sK2,sK3),sK5)))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12])],[f54])).
fof(f54,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : ! [X11,X12] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(X0)),X11),s('type.wordSem.state'(X0,X1),X12))) != s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(X0),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.wordLang.prog'(X0),X8),s('type.wordSem.state'(X0,X1),'const.wordSem.call_env_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X10),s('type.wordSem.state'(X0,X1),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X7),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X5),s('type.num.num',X4))))))))),s('type.wordSem.state'(X0,X1),'const.wordSem.dec_clock_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X9))),s('type.wordSem.state'(X0,X1),X3)))))))))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : ? [X11,X12] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(X0)),X11),s('type.wordSem.state'(X0,X1),X12))) = s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(X0),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.wordLang.prog'(X0),X8),s('type.wordSem.state'(X0,X1),'const.wordSem.call_env_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X10),s('type.wordSem.state'(X0,X1),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X7),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X5),s('type.num.num',X4))))))))),s('type.wordSem.state'(X0,X1),'const.wordSem.dec_clock_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X9))),s('type.wordSem.state'(X0,X1),X3)))))))))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : ? [X11,X12] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(X0)),X11),s('type.wordSem.state'(X0,X1),X12))) = s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(X0),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.wordLang.prog'(X0),X8),s('type.wordSem.state'(X0,X1),'const.wordSem.call_env_2'(s('type.list.list'('type.wordSem.word_loc'(X0)),X10),s('type.wordSem.state'(X0,X1),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X7),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X5),s('type.num.num',X4))))))))),s('type.wordSem.state'(X0,X1),'const.wordSem.dec_clock_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X9))),s('type.wordSem.state'(X0,X1),X3)))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15,X16] : ? [X17,X18] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(X6)),'type.wordSem.state'(X6,X7)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(X6)),X17),s('type.wordSem.state'(X6,X7),X18))) = s('type.pair.prod'('type.option.option'('type.wordSem.result'(X6)),'type.wordSem.state'(X6,X7)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(X6),'type.wordSem.state'(X6,X7)),'const.pair.,_2'(s('type.wordLang.prog'(X6),X14),s('type.wordSem.state'(X6,X7),'const.wordSem.call_env_2'(s('type.list.list'('type.wordSem.word_loc'(X6)),X16),s('type.wordSem.state'(X6,X7),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X6),X12),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X11),s('type.num.num',X10))))))))),s('type.wordSem.state'(X6,X7),'const.wordSem.dec_clock_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X15))),s('type.wordSem.state'(X6,X7),X9)))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15,X16] : ? [X17,X18] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(X6)),'type.wordSem.state'(X6,X7)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(X6)),X17),s('type.wordSem.state'(X6,X7),X18))) = s('type.pair.prod'('type.option.option'('type.wordSem.result'(X6)),'type.wordSem.state'(X6,X7)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(X6),'type.wordSem.state'(X6,X7)),'const.pair.,_2'(s('type.wordLang.prog'(X6),X14),s('type.wordSem.state'(X6,X7),'const.wordSem.call_env_2'(s('type.list.list'('type.wordSem.word_loc'(X6)),X16),s('type.wordSem.state'(X6,X7),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X6),X12),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X11),s('type.num.num',X10))))))))),s('type.wordSem.state'(X6,X7),'const.wordSem.dec_clock_1'(s('type.wordSem.state'(X6,X7),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X15))),s('type.wordSem.state'(X6,X7),X9)))))))))))))),
  file('thm.wordProps.wordProps_53_prove_ltb','thm.wordProps.wordProps_53_prove_ltb')).
% SZS output end Proof for thm.wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 143
% Passive clauses: 969
% Generated clauses: 11865
% Final active clauses: 141
% Final passive clauses: 711
% Input formulas: 21
% Initial clauses: 43
% 
% Duplicate literals: 548
% Trivial inequalities: 642
% Fw subsumption resolutions: 1505
% Fw demodulations: 1508
% Bw demodulations: 2
% 
% Simple tautologies: 314
% Equational tautologies: 23
% Forward subsumptions: 5799
% 
% Binary resolution: 69
% Forward superposition: 4333
% Backward superposition: 2974
% Self superposition: 81
% Equality factoring: 56
% Equality resolution: 31
% 
% Split clauses: 266
% Split components: 545
% SAT solver clauses: 673
% SAT solver unit clauses: 17
% SAT solver binary clauses: 132
% 
% Sat splits: 266
% 
% TWLsolver clauses: 671
% TWLsolver calls for satisfiability: 97
% 
% Memory used [KB]: 8315
% Time elapsed: 0.284 s
% ------------------------------
% ------------------------------
% Success in time 0.3 s
