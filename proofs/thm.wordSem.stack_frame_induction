Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordSem
% SZS output start Proof for thm.wordSem
fof(f2718,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2708,f135,f195])).
fof(f195,plain,(
  ~p(s(bool,'F_0')) | $spl1),
  inference(cnf_transformation,[],[f195_D])).
fof(f195_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f135,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.wordSem.stack_frame_induction',aHL_FALSITY)).
fof(f2708,plain,(
  $false | $spl1),
  inference(subsumption_resolution,[],[f2696,f195])).
fof(f2696,plain,(
  p(s(bool,'F_0'))),
  inference(superposition,[],[f2661,f207])).
fof(f207,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),sK1),s('type.wordSem.stack_frame'(sK0),sK2)))),
  inference(resolution,[],[f133,f142])).
fof(f142,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X13] : (s(bool,'F_0') = s(bool,X13) <=> ~p(s(bool,X13)))),
  file('thm.wordSem.stack_frame_induction','thm.bool.EQ_CLAUSES|split|2')).
fof(f133,plain,(
  ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),sK1),s('type.wordSem.stack_frame'(sK0),sK2))))),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X3,X4] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X4)))))) & ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),sK1),s('type.wordSem.stack_frame'(sK0),sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f106])).
fof(f106,plain,(
  ? [X0,X1] : (! [X3,X4] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X4)))))) & ? [X2] : ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),X1),s('type.wordSem.stack_frame'(X0),X2)))))),
  inference(rectify,[],[f99])).
fof(f99,plain,(
  ? [X0,X1] : (! [X2,X3] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X3)))))) & ? [X4] : ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),X1),s('type.wordSem.stack_frame'(X0),X4)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : (! [X2,X3] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X3)))))) => ! [X4] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),X1),s('type.wordSem.stack_frame'(X0),X4)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1] : (! [X2,X3] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X3)))))) => ! [X4] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),X1),s('type.wordSem.stack_frame'(X0),X4)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (! [X8,X9] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X6),bool),X7),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X9)))))) => ! [X10] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X6),bool),X7),s('type.wordSem.stack_frame'(X6),X10)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (! [X8,X9] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X6),bool),X7),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X9)))))) => ! [X10] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X6),bool),X7),s('type.wordSem.stack_frame'(X6),X10)))))),
  file('thm.wordSem.stack_frame_induction','thm.wordSem.stack_frame_induction')).
fof(f2661,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),sK1),s('type.wordSem.stack_frame'(sK0),X0))))) )),
  inference(superposition,[],[f132,f163])).
fof(f163,plain,(
  ( ! [X0,X1] : (s('type.wordSem.stack_frame'(X0),X1) = s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),sK3(X1,X0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK4(X1,X0))))) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1] : s('type.wordSem.stack_frame'(X0),X1) = s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),sK3(X1,X0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK4(X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4])],[f58])).
fof(f58,plain,(
  ! [X0,X1] : ? [X2,X3] : s('type.wordSem.stack_frame'(X0),X1) = s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X3)))),
  inference(flattening,[],[f57])).
fof(f57,plain,(
  ! [X0] : ! [X1] : ? [X2,X3] : s('type.wordSem.stack_frame'(X0),X1) = s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X3)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X33] : ? [X8,X9] : s('type.wordSem.stack_frame'(X6),X33) = s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X9)))),
  file('thm.wordSem.stack_frame_induction','thm.wordSem.stack_frame_nchotomy')).
fof(f132,plain,(
  ( ! [X4,X3] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X4))))))) )),
  inference(cnf_transformation,[],[f107])).
% SZS output end Proof for thm.wordSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 50
% Passive clauses: 550
% Generated clauses: 2511
% Final active clauses: 44
% Final passive clauses: 458
% Input formulas: 37
% Initial clauses: 60
% 
% Duplicate literals: 162
% Trivial inequalities: 55
% Fw subsumption resolutions: 257
% Fw demodulations: 178
% Bw demodulations: 4
% 
% Simple tautologies: 109
% Equational tautologies: 31
% Forward subsumptions: 1132
% 
% Binary resolution: 85
% Factoring: 1
% Forward superposition: 700
% Backward superposition: 872
% Self superposition: 59
% Equality factoring: 54
% Equality resolution: 8
% 
% Split clauses: 37
% Split components: 76
% SAT solver clauses: 72
% SAT solver unit clauses: 8
% SAT solver binary clauses: 38
% SAT solver learnt clauses: 1
% 
% Sat splits: 37
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 67
% TWLsolver calls for satisfiability: 26
% 
% Memory used [KB]: 1791
% Time elapsed: 0.059 s
% ------------------------------
% ------------------------------
% Success in time 0.065 s
