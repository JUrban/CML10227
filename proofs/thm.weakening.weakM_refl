Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.weakening
% (114797)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 568
% Passive clauses: 5887
% Generated clauses: 13322
% Final active clauses: 495
% Final passive clauses: 4833
% Input formulas: 40
% Initial clauses: 177
% 
% Duplicate literals: 271
% Trivial inequalities: 147
% Fw subsumption resolutions: 1329
% Fw demodulations: 83
% Bw demodulations: 68
% 
% Simple tautologies: 201
% Equational tautologies: 65
% Forward subsumptions: 5196
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 6974
% Factoring: 972
% Forward superposition: 1123
% Backward superposition: 1926
% Self superposition: 26
% Equality factoring: 26
% Equality resolution: 46
% 
% Split clauses: 249
% Split components: 504
% SAT solver clauses: 513
% SAT solver unit clauses: 21
% SAT solver binary clauses: 125
% 
% Sat splits: 249
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 507
% TWLsolver calls for satisfiability: 287
% 
% Memory used [KB]: 5884
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.weakening
% (114811)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 385
% Passive clauses: 2027
% Generated clauses: 10122
% Final active clauses: 375
% Final passive clauses: 1614
% Input formulas: 40
% Initial clauses: 177
% 
% Duplicate literals: 300
% Trivial inequalities: 94
% Fw subsumption resolutions: 889
% Fw demodulations: 232
% Bw demodulations: 31
% Condensations: 321
% Global subsumptions: 13
% 
% Simple tautologies: 268
% Equational tautologies: 28
% Forward subsumptions: 3241
% Fw demodulations to eq. taut.: 16
% 
% Binary resolution: 2467
% Factoring: 125
% Forward superposition: 1636
% Backward superposition: 1650
% Self superposition: 55
% Equality factoring: 36
% Equality resolution: 36
% 
% Split clauses: 166
% Split components: 345
% SAT solver clauses: 2829
% SAT solver unit clauses: 183
% SAT solver binary clauses: 86
% SAT solver learnt clauses: 26
% SAT solver learnt literals: 10
% 
% Sat splits: 166
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 2777
% TWLsolver calls for satisfiability: 1774
% 
% Memory used [KB]: 11513
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.weakening
% (114845)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1631
% Passive clauses: 8261
% Generated clauses: 119345
% Final active clauses: 550
% Final passive clauses: 1603
% Input formulas: 40
% Initial clauses: 177
% 
% Duplicate literals: 6675
% Trivial inequalities: 639
% Fw subsumption resolutions: 9089
% Fw demodulations: 10958
% Bw demodulations: 3392
% Condensations: 11648
% Global subsumptions: 453
% 
% Simple tautologies: 698
% Equational tautologies: 2498
% Forward subsumptions: 66364
% Fw demodulations to eq. taut.: 791
% Bw demodulations to eq. taut.: 426
% 
% Unit resulting resolution: 20550
% Factoring: 1
% Forward superposition: 29336
% Backward superposition: 18247
% Self superposition: 309
% Equality factoring: 239
% Equality resolution: 79
% 
% Split clauses: 406
% Split components: 822
% SAT solver clauses: 10413
% SAT solver unit clauses: 651
% SAT solver binary clauses: 1270
% 
% Sat splits: 406
% Sat splitting refutations: 885
% 
% Memory used [KB]: 41833
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.weakening
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.weakening
% SZS output start Proof for thm.weakening
fof(f48641,plain,(
  $false),
  inference(subsumption_resolution,[],[f46344,f25601])).
fof(f25601,plain,(
  ~p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK16(sK13,sK13,'type.list.list'('type.string.char'),sK12)),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))),
  inference(resolution,[],[f18612,f387])).
fof(f387,plain,(
  ( ! [X0] : (p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0)))) | ~p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0] : (~p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0)))))),
  inference(ennf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : (p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) => p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0)))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X25] : (p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X25),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) => p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X25),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X25)))))),
  file('thm.weakening.weakM_refl','thm.weakening.weakE_refl')).
fof(f18612,plain,(
  ~p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK16(sK13,sK13,'type.list.list'('type.string.char'),sK12)),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK16(sK13,sK13,'type.list.list'('type.string.char'),sK12)))))),
  inference(equality_resolution,[],[f18551])).
fof(f18551,plain,(
  ( ! [X0] : (s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))) != s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK16(sK13,sK13,'type.list.list'('type.string.char'),sK12)))) | ~p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK16(sK13,sK13,'type.list.list'('type.string.char'),sK12)))))) )),
  inference(forward_demodulation,[],[f513,f512])).
fof(f512,plain,(
  s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK16(sK13,sK13,'type.list.list'('type.string.char'),sK12)))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(sK12,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),sK13),s(sK12,sK15(sK13,sK13,'type.list.list'('type.string.char'),sK12))))),
  inference(resolution,[],[f218,f221])).
fof(f221,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3)))) | s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),sK16(X3,X2,X1,X0)))) = s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3),s(X0,sK15(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3)))) | ! [X7,X8] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X8))) != s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3),s(X0,X7))) | (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s(X0,X7))) = s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),sK14(X8,X7,X3,X2,X1,X0)))) & p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),sK14(X8,X7,X3,X2,X1,X0)),s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X8))))))) & ((s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),sK16(X3,X2,X1,X0)))) = s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3),s(X0,sK15(X3,X2,X1,X0)))) & ! [X6] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6))) != s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s(X0,sK15(X3,X2,X1,X0)))) | ~p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6),s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),sK16(X3,X2,X1,X0))))))) | p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14,sK15,sK16])],[f144])).
fof(f144,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3)))) | ! [X7,X8] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X8))) != s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3),s(X0,X7))) | ? [X9] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X9))) = s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s(X0,X7))) & p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X9),s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X8))))))) & (? [X4,X5] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X5))) = s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3),s(X0,X4))) & ! [X6] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6))) != s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s(X0,X4))) | ~p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6),s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X5)))))) | p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3))))))),
  inference(rectify,[],[f143])).
fof(f143,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3)))) | ! [X4,X5] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X5))) != s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3),s(X0,X4))) | ? [X6] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6))) = s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s(X0,X4))) & p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6),s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X5))))))) & (? [X4,X5] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X5))) = s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3),s(X0,X4))) & ! [X6] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6))) != s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s(X0,X4))) | ~p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6),s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X5)))))) | p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3))))))),
  inference(nnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3)))) <=> ! [X4,X5] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X5))) != s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3),s(X0,X4))) | ? [X6] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6))) = s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s(X0,X4))) & p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6),s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X5)))))))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3)))) <=> ! [X4,X5] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X5))) = s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3),s(X0,X4))) => ? [X6] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6))) = s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s(X0,X4))) & p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6),s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X5)))))))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3)))) <=> ! [X4,X5] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X5))) = s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3),s(X0,X4))) => ? [X6] : (s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6))) = s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s(X0,X4))) & p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6),s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X5)))))))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X6,X18] : ! [X7,X22] : (p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X6,'type.list.list'('type.pair.prod'(X18,'type.pair.prod'('type.num.num','type.ast.t')))),X7),s('type.finite_map.fmap'(X6,'type.list.list'('type.pair.prod'(X18,'type.pair.prod'('type.num.num','type.ast.t')))),X22)))) <=> ! [X23,X24] : (s('type.option.option'('type.list.list'('type.pair.prod'(X18,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X18,'type.pair.prod'('type.num.num','type.ast.t'))),X24))) = s('type.option.option'('type.list.list'('type.pair.prod'(X18,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X6,'type.list.list'('type.pair.prod'(X18,'type.pair.prod'('type.num.num','type.ast.t')))),X22),s(X6,X23))) => ? [X25] : (s('type.option.option'('type.list.list'('type.pair.prod'(X18,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X18,'type.pair.prod'('type.num.num','type.ast.t'))),X25))) = s('type.option.option'('type.list.list'('type.pair.prod'(X18,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X6,'type.list.list'('type.pair.prod'(X18,'type.pair.prod'('type.num.num','type.ast.t')))),X7),s(X6,X23))) & p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'(X18,'type.pair.prod'('type.num.num','type.ast.t'))),X25),s('type.list.list'('type.pair.prod'(X18,'type.pair.prod'('type.num.num','type.ast.t'))),X24)))))))),
  file('thm.weakening.weakM_refl','thm.typeSoundInvariants.weakM_def')).
fof(f218,plain,(
  ~p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(sK12,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),sK13),s('type.finite_map.fmap'(sK12,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),sK13))))),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  p(s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(sK12,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),sK13)))) & ~p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(sK12,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),sK13),s('type.finite_map.fmap'(sK12,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),sK13))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f95])).
fof(f95,plain,(
  ? [X0,X1] : (p(s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X1)))) & ~p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X1),s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X1)))))),
  inference(ennf_transformation,[],[f43])).
fof(f43,plain,(
  ~! [X0,X1] : (p(s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X1)))) => p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X1),s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X1)))))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ~! [X0] : ! [X1] : (p(s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X1)))) => p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X1),s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (p(s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(X6,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X7)))) => p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X6,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X7),s('type.finite_map.fmap'(X6,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (p(s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(X6,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X7)))) => p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X6,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X7),s('type.finite_map.fmap'(X6,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X7)))))),
  file('thm.weakening.weakM_refl','thm.weakening.weakM_refl')).
fof(f513,plain,(
  ( ! [X0] : (~p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK16(sK13,sK13,'type.list.list'('type.string.char'),sK12))))) | s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))) != s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(sK12,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),sK13),s(sK12,sK15(sK13,sK13,'type.list.list'('type.string.char'),sK12))))) )),
  inference(resolution,[],[f218,f222])).
fof(f222,plain,(
  ( ! [X6,X2,X0,X3,X1] : (p(s(bool,'const.typeSoundInvariants.weakM_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X3)))) | ~p(s(bool,'const.typeSystem.weakE_2'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6),s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),sK16(X3,X2,X1,X0))))) | s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t'))),X6))) != s('type.option.option'('type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'(X1,'type.pair.prod'('type.num.num','type.ast.t')))),X2),s(X0,sK15(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f145])).
fof(f46344,plain,(
  p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK16(sK13,sK13,'type.list.list'('type.string.char'),sK12)),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))),
  inference(equality_resolution,[],[f17028])).
fof(f17028,plain,(
  ( ! [X0] : (s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))) != s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK16(sK13,sK13,'type.list.list'('type.string.char'),sK12)))) | p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))) )),
  inference(subsumption_resolution,[],[f17027,f351])).
fof(f351,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f202])).
fof(f202,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,'T_0'))))),
  inference(flattening,[],[f201])).
fof(f201,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,X0)) | p(s(bool,'T_0')))))),
  inference(nnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X10] : ((p(s(bool,X10)) => p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  file('thm.weakening.weakM_refl','thm.bool.IMP_CLAUSES|split|1')).
fof(f17027,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))) != s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK16(sK13,sK13,'type.list.list'('type.string.char'),sK12)))) | p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))) )),
  inference(forward_demodulation,[],[f17019,f480])).
fof(f480,plain,(
  s(bool,'T_0') = s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(sK12,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),sK13)))),
  inference(resolution,[],[f217,f368])).
fof(f368,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f211])).
fof(f211,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.weakening.weakM_refl','thm.bool.EQ_CLAUSES|split|1')).
fof(f217,plain,(
  p(s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(sK12,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),sK13))))),
  inference(cnf_transformation,[],[f142])).
fof(f17019,plain,(
  ( ! [X0] : (s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))) != s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK16(sK13,sK13,'type.list.list'('type.string.char'),sK12)))) | p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(sK12,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),sK13))))) )),
  inference(superposition,[],[f383,f512])).
fof(f383,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X3),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X3))) != s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X2),s(X0,X1))) | ~p(s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X2))))) )),
  inference(cnf_transformation,[],[f215])).
fof(f215,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X2)))) | s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X3))) != s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X2),s(X0,X1))) | p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X3),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  inference(rectify,[],[f122])).
fof(f122,plain,(
  ! [X1,X2,X3,X5] : (~p(s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(X1,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X3)))) | s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X5))) != s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X3),s(X1,X2))) | p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X5),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  inference(flattening,[],[f121])).
fof(f121,plain,(
  ! [X1,X2,X3,X5] : ((~p(s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(X1,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X3)))) | s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X5))) != s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X3),s(X1,X2)))) | p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X5),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  inference(ennf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X1,X2,X3,X5] : ((p(s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(X1,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X3)))) & s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X5))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X3),s(X1,X2)))) => p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X5),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  inference(flattening,[],[f90])).
fof(f90,plain,(
  ! [X1] : ! [X2,X3,X5] : ((p(s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(X1,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X3)))) & s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X5))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X3),s(X1,X2)))) => p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X5),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X18,X6] : ! [X26,X7,X27,X25] : ((p(s(bool,'const.typeSoundInvariants.tenv_mod_ok_1'(s('type.finite_map.fmap'(X6,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X7)))) & s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X25))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X6,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X7),s(X6,X26)))) => p(s(bool,'const.typeSoundInvariants.tenv_val_ok_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X25),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  file('thm.weakening.weakM_refl','thm.typeSysProps.tenv_mod_ok_lookup')).
% SZS output end Proof for thm.weakening
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1088
% Passive clauses: 10787
% Generated clauses: 48189
% Final active clauses: 1071
% Final passive clauses: 9002
% Input formulas: 40
% Initial clauses: 171
% 
% Selected by SInE selection: 37
% SInE iterations: 1
% 
% Duplicate literals: 2305
% Trivial inequalities: 218
% Fw subsumption resolutions: 5534
% Fw demodulations: 1584
% Bw demodulations: 3
% 
% Simple tautologies: 3597
% Equational tautologies: 231
% Forward subsumptions: 21574
% 
% Binary resolution: 34171
% Factoring: 126
% Forward superposition: 2794
% Backward superposition: 1025
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 35
% 
% Split clauses: 3047
% Split components: 7240
% SAT solver clauses: 3429
% SAT solver unit clauses: 36
% SAT solver binary clauses: 110
% 
% Sat splits: 3047
% Sat splitting refutations: 41
% 
% Memory used [KB]: 13560
% Time elapsed: 0.875 s
% ------------------------------
% ------------------------------
% Success in time 12.618 s
