Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_knownProof
% (36479)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 115
% Passive clauses: 2089
% Generated clauses: 13053
% Final active clauses: 101
% Final passive clauses: 1809
% Input formulas: 19
% Initial clauses: 23
% 
% Duplicate literals: 594
% Trivial inequalities: 116
% Fw subsumption resolutions: 1309
% Fw demodulations: 1849
% Bw demodulations: 13
% 
% Simple tautologies: 259
% Equational tautologies: 21
% Forward subsumptions: 6063
% 
% Binary resolution: 161
% Forward superposition: 4931
% Backward superposition: 3710
% Self superposition: 159
% Equality factoring: 45
% Equality resolution: 23
% 
% Split clauses: 352
% Split components: 712
% SAT solver clauses: 691
% SAT solver unit clauses: 12
% SAT solver binary clauses: 108
% 
% Sat splits: 352
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 690
% TWLsolver calls for satisfiability: 135
% 
% Memory used [KB]: 11897
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.clos_knownProof
% (36511)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 77
% Passive clauses: 741
% Generated clauses: 7829
% Final active clauses: 65
% Final passive clauses: 506
% Input formulas: 19
% Initial clauses: 23
% 
% Duplicate literals: 353
% Trivial inequalities: 75
% Fw subsumption resolutions: 402
% Fw demodulations: 794
% Bw demodulations: 148
% Condensations: 478
% 
% Simple tautologies: 134
% Equational tautologies: 20
% Forward subsumptions: 3602
% Bw demodulations to eq. taut.: 16
% 
% Binary resolution: 83
% Forward superposition: 2803
% Backward superposition: 1671
% Self superposition: 126
% Equality factoring: 44
% Equality resolution: 14
% 
% Split clauses: 65
% Split components: 131
% SAT solver clauses: 1190
% SAT solver unit clauses: 33
% SAT solver binary clauses: 45
% 
% Sat splits: 65
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1190
% TWLsolver calls for satisfiability: 167
% 
% Memory used [KB]: 8955
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.clos_knownProof
% (36530)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 269
% Passive clauses: 7120
% Generated clauses: 128753
% Final active clauses: 117
% Final passive clauses: 608
% Input formulas: 19
% Initial clauses: 23
% Discarded non-redundant clauses: 13969
% 
% Duplicate literals: 6526
% Trivial inequalities: 1127
% Fw subsumption resolutions: 10524
% Fw demodulations: 12340
% Bw demodulations: 2769
% Condensations: 14707
% Global subsumptions: 348
% 
% Simple tautologies: 1230
% Equational tautologies: 666
% Forward subsumptions: 72226
% Fw demodulations to eq. taut.: 17
% Bw demodulations to eq. taut.: 312
% 
% Unit resulting resolution: 2827
% Forward superposition: 34453
% Backward superposition: 31244
% Self superposition: 767
% Equality factoring: 379
% Equality resolution: 75
% 
% Split clauses: 396
% Split components: 798
% SAT solver clauses: 8906
% SAT solver unit clauses: 310
% SAT solver binary clauses: 1801
% 
% Sat splits: 396
% Sat splitting refutations: 644
% 
% Memory used [KB]: 83921
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.clos_knownProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_knownProof
% SZS output start Proof for thm.clos_knownProof
fof(f2119,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f80,f91,f114,f124,f128,f132,f88,f151,f155,f154,f179,f190,f195,f200,f223,f227,f226,f93,f231,f232,f157,f238,f268,f280,f286,f292,f244,f299,f304,f327,f333,f339,f345,f181,f374,f386,f392,f398,f408,f185,f183,f433,f445,f451,f457,f439,f437,f435,f482,f488,f494,f500,f376,f525,f537,f543,f549,f531,f529,f527,f559,f380,f378,f584,f596,f602,f608,f590,f588,f586,f788,f828,f832,f461,f458,f835,f843,f86,f620,f85,f841,f839,f845,f837,f609,f550,f180,f847,f885,f891,f897,f903,f931,f943,f949,f955,f861,f959,f963,f970,f975,f82,f1005,f1011,f1017,f1023,f1051,f1063,f1069,f1075,f1024,f83,f1106,f1112,f1118,f1124,f120,f118,f116,f1153,f1159,f1165,f1171,f933,f1196,f1208,f1214,f1220,f1202,f1200,f1198,f1257,f1269,f1275,f1281,f1263,f1261,f1259,f1291,f937,f935,f1316,f1328,f1334,f1340,f1322,f1320,f1318,f1371,f1377,f1389,f1390,f853,f851,f849,f855,f1396,f1402,f1383,f1381,f1379,f1562,f1230,f81,f1606,f1604,f1602,f1600,f1132,f1129,f84,f1083,f1081,f1079,f1077,f1637,f1643,f1649,f1655,f274,f272,f270,f1680,f1686,f1692,f1698,f1053,f1723,f1735,f1741,f1747,f1729,f1727,f1725,f1774,f1786,f1792,f1798,f1780,f1778,f1776,f1808,f1057,f1055,f1833,f1845,f1851,f1857,f1839,f1837,f1835,f1893,f1905,f1911,f1917,f1899,f1897,f1895,f2082])).
fof(f2082,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f2081,f66])).
fof(f66,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X24,X25,X26] : ! [X27,X28,X29] : s(X24,happ(s(fun(X25,X24),X27),s(X25,happ(s(fun(X26,X25),X28),s(X26,X29))))) = s(X24,happ(s(fun(X26,X24),'_dst_x0x1_2'(s(fun(X25,X24),X27),s(fun(X26,X25),X28))),s(X26,X29)))),
  file('thm.clos_knownProof.clos_knownProof_3_prove_ltb','_dst_x0x1_ax')).
fof(f2081,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,happ(s(fun('type.num.num',sK1),happ(s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s('type.num.num',sK9(sK2)))),s('type.num.num',sK10(sK2)))))) != s(sK0,happ(s(fun('type.num.num',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',sK1),happ(s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s('type.num.num',sK9(sK2)))))),s('type.num.num',sK10(sK2)))) | $spl0),
  inference(forward_demodulation,[],[f2080,f65])).
fof(f65,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X1,X0),'_dst_x0x1_2'(s(fun(X2,X0),X4),s(fun(X1,X2),happ(s(fun(X3,fun(X1,X2)),X5),s(X3,X6))))) = s(fun(X1,X0),happ(s(fun(X3,fun(X1,X0)),'_dst_x00x11_2'(s(fun(X2,X0),X4),s(fun(X3,fun(X1,X2)),X5))),s(X3,X6)))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s(fun(X1,X0),'_dst_x0x1_2'(s(fun(X2,X0),X4),s(fun(X1,X2),happ(s(fun(X3,fun(X1,X2)),X5),s(X3,X6))))) = s(fun(X1,X0),happ(s(fun(X3,fun(X1,X0)),'_dst_x00x11_2'(s(fun(X2,X0),X4),s(fun(X3,fun(X1,X2)),X5))),s(X3,X6)))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6] : s(fun(X1,X0),'_dst_x0x1_2'(s(fun(X2,X0),X4),s(fun(X1,X2),happ(s(fun(X3,fun(X1,X2)),X5),s(X3,X6))))) = s(fun(X1,X0),happ(s(fun(X3,fun(X1,X0)),'_dst_x00x11_2'(s(fun(X2,X0),X4),s(fun(X3,fun(X1,X2)),X5))),s(X3,X6)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X24,X25,X30,X26] : ! [X27,X28,X29] : s(fun(X25,X24),'_dst_x0x1_2'(s(fun(X30,X24),X27),s(fun(X25,X30),happ(s(fun(X26,fun(X25,X30)),X28),s(X26,X29))))) = s(fun(X25,X24),happ(s(fun(X26,fun(X25,X24)),'_dst_x00x11_2'(s(fun(X30,X24),X27),s(fun(X26,fun(X25,X30)),X28))),s(X26,X29)))),
  file('thm.clos_knownProof.clos_knownProof_3_prove_ltb','_dst_x00x11_ax')).
fof(f2080,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,happ(s(fun('type.num.num',sK1),happ(s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s('type.num.num',sK9(sK2)))),s('type.num.num',sK10(sK2)))))) != s(sK0,happ(s(fun('type.num.num',sK0),happ(s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s('type.num.num',sK9(sK2)))),s('type.num.num',sK10(sK2)))) | $spl0),
  inference(forward_demodulation,[],[f1918,f1617])).
fof(f1617,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),happ(s(fun('type.num.num',fun('type.num.num',X0)),X1),s('type.num.num',sK9(sK2)))),s('type.num.num',sK10(sK2)))) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',sK2),s(fun('type.num.num',fun('type.num.num',X0)),X1),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X2),s(fun('type.integer.int',X0),X3),s(X0,X4),s(X0,X5)))) ) | $spl0),
  inference(superposition,[],[f67,f82])).
fof(f67,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),happ(s(fun('type.num.num',fun('type.num.num',X0)),X3),s('type.num.num',X1))),s('type.num.num',X2))) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))),s(fun('type.num.num',fun('type.num.num',X0)),X3),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X4),s(fun('type.integer.int',X0),X5),s(X0,X6),s(X0,X7)))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : s(X0,happ(s(fun('type.num.num',X0),happ(s(fun('type.num.num',fun('type.num.num',X0)),X3),s('type.num.num',X1))),s('type.num.num',X2))) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))),s(fun('type.num.num',fun('type.num.num',X0)),X3),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X4),s(fun('type.integer.int',X0),X5),s(X0,X6),s(X0,X7)))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5,X6,X7] : s(X0,happ(s(fun('type.num.num',X0),happ(s(fun('type.num.num',fun('type.num.num',X0)),X3),s('type.num.num',X1))),s('type.num.num',X2))) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))),s(fun('type.num.num',fun('type.num.num',X0)),X3),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X4),s(fun('type.integer.int',X0),X5),s(X0,X6),s(X0,X7)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X7] : ! [X16,X17,X14,X12,X11,X10,X9] : s(X7,happ(s(fun('type.num.num',X7),happ(s(fun('type.num.num',fun('type.num.num',X7)),X14),s('type.num.num',X16))),s('type.num.num',X17))) = s(X7,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',X17))),s(fun('type.num.num',fun('type.num.num',X7)),X14),s(fun('type.list.list'('type.clos_known.val_approx'),X7),X12),s(fun('type.integer.int',X7),X11),s(X7,X10),s(X7,X9)))),
  file('thm.clos_knownProof.clos_knownProof_3_prove_ltb','thm.clos_known.val_approx_case_def|split|0')).
fof(f1918,plain,(
  s(sK0,happ(s(fun('type.num.num',sK0),happ(s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s('type.num.num',sK9(sK2)))),s('type.num.num',sK10(sK2)))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',sK2),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) | $spl0),
  inference(backward_demodulation,[],[f1617,f54])).
fof(f54,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',sK2),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',sK2),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3)))))),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',sK2),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',sK2),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8])],[f47])).
fof(f47,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8] : s(X0,happ(s(fun(X1,X0),X7),s(X1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',X2),s(fun('type.num.num',fun('type.num.num',X1)),X8),s(fun('type.list.list'('type.clos_known.val_approx'),X1),X6),s(fun('type.integer.int',X1),X5),s(X1,X4),s(X1,X3))))) != s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',X2),s(fun('type.num.num',fun('type.num.num',X0)),'_dst_x00x11_2'(s(fun(X1,X0),X7),s(fun('type.num.num',fun('type.num.num',X1)),X8))),s(fun('type.list.list'('type.clos_known.val_approx'),X0),'_dst_x0x1_2'(s(fun(X1,X0),X7),s(fun('type.list.list'('type.clos_known.val_approx'),X1),X6))),s(fun('type.integer.int',X0),'_dst_x0x1_2'(s(fun(X1,X0),X7),s(fun('type.integer.int',X1),X5))),s(X0,happ(s(fun(X1,X0),X7),s(X1,X4))),s(X0,happ(s(fun(X1,X0),X7),s(X1,X3)))))),
  inference(ennf_transformation,[],[f22])).
fof(f22,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : s(X0,happ(s(fun(X1,X0),X7),s(X1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',X2),s(fun('type.num.num',fun('type.num.num',X1)),X8),s(fun('type.list.list'('type.clos_known.val_approx'),X1),X6),s(fun('type.integer.int',X1),X5),s(X1,X4),s(X1,X3))))) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',X2),s(fun('type.num.num',fun('type.num.num',X0)),'_dst_x00x11_2'(s(fun(X1,X0),X7),s(fun('type.num.num',fun('type.num.num',X1)),X8))),s(fun('type.list.list'('type.clos_known.val_approx'),X0),'_dst_x0x1_2'(s(fun(X1,X0),X7),s(fun('type.list.list'('type.clos_known.val_approx'),X1),X6))),s(fun('type.integer.int',X0),'_dst_x0x1_2'(s(fun(X1,X0),X7),s(fun('type.integer.int',X1),X5))),s(X0,happ(s(fun(X1,X0),X7),s(X1,X4))),s(X0,happ(s(fun(X1,X0),X7),s(X1,X3)))))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8] : s(X0,happ(s(fun(X1,X0),X7),s(X1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',X2),s(fun('type.num.num',fun('type.num.num',X1)),X8),s(fun('type.list.list'('type.clos_known.val_approx'),X1),X6),s(fun('type.integer.int',X1),X5),s(X1,X4),s(X1,X3))))) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',X2),s(fun('type.num.num',fun('type.num.num',X0)),'_dst_x00x11_2'(s(fun(X1,X0),X7),s(fun('type.num.num',fun('type.num.num',X1)),X8))),s(fun('type.list.list'('type.clos_known.val_approx'),X0),'_dst_x0x1_2'(s(fun(X1,X0),X7),s(fun('type.list.list'('type.clos_known.val_approx'),X1),X6))),s(fun('type.integer.int',X0),'_dst_x0x1_2'(s(fun(X1,X0),X7),s(fun('type.integer.int',X1),X5))),s(X0,happ(s(fun(X1,X0),X7),s(X1,X4))),s(X0,happ(s(fun(X1,X0),X7),s(X1,X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14] : s(X6,happ(s(fun(X7,X6),X13),s(X7,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',X8),s(fun('type.num.num',fun('type.num.num',X7)),X14),s(fun('type.list.list'('type.clos_known.val_approx'),X7),X12),s(fun('type.integer.int',X7),X11),s(X7,X10),s(X7,X9))))) = s(X6,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',X8),s(fun('type.num.num',fun('type.num.num',X6)),'_dst_x00x11_2'(s(fun(X7,X6),X13),s(fun('type.num.num',fun('type.num.num',X7)),X14))),s(fun('type.list.list'('type.clos_known.val_approx'),X6),'_dst_x0x1_2'(s(fun(X7,X6),X13),s(fun('type.list.list'('type.clos_known.val_approx'),X7),X12))),s(fun('type.integer.int',X6),'_dst_x0x1_2'(s(fun(X7,X6),X13),s(fun('type.integer.int',X7),X11))),s(X6,happ(s(fun(X7,X6),X13),s(X7,X10))),s(X6,happ(s(fun(X7,X6),X13),s(X7,X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14] : s(X6,happ(s(fun(X7,X6),X13),s(X7,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',X8),s(fun('type.num.num',fun('type.num.num',X7)),X14),s(fun('type.list.list'('type.clos_known.val_approx'),X7),X12),s(fun('type.integer.int',X7),X11),s(X7,X10),s(X7,X9))))) = s(X6,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',X8),s(fun('type.num.num',fun('type.num.num',X6)),'_dst_x00x11_2'(s(fun(X7,X6),X13),s(fun('type.num.num',fun('type.num.num',X7)),X14))),s(fun('type.list.list'('type.clos_known.val_approx'),X6),'_dst_x0x1_2'(s(fun(X7,X6),X13),s(fun('type.list.list'('type.clos_known.val_approx'),X7),X12))),s(fun('type.integer.int',X6),'_dst_x0x1_2'(s(fun(X7,X6),X13),s(fun('type.integer.int',X7),X11))),s(X6,happ(s(fun(X7,X6),X13),s(X7,X10))),s(X6,happ(s(fun(X7,X6),X13),s(X7,X9)))))),
  file('thm.clos_knownProof.clos_knownProof_3_prove_ltb','thm.clos_knownProof.clos_knownProof_3_prove_ltb')).
fof(f1895,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl144),
  inference(cnf_transformation,[],[f1895_D])).
fof(f1895_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f1897,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl146),
  inference(cnf_transformation,[],[f1897_D])).
fof(f1897_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f1899,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl148),
  inference(cnf_transformation,[],[f1899_D])).
fof(f1899_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f1917,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(forward_demodulation,[],[f1916,f1725])).
fof(f1916,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(forward_demodulation,[],[f1915,f1725])).
fof(f1915,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(forward_demodulation,[],[f1914,f1725])).
fof(f1914,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(subsumption_resolution,[],[f1913,f92])).
fof(f92,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK2) | $spl9),
  inference(cnf_transformation,[],[f92_D])).
fof(f92_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK2) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f1913,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl126)),
  inference(forward_demodulation,[],[f1912,f1725])).
fof(f1912,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl126)),
  inference(subsumption_resolution,[],[f1875,f87])).
fof(f87,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK2) | $spl7),
  inference(cnf_transformation,[],[f87_D])).
fof(f87_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK2) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f1875,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl126),
  inference(superposition,[],[f72,f1725])).
fof(f72,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(X0)),s('type.num.num',sK10(X0))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0] : (s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(X0)),s('type.num.num',sK10(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(X0)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK9,sK10,sK11,sK12])],[f45])).
fof(f45,plain,(
  ! [X0] : (? [X3,X4] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X3),s('type.num.num',X4))) | ? [X2] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))) | ? [X1] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X19] : (? [X20,X21] : s('type.clos_known.val_approx',X19) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X20),s('type.num.num',X21))) | ? [X22] : s('type.clos_known.val_approx',X19) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X22))) | ? [X23] : s('type.clos_known.val_approx',X19) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X19) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X19))),
  file('thm.clos_knownProof.clos_knownProof_3_prove_ltb','thm.clos_known.val_approx_nchotomy')).
fof(f1911,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(forward_demodulation,[],[f1910,f1725])).
fof(f1910,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(forward_demodulation,[],[f1909,f1725])).
fof(f1909,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(forward_demodulation,[],[f1908,f1725])).
fof(f1908,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(subsumption_resolution,[],[f1907,f87])).
fof(f1907,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl9 | $spl126)),
  inference(forward_demodulation,[],[f1906,f1725])).
fof(f1906,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl9 | $spl126)),
  inference(subsumption_resolution,[],[f1874,f92])).
fof(f1874,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl126),
  inference(superposition,[],[f72,f1725])).
fof(f1905,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(forward_demodulation,[],[f1904,f1725])).
fof(f1904,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(forward_demodulation,[],[f1903,f1725])).
fof(f1903,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(forward_demodulation,[],[f1902,f1725])).
fof(f1902,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(subsumption_resolution,[],[f1901,f92])).
fof(f1901,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl126)),
  inference(forward_demodulation,[],[f1900,f1725])).
fof(f1900,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl126)),
  inference(subsumption_resolution,[],[f1871,f87])).
fof(f1871,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl126),
  inference(superposition,[],[f1725,f72])).
fof(f1893,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(forward_demodulation,[],[f1892,f1725])).
fof(f1892,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(forward_demodulation,[],[f1891,f1725])).
fof(f1891,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(forward_demodulation,[],[f1890,f1725])).
fof(f1890,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl126)),
  inference(subsumption_resolution,[],[f1889,f87])).
fof(f1889,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl9 | $spl126)),
  inference(forward_demodulation,[],[f1888,f1725])).
fof(f1888,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl9 | $spl126)),
  inference(subsumption_resolution,[],[f1870,f92])).
fof(f1870,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl126),
  inference(superposition,[],[f1725,f72])).
fof(f1835,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl138),
  inference(cnf_transformation,[],[f1835_D])).
fof(f1835_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f1837,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl140),
  inference(cnf_transformation,[],[f1837_D])).
fof(f1837_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f1839,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl142),
  inference(cnf_transformation,[],[f1839_D])).
fof(f1839_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f1857,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(forward_demodulation,[],[f1856,f1055])).
fof(f1856,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(forward_demodulation,[],[f1855,f1055])).
fof(f1855,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(forward_demodulation,[],[f1854,f1055])).
fof(f1854,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(subsumption_resolution,[],[f1853,f92])).
fof(f1853,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl82)),
  inference(forward_demodulation,[],[f1852,f1055])).
fof(f1852,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl82)),
  inference(subsumption_resolution,[],[f1815,f87])).
fof(f1815,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl82),
  inference(superposition,[],[f72,f1055])).
fof(f1851,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(forward_demodulation,[],[f1850,f1055])).
fof(f1850,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(forward_demodulation,[],[f1849,f1055])).
fof(f1849,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(forward_demodulation,[],[f1848,f1055])).
fof(f1848,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(subsumption_resolution,[],[f1847,f87])).
fof(f1847,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl9 | $spl82)),
  inference(forward_demodulation,[],[f1846,f1055])).
fof(f1846,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl9 | $spl82)),
  inference(subsumption_resolution,[],[f1814,f92])).
fof(f1814,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl82),
  inference(superposition,[],[f72,f1055])).
fof(f1845,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(forward_demodulation,[],[f1844,f1055])).
fof(f1844,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(forward_demodulation,[],[f1843,f1055])).
fof(f1843,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(forward_demodulation,[],[f1842,f1055])).
fof(f1842,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(subsumption_resolution,[],[f1841,f92])).
fof(f1841,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl82)),
  inference(forward_demodulation,[],[f1840,f1055])).
fof(f1840,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl82)),
  inference(subsumption_resolution,[],[f1811,f87])).
fof(f1811,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl82),
  inference(superposition,[],[f1055,f72])).
fof(f1833,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(forward_demodulation,[],[f1832,f1055])).
fof(f1832,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(forward_demodulation,[],[f1831,f1055])).
fof(f1831,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(forward_demodulation,[],[f1830,f1055])).
fof(f1830,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl82)),
  inference(subsumption_resolution,[],[f1829,f87])).
fof(f1829,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl9 | $spl82)),
  inference(forward_demodulation,[],[f1828,f1055])).
fof(f1828,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl9 | $spl82)),
  inference(subsumption_resolution,[],[f1810,f92])).
fof(f1810,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl82),
  inference(superposition,[],[f1055,f72])).
fof(f1055,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl82),
  inference(cnf_transformation,[],[f1055_D])).
fof(f1055_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f1057,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl84),
  inference(cnf_transformation,[],[f1057_D])).
fof(f1057_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f1808,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24 | $spl81)),
  inference(forward_demodulation,[],[f1807,f270])).
fof(f1807,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24 | $spl81)),
  inference(forward_demodulation,[],[f1806,f270])).
fof(f1806,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24 | $spl81)),
  inference(subsumption_resolution,[],[f1805,f92])).
fof(f1805,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl24 | $spl81)),
  inference(forward_demodulation,[],[f1804,f270])).
fof(f1804,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl24 | $spl81)),
  inference(subsumption_resolution,[],[f1803,f87])).
fof(f1803,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl24 | $spl81)),
  inference(forward_demodulation,[],[f1802,f270])).
fof(f1802,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl24 | $spl81)),
  inference(subsumption_resolution,[],[f1799,f270])).
fof(f1799,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl81),
  inference(superposition,[],[f1052,f72])).
fof(f1052,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl81),
  inference(cnf_transformation,[],[f1052_D])).
fof(f1052_D,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) <=> ~$spl81),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl81])])).
fof(f1776,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl132),
  inference(cnf_transformation,[],[f1776_D])).
fof(f1776_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f1778,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl134),
  inference(cnf_transformation,[],[f1778_D])).
fof(f1778_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f1780,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl136),
  inference(cnf_transformation,[],[f1780_D])).
fof(f1780_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f1798,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(forward_demodulation,[],[f1797,f1053])).
fof(f1797,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(forward_demodulation,[],[f1796,f1053])).
fof(f1796,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(forward_demodulation,[],[f1795,f1053])).
fof(f1795,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(subsumption_resolution,[],[f1794,f92])).
fof(f1794,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl80)),
  inference(forward_demodulation,[],[f1793,f1053])).
fof(f1793,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl80)),
  inference(subsumption_resolution,[],[f1756,f87])).
fof(f1756,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl80),
  inference(superposition,[],[f72,f1053])).
fof(f1792,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(forward_demodulation,[],[f1791,f1053])).
fof(f1791,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(forward_demodulation,[],[f1790,f1053])).
fof(f1790,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(forward_demodulation,[],[f1789,f1053])).
fof(f1789,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(subsumption_resolution,[],[f1788,f87])).
fof(f1788,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl9 | $spl80)),
  inference(forward_demodulation,[],[f1787,f1053])).
fof(f1787,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl9 | $spl80)),
  inference(subsumption_resolution,[],[f1755,f92])).
fof(f1755,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl80),
  inference(superposition,[],[f72,f1053])).
fof(f1786,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(forward_demodulation,[],[f1785,f1053])).
fof(f1785,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(forward_demodulation,[],[f1784,f1053])).
fof(f1784,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(forward_demodulation,[],[f1783,f1053])).
fof(f1783,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(subsumption_resolution,[],[f1782,f92])).
fof(f1782,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl80)),
  inference(forward_demodulation,[],[f1781,f1053])).
fof(f1781,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl80)),
  inference(subsumption_resolution,[],[f1752,f87])).
fof(f1752,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl80),
  inference(superposition,[],[f1053,f72])).
fof(f1774,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(forward_demodulation,[],[f1773,f1053])).
fof(f1773,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(forward_demodulation,[],[f1772,f1053])).
fof(f1772,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(forward_demodulation,[],[f1771,f1053])).
fof(f1771,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl7 | $spl9 | $spl80)),
  inference(subsumption_resolution,[],[f1770,f87])).
fof(f1770,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl9 | $spl80)),
  inference(forward_demodulation,[],[f1769,f1053])).
fof(f1769,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | ($spl9 | $spl80)),
  inference(subsumption_resolution,[],[f1751,f92])).
fof(f1751,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))))))))) | $spl80),
  inference(superposition,[],[f1053,f72])).
fof(f1725,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl126),
  inference(cnf_transformation,[],[f1725_D])).
fof(f1725_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f1727,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl128),
  inference(cnf_transformation,[],[f1727_D])).
fof(f1727_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f1729,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl130),
  inference(cnf_transformation,[],[f1729_D])).
fof(f1729_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f1747,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(forward_demodulation,[],[f1746,f272])).
fof(f1746,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(forward_demodulation,[],[f1745,f272])).
fof(f1745,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(forward_demodulation,[],[f1744,f272])).
fof(f1744,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(subsumption_resolution,[],[f1743,f92])).
fof(f1743,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl26)),
  inference(forward_demodulation,[],[f1742,f272])).
fof(f1742,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl26)),
  inference(subsumption_resolution,[],[f1705,f87])).
fof(f1705,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl26),
  inference(superposition,[],[f72,f272])).
fof(f1741,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(forward_demodulation,[],[f1740,f272])).
fof(f1740,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(forward_demodulation,[],[f1739,f272])).
fof(f1739,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(forward_demodulation,[],[f1738,f272])).
fof(f1738,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(subsumption_resolution,[],[f1737,f87])).
fof(f1737,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl9 | $spl26)),
  inference(forward_demodulation,[],[f1736,f272])).
fof(f1736,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl9 | $spl26)),
  inference(subsumption_resolution,[],[f1704,f92])).
fof(f1704,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl26),
  inference(superposition,[],[f72,f272])).
fof(f1735,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(forward_demodulation,[],[f1734,f272])).
fof(f1734,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(forward_demodulation,[],[f1733,f272])).
fof(f1733,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(forward_demodulation,[],[f1732,f272])).
fof(f1732,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(subsumption_resolution,[],[f1731,f92])).
fof(f1731,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl26)),
  inference(forward_demodulation,[],[f1730,f272])).
fof(f1730,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl26)),
  inference(subsumption_resolution,[],[f1701,f87])).
fof(f1701,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl26),
  inference(superposition,[],[f272,f72])).
fof(f1723,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(forward_demodulation,[],[f1722,f272])).
fof(f1722,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(forward_demodulation,[],[f1721,f272])).
fof(f1721,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(forward_demodulation,[],[f1720,f272])).
fof(f1720,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl26)),
  inference(subsumption_resolution,[],[f1719,f87])).
fof(f1719,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl9 | $spl26)),
  inference(forward_demodulation,[],[f1718,f272])).
fof(f1718,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl9 | $spl26)),
  inference(subsumption_resolution,[],[f1700,f92])).
fof(f1700,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl26),
  inference(superposition,[],[f272,f72])).
fof(f1053,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl80),
  inference(cnf_transformation,[],[f1053_D])).
fof(f1053_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f1698,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1697,f270])).
fof(f1697,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1696,f270])).
fof(f1696,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1695,f270])).
fof(f1695,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(subsumption_resolution,[],[f1694,f92])).
fof(f1694,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl24)),
  inference(forward_demodulation,[],[f1693,f270])).
fof(f1693,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl24)),
  inference(subsumption_resolution,[],[f1662,f87])).
fof(f1662,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl24),
  inference(superposition,[],[f72,f270])).
fof(f1692,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1691,f270])).
fof(f1691,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1690,f270])).
fof(f1690,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1689,f270])).
fof(f1689,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(subsumption_resolution,[],[f1688,f87])).
fof(f1688,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl9 | $spl24)),
  inference(forward_demodulation,[],[f1687,f270])).
fof(f1687,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl9 | $spl24)),
  inference(subsumption_resolution,[],[f1661,f92])).
fof(f1661,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl24),
  inference(superposition,[],[f72,f270])).
fof(f1686,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1685,f270])).
fof(f1685,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1684,f270])).
fof(f1684,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1683,f270])).
fof(f1683,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(subsumption_resolution,[],[f1682,f92])).
fof(f1682,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl24)),
  inference(forward_demodulation,[],[f1681,f270])).
fof(f1681,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl24)),
  inference(subsumption_resolution,[],[f1658,f87])).
fof(f1658,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl24),
  inference(superposition,[],[f270,f72])).
fof(f1680,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1679,f270])).
fof(f1679,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1678,f270])).
fof(f1678,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1677,f270])).
fof(f1677,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(subsumption_resolution,[],[f1676,f87])).
fof(f1676,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl9 | $spl24)),
  inference(forward_demodulation,[],[f1675,f270])).
fof(f1675,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl9 | $spl24)),
  inference(subsumption_resolution,[],[f1657,f92])).
fof(f1657,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl24),
  inference(superposition,[],[f270,f72])).
fof(f270,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl24),
  inference(cnf_transformation,[],[f270_D])).
fof(f270_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f272,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl26),
  inference(cnf_transformation,[],[f272_D])).
fof(f272_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f274,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl28),
  inference(cnf_transformation,[],[f274_D])).
fof(f274_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f1655,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1654,f82])).
fof(f1654,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1653,f82])).
fof(f1653,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1652,f82])).
fof(f1652,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f1651,f92])).
fof(f1651,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7)),
  inference(forward_demodulation,[],[f1650,f82])).
fof(f1650,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f1619,f87])).
fof(f1619,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl0),
  inference(superposition,[],[f72,f82])).
fof(f1649,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1648,f82])).
fof(f1648,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1647,f82])).
fof(f1647,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1646,f82])).
fof(f1646,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f1645,f87])).
fof(f1645,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl9)),
  inference(forward_demodulation,[],[f1644,f82])).
fof(f1644,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl9)),
  inference(subsumption_resolution,[],[f1618,f92])).
fof(f1618,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl0),
  inference(superposition,[],[f72,f82])).
fof(f1643,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1642,f82])).
fof(f1642,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1641,f82])).
fof(f1641,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1640,f82])).
fof(f1640,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f1639,f92])).
fof(f1639,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7)),
  inference(forward_demodulation,[],[f1638,f82])).
fof(f1638,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f1616,f87])).
fof(f1616,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl0),
  inference(superposition,[],[f82,f72])).
fof(f1637,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1636,f82])).
fof(f1636,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1635,f82])).
fof(f1635,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1634,f82])).
fof(f1634,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f1633,f87])).
fof(f1633,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl9)),
  inference(forward_demodulation,[],[f1632,f82])).
fof(f1632,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl9)),
  inference(subsumption_resolution,[],[f1615,f92])).
fof(f1615,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl0),
  inference(superposition,[],[f82,f72])).
fof(f1077,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl86),
  inference(cnf_transformation,[],[f1077_D])).
fof(f1077_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f1079,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl88),
  inference(cnf_transformation,[],[f1079_D])).
fof(f1079_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f1081,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | $spl90),
  inference(cnf_transformation,[],[f1081_D])).
fof(f1081_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f1083,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | $spl92),
  inference(cnf_transformation,[],[f1083_D])).
fof(f1083_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f84,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | $spl2),
  inference(cnf_transformation,[],[f84_D])).
fof(f84_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f1129,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl10),
  inference(superposition,[],[f116,f72])).
fof(f1132,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl10),
  inference(superposition,[],[f72,f116])).
fof(f1600,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl118),
  inference(cnf_transformation,[],[f1600_D])).
fof(f1600_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f1602,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl120),
  inference(cnf_transformation,[],[f1602_D])).
fof(f1602_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f1604,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl122),
  inference(cnf_transformation,[],[f1604_D])).
fof(f1604_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f1606,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl124),
  inference(cnf_transformation,[],[f1606_D])).
fof(f1606_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f81,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl1),
  inference(cnf_transformation,[],[f81_D])).
fof(f81_D,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f1230,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl25),
  inference(superposition,[],[f269,f72])).
fof(f269,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl25),
  inference(cnf_transformation,[],[f269_D])).
fof(f269_D,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f1562,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f1561,f66])).
fof(f1561,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,happ(s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))) != s(sK0,happ(s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | $spl2),
  inference(forward_demodulation,[],[f1403,f1086])).
fof(f1086,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun('type.list.list'('type.clos_known.val_approx'),X0),X1),s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',sK2),s(fun('type.num.num',fun('type.num.num',X0)),X2),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X1),s(fun('type.integer.int',X0),X3),s(X0,X4),s(X0,X5)))) ) | $spl2),
  inference(superposition,[],[f68,f84])).
fof(f68,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun('type.list.list'('type.clos_known.val_approx'),X0),X3),s('type.list.list'('type.clos_known.val_approx'),X1))) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s(fun('type.num.num',fun('type.num.num',X0)),X2),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X3),s(fun('type.integer.int',X0),X4),s(X0,X5),s(X0,X6)))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s(X0,happ(s(fun('type.list.list'('type.clos_known.val_approx'),X0),X3),s('type.list.list'('type.clos_known.val_approx'),X1))) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s(fun('type.num.num',fun('type.num.num',X0)),X2),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X3),s(fun('type.integer.int',X0),X4),s(X0,X5),s(X0,X6)))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5,X6] : s(X0,happ(s(fun('type.list.list'('type.clos_known.val_approx'),X0),X3),s('type.list.list'('type.clos_known.val_approx'),X1))) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s(fun('type.num.num',fun('type.num.num',X0)),X2),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X3),s(fun('type.integer.int',X0),X4),s(X0,X5),s(X0,X6)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7] : ! [X18,X14,X12,X11,X10,X9] : s(X7,happ(s(fun('type.list.list'('type.clos_known.val_approx'),X7),X12),s('type.list.list'('type.clos_known.val_approx'),X18))) = s(X7,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))),s(fun('type.num.num',fun('type.num.num',X7)),X14),s(fun('type.list.list'('type.clos_known.val_approx'),X7),X12),s(fun('type.integer.int',X7),X11),s(X7,X10),s(X7,X9)))),
  file('thm.clos_knownProof.clos_knownProof_3_prove_ltb','thm.clos_known.val_approx_case_def|split|1')).
fof(f1403,plain,(
  s(sK0,happ(s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',sK2),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) | $spl2),
  inference(backward_demodulation,[],[f1086,f54])).
fof(f1379,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl112),
  inference(cnf_transformation,[],[f1379_D])).
fof(f1379_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f1381,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl114),
  inference(cnf_transformation,[],[f1381_D])).
fof(f1381_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f1383,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl116),
  inference(cnf_transformation,[],[f1383_D])).
fof(f1383_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f1402,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(forward_demodulation,[],[f1401,f380])).
fof(f1401,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(forward_demodulation,[],[f1400,f380])).
fof(f1400,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(forward_demodulation,[],[f1399,f380])).
fof(f1399,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(subsumption_resolution,[],[f1398,f92])).
fof(f1398,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl34)),
  inference(forward_demodulation,[],[f1397,f380])).
fof(f1397,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl34)),
  inference(subsumption_resolution,[],[f1358,f87])).
fof(f1358,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl34),
  inference(superposition,[],[f72,f380])).
fof(f1396,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(forward_demodulation,[],[f1395,f380])).
fof(f1395,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(forward_demodulation,[],[f1394,f380])).
fof(f1394,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(forward_demodulation,[],[f1393,f380])).
fof(f1393,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(subsumption_resolution,[],[f1392,f87])).
fof(f1392,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl9 | $spl34)),
  inference(forward_demodulation,[],[f1391,f380])).
fof(f1391,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl9 | $spl34)),
  inference(subsumption_resolution,[],[f1357,f92])).
fof(f1357,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl34),
  inference(superposition,[],[f72,f380])).
fof(f855,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl72),
  inference(cnf_transformation,[],[f855_D])).
fof(f855_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f849,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl66),
  inference(cnf_transformation,[],[f849_D])).
fof(f849_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f851,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl68),
  inference(cnf_transformation,[],[f851_D])).
fof(f851_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f853,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl70),
  inference(cnf_transformation,[],[f853_D])).
fof(f853_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f1390,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl19 | $spl34)),
  inference(subsumption_resolution,[],[f1355,f180])).
fof(f1355,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl34),
  inference(superposition,[],[f72,f380])).
fof(f1389,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(forward_demodulation,[],[f1388,f380])).
fof(f1388,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(forward_demodulation,[],[f1387,f380])).
fof(f1387,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(forward_demodulation,[],[f1386,f380])).
fof(f1386,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(subsumption_resolution,[],[f1385,f92])).
fof(f1385,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl34)),
  inference(forward_demodulation,[],[f1384,f380])).
fof(f1384,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl34)),
  inference(subsumption_resolution,[],[f1354,f87])).
fof(f1354,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl34),
  inference(superposition,[],[f380,f72])).
fof(f1377,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(forward_demodulation,[],[f1376,f380])).
fof(f1376,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(forward_demodulation,[],[f1375,f380])).
fof(f1375,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(forward_demodulation,[],[f1374,f380])).
fof(f1374,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl34)),
  inference(subsumption_resolution,[],[f1373,f87])).
fof(f1373,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl9 | $spl34)),
  inference(forward_demodulation,[],[f1372,f380])).
fof(f1372,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl9 | $spl34)),
  inference(subsumption_resolution,[],[f1353,f92])).
fof(f1353,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl34),
  inference(superposition,[],[f380,f72])).
fof(f1371,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl19 | $spl34)),
  inference(subsumption_resolution,[],[f1352,f180])).
fof(f1352,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl34),
  inference(superposition,[],[f380,f72])).
fof(f1318,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | $spl106),
  inference(cnf_transformation,[],[f1318_D])).
fof(f1318_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f1320,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | $spl108),
  inference(cnf_transformation,[],[f1320_D])).
fof(f1320_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f1322,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | $spl110),
  inference(cnf_transformation,[],[f1322_D])).
fof(f1322_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f1340,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(forward_demodulation,[],[f1339,f935])).
fof(f1339,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(forward_demodulation,[],[f1338,f935])).
fof(f1338,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(forward_demodulation,[],[f1337,f935])).
fof(f1337,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(subsumption_resolution,[],[f1336,f92])).
fof(f1336,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl76)),
  inference(forward_demodulation,[],[f1335,f935])).
fof(f1335,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl76)),
  inference(subsumption_resolution,[],[f1298,f87])).
fof(f1298,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | $spl76),
  inference(superposition,[],[f72,f935])).
fof(f1334,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(forward_demodulation,[],[f1333,f935])).
fof(f1333,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(forward_demodulation,[],[f1332,f935])).
fof(f1332,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(forward_demodulation,[],[f1331,f935])).
fof(f1331,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(subsumption_resolution,[],[f1330,f87])).
fof(f1330,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl9 | $spl76)),
  inference(forward_demodulation,[],[f1329,f935])).
fof(f1329,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl9 | $spl76)),
  inference(subsumption_resolution,[],[f1297,f92])).
fof(f1297,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | $spl76),
  inference(superposition,[],[f72,f935])).
fof(f1328,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(forward_demodulation,[],[f1327,f935])).
fof(f1327,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(forward_demodulation,[],[f1326,f935])).
fof(f1326,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(forward_demodulation,[],[f1325,f935])).
fof(f1325,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(subsumption_resolution,[],[f1324,f92])).
fof(f1324,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl76)),
  inference(forward_demodulation,[],[f1323,f935])).
fof(f1323,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl76)),
  inference(subsumption_resolution,[],[f1294,f87])).
fof(f1294,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | $spl76),
  inference(superposition,[],[f935,f72])).
fof(f1316,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(forward_demodulation,[],[f1315,f935])).
fof(f1315,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(forward_demodulation,[],[f1314,f935])).
fof(f1314,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(forward_demodulation,[],[f1313,f935])).
fof(f1313,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl76)),
  inference(subsumption_resolution,[],[f1312,f87])).
fof(f1312,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl9 | $spl76)),
  inference(forward_demodulation,[],[f1311,f935])).
fof(f1311,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl9 | $spl76)),
  inference(subsumption_resolution,[],[f1293,f92])).
fof(f1293,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | $spl76),
  inference(superposition,[],[f935,f72])).
fof(f935,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl76),
  inference(cnf_transformation,[],[f935_D])).
fof(f935_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f937,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl78),
  inference(cnf_transformation,[],[f937_D])).
fof(f937_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f1291,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10 | $spl75)),
  inference(forward_demodulation,[],[f1290,f116])).
fof(f1290,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10 | $spl75)),
  inference(forward_demodulation,[],[f1289,f116])).
fof(f1289,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10 | $spl75)),
  inference(subsumption_resolution,[],[f1288,f92])).
fof(f1288,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl10 | $spl75)),
  inference(forward_demodulation,[],[f1287,f116])).
fof(f1287,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl10 | $spl75)),
  inference(subsumption_resolution,[],[f1286,f87])).
fof(f1286,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl10 | $spl75)),
  inference(forward_demodulation,[],[f1285,f116])).
fof(f1285,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl10 | $spl75)),
  inference(subsumption_resolution,[],[f1282,f116])).
fof(f1282,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl75),
  inference(superposition,[],[f932,f72])).
fof(f932,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl75),
  inference(cnf_transformation,[],[f932_D])).
fof(f932_D,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) <=> ~$spl75),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl75])])).
fof(f1259,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | $spl100),
  inference(cnf_transformation,[],[f1259_D])).
fof(f1259_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f1261,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | $spl102),
  inference(cnf_transformation,[],[f1261_D])).
fof(f1261_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f1263,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | $spl104),
  inference(cnf_transformation,[],[f1263_D])).
fof(f1263_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f1281,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(forward_demodulation,[],[f1280,f933])).
fof(f1280,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(forward_demodulation,[],[f1279,f933])).
fof(f1279,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(forward_demodulation,[],[f1278,f933])).
fof(f1278,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(subsumption_resolution,[],[f1277,f92])).
fof(f1277,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl74)),
  inference(forward_demodulation,[],[f1276,f933])).
fof(f1276,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl74)),
  inference(subsumption_resolution,[],[f1239,f87])).
fof(f1239,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | $spl74),
  inference(superposition,[],[f72,f933])).
fof(f1275,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(forward_demodulation,[],[f1274,f933])).
fof(f1274,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(forward_demodulation,[],[f1273,f933])).
fof(f1273,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(forward_demodulation,[],[f1272,f933])).
fof(f1272,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(subsumption_resolution,[],[f1271,f87])).
fof(f1271,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl9 | $spl74)),
  inference(forward_demodulation,[],[f1270,f933])).
fof(f1270,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl9 | $spl74)),
  inference(subsumption_resolution,[],[f1238,f92])).
fof(f1238,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | $spl74),
  inference(superposition,[],[f72,f933])).
fof(f1269,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(forward_demodulation,[],[f1268,f933])).
fof(f1268,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(forward_demodulation,[],[f1267,f933])).
fof(f1267,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(forward_demodulation,[],[f1266,f933])).
fof(f1266,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(subsumption_resolution,[],[f1265,f92])).
fof(f1265,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl74)),
  inference(forward_demodulation,[],[f1264,f933])).
fof(f1264,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl74)),
  inference(subsumption_resolution,[],[f1235,f87])).
fof(f1235,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | $spl74),
  inference(superposition,[],[f933,f72])).
fof(f1257,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(forward_demodulation,[],[f1256,f933])).
fof(f1256,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(forward_demodulation,[],[f1255,f933])).
fof(f1255,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(forward_demodulation,[],[f1254,f933])).
fof(f1254,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl7 | $spl9 | $spl74)),
  inference(subsumption_resolution,[],[f1253,f87])).
fof(f1253,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl9 | $spl74)),
  inference(forward_demodulation,[],[f1252,f933])).
fof(f1252,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | ($spl9 | $spl74)),
  inference(subsumption_resolution,[],[f1234,f92])).
fof(f1234,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))))))))) | $spl74),
  inference(superposition,[],[f933,f72])).
fof(f1198,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl94),
  inference(cnf_transformation,[],[f1198_D])).
fof(f1198_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f1200,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl96),
  inference(cnf_transformation,[],[f1200_D])).
fof(f1200_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f1202,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl98),
  inference(cnf_transformation,[],[f1202_D])).
fof(f1202_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f1220,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(forward_demodulation,[],[f1219,f118])).
fof(f1219,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(forward_demodulation,[],[f1218,f118])).
fof(f1218,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(forward_demodulation,[],[f1217,f118])).
fof(f1217,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(subsumption_resolution,[],[f1216,f92])).
fof(f1216,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl12)),
  inference(forward_demodulation,[],[f1215,f118])).
fof(f1215,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl12)),
  inference(subsumption_resolution,[],[f1178,f87])).
fof(f1178,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl12),
  inference(superposition,[],[f72,f118])).
fof(f1214,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(forward_demodulation,[],[f1213,f118])).
fof(f1213,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(forward_demodulation,[],[f1212,f118])).
fof(f1212,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(forward_demodulation,[],[f1211,f118])).
fof(f1211,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(subsumption_resolution,[],[f1210,f87])).
fof(f1210,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl9 | $spl12)),
  inference(forward_demodulation,[],[f1209,f118])).
fof(f1209,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl9 | $spl12)),
  inference(subsumption_resolution,[],[f1177,f92])).
fof(f1177,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl12),
  inference(superposition,[],[f72,f118])).
fof(f1208,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(forward_demodulation,[],[f1207,f118])).
fof(f1207,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(forward_demodulation,[],[f1206,f118])).
fof(f1206,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(forward_demodulation,[],[f1205,f118])).
fof(f1205,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(subsumption_resolution,[],[f1204,f92])).
fof(f1204,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl12)),
  inference(forward_demodulation,[],[f1203,f118])).
fof(f1203,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl12)),
  inference(subsumption_resolution,[],[f1174,f87])).
fof(f1174,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl12),
  inference(superposition,[],[f118,f72])).
fof(f1196,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(forward_demodulation,[],[f1195,f118])).
fof(f1195,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(forward_demodulation,[],[f1194,f118])).
fof(f1194,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(forward_demodulation,[],[f1193,f118])).
fof(f1193,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl12)),
  inference(subsumption_resolution,[],[f1192,f87])).
fof(f1192,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl9 | $spl12)),
  inference(forward_demodulation,[],[f1191,f118])).
fof(f1191,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl9 | $spl12)),
  inference(subsumption_resolution,[],[f1173,f92])).
fof(f1173,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl12),
  inference(superposition,[],[f118,f72])).
fof(f933,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl74),
  inference(cnf_transformation,[],[f933_D])).
fof(f933_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f1171,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f1170,f116])).
fof(f1170,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f1169,f116])).
fof(f1169,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f1168,f116])).
fof(f1168,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f1167,f92])).
fof(f1167,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl10)),
  inference(forward_demodulation,[],[f1166,f116])).
fof(f1166,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl10)),
  inference(subsumption_resolution,[],[f1135,f87])).
fof(f1135,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl10),
  inference(superposition,[],[f72,f116])).
fof(f1165,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f1164,f116])).
fof(f1164,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f1163,f116])).
fof(f1163,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f1162,f116])).
fof(f1162,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f1161,f87])).
fof(f1161,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl9 | $spl10)),
  inference(forward_demodulation,[],[f1160,f116])).
fof(f1160,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl9 | $spl10)),
  inference(subsumption_resolution,[],[f1134,f92])).
fof(f1134,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl10),
  inference(superposition,[],[f72,f116])).
fof(f1159,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f1158,f116])).
fof(f1158,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f1157,f116])).
fof(f1157,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f1156,f116])).
fof(f1156,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f1155,f92])).
fof(f1155,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl10)),
  inference(forward_demodulation,[],[f1154,f116])).
fof(f1154,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl10)),
  inference(subsumption_resolution,[],[f1131,f87])).
fof(f1131,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl10),
  inference(superposition,[],[f116,f72])).
fof(f1153,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f1152,f116])).
fof(f1152,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f1151,f116])).
fof(f1151,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f1150,f116])).
fof(f1150,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f1149,f87])).
fof(f1149,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl9 | $spl10)),
  inference(forward_demodulation,[],[f1148,f116])).
fof(f1148,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl9 | $spl10)),
  inference(subsumption_resolution,[],[f1130,f92])).
fof(f1130,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl10),
  inference(superposition,[],[f116,f72])).
fof(f116,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl10),
  inference(cnf_transformation,[],[f116_D])).
fof(f116_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f118,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl12),
  inference(cnf_transformation,[],[f118_D])).
fof(f118_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f120,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl14),
  inference(cnf_transformation,[],[f120_D])).
fof(f120_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f1124,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1123,f84])).
fof(f1123,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1122,f84])).
fof(f1122,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1121,f84])).
fof(f1121,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f1120,f92])).
fof(f1120,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7)),
  inference(forward_demodulation,[],[f1119,f84])).
fof(f1119,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f1088,f87])).
fof(f1088,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(superposition,[],[f72,f84])).
fof(f1118,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1117,f84])).
fof(f1117,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1116,f84])).
fof(f1116,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1115,f84])).
fof(f1115,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f1114,f87])).
fof(f1114,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl9)),
  inference(forward_demodulation,[],[f1113,f84])).
fof(f1113,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl9)),
  inference(subsumption_resolution,[],[f1087,f92])).
fof(f1087,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(superposition,[],[f72,f84])).
fof(f1112,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1111,f84])).
fof(f1111,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1110,f84])).
fof(f1110,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1109,f84])).
fof(f1109,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f1108,f92])).
fof(f1108,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7)),
  inference(forward_demodulation,[],[f1107,f84])).
fof(f1107,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f1085,f87])).
fof(f1085,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(superposition,[],[f84,f72])).
fof(f1106,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1105,f84])).
fof(f1105,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1104,f84])).
fof(f1104,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1103,f84])).
fof(f1103,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f1102,f87])).
fof(f1102,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl9)),
  inference(forward_demodulation,[],[f1101,f84])).
fof(f1101,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl9)),
  inference(subsumption_resolution,[],[f1084,f92])).
fof(f1084,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(superposition,[],[f84,f72])).
fof(f83,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | $spl3),
  inference(cnf_transformation,[],[f83_D])).
fof(f83_D,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f1024,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl11),
  inference(superposition,[],[f115,f72])).
fof(f115,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl11),
  inference(cnf_transformation,[],[f115_D])).
fof(f115_D,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f1075,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1074,f270])).
fof(f1074,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1073,f270])).
fof(f1073,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1072,f270])).
fof(f1072,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(subsumption_resolution,[],[f1071,f92])).
fof(f1071,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl24)),
  inference(forward_demodulation,[],[f1070,f270])).
fof(f1070,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl24)),
  inference(subsumption_resolution,[],[f1033,f87])).
fof(f1033,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl24),
  inference(superposition,[],[f72,f270])).
fof(f1069,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1068,f270])).
fof(f1068,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1067,f270])).
fof(f1067,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1066,f270])).
fof(f1066,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(subsumption_resolution,[],[f1065,f87])).
fof(f1065,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl9 | $spl24)),
  inference(forward_demodulation,[],[f1064,f270])).
fof(f1064,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl9 | $spl24)),
  inference(subsumption_resolution,[],[f1032,f92])).
fof(f1032,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl24),
  inference(superposition,[],[f72,f270])).
fof(f1063,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1062,f270])).
fof(f1062,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1061,f270])).
fof(f1061,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1060,f270])).
fof(f1060,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(subsumption_resolution,[],[f1059,f92])).
fof(f1059,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl24)),
  inference(forward_demodulation,[],[f1058,f270])).
fof(f1058,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl24)),
  inference(subsumption_resolution,[],[f1029,f87])).
fof(f1029,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl24),
  inference(superposition,[],[f270,f72])).
fof(f1051,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1050,f270])).
fof(f1050,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1049,f270])).
fof(f1049,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(forward_demodulation,[],[f1048,f270])).
fof(f1048,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl7 | $spl9 | $spl24)),
  inference(subsumption_resolution,[],[f1047,f87])).
fof(f1047,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl9 | $spl24)),
  inference(forward_demodulation,[],[f1046,f270])).
fof(f1046,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | ($spl9 | $spl24)),
  inference(subsumption_resolution,[],[f1028,f92])).
fof(f1028,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))))))))) | $spl24),
  inference(superposition,[],[f270,f72])).
fof(f1023,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1022,f82])).
fof(f1022,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1021,f82])).
fof(f1021,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1020,f82])).
fof(f1020,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f1019,f92])).
fof(f1019,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7)),
  inference(forward_demodulation,[],[f1018,f82])).
fof(f1018,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f987,f87])).
fof(f987,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl0),
  inference(superposition,[],[f72,f82])).
fof(f1017,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1016,f82])).
fof(f1016,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1015,f82])).
fof(f1015,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1014,f82])).
fof(f1014,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f1013,f87])).
fof(f1013,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl9)),
  inference(forward_demodulation,[],[f1012,f82])).
fof(f1012,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl9)),
  inference(subsumption_resolution,[],[f986,f92])).
fof(f986,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl0),
  inference(superposition,[],[f72,f82])).
fof(f1011,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1010,f82])).
fof(f1010,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1009,f82])).
fof(f1009,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1008,f82])).
fof(f1008,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f1007,f92])).
fof(f1007,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7)),
  inference(forward_demodulation,[],[f1006,f82])).
fof(f1006,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f984,f87])).
fof(f984,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl0),
  inference(superposition,[],[f82,f72])).
fof(f1005,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1004,f82])).
fof(f1004,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1003,f82])).
fof(f1003,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f1002,f82])).
fof(f1002,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f1001,f87])).
fof(f1001,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl9)),
  inference(forward_demodulation,[],[f1000,f82])).
fof(f1000,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl9)),
  inference(subsumption_resolution,[],[f983,f92])).
fof(f983,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl0),
  inference(superposition,[],[f82,f72])).
fof(f82,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl0),
  inference(cnf_transformation,[],[f82_D])).
fof(f82_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f975,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl9)),
  inference(trivial_inequality_removal,[],[f974])).
fof(f974,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl9)),
  inference(forward_demodulation,[],[f973,f70])).
fof(f70,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,X5) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',X0)),X1),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X2),s(fun('type.integer.int',X0),X3),s(X0,X4),s(X0,X5)))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,X5) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',X0)),X1),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X2),s(fun('type.integer.int',X0),X3),s(X0,X4),s(X0,X5)))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s(X0,X5) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',X0)),X1),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X2),s(fun('type.integer.int',X0),X3),s(X0,X4),s(X0,X5)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X7] : ! [X14,X12,X11,X10,X9] : s(X7,X9) = s(X7,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',X7)),X14),s(fun('type.list.list'('type.clos_known.val_approx'),X7),X12),s(fun('type.integer.int',X7),X11),s(X7,X10),s(X7,X9)))),
  file('thm.clos_knownProof.clos_knownProof_3_prove_ltb','thm.clos_known.val_approx_case_def|split|4')).
fof(f973,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl9)),
  inference(forward_demodulation,[],[f972,f70])).
fof(f972,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl9)),
  inference(subsumption_resolution,[],[f971,f85])).
fof(f971,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl9),
  inference(subsumption_resolution,[],[f965,f92])).
fof(f965,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),
  inference(superposition,[],[f54,f72])).
fof(f970,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl7)),
  inference(trivial_inequality_removal,[],[f969])).
fof(f969,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl7)),
  inference(forward_demodulation,[],[f968,f71])).
fof(f71,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,X4) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',X0)),X1),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X2),s(fun('type.integer.int',X0),X3),s(X0,X4),s(X0,X5)))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,X4) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',X0)),X1),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X2),s(fun('type.integer.int',X0),X3),s(X0,X4),s(X0,X5)))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s(X0,X4) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',X0)),X1),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X2),s(fun('type.integer.int',X0),X3),s(X0,X4),s(X0,X5)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X7] : ! [X14,X12,X11,X10,X9] : s(X7,X10) = s(X7,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',X7)),X14),s(fun('type.list.list'('type.clos_known.val_approx'),X7),X12),s(fun('type.integer.int',X7),X11),s(X7,X10),s(X7,X9)))),
  file('thm.clos_knownProof.clos_knownProof_3_prove_ltb','thm.clos_known.val_approx_case_def|split|3')).
fof(f968,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl7)),
  inference(forward_demodulation,[],[f967,f71])).
fof(f967,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl7)),
  inference(subsumption_resolution,[],[f966,f85])).
fof(f966,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl7),
  inference(subsumption_resolution,[],[f964,f87])).
fof(f964,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),
  inference(superposition,[],[f54,f72])).
fof(f963,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl9)),
  inference(trivial_inequality_removal,[],[f962])).
fof(f962,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl9)),
  inference(forward_demodulation,[],[f961,f70])).
fof(f961,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl9)),
  inference(forward_demodulation,[],[f960,f70])).
fof(f960,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl9)),
  inference(subsumption_resolution,[],[f300,f85])).
fof(f300,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl9),
  inference(subsumption_resolution,[],[f294,f92])).
fof(f294,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),
  inference(superposition,[],[f54,f72])).
fof(f959,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl7)),
  inference(trivial_inequality_removal,[],[f958])).
fof(f958,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl7)),
  inference(forward_demodulation,[],[f957,f71])).
fof(f957,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl7)),
  inference(forward_demodulation,[],[f956,f71])).
fof(f956,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl7)),
  inference(subsumption_resolution,[],[f295,f85])).
fof(f295,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl7),
  inference(subsumption_resolution,[],[f293,f87])).
fof(f293,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),
  inference(superposition,[],[f54,f72])).
fof(f861,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f860,f92])).
fof(f860,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl7)),
  inference(subsumption_resolution,[],[f859,f87])).
fof(f859,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl5),
  inference(trivial_inequality_removal,[],[f856])).
fof(f856,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl5),
  inference(superposition,[],[f85,f72])).
fof(f955,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f954,f116])).
fof(f954,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f953,f116])).
fof(f953,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f952,f116])).
fof(f952,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f951,f92])).
fof(f951,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl10)),
  inference(forward_demodulation,[],[f950,f116])).
fof(f950,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl10)),
  inference(subsumption_resolution,[],[f913,f87])).
fof(f913,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl10),
  inference(superposition,[],[f72,f116])).
fof(f949,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f948,f116])).
fof(f948,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f947,f116])).
fof(f947,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f946,f116])).
fof(f946,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f945,f87])).
fof(f945,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl9 | $spl10)),
  inference(forward_demodulation,[],[f944,f116])).
fof(f944,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl9 | $spl10)),
  inference(subsumption_resolution,[],[f912,f92])).
fof(f912,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl10),
  inference(superposition,[],[f72,f116])).
fof(f943,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f942,f116])).
fof(f942,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f941,f116])).
fof(f941,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f940,f116])).
fof(f940,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f939,f92])).
fof(f939,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl10)),
  inference(forward_demodulation,[],[f938,f116])).
fof(f938,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl10)),
  inference(subsumption_resolution,[],[f909,f87])).
fof(f909,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl10),
  inference(superposition,[],[f116,f72])).
fof(f931,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f930,f116])).
fof(f930,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f929,f116])).
fof(f929,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(forward_demodulation,[],[f928,f116])).
fof(f928,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl7 | $spl9 | $spl10)),
  inference(subsumption_resolution,[],[f927,f87])).
fof(f927,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl9 | $spl10)),
  inference(forward_demodulation,[],[f926,f116])).
fof(f926,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | ($spl9 | $spl10)),
  inference(subsumption_resolution,[],[f908,f92])).
fof(f908,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))))))))) | $spl10),
  inference(superposition,[],[f116,f72])).
fof(f903,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f902,f84])).
fof(f902,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f901,f84])).
fof(f901,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f900,f84])).
fof(f900,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f899,f92])).
fof(f899,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7)),
  inference(forward_demodulation,[],[f898,f84])).
fof(f898,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f867,f87])).
fof(f867,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(superposition,[],[f72,f84])).
fof(f897,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f896,f84])).
fof(f896,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f895,f84])).
fof(f895,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f894,f84])).
fof(f894,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f893,f87])).
fof(f893,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl9)),
  inference(forward_demodulation,[],[f892,f84])).
fof(f892,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl9)),
  inference(subsumption_resolution,[],[f866,f92])).
fof(f866,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(superposition,[],[f72,f84])).
fof(f891,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f890,f84])).
fof(f890,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f889,f84])).
fof(f889,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f888,f84])).
fof(f888,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f887,f92])).
fof(f887,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7)),
  inference(forward_demodulation,[],[f886,f84])).
fof(f886,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f864,f87])).
fof(f864,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(superposition,[],[f84,f72])).
fof(f885,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f884,f84])).
fof(f884,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f883,f84])).
fof(f883,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f882,f84])).
fof(f882,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f881,f87])).
fof(f881,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl9)),
  inference(forward_demodulation,[],[f880,f84])).
fof(f880,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | ($spl2 | $spl9)),
  inference(subsumption_resolution,[],[f863,f92])).
fof(f863,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(superposition,[],[f84,f72])).
fof(f847,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl64),
  inference(cnf_transformation,[],[f847_D])).
fof(f847_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f180,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl19),
  inference(cnf_transformation,[],[f180_D])).
fof(f180_D,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f550,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl31),
  inference(superposition,[],[f375,f72])).
fof(f375,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl31),
  inference(cnf_transformation,[],[f375_D])).
fof(f375_D,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f609,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl33),
  inference(superposition,[],[f377,f72])).
fof(f377,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl33),
  inference(cnf_transformation,[],[f377_D])).
fof(f377_D,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f837,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl56),
  inference(cnf_transformation,[],[f837_D])).
fof(f837_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f845,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl62),
  inference(cnf_transformation,[],[f845_D])).
fof(f845_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f839,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | $spl58),
  inference(cnf_transformation,[],[f839_D])).
fof(f839_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f841,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | $spl60),
  inference(cnf_transformation,[],[f841_D])).
fof(f841_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f85,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | $spl5),
  inference(cnf_transformation,[],[f85_D])).
fof(f85_D,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f620,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl23),
  inference(superposition,[],[f184,f72])).
fof(f184,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl23),
  inference(cnf_transformation,[],[f184_D])).
fof(f184_D,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f86,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | $spl4),
  inference(cnf_transformation,[],[f86_D])).
fof(f86_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f843,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | ($spl1 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f842,f92])).
fof(f842,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | ($spl1 | $spl7)),
  inference(subsumption_resolution,[],[f349,f87])).
fof(f349,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | $spl1),
  inference(trivial_inequality_removal,[],[f346])).
fof(f346,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | $spl1),
  inference(superposition,[],[f81,f72])).
fof(f835,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl54),
  inference(cnf_transformation,[],[f835_D])).
fof(f835_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f458,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl18),
  inference(superposition,[],[f181,f72])).
fof(f461,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl18),
  inference(superposition,[],[f72,f181])).
fof(f832,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | ($spl1 | $spl7)),
  inference(trivial_inequality_removal,[],[f831])).
fof(f831,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | ($spl1 | $spl7)),
  inference(forward_demodulation,[],[f830,f71])).
fof(f830,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | ($spl1 | $spl7)),
  inference(forward_demodulation,[],[f829,f71])).
fof(f829,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | ($spl1 | $spl7)),
  inference(subsumption_resolution,[],[f295,f81])).
fof(f828,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | ($spl1 | $spl9)),
  inference(trivial_inequality_removal,[],[f827])).
fof(f827,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | ($spl1 | $spl9)),
  inference(forward_demodulation,[],[f826,f70])).
fof(f826,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | ($spl1 | $spl9)),
  inference(forward_demodulation,[],[f825,f70])).
fof(f825,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | ($spl1 | $spl9)),
  inference(subsumption_resolution,[],[f300,f81])).
fof(f788,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f787,f66])).
fof(f787,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,happ(s(fun('type.integer.int',sK1),sK5),s('type.integer.int',sK12(sK2)))))) != s(sK0,happ(s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s('type.integer.int',sK12(sK2)))) | $spl4),
  inference(forward_demodulation,[],[f629,f307])).
fof(f307,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun('type.integer.int',X0),X1),s('type.integer.int',sK12(sK2)))) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',sK2),s(fun('type.num.num',fun('type.num.num',X0)),X2),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X3),s(fun('type.integer.int',X0),X1),s(X0,X4),s(X0,X5)))) ) | $spl4),
  inference(superposition,[],[f69,f86])).
fof(f69,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun('type.integer.int',X0),X4),s('type.integer.int',X1))) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s(fun('type.num.num',fun('type.num.num',X0)),X2),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X3),s(fun('type.integer.int',X0),X4),s(X0,X5),s(X0,X6)))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s(X0,happ(s(fun('type.integer.int',X0),X4),s('type.integer.int',X1))) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s(fun('type.num.num',fun('type.num.num',X0)),X2),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X3),s(fun('type.integer.int',X0),X4),s(X0,X5),s(X0,X6)))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5,X6] : s(X0,happ(s(fun('type.integer.int',X0),X4),s('type.integer.int',X1))) = s(X0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s(fun('type.num.num',fun('type.num.num',X0)),X2),s(fun('type.list.list'('type.clos_known.val_approx'),X0),X3),s(fun('type.integer.int',X0),X4),s(X0,X5),s(X0,X6)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X7] : ! [X18,X14,X12,X11,X10,X9] : s(X7,happ(s(fun('type.integer.int',X7),X11),s('type.integer.int',X18))) = s(X7,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X18))),s(fun('type.num.num',fun('type.num.num',X7)),X14),s(fun('type.list.list'('type.clos_known.val_approx'),X7),X12),s(fun('type.integer.int',X7),X11),s(X7,X10),s(X7,X9)))),
  file('thm.clos_knownProof.clos_knownProof_3_prove_ltb','thm.clos_known.val_approx_case_def|split|2')).
fof(f629,plain,(
  s(sK0,happ(s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s('type.integer.int',sK12(sK2)))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',sK2),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) | $spl4),
  inference(backward_demodulation,[],[f307,f54])).
fof(f586,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl48),
  inference(cnf_transformation,[],[f586_D])).
fof(f586_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f588,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl50),
  inference(cnf_transformation,[],[f588_D])).
fof(f588_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f590,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl52),
  inference(cnf_transformation,[],[f590_D])).
fof(f590_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f608,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(forward_demodulation,[],[f607,f378])).
fof(f607,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(forward_demodulation,[],[f606,f378])).
fof(f606,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(forward_demodulation,[],[f605,f378])).
fof(f605,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(subsumption_resolution,[],[f604,f92])).
fof(f604,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl32)),
  inference(forward_demodulation,[],[f603,f378])).
fof(f603,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl32)),
  inference(subsumption_resolution,[],[f566,f87])).
fof(f566,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl32),
  inference(superposition,[],[f72,f378])).
fof(f602,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(forward_demodulation,[],[f601,f378])).
fof(f601,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(forward_demodulation,[],[f600,f378])).
fof(f600,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(forward_demodulation,[],[f599,f378])).
fof(f599,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(subsumption_resolution,[],[f598,f87])).
fof(f598,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl9 | $spl32)),
  inference(forward_demodulation,[],[f597,f378])).
fof(f597,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl9 | $spl32)),
  inference(subsumption_resolution,[],[f565,f92])).
fof(f565,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl32),
  inference(superposition,[],[f72,f378])).
fof(f596,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(forward_demodulation,[],[f595,f378])).
fof(f595,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(forward_demodulation,[],[f594,f378])).
fof(f594,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(forward_demodulation,[],[f593,f378])).
fof(f593,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(subsumption_resolution,[],[f592,f92])).
fof(f592,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl32)),
  inference(forward_demodulation,[],[f591,f378])).
fof(f591,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl32)),
  inference(subsumption_resolution,[],[f562,f87])).
fof(f562,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl32),
  inference(superposition,[],[f378,f72])).
fof(f584,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(forward_demodulation,[],[f583,f378])).
fof(f583,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(forward_demodulation,[],[f582,f378])).
fof(f582,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(forward_demodulation,[],[f581,f378])).
fof(f581,plain,(
  s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl32)),
  inference(subsumption_resolution,[],[f580,f87])).
fof(f580,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl9 | $spl32)),
  inference(forward_demodulation,[],[f579,f378])).
fof(f579,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl9 | $spl32)),
  inference(subsumption_resolution,[],[f561,f92])).
fof(f561,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl32),
  inference(superposition,[],[f378,f72])).
fof(f378,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl32),
  inference(cnf_transformation,[],[f378_D])).
fof(f378_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f380,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl34),
  inference(cnf_transformation,[],[f380_D])).
fof(f380_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f559,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18 | $spl31)),
  inference(forward_demodulation,[],[f558,f181])).
fof(f558,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18 | $spl31)),
  inference(forward_demodulation,[],[f557,f181])).
fof(f557,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18 | $spl31)),
  inference(subsumption_resolution,[],[f556,f92])).
fof(f556,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl18 | $spl31)),
  inference(forward_demodulation,[],[f555,f181])).
fof(f555,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl18 | $spl31)),
  inference(subsumption_resolution,[],[f554,f87])).
fof(f554,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl18 | $spl31)),
  inference(forward_demodulation,[],[f553,f181])).
fof(f553,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl18 | $spl31)),
  inference(subsumption_resolution,[],[f550,f181])).
fof(f527,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl42),
  inference(cnf_transformation,[],[f527_D])).
fof(f527_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f529,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl44),
  inference(cnf_transformation,[],[f529_D])).
fof(f529_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f531,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl46),
  inference(cnf_transformation,[],[f531_D])).
fof(f531_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f549,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(forward_demodulation,[],[f548,f376])).
fof(f548,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(forward_demodulation,[],[f547,f376])).
fof(f547,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(forward_demodulation,[],[f546,f376])).
fof(f546,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(subsumption_resolution,[],[f545,f92])).
fof(f545,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl30)),
  inference(forward_demodulation,[],[f544,f376])).
fof(f544,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl30)),
  inference(subsumption_resolution,[],[f507,f87])).
fof(f507,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl30),
  inference(superposition,[],[f72,f376])).
fof(f543,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(forward_demodulation,[],[f542,f376])).
fof(f542,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(forward_demodulation,[],[f541,f376])).
fof(f541,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(forward_demodulation,[],[f540,f376])).
fof(f540,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(subsumption_resolution,[],[f539,f87])).
fof(f539,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl9 | $spl30)),
  inference(forward_demodulation,[],[f538,f376])).
fof(f538,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl9 | $spl30)),
  inference(subsumption_resolution,[],[f506,f92])).
fof(f506,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl30),
  inference(superposition,[],[f72,f376])).
fof(f537,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(forward_demodulation,[],[f536,f376])).
fof(f536,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(forward_demodulation,[],[f535,f376])).
fof(f535,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(forward_demodulation,[],[f534,f376])).
fof(f534,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(subsumption_resolution,[],[f533,f92])).
fof(f533,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl30)),
  inference(forward_demodulation,[],[f532,f376])).
fof(f532,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl30)),
  inference(subsumption_resolution,[],[f503,f87])).
fof(f503,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl30),
  inference(superposition,[],[f376,f72])).
fof(f525,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(forward_demodulation,[],[f524,f376])).
fof(f524,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(forward_demodulation,[],[f523,f376])).
fof(f523,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(forward_demodulation,[],[f522,f376])).
fof(f522,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl7 | $spl9 | $spl30)),
  inference(subsumption_resolution,[],[f521,f87])).
fof(f521,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl9 | $spl30)),
  inference(forward_demodulation,[],[f520,f376])).
fof(f520,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | ($spl9 | $spl30)),
  inference(subsumption_resolution,[],[f502,f92])).
fof(f502,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))))))))) | $spl30),
  inference(superposition,[],[f376,f72])).
fof(f376,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl30),
  inference(cnf_transformation,[],[f376_D])).
fof(f376_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f500,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f499,f181])).
fof(f499,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f498,f181])).
fof(f498,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f497,f181])).
fof(f497,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(subsumption_resolution,[],[f496,f92])).
fof(f496,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl18)),
  inference(forward_demodulation,[],[f495,f181])).
fof(f495,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl18)),
  inference(subsumption_resolution,[],[f464,f87])).
fof(f464,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl18),
  inference(superposition,[],[f72,f181])).
fof(f494,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f493,f181])).
fof(f493,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f492,f181])).
fof(f492,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f491,f181])).
fof(f491,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(subsumption_resolution,[],[f490,f87])).
fof(f490,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl9 | $spl18)),
  inference(forward_demodulation,[],[f489,f181])).
fof(f489,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl9 | $spl18)),
  inference(subsumption_resolution,[],[f463,f92])).
fof(f463,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl18),
  inference(superposition,[],[f72,f181])).
fof(f488,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f487,f181])).
fof(f487,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f486,f181])).
fof(f486,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f485,f181])).
fof(f485,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(subsumption_resolution,[],[f484,f92])).
fof(f484,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl18)),
  inference(forward_demodulation,[],[f483,f181])).
fof(f483,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl18)),
  inference(subsumption_resolution,[],[f460,f87])).
fof(f460,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl18),
  inference(superposition,[],[f181,f72])).
fof(f482,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f481,f181])).
fof(f481,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f480,f181])).
fof(f480,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f479,f181])).
fof(f479,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(subsumption_resolution,[],[f478,f87])).
fof(f478,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl9 | $spl18)),
  inference(forward_demodulation,[],[f477,f181])).
fof(f477,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl9 | $spl18)),
  inference(subsumption_resolution,[],[f459,f92])).
fof(f459,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl18),
  inference(superposition,[],[f181,f72])).
fof(f435,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl36),
  inference(cnf_transformation,[],[f435_D])).
fof(f435_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f437,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl38),
  inference(cnf_transformation,[],[f437_D])).
fof(f437_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f439,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl40),
  inference(cnf_transformation,[],[f439_D])).
fof(f439_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f457,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(forward_demodulation,[],[f456,f185])).
fof(f456,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(forward_demodulation,[],[f455,f185])).
fof(f455,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(forward_demodulation,[],[f454,f185])).
fof(f454,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(subsumption_resolution,[],[f453,f92])).
fof(f453,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl22)),
  inference(forward_demodulation,[],[f452,f185])).
fof(f452,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl22)),
  inference(subsumption_resolution,[],[f415,f87])).
fof(f415,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl22),
  inference(superposition,[],[f72,f185])).
fof(f451,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(forward_demodulation,[],[f450,f185])).
fof(f450,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(forward_demodulation,[],[f449,f185])).
fof(f449,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(forward_demodulation,[],[f448,f185])).
fof(f448,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(subsumption_resolution,[],[f447,f87])).
fof(f447,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl9 | $spl22)),
  inference(forward_demodulation,[],[f446,f185])).
fof(f446,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl9 | $spl22)),
  inference(subsumption_resolution,[],[f414,f92])).
fof(f414,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl22),
  inference(superposition,[],[f72,f185])).
fof(f445,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(forward_demodulation,[],[f444,f185])).
fof(f444,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(forward_demodulation,[],[f443,f185])).
fof(f443,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(forward_demodulation,[],[f442,f185])).
fof(f442,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(subsumption_resolution,[],[f441,f92])).
fof(f441,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl22)),
  inference(forward_demodulation,[],[f440,f185])).
fof(f440,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl22)),
  inference(subsumption_resolution,[],[f411,f87])).
fof(f411,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl22),
  inference(superposition,[],[f185,f72])).
fof(f433,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(forward_demodulation,[],[f432,f185])).
fof(f432,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(forward_demodulation,[],[f431,f185])).
fof(f431,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(forward_demodulation,[],[f430,f185])).
fof(f430,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl22)),
  inference(subsumption_resolution,[],[f429,f87])).
fof(f429,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl9 | $spl22)),
  inference(forward_demodulation,[],[f428,f185])).
fof(f428,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl9 | $spl22)),
  inference(subsumption_resolution,[],[f410,f92])).
fof(f410,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl22),
  inference(superposition,[],[f185,f72])).
fof(f183,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl20),
  inference(cnf_transformation,[],[f183_D])).
fof(f183_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f185,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl22),
  inference(cnf_transformation,[],[f185_D])).
fof(f185_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f408,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9 | $spl19)),
  inference(forward_demodulation,[],[f407,f86])).
fof(f407,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9 | $spl19)),
  inference(forward_demodulation,[],[f406,f86])).
fof(f406,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9 | $spl19)),
  inference(subsumption_resolution,[],[f405,f92])).
fof(f405,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl19)),
  inference(forward_demodulation,[],[f404,f86])).
fof(f404,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl19)),
  inference(subsumption_resolution,[],[f403,f87])).
fof(f403,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl19)),
  inference(forward_demodulation,[],[f402,f86])).
fof(f402,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl19)),
  inference(subsumption_resolution,[],[f399,f86])).
fof(f399,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl19),
  inference(superposition,[],[f180,f72])).
fof(f398,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f397,f181])).
fof(f397,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f396,f181])).
fof(f396,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f395,f181])).
fof(f395,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(subsumption_resolution,[],[f394,f92])).
fof(f394,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl18)),
  inference(forward_demodulation,[],[f393,f181])).
fof(f393,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl18)),
  inference(subsumption_resolution,[],[f356,f87])).
fof(f356,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl18),
  inference(superposition,[],[f72,f181])).
fof(f392,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f391,f181])).
fof(f391,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f390,f181])).
fof(f390,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f389,f181])).
fof(f389,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(subsumption_resolution,[],[f388,f87])).
fof(f388,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl9 | $spl18)),
  inference(forward_demodulation,[],[f387,f181])).
fof(f387,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl9 | $spl18)),
  inference(subsumption_resolution,[],[f355,f92])).
fof(f355,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl18),
  inference(superposition,[],[f72,f181])).
fof(f386,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f385,f181])).
fof(f385,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f384,f181])).
fof(f384,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f383,f181])).
fof(f383,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(subsumption_resolution,[],[f382,f92])).
fof(f382,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl18)),
  inference(forward_demodulation,[],[f381,f181])).
fof(f381,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl18)),
  inference(subsumption_resolution,[],[f352,f87])).
fof(f352,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl18),
  inference(superposition,[],[f181,f72])).
fof(f374,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f373,f181])).
fof(f373,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f372,f181])).
fof(f372,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(forward_demodulation,[],[f371,f181])).
fof(f371,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl7 | $spl9 | $spl18)),
  inference(subsumption_resolution,[],[f370,f87])).
fof(f370,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl9 | $spl18)),
  inference(forward_demodulation,[],[f369,f181])).
fof(f369,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | ($spl9 | $spl18)),
  inference(subsumption_resolution,[],[f351,f92])).
fof(f351,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))))))))) | $spl18),
  inference(superposition,[],[f181,f72])).
fof(f181,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl18),
  inference(cnf_transformation,[],[f181_D])).
fof(f181_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f345,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f344,f86])).
fof(f344,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f343,f86])).
fof(f343,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f342,f86])).
fof(f342,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f341,f92])).
fof(f341,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f340,f86])).
fof(f340,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(subsumption_resolution,[],[f309,f87])).
fof(f309,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl4),
  inference(superposition,[],[f72,f86])).
fof(f339,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f338,f86])).
fof(f338,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f337,f86])).
fof(f337,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f336,f86])).
fof(f336,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f335,f87])).
fof(f335,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl9)),
  inference(forward_demodulation,[],[f334,f86])).
fof(f334,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl9)),
  inference(subsumption_resolution,[],[f308,f92])).
fof(f308,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl4),
  inference(superposition,[],[f72,f86])).
fof(f333,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f332,f86])).
fof(f332,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f331,f86])).
fof(f331,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f330,f86])).
fof(f330,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f329,f92])).
fof(f329,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f328,f86])).
fof(f328,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(subsumption_resolution,[],[f306,f87])).
fof(f306,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl4),
  inference(superposition,[],[f86,f72])).
fof(f327,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f326,f86])).
fof(f326,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f325,f86])).
fof(f325,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f324,f86])).
fof(f324,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f323,f87])).
fof(f323,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl9)),
  inference(forward_demodulation,[],[f322,f86])).
fof(f322,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl9)),
  inference(subsumption_resolution,[],[f305,f92])).
fof(f305,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl4),
  inference(superposition,[],[f86,f72])).
fof(f304,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl3 | $spl9)),
  inference(trivial_inequality_removal,[],[f303])).
fof(f303,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl3 | $spl9)),
  inference(forward_demodulation,[],[f302,f70])).
fof(f302,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl3 | $spl9)),
  inference(forward_demodulation,[],[f301,f70])).
fof(f301,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl3 | $spl9)),
  inference(subsumption_resolution,[],[f300,f83])).
fof(f299,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl3 | $spl7)),
  inference(trivial_inequality_removal,[],[f298])).
fof(f298,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl3 | $spl7)),
  inference(forward_demodulation,[],[f297,f71])).
fof(f297,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl3 | $spl7)),
  inference(forward_demodulation,[],[f296,f71])).
fof(f296,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl3 | $spl7)),
  inference(subsumption_resolution,[],[f295,f83])).
fof(f244,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl3 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f243,f92])).
fof(f243,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl3 | $spl7)),
  inference(subsumption_resolution,[],[f242,f87])).
fof(f242,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl3),
  inference(trivial_inequality_removal,[],[f239])).
fof(f239,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl3),
  inference(superposition,[],[f83,f72])).
fof(f292,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f291,f82])).
fof(f291,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f290,f82])).
fof(f290,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f289,f82])).
fof(f289,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f288,f92])).
fof(f288,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7)),
  inference(forward_demodulation,[],[f287,f82])).
fof(f287,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f250,f87])).
fof(f250,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl0),
  inference(superposition,[],[f72,f82])).
fof(f286,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f285,f82])).
fof(f285,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f284,f82])).
fof(f284,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f283,f82])).
fof(f283,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f282,f87])).
fof(f282,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl9)),
  inference(forward_demodulation,[],[f281,f82])).
fof(f281,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl9)),
  inference(subsumption_resolution,[],[f249,f92])).
fof(f249,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl0),
  inference(superposition,[],[f72,f82])).
fof(f280,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f279,f82])).
fof(f279,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f278,f82])).
fof(f278,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f277,f82])).
fof(f277,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f276,f92])).
fof(f276,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7)),
  inference(forward_demodulation,[],[f275,f82])).
fof(f275,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f247,f87])).
fof(f247,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl0),
  inference(superposition,[],[f82,f72])).
fof(f268,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f267,f82])).
fof(f267,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f266,f82])).
fof(f266,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(forward_demodulation,[],[f265,f82])).
fof(f265,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f264,f87])).
fof(f264,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl9)),
  inference(forward_demodulation,[],[f263,f82])).
fof(f263,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | ($spl0 | $spl9)),
  inference(subsumption_resolution,[],[f246,f92])).
fof(f246,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),s('type.num.num',sK10('const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))))) | $spl0),
  inference(superposition,[],[f82,f72])).
fof(f238,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f237,f92])).
fof(f237,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl5 | $spl7)),
  inference(subsumption_resolution,[],[f236,f87])).
fof(f236,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl5),
  inference(trivial_inequality_removal,[],[f233])).
fof(f233,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl5),
  inference(superposition,[],[f85,f72])).
fof(f157,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | $spl17),
  inference(cnf_transformation,[],[f157_D])).
fof(f157_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f232,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl9),
  inference(subsumption_resolution,[],[f229,f92])).
fof(f229,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl9),
  inference(superposition,[],[f92,f72])).
fof(f231,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | ($spl7 | $spl9)),
  inference(subsumption_resolution,[],[f230,f87])).
fof(f230,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl9),
  inference(trivial_inequality_removal,[],[f228])).
fof(f228,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl9),
  inference(superposition,[],[f92,f72])).
fof(f93,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | $spl8),
  inference(cnf_transformation,[],[f93_D])).
fof(f93_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f226,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl7),
  inference(trivial_inequality_removal,[],[f225])).
fof(f225,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl7),
  inference(superposition,[],[f87,f72])).
fof(f227,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl7),
  inference(subsumption_resolution,[],[f224,f87])).
fof(f224,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl7),
  inference(superposition,[],[f87,f72])).
fof(f223,plain,(
  $false | $spl8),
  inference(trivial_inequality_removal,[],[f222])).
fof(f222,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) | $spl8),
  inference(forward_demodulation,[],[f221,f71])).
fof(f221,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) | $spl8),
  inference(forward_demodulation,[],[f220,f71])).
fof(f220,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | $spl8),
  inference(forward_demodulation,[],[f54,f93])).
fof(f200,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f199,f86])).
fof(f199,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f198,f86])).
fof(f198,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f197,f86])).
fof(f197,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f196,f86])).
fof(f196,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(subsumption_resolution,[],[f162,f87])).
fof(f162,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl4),
  inference(superposition,[],[f72,f86])).
fof(f195,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f194,f86])).
fof(f194,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f193,f86])).
fof(f193,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f192,f86])).
fof(f192,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(subsumption_resolution,[],[f191,f87])).
fof(f191,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl4),
  inference(forward_demodulation,[],[f161,f86])).
fof(f161,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl4),
  inference(superposition,[],[f72,f86])).
fof(f190,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f189,f86])).
fof(f189,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f188,f86])).
fof(f188,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f187,f86])).
fof(f187,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f186,f86])).
fof(f186,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(subsumption_resolution,[],[f159,f87])).
fof(f159,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl4),
  inference(superposition,[],[f86,f72])).
fof(f179,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f178,f86])).
fof(f178,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f177,f86])).
fof(f177,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(forward_demodulation,[],[f176,f86])).
fof(f176,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | ($spl4 | $spl7)),
  inference(subsumption_resolution,[],[f175,f87])).
fof(f175,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl4),
  inference(forward_demodulation,[],[f158,f86])).
fof(f158,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))),s('type.num.num',sK10('const.clos_known.Int_1'(s('type.integer.int',sK12(sK2))))))) | $spl4),
  inference(superposition,[],[f86,f72])).
fof(f154,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl7),
  inference(trivial_inequality_removal,[],[f153])).
fof(f153,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl7),
  inference(superposition,[],[f87,f72])).
fof(f155,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl7),
  inference(subsumption_resolution,[],[f152,f87])).
fof(f152,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2)))) | $spl7),
  inference(superposition,[],[f87,f72])).
fof(f151,plain,(
  $false | $spl6),
  inference(trivial_inequality_removal,[],[f150])).
fof(f150,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) | $spl6),
  inference(forward_demodulation,[],[f149,f70])).
fof(f149,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) | $spl6),
  inference(forward_demodulation,[],[f134,f70])).
fof(f134,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | $spl6),
  inference(backward_demodulation,[],[f88,f54])).
fof(f88,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | $spl6),
  inference(cnf_transformation,[],[f88_D])).
fof(f88_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f132,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | $spl2),
  inference(forward_demodulation,[],[f131,f84])).
fof(f131,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(forward_demodulation,[],[f130,f84])).
fof(f130,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(forward_demodulation,[],[f129,f84])).
fof(f129,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(forward_demodulation,[],[f98,f84])).
fof(f98,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(superposition,[],[f72,f84])).
fof(f128,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | $spl2),
  inference(forward_demodulation,[],[f127,f84])).
fof(f127,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(forward_demodulation,[],[f126,f84])).
fof(f126,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(forward_demodulation,[],[f125,f84])).
fof(f125,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(forward_demodulation,[],[f97,f84])).
fof(f97,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(superposition,[],[f72,f84])).
fof(f124,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | $spl2),
  inference(forward_demodulation,[],[f123,f84])).
fof(f123,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(forward_demodulation,[],[f122,f84])).
fof(f122,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(forward_demodulation,[],[f121,f84])).
fof(f121,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(forward_demodulation,[],[f95,f84])).
fof(f95,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(superposition,[],[f84,f72])).
fof(f114,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | $spl2),
  inference(forward_demodulation,[],[f113,f84])).
fof(f113,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(forward_demodulation,[],[f112,f84])).
fof(f112,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(forward_demodulation,[],[f111,f84])).
fof(f111,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(forward_demodulation,[],[f94,f84])).
fof(f94,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))),s('type.num.num',sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2))))))) | $spl2),
  inference(superposition,[],[f84,f72])).
fof(f91,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),
  inference(trivial_inequality_removal,[],[f90])).
fof(f90,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),
  inference(forward_demodulation,[],[f89,f70])).
fof(f89,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),
  inference(forward_demodulation,[],[f77,f70])).
fof(f77,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),
  inference(superposition,[],[f54,f72])).
fof(f80,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),
  inference(trivial_inequality_removal,[],[f79])).
fof(f79,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),
  inference(forward_demodulation,[],[f78,f71])).
fof(f78,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))) != s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),
  inference(forward_demodulation,[],[f76,f71])).
fof(f76,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK1)),sK8),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6),s(fun('type.integer.int',sK1),sK5),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(fun('type.num.num',fun('type.num.num',sK0)),'_dst_x00x11_2'(s(fun(sK1,sK0),sK7),s(fun('type.num.num',fun('type.num.num',sK1)),sK8))),s(fun('type.list.list'('type.clos_known.val_approx'),sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.list.list'('type.clos_known.val_approx'),sK1),sK6))),s(fun('type.integer.int',sK0),'_dst_x0x1_2'(s(fun(sK1,sK0),sK7),s(fun('type.integer.int',sK1),sK5))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK7),s(sK1,sK3))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK12(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK11(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK9(sK2)),s('type.num.num',sK10(sK2))))),
  inference(superposition,[],[f54,f72])).
% SZS output end Proof for thm.clos_knownProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 77
% Passive clauses: 96
% Generated clauses: 1971
% Final active clauses: 38
% Final passive clauses: 11
% Input formulas: 19
% Initial clauses: 22
% 
% Selected by SInE selection: 18
% SInE iterations: 1
% 
% Trivial inequalities: 22
% Fw subsumption resolutions: 255
% Fw demodulations: 573
% Bw demodulations: 7
% 
% Simple tautologies: 4
% Equational tautologies: 1
% Forward subsumptions: 862
% 
% Forward superposition: 437
% Backward superposition: 583
% Self superposition: 15
% 
% Split clauses: 135
% Split components: 428
% SAT solver clauses: 141
% SAT solver unit clauses: 5
% 
% Sat splits: 135
% Sat splitting refutations: 5
% 
% Memory used [KB]: 3070
% Time elapsed: 0.076 s
% ------------------------------
% ------------------------------
% Success in time 11.817 s
