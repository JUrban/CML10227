Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.typeSound
% (132385)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 92
% Passive clauses: 920
% Generated clauses: 13095
% Final active clauses: 87
% Final passive clauses: 713
% Input formulas: 19
% Initial clauses: 20
% 
% Duplicate literals: 632
% Trivial inequalities: 153
% Fw subsumption resolutions: 1423
% Fw demodulations: 1356
% Bw demodulations: 2
% 
% Simple tautologies: 168
% Equational tautologies: 20
% Forward subsumptions: 7991
% 
% Binary resolution: 6
% Forward superposition: 4946
% Backward superposition: 4234
% Self superposition: 179
% Equality factoring: 49
% Equality resolution: 11
% 
% Split clauses: 218
% Split components: 444
% SAT solver clauses: 540
% SAT solver unit clauses: 21
% SAT solver binary clauses: 98
% 
% Sat splits: 218
% Sat splitting refutations: 15
% 
% TWLsolver clauses: 540
% TWLsolver calls for satisfiability: 77
% 
% Memory used [KB]: 9466
% Time elapsed: 0.610 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.typeSound
% (132414)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 113
% Passive clauses: 571
% Generated clauses: 15559
% Final active clauses: 106
% Final passive clauses: 354
% Input formulas: 19
% Initial clauses: 20
% 
% Duplicate literals: 862
% Trivial inequalities: 172
% Fw subsumption resolutions: 977
% Fw demodulations: 1718
% Bw demodulations: 107
% Condensations: 1770
% 
% Simple tautologies: 192
% Equational tautologies: 21
% Forward subsumptions: 8351
% 
% Binary resolution: 8
% Forward superposition: 5485
% Backward superposition: 3627
% Self superposition: 170
% Equality factoring: 50
% Equality resolution: 12
% 
% Split clauses: 62
% Split components: 132
% SAT solver clauses: 945
% SAT solver unit clauses: 36
% SAT solver binary clauses: 25
% 
% Sat splits: 62
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 945
% TWLsolver calls for satisfiability: 135
% 
% Memory used [KB]: 17910
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.typeSound
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.typeSound
% SZS output start Proof for thm.typeSound
fof(f111967,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f111938])).
fof(f111938,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls','const.typeSystem.union_decls_2'(s('type.typeSystem.decls',sK0),s('type.typeSystem.decls',sK1))))) != s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls','const.typeSystem.union_decls_2'(s('type.typeSystem.decls',sK0),s('type.typeSystem.decls',sK1)))))),
  inference(superposition,[],[f46,f4888])).
fof(f4888,plain,(
  ( ! [X0,X1] : (s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls','const.typeSystem.union_decls_2'(s('type.typeSystem.decls',X0),s('type.typeSystem.decls',X1))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X0))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X1)))))) )),
  inference(superposition,[],[f3031,f62])).
fof(f62,plain,(
  ( ! [X0,X1] : (s('type.typeSystem.decls','const.typeSystem.union_decls_2'(s('type.typeSystem.decls',X0),s('type.typeSystem.decls',X1))) = s('type.typeSystem.decls','const.typeSystem.decls_defined_mods_fupd_2'(s(fun(fun('type.list.list'('type.string.char'),bool),fun('type.list.list'('type.string.char'),bool)),'const.combin.K_1'(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X0))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X1))))))),s('type.typeSystem.decls','const.typeSystem.decls_defined_types_fupd_2'(s(fun(fun('type.ast.id'('type.list.list'('type.string.char')),bool),fun('type.ast.id'('type.list.list'('type.string.char')),bool)),'const.combin.K_1'(s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.pred_set.UNION_2'(s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X0))),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1))))))),s('type.typeSystem.decls','const.typeSystem.decls_defined_exns_fupd_2'(s(fun(fun('type.ast.id'('type.list.list'('type.string.char')),bool),fun('type.ast.id'('type.list.list'('type.string.char')),bool)),'const.combin.K_1'(s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.pred_set.UNION_2'(s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X0))),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1))))))),s('type.typeSystem.decls','const.bool.ARB_0')))))))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1] : s('type.typeSystem.decls','const.typeSystem.union_decls_2'(s('type.typeSystem.decls',X0),s('type.typeSystem.decls',X1))) = s('type.typeSystem.decls','const.typeSystem.decls_defined_mods_fupd_2'(s(fun(fun('type.list.list'('type.string.char'),bool),fun('type.list.list'('type.string.char'),bool)),'const.combin.K_1'(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X0))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X1))))))),s('type.typeSystem.decls','const.typeSystem.decls_defined_types_fupd_2'(s(fun(fun('type.ast.id'('type.list.list'('type.string.char')),bool),fun('type.ast.id'('type.list.list'('type.string.char')),bool)),'const.combin.K_1'(s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.pred_set.UNION_2'(s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X0))),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X1))))))),s('type.typeSystem.decls','const.typeSystem.decls_defined_exns_fupd_2'(s(fun(fun('type.ast.id'('type.list.list'('type.string.char')),bool),fun('type.ast.id'('type.list.list'('type.string.char')),bool)),'const.combin.K_1'(s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.pred_set.UNION_2'(s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X0))),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X1))))))),s('type.typeSystem.decls','const.bool.ARB_0')))))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6,X7] : s('type.typeSystem.decls','const.typeSystem.union_decls_2'(s('type.typeSystem.decls',X6),s('type.typeSystem.decls',X7))) = s('type.typeSystem.decls','const.typeSystem.decls_defined_mods_fupd_2'(s(fun(fun('type.list.list'('type.string.char'),bool),fun('type.list.list'('type.string.char'),bool)),'const.combin.K_1'(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X6))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X7))))))),s('type.typeSystem.decls','const.typeSystem.decls_defined_types_fupd_2'(s(fun(fun('type.ast.id'('type.list.list'('type.string.char')),bool),fun('type.ast.id'('type.list.list'('type.string.char')),bool)),'const.combin.K_1'(s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.pred_set.UNION_2'(s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X6))),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_types_1'(s('type.typeSystem.decls',X7))))))),s('type.typeSystem.decls','const.typeSystem.decls_defined_exns_fupd_2'(s(fun(fun('type.ast.id'('type.list.list'('type.string.char')),bool),fun('type.ast.id'('type.list.list'('type.string.char')),bool)),'const.combin.K_1'(s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.pred_set.UNION_2'(s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X6))),s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.typeSystem.decls_defined_exns_1'(s('type.typeSystem.decls',X7))))))),s('type.typeSystem.decls','const.bool.ARB_0')))))))),
  file('thm.typeSound.typeSound_64_prove_ltb','thm.typeSystem.union_decls_def')).
fof(f3031,plain,(
  ( ! [X2,X3] : (s(fun('type.list.list'('type.string.char'),bool),X2) = s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls','const.typeSystem.decls_defined_mods_fupd_2'(s(fun(fun('type.list.list'('type.string.char'),bool),fun('type.list.list'('type.string.char'),bool)),'const.combin.K_1'(s(fun('type.list.list'('type.string.char'),bool),X2))),s('type.typeSystem.decls',X3)))))) )),
  inference(superposition,[],[f59,f67])).
fof(f67,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(forward_demodulation,[],[f64,f63])).
fof(f63,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X10,X8] : ! [X9,X11] : s(X8,X9) = s(X8,'const.combin.K_2'(s(X8,X9),s(X10,X11)))),
  file('thm.typeSound.typeSound_64_prove_ltb','thm.combin.K_THM')).
fof(f64,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X8,X10] : ! [X14,X15] : s(X8,'const.combin.K_2'(s(X8,X14),s(X10,X15))) = s(X8,happ(s(fun(X10,X8),'const.combin.K_1'(s(X8,X14))),s(X10,X15)))),
  file('thm.typeSound.typeSound_64_prove_ltb','ARITY_1_2_const.combin.K')).
fof(f59,plain,(
  ( ! [X0,X1] : (s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls','const.typeSystem.decls_defined_mods_fupd_2'(s(fun(fun('type.list.list'('type.string.char'),bool),fun('type.list.list'('type.string.char'),bool)),X0),s('type.typeSystem.decls',X1))))) = s(fun('type.list.list'('type.string.char'),bool),happ(s(fun(fun('type.list.list'('type.string.char'),bool),fun('type.list.list'('type.string.char'),bool)),X0),s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X1)))))) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls','const.typeSystem.decls_defined_mods_fupd_2'(s(fun(fun('type.list.list'('type.string.char'),bool),fun('type.list.list'('type.string.char'),bool)),X0),s('type.typeSystem.decls',X1))))) = s(fun('type.list.list'('type.string.char'),bool),happ(s(fun(fun('type.list.list'('type.string.char'),bool),fun('type.list.list'('type.string.char'),bool)),X0),s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X1)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X12,X13] : s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls','const.typeSystem.decls_defined_mods_fupd_2'(s(fun(fun('type.list.list'('type.string.char'),bool),fun('type.list.list'('type.string.char'),bool)),X12),s('type.typeSystem.decls',X13))))) = s(fun('type.list.list'('type.string.char'),bool),happ(s(fun(fun('type.list.list'('type.string.char'),bool),fun('type.list.list'('type.string.char'),bool)),X12),s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X13)))))),
  file('thm.typeSound.typeSound_64_prove_ltb','thm.typeSystem.typeSystem_|49|38_prove_ltb')).
fof(f46,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls','const.typeSystem.union_decls_2'(s('type.typeSystem.decls',sK0),s('type.typeSystem.decls',sK1))))) != s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',sK0))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',sK1)))))),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls','const.typeSystem.union_decls_2'(s('type.typeSystem.decls',sK0),s('type.typeSystem.decls',sK1))))) != s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',sK0))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f41])).
fof(f41,plain,(
  ? [X0,X1] : s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls','const.typeSystem.union_decls_2'(s('type.typeSystem.decls',X0),s('type.typeSystem.decls',X1))))) != s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X0))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X1)))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ~! [X0,X1] : s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls','const.typeSystem.union_decls_2'(s('type.typeSystem.decls',X0),s('type.typeSystem.decls',X1))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X0))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls','const.typeSystem.union_decls_2'(s('type.typeSystem.decls',X6),s('type.typeSystem.decls',X7))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X6))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls','const.typeSystem.union_decls_2'(s('type.typeSystem.decls',X6),s('type.typeSystem.decls',X7))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X6))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSystem.decls_defined_mods_1'(s('type.typeSystem.decls',X7)))))),
  file('thm.typeSound.typeSound_64_prove_ltb','thm.typeSound.typeSound_64_prove_ltb')).
% SZS output end Proof for thm.typeSound
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 368
% Passive clauses: 4099
% Generated clauses: 118027
% Final active clauses: 89
% Final passive clauses: 638
% Input formulas: 19
% Initial clauses: 20
% 
% Duplicate literals: 7343
% Trivial inequalities: 935
% Fw subsumption resolutions: 7778
% Fw demodulations: 11143
% Bw demodulations: 2746
% Condensations: 17113
% Global subsumptions: 770
% 
% Simple tautologies: 916
% Equational tautologies: 1149
% Forward subsumptions: 65740
% Bw demodulations to eq. taut.: 45
% 
% Unit resulting resolution: 4659
% Forward superposition: 30889
% Backward superposition: 25733
% Self superposition: 1009
% Equality factoring: 424
% Equality resolution: 27
% 
% Split clauses: 296
% Split components: 600
% SAT solver clauses: 6329
% SAT solver unit clauses: 302
% SAT solver binary clauses: 695
% 
% Sat splits: 296
% Sat splitting refutations: 866
% 
% Memory used [KB]: 54881
% Time elapsed: 9.517 s
% ------------------------------
% ------------------------------
% Success in time 10.85 s
