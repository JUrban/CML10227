Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.LeftistHeap
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.LeftistHeap
% SZS output start Proof for thm.LeftistHeap
fof(f4613,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4612,f217,f390,f388,f4611])).
fof(f4611,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f390,f218])).
fof(f218,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),sK14) != s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13))),'const.pair.,_2'(s(fun(sK13,sK12),X5),s('type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)),'const.pair.,_2'(s(fun(sK12,fun(sK12,bool)),X6),s('type.LeftistHeap.heap'(sK13),'const.LeftistHeap.Tree_4'(s('type.num.num',X7),s(sK13,X8),s('type.LeftistHeap.heap'(sK13),X9),s('type.LeftistHeap.heap'(sK13),X10)))))))))) )),
  inference(cnf_transformation,[],[f136])).
fof(f136,plain,(
  (s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),sK14) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13))),'const.pair.,_2'(s(fun(sK13,sK12),sK15),s('type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)),'const.pair.,_2'(s(fun(sK12,fun(sK12,bool)),sK16),s('type.LeftistHeap.heap'(sK13),'const.LeftistHeap.Empty_0'))))))) | s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),sK14) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13))),'const.pair.,_2'(s(fun(sK13,sK12),sK17),s('type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)),'const.pair.,_2'(s(fun(sK12,fun(sK12,bool)),sK18),s('type.LeftistHeap.heap'(sK13),'const.LeftistHeap.Tree_4'(s('type.num.num',sK19),s(sK13,sK20),s('type.LeftistHeap.heap'(sK13),sK21),s('type.LeftistHeap.heap'(sK13),sK22)))))))))) & ! [X5,X6,X7,X8,X9,X10] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),sK14) != s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13))),'const.pair.,_2'(s(fun(sK13,sK12),X5),s('type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)),'const.pair.,_2'(s(fun(sK12,fun(sK12,bool)),X6),s('type.LeftistHeap.heap'(sK13),'const.LeftistHeap.Tree_4'(s('type.num.num',X7),s(sK13,X8),s('type.LeftistHeap.heap'(sK13),X9),s('type.LeftistHeap.heap'(sK13),X10))))))))) & ! [X3,X4] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),sK14) != s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13))),'const.pair.,_2'(s(fun(sK13,sK12),X3),s('type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)),'const.pair.,_2'(s(fun(sK12,fun(sK12,bool)),X4),s('type.LeftistHeap.heap'(sK13),'const.LeftistHeap.Empty_0')))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22])],[f135])).
fof(f135,plain,(
  ? [X0,X1,X2] : ((? [X17,X18] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X17),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X18),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Empty_0'))))))) | ? [X11,X12,X13,X14,X15,X16] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X11),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X12),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Tree_4'(s('type.num.num',X13),s(X1,X14),s('type.LeftistHeap.heap'(X1),X15),s('type.LeftistHeap.heap'(X1),X16)))))))))) & ! [X5,X6,X7,X8,X9,X10] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) != s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X5),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X6),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Tree_4'(s('type.num.num',X7),s(X1,X8),s('type.LeftistHeap.heap'(X1),X9),s('type.LeftistHeap.heap'(X1),X10))))))))) & ! [X3,X4] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) != s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X3),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X4),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Empty_0'))))))))),
  inference(rectify,[],[f95])).
fof(f95,plain,(
  ? [X0,X1,X2] : ((? [X9,X10] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X9),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X10),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Empty_0'))))))) | ? [X3,X4,X5,X6,X7,X8] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X3),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X4),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Tree_4'(s('type.num.num',X5),s(X1,X6),s('type.LeftistHeap.heap'(X1),X7),s('type.LeftistHeap.heap'(X1),X8)))))))))) & ! [X13,X14,X15,X16,X17,X18] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) != s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X13),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X14),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Tree_4'(s('type.num.num',X15),s(X1,X16),s('type.LeftistHeap.heap'(X1),X17),s('type.LeftistHeap.heap'(X1),X18))))))))) & ! [X11,X12] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) != s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X11),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X12),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Empty_0'))))))))),
  inference(flattening,[],[f94])).
fof(f94,plain,(
  ? [X0,X1,X2] : ((? [X9,X10] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X9),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X10),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Empty_0'))))))) | ? [X3,X4,X5,X6,X7,X8] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X3),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X4),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Tree_4'(s('type.num.num',X5),s(X1,X6),s('type.LeftistHeap.heap'(X1),X7),s('type.LeftistHeap.heap'(X1),X8)))))))))) & (! [X13,X14,X15,X16,X17,X18] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) != s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X13),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X14),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Tree_4'(s('type.num.num',X15),s(X1,X16),s('type.LeftistHeap.heap'(X1),X17),s('type.LeftistHeap.heap'(X1),X18))))))))) & ! [X11,X12] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) != s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X11),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X12),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Empty_0')))))))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1,X2] : ((? [X9,X10] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X9),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X10),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Empty_0'))))))) | ? [X3,X4,X5,X6,X7,X8] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X3),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X4),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Tree_4'(s('type.num.num',X5),s(X1,X6),s('type.LeftistHeap.heap'(X1),X7),s('type.LeftistHeap.heap'(X1),X8)))))))))) => (? [X13,X14,X15,X16,X17,X18] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X13),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X14),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Tree_4'(s('type.num.num',X15),s(X1,X16),s('type.LeftistHeap.heap'(X1),X17),s('type.LeftistHeap.heap'(X1),X18))))))))) | ? [X11,X12] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X11),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X12),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Empty_0')))))))))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ~! [X0,X1] : ! [X2] : ((? [X9,X10] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X9),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X10),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Empty_0'))))))) | ? [X3,X4,X5,X6,X7,X8] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X3),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X4),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Tree_4'(s('type.num.num',X5),s(X1,X6),s('type.LeftistHeap.heap'(X1),X7),s('type.LeftistHeap.heap'(X1),X8)))))))))) => (? [X13,X14,X15,X16,X17,X18] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X13),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X14),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Tree_4'(s('type.num.num',X15),s(X1,X16),s('type.LeftistHeap.heap'(X1),X17),s('type.LeftistHeap.heap'(X1),X18))))))))) | ? [X11,X12] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),X2) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X1,X0),'type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1))),'const.pair.,_2'(s(fun(X1,X0),X11),s('type.pair.prod'(fun(X0,fun(X0,bool)),'type.LeftistHeap.heap'(X1)),'const.pair.,_2'(s(fun(X0,fun(X0,bool)),X12),s('type.LeftistHeap.heap'(X1),'const.LeftistHeap.Empty_0')))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : ((? [X9,X10] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),X8) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7))),'const.pair.,_2'(s(fun(X7,X6),X9),s('type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)),'const.pair.,_2'(s(fun(X6,fun(X6,bool)),X10),s('type.LeftistHeap.heap'(X7),'const.LeftistHeap.Empty_0'))))))) | ? [X9,X10,X11,X12,X13,X14] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),X8) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7))),'const.pair.,_2'(s(fun(X7,X6),X9),s('type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)),'const.pair.,_2'(s(fun(X6,fun(X6,bool)),X10),s('type.LeftistHeap.heap'(X7),'const.LeftistHeap.Tree_4'(s('type.num.num',X11),s(X7,X12),s('type.LeftistHeap.heap'(X7),X13),s('type.LeftistHeap.heap'(X7),X14)))))))))) => (? [X9,X10,X11,X12,X13,X14] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),X8) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7))),'const.pair.,_2'(s(fun(X7,X6),X9),s('type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)),'const.pair.,_2'(s(fun(X6,fun(X6,bool)),X10),s('type.LeftistHeap.heap'(X7),'const.LeftistHeap.Tree_4'(s('type.num.num',X11),s(X7,X12),s('type.LeftistHeap.heap'(X7),X13),s('type.LeftistHeap.heap'(X7),X14))))))))) | ? [X9,X10] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),X8) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7))),'const.pair.,_2'(s(fun(X7,X6),X9),s('type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)),'const.pair.,_2'(s(fun(X6,fun(X6,bool)),X10),s('type.LeftistHeap.heap'(X7),'const.LeftistHeap.Empty_0')))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : ((? [X9,X10] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),X8) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7))),'const.pair.,_2'(s(fun(X7,X6),X9),s('type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)),'const.pair.,_2'(s(fun(X6,fun(X6,bool)),X10),s('type.LeftistHeap.heap'(X7),'const.LeftistHeap.Empty_0'))))))) | ? [X9,X10,X11,X12,X13,X14] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),X8) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7))),'const.pair.,_2'(s(fun(X7,X6),X9),s('type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)),'const.pair.,_2'(s(fun(X6,fun(X6,bool)),X10),s('type.LeftistHeap.heap'(X7),'const.LeftistHeap.Tree_4'(s('type.num.num',X11),s(X7,X12),s('type.LeftistHeap.heap'(X7),X13),s('type.LeftistHeap.heap'(X7),X14)))))))))) => (? [X9,X10,X11,X12,X13,X14] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),X8) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7))),'const.pair.,_2'(s(fun(X7,X6),X9),s('type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)),'const.pair.,_2'(s(fun(X6,fun(X6,bool)),X10),s('type.LeftistHeap.heap'(X7),'const.LeftistHeap.Tree_4'(s('type.num.num',X11),s(X7,X12),s('type.LeftistHeap.heap'(X7),X13),s('type.LeftistHeap.heap'(X7),X14))))))))) | ? [X9,X10] : s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),X8) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(X7,X6),'type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7))),'const.pair.,_2'(s(fun(X7,X6),X9),s('type.pair.prod'(fun(X6,fun(X6,bool)),'type.LeftistHeap.heap'(X7)),'const.pair.,_2'(s(fun(X6,fun(X6,bool)),X10),s('type.LeftistHeap.heap'(X7),'const.LeftistHeap.Empty_0')))))))))),
  file('thm.LeftistHeap.LeftistHeap_56_prove_ltb','thm.LeftistHeap.LeftistHeap_56_prove_ltb')).
fof(f388,plain,(
  s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),sK14) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13))),'const.pair.,_2'(s(fun(sK13,sK12),sK15),s('type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)),'const.pair.,_2'(s(fun(sK12,fun(sK12,bool)),sK16),s('type.LeftistHeap.heap'(sK13),'const.LeftistHeap.Empty_0'))))))) | $spl0),
  inference(cnf_transformation,[],[f388_D])).
fof(f388_D,plain,(
  s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),sK14) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13))),'const.pair.,_2'(s(fun(sK13,sK12),sK15),s('type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)),'const.pair.,_2'(s(fun(sK12,fun(sK12,bool)),sK16),s('type.LeftistHeap.heap'(sK13),'const.LeftistHeap.Empty_0'))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f390,plain,(
  s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),sK14) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13))),'const.pair.,_2'(s(fun(sK13,sK12),sK17),s('type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)),'const.pair.,_2'(s(fun(sK12,fun(sK12,bool)),sK18),s('type.LeftistHeap.heap'(sK13),'const.LeftistHeap.Tree_4'(s('type.num.num',sK19),s(sK13,sK20),s('type.LeftistHeap.heap'(sK13),sK21),s('type.LeftistHeap.heap'(sK13),sK22))))))))) | $spl2),
  inference(cnf_transformation,[],[f390_D])).
fof(f390_D,plain,(
  s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),sK14) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13))),'const.pair.,_2'(s(fun(sK13,sK12),sK17),s('type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)),'const.pair.,_2'(s(fun(sK12,fun(sK12,bool)),sK18),s('type.LeftistHeap.heap'(sK13),'const.LeftistHeap.Tree_4'(s('type.num.num',sK19),s(sK13,sK20),s('type.LeftistHeap.heap'(sK13),sK21),s('type.LeftistHeap.heap'(sK13),sK22))))))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f217,plain,(
  s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),sK14) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13))),'const.pair.,_2'(s(fun(sK13,sK12),sK17),s('type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)),'const.pair.,_2'(s(fun(sK12,fun(sK12,bool)),sK18),s('type.LeftistHeap.heap'(sK13),'const.LeftistHeap.Tree_4'(s('type.num.num',sK19),s(sK13,sK20),s('type.LeftistHeap.heap'(sK13),sK21),s('type.LeftistHeap.heap'(sK13),sK22))))))))) | s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),sK14) = s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13))),'const.pair.,_2'(s(fun(sK13,sK12),sK15),s('type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)),'const.pair.,_2'(s(fun(sK12,fun(sK12,bool)),sK16),s('type.LeftistHeap.heap'(sK13),'const.LeftistHeap.Empty_0')))))))),
  inference(cnf_transformation,[],[f136])).
fof(f4612,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f388,f219])).
fof(f219,plain,(
  ( ! [X4,X3] : (s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),sK14) != s('type.pair.prod'('type.one.one','type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)))),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.pair.prod'(fun(sK13,sK12),'type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13))),'const.pair.,_2'(s(fun(sK13,sK12),X3),s('type.pair.prod'(fun(sK12,fun(sK12,bool)),'type.LeftistHeap.heap'(sK13)),'const.pair.,_2'(s(fun(sK12,fun(sK12,bool)),X4),s('type.LeftistHeap.heap'(sK13),'const.LeftistHeap.Empty_0')))))))) )),
  inference(cnf_transformation,[],[f136])).
% SZS output end Proof for thm.LeftistHeap
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 360
% Passive clauses: 1491
% Generated clauses: 4389
% Final active clauses: 360
% Final passive clauses: 969
% Input formulas: 36
% Initial clauses: 166
% 
% Duplicate literals: 153
% Trivial inequalities: 17
% Fw subsumption resolutions: 292
% 
% Simple tautologies: 143
% Equational tautologies: 30
% Forward subsumptions: 2260
% 
% Binary resolution: 2739
% Factoring: 767
% Forward superposition: 144
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 10
% 
% Split clauses: 96
% Split components: 193
% SAT solver clauses: 175
% SAT solver unit clauses: 8
% SAT solver binary clauses: 33
% SAT solver learnt clauses: 1
% 
% Sat splits: 96
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 174
% TWLsolver calls for satisfiability: 146
% 
% Memory used [KB]: 2430
% Time elapsed: 0.200 s
% ------------------------------
% ------------------------------
% Success in time 0.22 s
