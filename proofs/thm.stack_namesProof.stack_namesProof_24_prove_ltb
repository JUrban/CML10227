Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.stack_namesProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.stack_namesProof
% SZS output start Proof for thm.stack_namesProof
fof(f872,plain,(
  $false),
  inference(equality_resolution,[],[f865])).
fof(f865,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.stackLang.prog'(sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK1) != s('type.pair.prod'('type.stackLang.prog'(sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)) )),
  inference(superposition,[],[f79,f113])).
fof(f113,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.stackLang.prog'(X0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X1) = s('type.pair.prod'('type.stackLang.prog'(X0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.stackLang.prog'(X0),sK6(X1,X0)),s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.num.num',sK7(X1,X0)),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK8(X1,X0)),s('type.num.num',sK9(X1,X0))))))))) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1] : s('type.pair.prod'('type.stackLang.prog'(X0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X1) = s('type.pair.prod'('type.stackLang.prog'(X0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.stackLang.prog'(X0),sK6(X1,X0)),s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.num.num',sK7(X1,X0)),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK8(X1,X0)),s('type.num.num',sK9(X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6,sK7,sK8,sK9])],[f43])).
fof(f43,plain,(
  ! [X0,X1] : ? [X2,X3,X4,X5] : s('type.pair.prod'('type.stackLang.prog'(X0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X1) = s('type.pair.prod'('type.stackLang.prog'(X0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.stackLang.prog'(X0),X2),s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.num.num',X3),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X4),s('type.num.num',X5)))))))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ! [X0] : ! [X1] : ? [X2,X3,X4,X5] : s('type.pair.prod'('type.stackLang.prog'(X0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X1) = s('type.pair.prod'('type.stackLang.prog'(X0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.stackLang.prog'(X0),X2),s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.num.num',X3),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X4),s('type.num.num',X5)))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7] : ? [X12,X13,X10,X11] : s('type.pair.prod'('type.stackLang.prog'(X6),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7) = s('type.pair.prod'('type.stackLang.prog'(X6),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.stackLang.prog'(X6),X12),s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X10),s('type.num.num',X11)))))))),
  file('thm.stack_namesProof.stack_namesProof_24_prove_ltb','thm.stack_namesProof.stack_namesProof_23_prove_ltb')).
fof(f79,plain,(
  ( ! [X4,X2,X5,X3] : (s('type.pair.prod'('type.stackLang.prog'(sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK1) != s('type.pair.prod'('type.stackLang.prog'(sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.stackLang.prog'(sK0),X2),s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.num.num',X3),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X4),s('type.num.num',X5)))))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X2,X3,X4,X5] : s('type.pair.prod'('type.stackLang.prog'(sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK1) != s('type.pair.prod'('type.stackLang.prog'(sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.stackLang.prog'(sK0),X2),s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.num.num',X3),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X4),s('type.num.num',X5)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f51])).
fof(f51,plain,(
  ? [X0,X1] : ! [X2,X3,X4,X5] : s('type.pair.prod'('type.stackLang.prog'(X0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X1) != s('type.pair.prod'('type.stackLang.prog'(X0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.stackLang.prog'(X0),X2),s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.num.num',X3),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X4),s('type.num.num',X5)))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1] : ? [X2,X3,X4,X5] : s('type.pair.prod'('type.stackLang.prog'(X0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X1) = s('type.pair.prod'('type.stackLang.prog'(X0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.stackLang.prog'(X0),X2),s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.num.num',X3),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X4),s('type.num.num',X5)))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1] : ? [X2,X3,X4,X5] : s('type.pair.prod'('type.stackLang.prog'(X0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X1) = s('type.pair.prod'('type.stackLang.prog'(X0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.stackLang.prog'(X0),X2),s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.num.num',X3),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X4),s('type.num.num',X5)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ? [X8,X9,X10,X11] : s('type.pair.prod'('type.stackLang.prog'(X6),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7) = s('type.pair.prod'('type.stackLang.prog'(X6),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.stackLang.prog'(X6),X8),s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.num.num',X9),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X10),s('type.num.num',X11)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ? [X8,X9,X10,X11] : s('type.pair.prod'('type.stackLang.prog'(X6),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7) = s('type.pair.prod'('type.stackLang.prog'(X6),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.stackLang.prog'(X6),X8),s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.num.num',X9),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X10),s('type.num.num',X11)))))))),
  file('thm.stack_namesProof.stack_namesProof_24_prove_ltb','thm.stack_namesProof.stack_namesProof_24_prove_ltb')).
% SZS output end Proof for thm.stack_namesProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 39
% Passive clauses: 143
% Generated clauses: 771
% Final active clauses: 37
% Final passive clauses: 75
% Input formulas: 21
% Initial clauses: 41
% 
% Duplicate literals: 80
% Trivial inequalities: 59
% Fw subsumption resolutions: 34
% Fw demodulations: 17
% 
% Simple tautologies: 44
% Equational tautologies: 15
% Forward subsumptions: 396
% 
% Binary resolution: 18
% Forward superposition: 193
% Backward superposition: 265
% Self superposition: 28
% Equality factoring: 26
% Equality resolution: 6
% 
% Split clauses: 5
% Split components: 11
% SAT solver clauses: 10
% SAT solver unit clauses: 3
% SAT solver binary clauses: 6
% 
% Sat splits: 5
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 10
% TWLsolver calls for satisfiability: 6
% 
% Memory used [KB]: 1151
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
% Success in time 0.019 s
