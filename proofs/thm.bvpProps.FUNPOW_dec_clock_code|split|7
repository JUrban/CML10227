Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvpProps
% (139521)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 823
% Passive clauses: 5342
% Generated clauses: 30613
% Final active clauses: 783
% Final passive clauses: 4180
% Input formulas: 261
% Initial clauses: 440
% 
% Duplicate literals: 199
% Trivial inequalities: 36
% Fw subsumption resolutions: 1492
% Fw demodulations: 1667
% Bw demodulations: 12
% 
% Simple tautologies: 189
% Equational tautologies: 29
% Forward subsumptions: 21381
% Fw demodulations to eq. taut.: 22
% 
% Binary resolution: 4689
% Factoring: 1058
% Forward superposition: 9873
% Backward superposition: 10918
% Self superposition: 66
% Equality factoring: 2
% Equality resolution: 14
% 
% Split clauses: 308
% Split components: 618
% SAT solver clauses: 482
% SAT solver unit clauses: 13
% SAT solver binary clauses: 58
% 
% Sat splits: 308
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 482
% TWLsolver calls for satisfiability: 350
% 
% Memory used [KB]: 16886
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.bvpProps
% (139535)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 515
% Passive clauses: 2216
% Generated clauses: 19546
% Final active clauses: 488
% Final passive clauses: 1358
% Input formulas: 261
% Initial clauses: 440
% 
% Duplicate literals: 94
% Trivial inequalities: 43
% Fw subsumption resolutions: 771
% Fw demodulations: 1854
% Bw demodulations: 349
% Condensations: 121
% Global subsumptions: 23
% 
% Simple tautologies: 221
% Equational tautologies: 17
% Forward subsumptions: 11476
% Fw demodulations to eq. taut.: 18
% 
% Binary resolution: 1754
% Factoring: 306
% Forward superposition: 5550
% Backward superposition: 5891
% Self superposition: 71
% Equality factoring: 2
% Equality resolution: 17
% 
% Split clauses: 6
% Split components: 12
% SAT solver clauses: 3080
% SAT solver unit clauses: 635
% SAT solver binary clauses: 111
% SAT solver learnt clauses: 46
% SAT solver learnt literals: 12
% 
% Sat splits: 6
% Sat splitting refutations: 10
% 
% TWLsolver clauses: 2988
% TWLsolver calls for satisfiability: 2167
% 
% Memory used [KB]: 17782
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.bvpProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvpProps
% SZS output start Proof for thm.bvpProps
fof(f57370,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f57368])).
fof(f57368,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(sK10),sK11))),s('type.num.num',sK12))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(sK10),sK11))),s('type.num.num',sK12)))))),
  inference(backward_demodulation,[],[f57365,f6952])).
fof(f6952,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(sK10),sK11))),s('type.num.num',sK12))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(sK10),'const.arithmetic.FUNPOW_3'(s(fun('type.bvpSem.state'(sK10),'type.bvpSem.state'(sK10)),'const.bvpSem.dec_clock_0'),s('type.num.num',sK12),s('type.bvpSem.state'(sK10),sK11)))))))),
  inference(unit_resulting_resolution,[],[f824,f1090])).
fof(f1090,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f763])).
fof(f763,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f564])).
fof(f564,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f200])).
fof(f200,axiom,(
  ! [X8,X14] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) <=> s('type.num.num',X8) = s('type.num.num',X14))),
  file('thm.bvpProps.FUNPOW_dec_clock_code|split|7','thm.numeral.numeral_distrib|split|19')).
fof(f824,plain,(
  s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(sK10),sK11))),s('type.num.num',sK12))) != s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(sK10),'const.arithmetic.FUNPOW_3'(s(fun('type.bvpSem.state'(sK10),'type.bvpSem.state'(sK10)),'const.bvpSem.dec_clock_0'),s('type.num.num',sK12),s('type.bvpSem.state'(sK10),sK11)))))),
  inference(cnf_transformation,[],[f709])).
fof(f709,plain,(
  s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(sK10),sK11))),s('type.num.num',sK12))) != s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(sK10),'const.arithmetic.FUNPOW_3'(s(fun('type.bvpSem.state'(sK10),'type.bvpSem.state'(sK10)),'const.bvpSem.dec_clock_0'),s('type.num.num',sK12),s('type.bvpSem.state'(sK10),sK11)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12])],[f666])).
fof(f666,plain,(
  ? [X0,X1,X2] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),X1))),s('type.num.num',X2))) != s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),'const.arithmetic.FUNPOW_3'(s(fun('type.bvpSem.state'(X0),'type.bvpSem.state'(X0)),'const.bvpSem.dec_clock_0'),s('type.num.num',X2),s('type.bvpSem.state'(X0),X1)))))),
  inference(ennf_transformation,[],[f264])).
fof(f264,plain,(
  ~! [X0,X1,X2] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),X1))),s('type.num.num',X2))) = s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),'const.arithmetic.FUNPOW_3'(s(fun('type.bvpSem.state'(X0),'type.bvpSem.state'(X0)),'const.bvpSem.dec_clock_0'),s('type.num.num',X2),s('type.bvpSem.state'(X0),X1)))))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ~! [X0] : ! [X1,X2] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),X1))),s('type.num.num',X2))) = s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),'const.arithmetic.FUNPOW_3'(s(fun('type.bvpSem.state'(X0),'type.bvpSem.state'(X0)),'const.bvpSem.dec_clock_0'),s('type.num.num',X2),s('type.bvpSem.state'(X0),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X6),X7))),s('type.num.num',X8))) = s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X6),'const.arithmetic.FUNPOW_3'(s(fun('type.bvpSem.state'(X6),'type.bvpSem.state'(X6)),'const.bvpSem.dec_clock_0'),s('type.num.num',X8),s('type.bvpSem.state'(X6),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X6),X7))),s('type.num.num',X8))) = s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X6),'const.arithmetic.FUNPOW_3'(s(fun('type.bvpSem.state'(X6),'type.bvpSem.state'(X6)),'const.bvpSem.dec_clock_0'),s('type.num.num',X8),s('type.bvpSem.state'(X6),X7)))))),
  file('thm.bvpProps.FUNPOW_dec_clock_code|split|7','thm.bvpProps.FUNPOW_dec_clock_code|split|7')).
fof(f57365,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X26),X27))),s('type.num.num',X28))) = s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X26),'const.arithmetic.FUNPOW_3'(s(fun('type.bvpSem.state'(X26),'type.bvpSem.state'(X26)),'const.bvpSem.dec_clock_0'),s('type.num.num',X28),s('type.bvpSem.state'(X26),X27)))))) )),
  inference(forward_demodulation,[],[f57185,f1304])).
fof(f1304,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(forward_demodulation,[],[f1138,f1136])).
fof(f1136,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f586])).
fof(f586,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(flattening,[],[f585])).
fof(f585,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(rectify,[],[f154])).
fof(f154,axiom,(
  ! [X27,X6] : ! [X15,X18] : s(X6,X15) = s(X6,'const.combin.K_2'(s(X6,X15),s(X27,X18)))),
  file('thm.bvpProps.FUNPOW_dec_clock_code|split|7','thm.combin.K_THM')).
fof(f1138,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f590])).
fof(f590,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(flattening,[],[f589])).
fof(f589,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(rectify,[],[f77])).
fof(f77,axiom,(
  ! [X6,X27] : ! [X28,X29] : s(X6,'const.combin.K_2'(s(X6,X28),s(X27,X29))) = s(X6,happ(s(fun(X27,X6),'const.combin.K_1'(s(X6,X28))),s(X27,X29)))),
  file('thm.bvpProps.FUNPOW_dec_clock_code|split|7','ARITY_1_2_const.combin.K')).
fof(f57185,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X26),'const.arithmetic.FUNPOW_3'(s(fun('type.bvpSem.state'(X26),'type.bvpSem.state'(X26)),'const.bvpSem.dec_clock_0'),s('type.num.num',X28),s('type.bvpSem.state'(X26),X27))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X26),X27))),s('type.num.num',X28))))),s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X26),X27)))))) )),
  inference(superposition,[],[f1007,f1029])).
fof(f1029,plain,(
  ( ! [X2,X0,X1] : (s('type.bvpSem.state'(X0),'const.arithmetic.FUNPOW_3'(s(fun('type.bvpSem.state'(X0),'type.bvpSem.state'(X0)),'const.bvpSem.dec_clock_0'),s('type.num.num',X1),s('type.bvpSem.state'(X0),X2))) = s('type.bvpSem.state'(X0),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),X2))),s('type.num.num',X1))))),s('type.bvpSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f500])).
fof(f500,plain,(
  ! [X0,X1,X2] : s('type.bvpSem.state'(X0),'const.arithmetic.FUNPOW_3'(s(fun('type.bvpSem.state'(X0),'type.bvpSem.state'(X0)),'const.bvpSem.dec_clock_0'),s('type.num.num',X1),s('type.bvpSem.state'(X0),X2))) = s('type.bvpSem.state'(X0),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),X2))),s('type.num.num',X1))))),s('type.bvpSem.state'(X0),X2)))),
  inference(flattening,[],[f499])).
fof(f499,plain,(
  ! [X0] : ! [X1,X2] : s('type.bvpSem.state'(X0),'const.arithmetic.FUNPOW_3'(s(fun('type.bvpSem.state'(X0),'type.bvpSem.state'(X0)),'const.bvpSem.dec_clock_0'),s('type.num.num',X1),s('type.bvpSem.state'(X0),X2))) = s('type.bvpSem.state'(X0),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),X2))),s('type.num.num',X1))))),s('type.bvpSem.state'(X0),X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X8,X9] : s('type.bvpSem.state'(X6),'const.arithmetic.FUNPOW_3'(s(fun('type.bvpSem.state'(X6),'type.bvpSem.state'(X6)),'const.bvpSem.dec_clock_0'),s('type.num.num',X8),s('type.bvpSem.state'(X6),X9))) = s('type.bvpSem.state'(X6),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X6),X9))),s('type.num.num',X8))))),s('type.bvpSem.state'(X6),X9)))),
  file('thm.bvpProps.FUNPOW_dec_clock_code|split|7','thm.bvpProps.funpow_dec_clock_clock')).
fof(f1007,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),X1))))) = s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.bvpSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f456])).
fof(f456,plain,(
  ! [X0,X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),X1))))) = s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.bvpSem.state'(X0),X1)))))),
  inference(flattening,[],[f455])).
fof(f455,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),X1))))) = s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X0),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.bvpSem.state'(X0),X1)))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X11] : ! [X9,X12] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X12),s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X11),X9))))) = s('type.num.num','const.bvpSem.state_clock_1'(s('type.bvpSem.state'(X11),'const.bvpSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X12),s('type.bvpSem.state'(X11),X9)))))),
  file('thm.bvpProps.FUNPOW_dec_clock_code|split|7','thm.bvpSem.bvpSem_|49||49|8_prove_ltb')).
% SZS output end Proof for thm.bvpProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 746
% Passive clauses: 3762
% Generated clauses: 56536
% Final active clauses: 739
% Final passive clauses: 2968
% Input formulas: 261
% Initial clauses: 440
% 
% Duplicate literals: 7
% Trivial inequalities: 13
% Fw subsumption resolutions: 123
% Fw demodulations: 5535
% Bw demodulations: 40
% Condensations: 16
% 
% Simple tautologies: 106
% Equational tautologies: 28
% Forward subsumptions: 45800
% Fw demodulations to eq. taut.: 982
% Bw demodulations to eq. taut.: 15
% 
% Unit resulting resolution: 4717
% Factoring: 1
% Forward superposition: 23361
% Backward superposition: 22129
% Self superposition: 135
% Equality factoring: 2
% Equality resolution: 17
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 3768
% SAT solver unit clauses: 2250
% SAT solver binary clauses: 1202
% 
% Sat splits: 2
% 
% Memory used [KB]: 42984
% Time elapsed: 1.916 s
% ------------------------------
% ------------------------------
% Success in time 3.27 s
