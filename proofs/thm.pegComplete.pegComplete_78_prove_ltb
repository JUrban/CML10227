Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.pegComplete
% (139542)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 127
% Passive clauses: 2764
% Generated clauses: 18881
% Final active clauses: 105
% Final passive clauses: 2382
% Input formulas: 30
% Initial clauses: 54
% 
% Duplicate literals: 801
% Trivial inequalities: 217
% Fw subsumption resolutions: 2404
% Fw demodulations: 2273
% Bw demodulations: 20
% 
% Simple tautologies: 327
% Equational tautologies: 42
% Forward subsumptions: 8901
% Fw demodulations to eq. taut.: 3
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 491
% Factoring: 4
% Forward superposition: 6036
% Backward superposition: 6134
% Self superposition: 197
% Equality factoring: 106
% Equality resolution: 15
% 
% Split clauses: 497
% Split components: 1012
% SAT solver clauses: 965
% SAT solver unit clauses: 30
% SAT solver binary clauses: 194
% 
% Sat splits: 497
% 
% TWLsolver clauses: 960
% TWLsolver calls for satisfiability: 133
% 
% Memory used [KB]: 10234
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.pegComplete
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pegComplete
% SZS output start Proof for thm.pegComplete
fof(f4629,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4626,f103,f161,f4599,f104,f163,f159,f3311,f3312,f1924,f1926,f1437,f3402,f105,f164,f162,f160,f816,f830,f141,f184,f144,f185,f815,f829,f145,f186,f1471,f1557,f156,f193,f4459,f4460,f4179,f1439,f4037,f4039,f4044,f4147,f4154,f2092,f4225,f4238,f1929,f148,f187,f4160,f1438,f153,f190])).
fof(f190,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.list.list_CASE_3'(s('type.list.list'(X0),'const.list.NIL_0'),s(X1,X2),s(fun(X0,fun('type.list.list'(X0),X1)),X3)))) ) | $spl34),
  inference(cnf_transformation,[],[f190_D])).
fof(f190_D,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.list.list_CASE_3'(s('type.list.list'(X0),'const.list.NIL_0'),s(X1,X2),s(fun(X0,fun('type.list.list'(X0),X1)),X3)))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f153,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.list.list_CASE_3'(s('type.list.list'(X0),'const.list.NIL_0'),s(X1,X2),s(fun(X0,fun('type.list.list'(X0),X1)),X3)))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.list.list_CASE_3'(s('type.list.list'(X0),'const.list.NIL_0'),s(X1,X2),s(fun(X0,fun('type.list.list'(X0),X1)),X3)))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.list.list_CASE_3'(s('type.list.list'(X0),'const.list.NIL_0'),s(X1,X2),s(fun(X0,fun('type.list.list'(X0),X1)),X3)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6,X7] : ! [X15,X9] : s(X7,X15) = s(X7,'const.list.list_CASE_3'(s('type.list.list'(X6),'const.list.NIL_0'),s(X7,X15),s(fun(X6,fun('type.list.list'(X6),X7)),X9)))),
  file('thm.pegComplete.pegComplete_78_prove_ltb','thm.list.list_case_def|split|0')).
fof(f1438,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | $spl233),
  inference(cnf_transformation,[],[f1438_D])).
fof(f1438_D,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) <=> ~$spl233),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl233])])).
fof(f4160,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | ($spl3 | $spl5 | $spl120)),
  inference(subsumption_resolution,[],[f4079,f161])).
fof(f4079,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK4) | ($spl5 | $spl120)),
  inference(superposition,[],[f164,f830])).
fof(f187,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))) ) | $spl28),
  inference(cnf_transformation,[],[f187_D])).
fof(f187_D,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f148,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ! [X0] : ! [X1,X2] : ~s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6] : ! [X17,X16] : ~s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),X17)))),
  file('thm.pegComplete.pegComplete_78_prove_ltb','thm.list.list_distinct')).
fof(f1929,plain,(
  s(sK0,sK2) = s(sK0,sK5(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1))),sK0)) | $spl326),
  inference(cnf_transformation,[],[f1929_D])).
fof(f1929_D,plain,(
  s(sK0,sK2) = s(sK0,sK5(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1))),sK0)) <=> ~$spl326),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl326])])).
fof(f4238,plain,(
  s(sK0,sK2) = s(sK0,sK5(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1))),sK0)) | ($spl24 | $spl120 | $spl324 | $spl711)),
  inference(forward_demodulation,[],[f4237,f185])).
fof(f4237,plain,(
  s(sK0,'const.list.HD_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))) = s(sK0,sK5(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1))),sK0)) | ($spl120 | $spl324 | $spl711)),
  inference(subsumption_resolution,[],[f2349,f4038])).
fof(f4038,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1)))) | $spl711),
  inference(cnf_transformation,[],[f4038_D])).
fof(f4038_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1)))) <=> ~$spl711),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl711])])).
fof(f2349,plain,(
  s(sK0,'const.list.HD_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))) = s(sK0,sK5(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1))),sK0)) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1)))) | ($spl120 | $spl324)),
  inference(superposition,[],[f830,f1926])).
fof(f4225,plain,(
  $false | ($spl3 | $spl118 | $spl255 | $spl326)),
  inference(subsumption_resolution,[],[f4224,f161])).
fof(f4224,plain,(
  s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK4) | ($spl118 | $spl255 | $spl326)),
  inference(subsumption_resolution,[],[f4223,f1929])).
fof(f4223,plain,(
  s(sK0,sK2) != s(sK0,sK5(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1))),sK0)) | s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK4) | ($spl118 | $spl255)),
  inference(superposition,[],[f1588,f829])).
fof(f1588,plain,(
  s(sK0,sK2) != s(sK0,sK5(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4)))),sK0)) | $spl255),
  inference(cnf_transformation,[],[f1588_D])).
fof(f1588_D,plain,(
  s(sK0,sK2) != s(sK0,sK5(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4)))),sK0)) <=> ~$spl255),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl255])])).
fof(f2092,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK6(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1))),sK0)) | $spl352),
  inference(cnf_transformation,[],[f2092_D])).
fof(f2092_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK6(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1))),sK0)) <=> ~$spl352),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl352])])).
fof(f4154,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK6(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1))),sK0)) | ($spl26 | $spl118 | $spl324 | $spl711)),
  inference(forward_demodulation,[],[f4153,f186])).
fof(f4153,plain,(
  s('type.list.list'(sK0),'const.list.TL_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))) = s('type.list.list'(sK0),sK6(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1))),sK0)) | ($spl118 | $spl324 | $spl711)),
  inference(subsumption_resolution,[],[f2348,f4038])).
fof(f2348,plain,(
  s('type.list.list'(sK0),'const.list.TL_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))))) = s('type.list.list'(sK0),sK6(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1))),sK0)) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1)))) | ($spl118 | $spl324)),
  inference(superposition,[],[f829,f1926])).
fof(f4147,plain,(
  $false | ($spl3 | $spl118 | $spl301 | $spl352)),
  inference(subsumption_resolution,[],[f4146,f161])).
fof(f4146,plain,(
  s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK4) | ($spl118 | $spl301 | $spl352)),
  inference(subsumption_resolution,[],[f4145,f2092])).
fof(f4145,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK6(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1))),sK0)) | s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK4) | ($spl118 | $spl301)),
  inference(superposition,[],[f1902,f829])).
fof(f1902,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK6(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4)))),sK0)) | $spl301),
  inference(cnf_transformation,[],[f1902_D])).
fof(f1902_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK6(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4)))),sK0)) <=> ~$spl301),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl301])])).
fof(f4044,plain,(
  $false | ($spl28 | $spl324 | $spl710)),
  inference(subsumption_resolution,[],[f4043,f187])).
fof(f4043,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) | ($spl324 | $spl710)),
  inference(backward_demodulation,[],[f4039,f1926])).
fof(f4039,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1)))) | $spl710),
  inference(cnf_transformation,[],[f4039_D])).
fof(f4039_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1)))) <=> ~$spl710),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl710])])).
fof(f4037,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1)))) | ($spl3 | $spl118 | $spl656)),
  inference(subsumption_resolution,[],[f4011,f161])).
fof(f4011,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1)))) | s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK4) | ($spl118 | $spl656)),
  inference(superposition,[],[f3810,f829])).
fof(f3810,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | $spl656),
  inference(cnf_transformation,[],[f3810_D])).
fof(f3810_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) <=> ~$spl656),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl656])])).
fof(f1439,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | $spl232),
  inference(cnf_transformation,[],[f1439_D])).
fof(f1439_D,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) <=> ~$spl232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl232])])).
fof(f4179,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | ($spl22 | $spl254 | $spl300 | $spl657)),
  inference(subsumption_resolution,[],[f2093,f3809])).
fof(f3809,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | $spl657),
  inference(cnf_transformation,[],[f3809_D])).
fof(f3809_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) <=> ~$spl657),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl657])])).
fof(f2093,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | ($spl22 | $spl254 | $spl300)),
  inference(forward_demodulation,[],[f2072,f1589])).
fof(f1589,plain,(
  s(sK0,sK2) = s(sK0,sK5(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4)))),sK0)) | $spl254),
  inference(cnf_transformation,[],[f1589_D])).
fof(f1589_D,plain,(
  s(sK0,sK2) = s(sK0,sK5(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4)))),sK0)) <=> ~$spl254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl254])])).
fof(f2072,plain,(
  s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4)))),sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | ($spl22 | $spl300)),
  inference(superposition,[],[f184,f1903])).
fof(f1903,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK6(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4)))),sK0)) | $spl300),
  inference(cnf_transformation,[],[f1903_D])).
fof(f1903_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK6(happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4)))),sK0)) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f4460,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),X0),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3)))) ) | $spl768),
  inference(cnf_transformation,[],[f4460_D])).
fof(f4460_D,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),X0),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3)))) ) <=> ~$spl768),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl768])])).
fof(f4459,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),X0),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3)))) ) | ($spl3 | $spl234 | $spl325)),
  inference(subsumption_resolution,[],[f4458,f161])).
fof(f4458,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),X0),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3))) | s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK4)) ) | ($spl234 | $spl325)),
  inference(superposition,[],[f1925,f1557])).
fof(f1925,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1)))) | $spl325),
  inference(cnf_transformation,[],[f1925_D])).
fof(f1925_D,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1)))) <=> ~$spl325),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl325])])).
fof(f193,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun('type.list.list'(X1),X0),happ(s(fun(X1,fun('type.list.list'(X1),X0)),X5),s(X1,X2))),s('type.list.list'(X1),X3))) = s(X0,'const.list.list_CASE_3'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X2),s('type.list.list'(X1),X3))),s(X0,X4),s(fun(X1,fun('type.list.list'(X1),X0)),X5)))) ) | $spl40),
  inference(cnf_transformation,[],[f193_D])).
fof(f193_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun('type.list.list'(X1),X0),happ(s(fun(X1,fun('type.list.list'(X1),X0)),X5),s(X1,X2))),s('type.list.list'(X1),X3))) = s(X0,'const.list.list_CASE_3'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X2),s('type.list.list'(X1),X3))),s(X0,X4),s(fun(X1,fun('type.list.list'(X1),X0)),X5)))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f156,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun('type.list.list'(X1),X0),happ(s(fun(X1,fun('type.list.list'(X1),X0)),X5),s(X1,X2))),s('type.list.list'(X1),X3))) = s(X0,'const.list.list_CASE_3'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X2),s('type.list.list'(X1),X3))),s(X0,X4),s(fun(X1,fun('type.list.list'(X1),X0)),X5)))) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun('type.list.list'(X1),X0),happ(s(fun(X1,fun('type.list.list'(X1),X0)),X5),s(X1,X2))),s('type.list.list'(X1),X3))) = s(X0,'const.list.list_CASE_3'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X2),s('type.list.list'(X1),X3))),s(X0,X4),s(fun(X1,fun('type.list.list'(X1),X0)),X5)))),
  inference(flattening,[],[f72])).
fof(f72,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : s(X0,happ(s(fun('type.list.list'(X1),X0),happ(s(fun(X1,fun('type.list.list'(X1),X0)),X5),s(X1,X2))),s('type.list.list'(X1),X3))) = s(X0,'const.list.list_CASE_3'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X2),s('type.list.list'(X1),X3))),s(X0,X4),s(fun(X1,fun('type.list.list'(X1),X0)),X5)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X7,X6] : ! [X16,X17,X15,X9] : s(X7,happ(s(fun('type.list.list'(X6),X7),happ(s(fun(X6,fun('type.list.list'(X6),X7)),X9),s(X6,X16))),s('type.list.list'(X6),X17))) = s(X7,'const.list.list_CASE_3'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),X17))),s(X7,X15),s(fun(X6,fun('type.list.list'(X6),X7)),X9)))),
  file('thm.pegComplete.pegComplete_78_prove_ltb','thm.list.list_case_def|split|1')).
fof(f1557,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X2,'const.list.list_CASE_3'(s('type.list.list'(X0),X1),s(X2,X4),s(fun(X0,fun('type.list.list'(X0),X2)),X3))) = s(X2,happ(s(fun('type.list.list'(X0),X2),happ(s(fun(X0,fun('type.list.list'(X0),X2)),X3),s(X0,sK5(X1,X0)))),s('type.list.list'(X0),sK6(X1,X0)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | $spl234),
  inference(cnf_transformation,[],[f1557_D])).
fof(f1557_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X2,'const.list.list_CASE_3'(s('type.list.list'(X0),X1),s(X2,X4),s(fun(X0,fun('type.list.list'(X0),X2)),X3))) = s(X2,happ(s(fun('type.list.list'(X0),X2),happ(s(fun(X0,fun('type.list.list'(X0),X2)),X3),s(X0,sK5(X1,X0)))),s('type.list.list'(X0),sK6(X1,X0)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f1471,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X2,'const.list.list_CASE_3'(s('type.list.list'(X0),X1),s(X2,X4),s(fun(X0,fun('type.list.list'(X0),X2)),X3))) = s(X2,happ(s(fun('type.list.list'(X0),X2),happ(s(fun(X0,fun('type.list.list'(X0),X2)),X3),s(X0,sK5(X1,X0)))),s('type.list.list'(X0),sK6(X1,X0)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | ($spl22 | $spl40)),
  inference(superposition,[],[f193,f184])).
fof(f186,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) ) | $spl26),
  inference(cnf_transformation,[],[f186_D])).
fof(f186_D,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f145,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f59])).
fof(f59,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X6] : ! [X18,X13] : s('type.list.list'(X6),X13) = s('type.list.list'(X6),'const.list.TL_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),X13)))))),
  file('thm.pegComplete.pegComplete_78_prove_ltb','thm.list.TL')).
fof(f829,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),sK6(X1,X0)) = s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | $spl118),
  inference(cnf_transformation,[],[f829_D])).
fof(f829_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),sK6(X1,X0)) = s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f815,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),sK6(X1,X0)) = s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | ($spl22 | $spl26)),
  inference(superposition,[],[f186,f184])).
fof(f185,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.list.HD_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) ) | $spl24),
  inference(cnf_transformation,[],[f185_D])).
fof(f185_D,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.list.HD_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f144,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.list.HD_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.list.HD_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f57])).
fof(f57,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.list.HD_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6] : ! [X18,X13] : s(X6,X18) = s(X6,'const.list.HD_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),X13)))))),
  file('thm.pegComplete.pegComplete_78_prove_ltb','thm.list.HD')).
fof(f184,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK5(X1,X0)),s('type.list.list'(X0),sK6(X1,X0)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | $spl22),
  inference(cnf_transformation,[],[f184_D])).
fof(f184_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK5(X1,X0)),s('type.list.list'(X0),sK6(X1,X0)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f141,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK5(X1,X0)),s('type.list.list'(X0),sK6(X1,X0)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK5(X1,X0)),s('type.list.list'(X0),sK6(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5,sK6])],[f54])).
fof(f54,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0] : ! [X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : ! [X19] : (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X19) | ? [X18,X13] : s('type.list.list'(X6),X19) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),X13))))),
  file('thm.pegComplete.pegComplete_78_prove_ltb','thm.list.list_CASES')).
fof(f830,plain,(
  ( ! [X2,X3] : (s(X2,sK5(X3,X2)) = s(X2,'const.list.HD_1'(s('type.list.list'(X2),X3))) | s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),X3)) ) | $spl120),
  inference(cnf_transformation,[],[f830_D])).
fof(f830_D,plain,(
  ( ! [X2,X3] : (s(X2,sK5(X3,X2)) = s(X2,'const.list.HD_1'(s('type.list.list'(X2),X3))) | s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),X3)) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f816,plain,(
  ( ! [X2,X3] : (s(X2,sK5(X3,X2)) = s(X2,'const.list.HD_1'(s('type.list.list'(X2),X3))) | s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),X3)) ) | ($spl22 | $spl24)),
  inference(superposition,[],[f185,f184])).
fof(f160,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.NIL_0'),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3))) | $spl1),
  inference(cnf_transformation,[],[f160_D])).
fof(f160_D,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.NIL_0'),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f162,plain,(
  s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK4) | $spl2),
  inference(cnf_transformation,[],[f162_D])).
fof(f162_D,plain,(
  s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK4) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f164,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,'const.list.HD_1'(s('type.list.list'(sK1),sK4))))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | $spl5),
  inference(cnf_transformation,[],[f164_D])).
fof(f164_D,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,'const.list.HD_1'(s('type.list.list'(sK1),sK4))))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f105,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,'const.list.HD_1'(s('type.list.list'(sK1),sK4))))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK4) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.NIL_0'),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3)))),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.NIL_0'),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3))) | (s('type.list.list'(sK1),'const.list.NIL_0') != s('type.list.list'(sK1),sK4) & s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,'const.list.HD_1'(s('type.list.list'(sK1),sK4))))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))))) & (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.NIL_0'),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3))) | s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK4) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,'const.list.HD_1'(s('type.list.list'(sK1),sK4))))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f80])).
fof(f80,plain,(
  ? [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.list_CASE_3'(s('type.list.list'(X1),X4),s('type.list.list'(X0),'const.list.NIL_0'),s(fun(X1,fun('type.list.list'(X1),'type.list.list'(X0))),X3))) | (s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X4) & s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(X1,fun('type.list.list'(X1),'type.list.list'(X0))),X3),s(X1,'const.list.HD_1'(s('type.list.list'(X1),X4))))),s('type.list.list'(X1),'const.list.TL_1'(s('type.list.list'(X1),X4))))))) & (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),'const.list.list_CASE_3'(s('type.list.list'(X1),X4),s('type.list.list'(X0),'const.list.NIL_0'),s(fun(X1,fun('type.list.list'(X1),'type.list.list'(X0))),X3))) | s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X4) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(X1,fun('type.list.list'(X1),'type.list.list'(X0))),X3),s(X1,'const.list.HD_1'(s('type.list.list'(X1),X4))))),s('type.list.list'(X1),'const.list.TL_1'(s('type.list.list'(X1),X4)))))))),
  inference(flattening,[],[f79])).
fof(f79,plain,(
  ? [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.list_CASE_3'(s('type.list.list'(X1),X4),s('type.list.list'(X0),'const.list.NIL_0'),s(fun(X1,fun('type.list.list'(X1),'type.list.list'(X0))),X3))) | (s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X4) & s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(X1,fun('type.list.list'(X1),'type.list.list'(X0))),X3),s(X1,'const.list.HD_1'(s('type.list.list'(X1),X4))))),s('type.list.list'(X1),'const.list.TL_1'(s('type.list.list'(X1),X4))))))) & (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),'const.list.list_CASE_3'(s('type.list.list'(X1),X4),s('type.list.list'(X0),'const.list.NIL_0'),s(fun(X1,fun('type.list.list'(X1),'type.list.list'(X0))),X3))) | (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X4) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(X1,fun('type.list.list'(X1),'type.list.list'(X0))),X3),s(X1,'const.list.HD_1'(s('type.list.list'(X1),X4))))),s('type.list.list'(X1),'const.list.TL_1'(s('type.list.list'(X1),X4))))))))),
  inference(nnf_transformation,[],[f74])).
fof(f74,plain,(
  ? [X0,X1,X2,X3,X4] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.list_CASE_3'(s('type.list.list'(X1),X4),s('type.list.list'(X0),'const.list.NIL_0'),s(fun(X1,fun('type.list.list'(X1),'type.list.list'(X0))),X3))) <~> (s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X4) & s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(X1,fun('type.list.list'(X1),'type.list.list'(X0))),X3),s(X1,'const.list.HD_1'(s('type.list.list'(X1),X4))))),s('type.list.list'(X1),'const.list.TL_1'(s('type.list.list'(X1),X4)))))))),
  inference(ennf_transformation,[],[f33])).
fof(f33,plain,(
  ~! [X0,X1,X2,X3,X4] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.list_CASE_3'(s('type.list.list'(X1),X4),s('type.list.list'(X0),'const.list.NIL_0'),s(fun(X1,fun('type.list.list'(X1),'type.list.list'(X0))),X3))) <=> (s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X4) & s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(X1,fun('type.list.list'(X1),'type.list.list'(X0))),X3),s(X1,'const.list.HD_1'(s('type.list.list'(X1),X4))))),s('type.list.list'(X1),'const.list.TL_1'(s('type.list.list'(X1),X4)))))))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.list_CASE_3'(s('type.list.list'(X1),X4),s('type.list.list'(X0),'const.list.NIL_0'),s(fun(X1,fun('type.list.list'(X1),'type.list.list'(X0))),X3))) <=> (~s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X4) & s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(X1,fun('type.list.list'(X1),'type.list.list'(X0))),X3),s(X1,'const.list.HD_1'(s('type.list.list'(X1),X4))))),s('type.list.list'(X1),'const.list.TL_1'(s('type.list.list'(X1),X4)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : (s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.NIL_0'))) = s('type.list.list'(X6),'const.list.list_CASE_3'(s('type.list.list'(X7),X10),s('type.list.list'(X6),'const.list.NIL_0'),s(fun(X7,fun('type.list.list'(X7),'type.list.list'(X6))),X9))) <=> (~s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),X10) & s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.NIL_0'))) = s('type.list.list'(X6),happ(s(fun('type.list.list'(X7),'type.list.list'(X6)),happ(s(fun(X7,fun('type.list.list'(X7),'type.list.list'(X6))),X9),s(X7,'const.list.HD_1'(s('type.list.list'(X7),X10))))),s('type.list.list'(X7),'const.list.TL_1'(s('type.list.list'(X7),X10)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : (s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.NIL_0'))) = s('type.list.list'(X6),'const.list.list_CASE_3'(s('type.list.list'(X7),X10),s('type.list.list'(X6),'const.list.NIL_0'),s(fun(X7,fun('type.list.list'(X7),'type.list.list'(X6))),X9))) <=> (~s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),X10) & s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),'const.list.NIL_0'))) = s('type.list.list'(X6),happ(s(fun('type.list.list'(X7),'type.list.list'(X6)),happ(s(fun(X7,fun('type.list.list'(X7),'type.list.list'(X6))),X9),s(X7,'const.list.HD_1'(s('type.list.list'(X7),X10))))),s('type.list.list'(X7),'const.list.TL_1'(s('type.list.list'(X7),X10)))))))),
  file('thm.pegComplete.pegComplete_78_prove_ltb','thm.pegComplete.pegComplete_78_prove_ltb')).
fof(f3402,plain,(
  $false | ($spl1 | $spl508)),
  inference(trivial_inequality_removal,[],[f3381])).
fof(f3381,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) | ($spl1 | $spl508)),
  inference(superposition,[],[f160,f3312])).
fof(f1437,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | ($spl3 | $spl4 | $spl120)),
  inference(subsumption_resolution,[],[f1399,f161])).
fof(f1399,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK4) | ($spl4 | $spl120)),
  inference(superposition,[],[f163,f830])).
fof(f1926,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1)))) | $spl324),
  inference(cnf_transformation,[],[f1926_D])).
fof(f1926_D,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1)))) <=> ~$spl324),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl324])])).
fof(f1924,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1)))) | ($spl3 | $spl118 | $spl232)),
  inference(subsumption_resolution,[],[f1873,f161])).
fof(f1873,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,sK5(sK4,sK1)))),s('type.list.list'(sK1),sK6(sK4,sK1)))) | s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK4) | ($spl118 | $spl232)),
  inference(superposition,[],[f1439,f829])).
fof(f3312,plain,(
  ( ! [X54] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),X54),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3)))) ) | $spl508),
  inference(cnf_transformation,[],[f3312_D])).
fof(f3312_D,plain,(
  ( ! [X54] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),X54),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3)))) ) <=> ~$spl508),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl508])])).
fof(f3311,plain,(
  ( ! [X54] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),X54),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3)))) ) | ($spl3 | $spl234 | $spl324)),
  inference(subsumption_resolution,[],[f3130,f161])).
fof(f3130,plain,(
  ( ! [X54] : (s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),X54),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3))) | s('type.list.list'(sK1),'const.list.NIL_0') = s('type.list.list'(sK1),sK4)) ) | ($spl234 | $spl324)),
  inference(superposition,[],[f1557,f1926])).
fof(f159,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.NIL_0'),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3))) | $spl0),
  inference(cnf_transformation,[],[f159_D])).
fof(f159_D,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.NIL_0'),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f163,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,'const.list.HD_1'(s('type.list.list'(sK1),sK4))))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | $spl4),
  inference(cnf_transformation,[],[f163_D])).
fof(f163_D,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,'const.list.HD_1'(s('type.list.list'(sK1),sK4))))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f104,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK1),'type.list.list'(sK0)),happ(s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3),s(sK1,'const.list.HD_1'(s('type.list.list'(sK1),sK4))))),s('type.list.list'(sK1),'const.list.TL_1'(s('type.list.list'(sK1),sK4))))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.NIL_0'),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3)))),
  inference(cnf_transformation,[],[f81])).
fof(f4599,plain,(
  $false | ($spl0 | $spl768)),
  inference(trivial_inequality_removal,[],[f4597])).
fof(f4597,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) | ($spl0 | $spl768)),
  inference(superposition,[],[f4460,f159])).
fof(f161,plain,(
  s('type.list.list'(sK1),'const.list.NIL_0') != s('type.list.list'(sK1),sK4) | $spl3),
  inference(cnf_transformation,[],[f161_D])).
fof(f161_D,plain,(
  s('type.list.list'(sK1),'const.list.NIL_0') != s('type.list.list'(sK1),sK4) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f103,plain,(
  s('type.list.list'(sK1),'const.list.NIL_0') != s('type.list.list'(sK1),sK4) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.NIL_0'),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3)))),
  inference(cnf_transformation,[],[f81])).
fof(f4626,plain,(
  $false | ($spl0 | $spl2 | $spl28 | $spl34)),
  inference(subsumption_resolution,[],[f4625,f187])).
fof(f4625,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) | ($spl0 | $spl2 | $spl34)),
  inference(forward_demodulation,[],[f4600,f190])).
fof(f4600,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.list.list'(sK0),'const.list.list_CASE_3'(s('type.list.list'(sK1),'const.list.NIL_0'),s('type.list.list'(sK0),'const.list.NIL_0'),s(fun(sK1,fun('type.list.list'(sK1),'type.list.list'(sK0))),sK3))) | ($spl0 | $spl2)),
  inference(backward_demodulation,[],[f162,f159])).
% SZS output end Proof for thm.pegComplete
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 93
% Passive clauses: 410
% Generated clauses: 4617
% Final active clauses: 49
% Final passive clauses: 276
% Input formulas: 30
% Initial clauses: 54
% 
% Duplicate literals: 189
% Trivial inequalities: 44
% Fw subsumption resolutions: 222
% Fw demodulations: 439
% Bw demodulations: 43
% Condensations: 259
% Global subsumptions: 9
% 
% Simple tautologies: 83
% Equational tautologies: 31
% Forward subsumptions: 2184
% Fw demodulations to eq. taut.: 10
% Bw demodulations to eq. taut.: 8
% 
% Binary resolution: 35
% Factoring: 1
% Forward superposition: 1176
% Backward superposition: 1420
% Self superposition: 78
% Equality factoring: 52
% Equality resolution: 7
% 
% Split clauses: 45
% Split components: 100
% SAT solver clauses: 776
% SAT solver unit clauses: 72
% SAT solver binary clauses: 46
% SAT solver learnt clauses: 22
% SAT solver learnt literals: 5
% 
% Sat splits: 45
% Sat splitting refutations: 24
% 
% TWLsolver clauses: 736
% TWLsolver calls for satisfiability: 252
% 
% Memory used [KB]: 6140
% Time elapsed: 0.312 s
% ------------------------------
% ------------------------------
% Success in time 0.94 s
