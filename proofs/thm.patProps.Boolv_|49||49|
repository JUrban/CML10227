Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.patProps
% (139025)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 257
% Passive clauses: 2619
% Generated clauses: 17983
% Final active clauses: 164
% Final passive clauses: 2052
% Input formulas: 81
% Initial clauses: 126
% 
% Duplicate literals: 609
% Trivial inequalities: 277
% Fw subsumption resolutions: 971
% Fw demodulations: 3314
% Bw demodulations: 86
% 
% Simple tautologies: 307
% Equational tautologies: 72
% Forward subsumptions: 9865
% Fw demodulations to eq. taut.: 4
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 112
% Factoring: 1
% Forward superposition: 6726
% Backward superposition: 5454
% Self superposition: 143
% Equality factoring: 96
% Equality resolution: 50
% 
% Split clauses: 101
% Split components: 202
% SAT solver clauses: 191
% SAT solver unit clauses: 15
% SAT solver binary clauses: 61
% 
% Sat splits: 101
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 191
% TWLsolver calls for satisfiability: 63
% 
% Memory used [KB]: 8827
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.patProps
% (139051)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit

% Active clauses: 111
% Passive clauses: 462
% Generated clauses: 8493
% Final active clauses: 105
% Final passive clauses: 321
% Input formulas: 81
% Initial clauses: 126
% 
% Duplicate literals: 432
% Trivial inequalities: 74
% Fw subsumption resolutions: 539
% Fw demodulations: 1230
% Bw demodulations: 35
% Condensations: 354
% Global subsumptions: 21
% 
% Simple tautologies: 121
% Equational tautologies: 37
% Forward subsumptions: 4361
% 
% Binary resolution: 35
% Factoring: 1
% Forward superposition: 2774
% Backward superposition: 2410
% Self superposition: 110
% Equality factoring: 50
% Equality resolution: 27
% 
% Split clauses: 45
% Split components: 90
% SAT solver clauses: 1074
% SAT solver unit clauses: 211
% SAT solver binary clauses: 77
% SAT solver learnt clauses: 43
% SAT solver learnt literals: 1
% 
% Sat splits: 45
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 989
% TWLsolver calls for satisfiability: 487
% 
% Memory used [KB]: 5628
% Time elapsed: 0.710 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.patProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.patProps
% SZS output start Proof for thm.patProps
fof(f55068,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f215,f345,f343,f214,f344,f342,f381,f632,f641,f633,f643,f639,f3130,f3129,f3189,f3190,f3201,f5195,f5235,f5194,f3168,f5193,f3169,f3167,f5691,f5692,f5731,f5729,f6296,f6297,f6336,f6334,f7447,f7668,f14120,f14290,f14308,f14292,f14310,f14407,f14577,f14595,f14579,f14597,f14894,f14898,f14896,f14900,f14904,f14902,f18967,f19062,f19060,f18968,f19066,f19064,f18969,f19070,f19068,f19774,f19776,f19794,f19802,f19805,f19804,f19792,f20455,f20457,f20473,f20471,f22393,f22395,f19061,f23620,f23623,f23622,f22394,f25048,f25049,f25050,f25051,f25052,f25055,f25375,f25373,f25070,f25071,f25072,f25415,f25363,f25417,f25367,f25419,f25369,f25421,f25370,f25423,f25371,f25466,f25383,f25468,f25385,f25365,f25469,f25474,f25475,f25476,f25477,f25478,f25479,f25481,f25387,f25389,f25268,f25471,f25473,f29249,f29250,f29251,f29252,f29253,f29256,f29585,f29583,f29271,f29272,f29273,f29627,f29573,f29629,f29577,f29631,f29579,f29633,f29580,f29635,f29581,f29682,f29593,f29684,f29595,f29575,f29685,f29690,f29691,f29692,f29693,f29694,f29695,f29697,f29597,f29599,f29476,f29687,f29689,f31034,f31035,f31036,f31037,f31038,f31041,f31381,f31379,f31056,f31057,f31058,f31434,f31369,f31436,f31373,f31438,f31375,f31440,f31376,f31442,f31377,f31489,f31389,f31491,f31391,f31371,f31492,f31497,f31498,f31499,f31500,f31501,f31502,f31504,f31393,f31395,f31272,f31494,f31496,f54977])).
fof(f54977,plain,(
  $false | ($spl0 | $spl5 | $spl9)),
  inference(subsumption_resolution,[],[f54976,f1371])).
fof(f1371,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.conLang.false_tag_0')),
  inference(subsumption_resolution,[],[f1360,f369])).
fof(f369,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f263,f350])).
fof(f350,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f224,f216])).
fof(f216,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.patProps.Boolv_|49||49|',aHL_TRUTH)).
fof(f224,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f173])).
fof(f173,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f84])).
fof(f84,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f18])).
fof(f18,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.patProps.Boolv_|49||49|','thm.bool.NOT_CLAUSES|split|1')).
fof(f263,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f179])).
fof(f179,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f120])).
fof(f120,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f69])).
fof(f69,axiom,(
  ! [X15] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15))) <=> p(s(bool,'F_0')))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_eq|split|1')).
fof(f1360,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.conLang.false_tag_0') | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f372,f221])).
fof(f221,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f31])).
fof(f31,axiom,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.patProps.Boolv_|49||49|','thm.conLang.false_tag_def')).
fof(f372,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f271,f218])).
fof(f218,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f30])).
fof(f30,axiom,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.patProps.Boolv_|49||49|','thm.conLang.true_tag_def')).
fof(f271,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f183])).
fof(f183,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X15] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X15))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|17')).
fof(f54976,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.conLang.false_tag_0') | ($spl0 | $spl5 | $spl9)),
  inference(forward_demodulation,[],[f54856,f296])).
fof(f296,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f136])).
fof(f136,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X9] : ! [X11,X12] : s(X9,X11) = s(X9,'const.bool.COND_3'(s(bool,'T_0'),s(X9,X11),s(X9,X12)))),
  file('thm.patProps.Boolv_|49||49|','thm.bool.COND_CLAUSES|split|0')).
fof(f54856,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | ($spl0 | $spl5 | $spl9)),
  inference(unit_resulting_resolution,[],[f7682,f7350])).
fof(f7350,plain,(
  ( ! [X2,X0,X1] : (s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0))) != s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X1),s('type.list.list'('type.patSem.v'),X2))) | s('type.num.num',X1) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f330,f251])).
fof(f251,plain,(
  ( ! [X0] : (s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0))) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.patSem.v'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0] : s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0))) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.patSem.v'),'const.list.NIL_0')))),
  inference(rectify,[],[f82])).
fof(f82,axiom,(
  ! [X25] : s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X25))) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num','const.bool.COND_3'(s(bool,X25),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))),s('type.list.list'('type.patSem.v'),'const.list.NIL_0')))),
  file('thm.patProps.Boolv_|49||49|','thm.patSem.Boolv_def')).
fof(f330,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X0),s('type.list.list'('type.patSem.v'),X1))) != s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X2),s('type.list.list'('type.patSem.v'),X3))) | s('type.num.num',X0) = s('type.num.num',X2)) )),
  inference(cnf_transformation,[],[f209])).
fof(f209,plain,(
  ! [X0,X1,X2,X3] : ((s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X0),s('type.list.list'('type.patSem.v'),X1))) != s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X2),s('type.list.list'('type.patSem.v'),X3))) | (s('type.num.num',X0) = s('type.num.num',X2) & s('type.list.list'('type.patSem.v'),X1) = s('type.list.list'('type.patSem.v'),X3))) & (s('type.num.num',X0) != s('type.num.num',X2) | s('type.list.list'('type.patSem.v'),X1) != s('type.list.list'('type.patSem.v'),X3) | s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X0),s('type.list.list'('type.patSem.v'),X1))) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X2),s('type.list.list'('type.patSem.v'),X3)))))),
  inference(flattening,[],[f208])).
fof(f208,plain,(
  ! [X0,X1,X2,X3] : ((s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X0),s('type.list.list'('type.patSem.v'),X1))) != s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X2),s('type.list.list'('type.patSem.v'),X3))) | (s('type.num.num',X0) = s('type.num.num',X2) & s('type.list.list'('type.patSem.v'),X1) = s('type.list.list'('type.patSem.v'),X3))) & ((s('type.num.num',X0) != s('type.num.num',X2) | s('type.list.list'('type.patSem.v'),X1) != s('type.list.list'('type.patSem.v'),X3)) | s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X0),s('type.list.list'('type.patSem.v'),X1))) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X2),s('type.list.list'('type.patSem.v'),X3)))))),
  inference(nnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0,X1,X2,X3] : (s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X0),s('type.list.list'('type.patSem.v'),X1))) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X2),s('type.list.list'('type.patSem.v'),X3))) <=> (s('type.num.num',X0) = s('type.num.num',X2) & s('type.list.list'('type.patSem.v'),X1) = s('type.list.list'('type.patSem.v'),X3)))),
  inference(rectify,[],[f77])).
fof(f77,axiom,(
  ! [X19,X20,X21,X22] : (s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X19),s('type.list.list'('type.patSem.v'),X20))) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X21),s('type.list.list'('type.patSem.v'),X22))) <=> (s('type.num.num',X19) = s('type.num.num',X21) & s('type.list.list'('type.patSem.v'),X20) = s('type.list.list'('type.patSem.v'),X22)))),
  file('thm.patProps.Boolv_|49||49|','thm.patSem.v_|49||49||split|1')).
fof(f7682,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.patSem.v'),'const.list.NIL_0'))) | ($spl0 | $spl5 | $spl9)),
  inference(backward_demodulation,[],[f7681,f7495])).
fof(f7495,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'F_0'))) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.patSem.v'),'const.list.NIL_0')))),
  inference(superposition,[],[f251,f297])).
fof(f297,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f138])).
fof(f138,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X9] : ! [X11,X12] : s(X9,X12) = s(X9,'const.bool.COND_3'(s(bool,'F_0'),s(X9,X11),s(X9,X12)))),
  file('thm.patProps.Boolv_|49||49|','thm.bool.COND_CLAUSES|split|1')).
fof(f7681,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'F_0'))) | ($spl0 | $spl5 | $spl9)),
  inference(forward_demodulation,[],[f7680,f7510])).
fof(f7510,plain,(
  s(bool,'T_0') = s(bool,sK0) | $spl9),
  inference(unit_resulting_resolution,[],[f643,f253])).
fof(f253,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.patProps.Boolv_|49||49|',aHL_BOOL_CASES)).
fof(f7680,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'F_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) | ($spl0 | $spl5)),
  inference(forward_demodulation,[],[f342,f7503])).
fof(f7503,plain,(
  s(bool,'F_0') = s(bool,sK1) | $spl5),
  inference(unit_resulting_resolution,[],[f638,f253])).
fof(f638,plain,(
  s(bool,'T_0') != s(bool,sK1) | $spl5),
  inference(cnf_transformation,[],[f638_D])).
fof(f638_D,plain,(
  s(bool,'T_0') != s(bool,sK1) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f31496,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl154),
  inference(cnf_transformation,[],[f31496_D])).
fof(f31496_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f31494,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl153),
  inference(cnf_transformation,[],[f31494_D])).
fof(f31494_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl153),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl153])])).
fof(f31272,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f15047,f14855])).
fof(f14855,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(backward_demodulation,[],[f14756,f14386])).
fof(f14386,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f243,f9111])).
fof(f9111,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(backward_demodulation,[],[f8959,f1723])).
fof(f1723,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f244,f221])).
fof(f244,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X15] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|14')).
fof(f8959,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.ZERO_0') | $spl14),
  inference(unit_resulting_resolution,[],[f8353,f372])).
fof(f8353,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(subsumption_resolution,[],[f8333,f216])).
fof(f8333,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f378,f8272])).
fof(f8272,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))))) | $spl14),
  inference(superposition,[],[f7878,f1273])).
fof(f1273,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f1259,f297])).
fof(f1259,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(unit_resulting_resolution,[],[f297,f371])).
fof(f371,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f272,f218])).
fof(f272,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f183])).
fof(f7878,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0')))))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f303,f3169])).
fof(f303,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f63])).
fof(f63,axiom,(
  ! [X15,X16] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X16),s('type.num.num',X15))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|31')).
fof(f378,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f377,f218])).
fof(f377,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num',X0) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f275,f218])).
fof(f275,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X15] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X15))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|30')).
fof(f243,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X15] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X15))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|16')).
fof(f14756,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(unit_resulting_resolution,[],[f9236,f9143])).
fof(f9143,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f8959,f4034])).
fof(f4034,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f324,f221])).
fof(f324,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f205])).
fof(f205,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X15,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))) <=> s('type.num.num',X15) = s('type.num.num',X16))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|19')).
fof(f9236,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f9112,f349])).
fof(f349,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0')))),
  inference(forward_demodulation,[],[f348,f218])).
fof(f348,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),
  inference(forward_demodulation,[],[f222,f221])).
fof(f222,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f45])).
fof(f45,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|13')).
fof(f9112,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))))) | $spl14),
  inference(backward_demodulation,[],[f8959,f1753])).
fof(f1753,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f1724,f349])).
fof(f1724,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f244,f1273])).
fof(f15047,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num',X0)) ) | $spl14),
  inference(superposition,[],[f318,f14756])).
fof(f318,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f202])).
fof(f202,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f154])).
fof(f154,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f74])).
fof(f74,axiom,(
  ! [X15,X16] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))) <=> s('type.num.num',X15) = s('type.num.num',X16))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_eq|split|6')).
fof(f31395,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl151),
  inference(cnf_transformation,[],[f31395_D])).
fof(f31395_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl151),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl151])])).
fof(f31393,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl148),
  inference(cnf_transformation,[],[f31393_D])).
fof(f31393_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f31504,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f31503,f14855])).
fof(f31503,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f31271,f14855])).
fof(f31271,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f14908,f14855])).
fof(f14908,plain,(
  ( ! [X4] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X4)))) ) | $spl14),
  inference(forward_demodulation,[],[f14767,f14756])).
fof(f14767,plain,(
  ( ! [X4] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X4)))) ) | $spl14),
  inference(superposition,[],[f9143,f10931])).
fof(f10931,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f9297,f324])).
fof(f9297,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1)))))) ) | $spl14),
  inference(forward_demodulation,[],[f9218,f355])).
fof(f355,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f234,f218])).
fof(f234,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X15] : s('type.num.num',X15) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)))),
  file('thm.patProps.Boolv_|49||49|','thm.arithmetic.ADD|split|0')).
fof(f9218,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X1)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f8959,f8192])).
fof(f8192,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))))))) )),
  inference(forward_demodulation,[],[f8086,f355])).
fof(f8086,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))))))) )),
  inference(superposition,[],[f307,f1273])).
fof(f307,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X15,X16] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X16))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|2')).
fof(f31502,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f31262,f8353])).
fof(f31262,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f14814,f14855])).
fof(f14814,plain,(
  ( ! [X2] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f14756,f9132])).
fof(f9132,plain,(
  ( ! [X2] : (s('type.num.num',X2) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))) ) | $spl14),
  inference(backward_demodulation,[],[f8959,f2682])).
fof(f2682,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f318,f1273])).
fof(f31501,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f31259,f347])).
fof(f347,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0')))),
  inference(forward_demodulation,[],[f220,f218])).
fof(f220,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f47])).
fof(f47,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.patProps.Boolv_|49||49|','thm.prim_rec.PRE|split|0')).
fof(f31259,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f14799,f14855])).
fof(f14799,plain,(
  ( ! [X26] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f14756,f2696])).
fof(f2696,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f318,f347])).
fof(f31500,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f31258,f365])).
fof(f365,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f247,f218])).
fof(f247,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X15] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15)))))))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|10')).
fof(f31258,plain,(
  ( ! [X196] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X196)))))))) ) | $spl14),
  inference(superposition,[],[f14797,f14855])).
fof(f14797,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f14756,f2692])).
fof(f2692,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))))))) )),
  inference(superposition,[],[f318,f365])).
fof(f31499,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f31257,f362])).
fof(f362,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f245,f218])).
fof(f245,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X15] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15)))))))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|9')).
fof(f31257,plain,(
  ( ! [X195] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X195)))))))) ) | $spl14),
  inference(superposition,[],[f14796,f14855])).
fof(f14796,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18)))))))) ) | $spl14),
  inference(backward_demodulation,[],[f14756,f2691])).
fof(f2691,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18)))))))) )),
  inference(superposition,[],[f318,f362])).
fof(f31498,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f31256,f358])).
fof(f358,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f237,f218])).
fof(f237,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X15] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|6')).
fof(f31256,plain,(
  ( ! [X194] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X194))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f14795,f14855])).
fof(f14795,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X14)))) ) | $spl14),
  inference(backward_demodulation,[],[f14756,f2689])).
fof(f2689,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X14)))) )),
  inference(superposition,[],[f318,f358])).
fof(f31497,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f31255,f360])).
fof(f360,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f239,f218])).
fof(f239,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X15] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)))),
  file('thm.patProps.Boolv_|49||49|','thm.arithmetic.MULT|split|0')).
fof(f31255,plain,(
  ( ! [X193] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X193))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f14794,f14855])).
fof(f14794,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X10)))) ) | $spl14),
  inference(backward_demodulation,[],[f14756,f2687])).
fof(f2687,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X10)))) )),
  inference(superposition,[],[f318,f360])).
fof(f31492,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f31254,f359])).
fof(f359,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(forward_demodulation,[],[f238,f218])).
fof(f238,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X15] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|4')).
fof(f31254,plain,(
  ( ! [X192] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X192),s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f14793,f14855])).
fof(f14793,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f14756,f2686])).
fof(f2686,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f318,f359])).
fof(f31371,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl131),
  inference(cnf_transformation,[],[f31371_D])).
fof(f31371_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl131),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl131])])).
fof(f31391,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl146),
  inference(cnf_transformation,[],[f31391_D])).
fof(f31391_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f31491,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f31490,f9094])).
fof(f9094,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f8959,f366])).
fof(f366,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(forward_demodulation,[],[f248,f218])).
fof(f248,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f59])).
fof(f59,axiom,(
  ! [X15] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.num.|48|_0')))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|27')).
fof(f31490,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(forward_demodulation,[],[f31249,f14855])).
fof(f31249,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(superposition,[],[f11132,f14855])).
fof(f11132,plain,(
  ( ! [X161] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X161))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X161),s('type.num.num','const.conLang.true_tag_0'))))) ) | $spl14),
  inference(forward_demodulation,[],[f11131,f10931])).
fof(f11131,plain,(
  ( ! [X161] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X161),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X161)))))) ) | $spl14),
  inference(forward_demodulation,[],[f11047,f9169])).
fof(f9169,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl14),
  inference(backward_demodulation,[],[f8959,f6368])).
fof(f6368,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f303,f1273])).
fof(f11047,plain,(
  ( ! [X161] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X161)))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X161)))))) ) | $spl14),
  inference(superposition,[],[f376,f9297])).
fof(f376,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f375,f218])).
fof(f375,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f276,f218])).
fof(f276,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f185])).
fof(f31389,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl144),
  inference(cnf_transformation,[],[f31389_D])).
fof(f31389_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f31489,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f31488,f14855])).
fof(f31488,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f31248,f14855])).
fof(f31248,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f10989,f14855])).
fof(f10989,plain,(
  ( ! [X39] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X39)))) ) | $spl14),
  inference(superposition,[],[f9100,f9297])).
fof(f9100,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num',X0)) ) | $spl14),
  inference(backward_demodulation,[],[f8959,f372])).
fof(f31377,plain,(
  ( ! [X22] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl138),
  inference(cnf_transformation,[],[f31377_D])).
fof(f31377_D,plain,(
  ( ! [X22] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f31442,plain,(
  ( ! [X128] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X128),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f31441,f14855])).
fof(f31441,plain,(
  ( ! [X128] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X128),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))))) ) | $spl14),
  inference(forward_demodulation,[],[f31167,f14855])).
fof(f31167,plain,(
  ( ! [X128] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X128),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))))) ) | $spl14),
  inference(superposition,[],[f9108,f14855])).
fof(f9108,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X9),s('type.num.num',X10)))) ) | $spl14),
  inference(backward_demodulation,[],[f8959,f1359])).
fof(f1359,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X9),s('type.num.num',X10)))) )),
  inference(superposition,[],[f372,f297])).
fof(f31376,plain,(
  ( ! [X21] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X21)))) ) | $spl136),
  inference(cnf_transformation,[],[f31376_D])).
fof(f31376_D,plain,(
  ( ! [X21] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X21)))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f31440,plain,(
  ( ! [X127] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X127))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f31439,f14855])).
fof(f31439,plain,(
  ( ! [X127] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num',X127)))) ) | $spl14),
  inference(forward_demodulation,[],[f31166,f14855])).
fof(f31166,plain,(
  ( ! [X127] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num',X127)))) ) | $spl14),
  inference(superposition,[],[f9107,f14855])).
fof(f9107,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X7),s('type.num.num',X8)))) ) | $spl14),
  inference(backward_demodulation,[],[f8959,f1358])).
fof(f1358,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X7),s('type.num.num',X8)))) )),
  inference(superposition,[],[f372,f296])).
fof(f31375,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl134),
  inference(cnf_transformation,[],[f31375_D])).
fof(f31375_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f31438,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f31437,f14855])).
fof(f31437,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f31165,f14855])).
fof(f31165,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9106,f14855])).
fof(f9106,plain,(
  ( ! [X4] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X4),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f8959,f1353])).
fof(f1353,plain,(
  ( ! [X4] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X4),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f372,f357])).
fof(f357,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(forward_demodulation,[],[f236,f218])).
fof(f236,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X15] : s('type.num.num',X15) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|7')).
fof(f31373,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl132),
  inference(cnf_transformation,[],[f31373_D])).
fof(f31373_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f31436,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f31435,f14855])).
fof(f31435,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f31164,f14855])).
fof(f31164,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9105,f14855])).
fof(f9105,plain,(
  ( ! [X1] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f8959,f1350])).
fof(f1350,plain,(
  ( ! [X1] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f372,f361])).
fof(f361,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(forward_demodulation,[],[f240,f218])).
fof(f240,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X15] : s('type.num.num',X15) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|1')).
fof(f31369,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl128),
  inference(cnf_transformation,[],[f31369_D])).
fof(f31369_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f31434,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f31433,f14855])).
fof(f31433,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f31163,f14855])).
fof(f31163,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f9104,f14855])).
fof(f9104,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) ) | $spl14),
  inference(backward_demodulation,[],[f8959,f1349])).
fof(f1349,plain,(
  ( ! [X0] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) )),
  inference(superposition,[],[f372,f355])).
fof(f31058,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f14908,f14855])).
fof(f31057,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(superposition,[],[f11132,f14855])).
fof(f31056,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f10989,f14855])).
fof(f31379,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl140),
  inference(cnf_transformation,[],[f31379_D])).
fof(f31379_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f31381,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl142),
  inference(cnf_transformation,[],[f31381_D])).
fof(f31381_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f31041,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9152,f14855])).
fof(f9152,plain,(
  ( ! [X6] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X6)))) ) | $spl14),
  inference(backward_demodulation,[],[f8959,f5053])).
fof(f5053,plain,(
  ( ! [X6] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(superposition,[],[f368,f253])).
fof(f368,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(forward_demodulation,[],[f250,f218])).
fof(f250,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X15] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X15))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.num.|48|_0')))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|24')).
fof(f31038,plain,(
  ( ! [X22] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f9108,f14855])).
fof(f31037,plain,(
  ( ! [X21] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X21)))) ) | $spl14),
  inference(superposition,[],[f9107,f14855])).
fof(f31036,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9106,f14855])).
fof(f31035,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9105,f14855])).
fof(f31034,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9104,f14855])).
fof(f29689,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl126),
  inference(cnf_transformation,[],[f29689_D])).
fof(f29689_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f29687,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl125),
  inference(cnf_transformation,[],[f29687_D])).
fof(f29687_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl125),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl125])])).
fof(f29476,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f15047,f14833])).
fof(f14833,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(backward_demodulation,[],[f14756,f14100])).
fof(f14100,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f244,f9109])).
fof(f9109,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(backward_demodulation,[],[f8959,f1585])).
fof(f1585,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f243,f221])).
fof(f29599,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl123),
  inference(cnf_transformation,[],[f29599_D])).
fof(f29599_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl123),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl123])])).
fof(f29597,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl120),
  inference(cnf_transformation,[],[f29597_D])).
fof(f29597_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f29697,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f29696,f14833])).
fof(f29696,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f29475,f14833])).
fof(f29475,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f14908,f14833])).
fof(f29695,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f29466,f8353])).
fof(f29466,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f14814,f14833])).
fof(f29694,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f29463,f347])).
fof(f29463,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f14799,f14833])).
fof(f29693,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f29462,f365])).
fof(f29462,plain,(
  ( ! [X190] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X190)))))))) ) | $spl14),
  inference(superposition,[],[f14797,f14833])).
fof(f29692,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f29461,f362])).
fof(f29461,plain,(
  ( ! [X189] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X189)))))))) ) | $spl14),
  inference(superposition,[],[f14796,f14833])).
fof(f29691,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f29460,f358])).
fof(f29460,plain,(
  ( ! [X188] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X188))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f14795,f14833])).
fof(f29690,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f29459,f360])).
fof(f29459,plain,(
  ( ! [X187] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X187))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f14794,f14833])).
fof(f29685,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f29458,f359])).
fof(f29458,plain,(
  ( ! [X186] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X186),s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f14793,f14833])).
fof(f29575,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl103),
  inference(cnf_transformation,[],[f29575_D])).
fof(f29575_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl103),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl103])])).
fof(f29595,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl118),
  inference(cnf_transformation,[],[f29595_D])).
fof(f29595_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f29684,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f29683,f9094])).
fof(f29683,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(forward_demodulation,[],[f29453,f14833])).
fof(f29453,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(superposition,[],[f11132,f14833])).
fof(f29593,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl116),
  inference(cnf_transformation,[],[f29593_D])).
fof(f29593_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f29682,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f29681,f14833])).
fof(f29681,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f29452,f14833])).
fof(f29452,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f10989,f14833])).
fof(f29581,plain,(
  ( ! [X22] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl110),
  inference(cnf_transformation,[],[f29581_D])).
fof(f29581_D,plain,(
  ( ! [X22] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f29635,plain,(
  ( ! [X122] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X122),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f29634,f14833])).
fof(f29634,plain,(
  ( ! [X122] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X122),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))))) ) | $spl14),
  inference(forward_demodulation,[],[f29371,f14833])).
fof(f29371,plain,(
  ( ! [X122] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X122),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))))) ) | $spl14),
  inference(superposition,[],[f9108,f14833])).
fof(f29580,plain,(
  ( ! [X21] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X21)))) ) | $spl108),
  inference(cnf_transformation,[],[f29580_D])).
fof(f29580_D,plain,(
  ( ! [X21] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X21)))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f29633,plain,(
  ( ! [X121] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X121))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f29632,f14833])).
fof(f29632,plain,(
  ( ! [X121] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num',X121)))) ) | $spl14),
  inference(forward_demodulation,[],[f29370,f14833])).
fof(f29370,plain,(
  ( ! [X121] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num',X121)))) ) | $spl14),
  inference(superposition,[],[f9107,f14833])).
fof(f29579,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl106),
  inference(cnf_transformation,[],[f29579_D])).
fof(f29579_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f29631,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f29630,f14833])).
fof(f29630,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f29369,f14833])).
fof(f29369,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9106,f14833])).
fof(f29577,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl104),
  inference(cnf_transformation,[],[f29577_D])).
fof(f29577_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f29629,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f29628,f14833])).
fof(f29628,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f29368,f14833])).
fof(f29368,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9105,f14833])).
fof(f29573,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl100),
  inference(cnf_transformation,[],[f29573_D])).
fof(f29573_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f29627,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f29626,f14833])).
fof(f29626,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f29367,f14833])).
fof(f29367,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f9104,f14833])).
fof(f29273,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f14908,f14833])).
fof(f29272,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(superposition,[],[f11132,f14833])).
fof(f29271,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f10989,f14833])).
fof(f29583,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl112),
  inference(cnf_transformation,[],[f29583_D])).
fof(f29583_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f29585,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl114),
  inference(cnf_transformation,[],[f29585_D])).
fof(f29585_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f29256,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9152,f14833])).
fof(f29253,plain,(
  ( ! [X22] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f9108,f14833])).
fof(f29252,plain,(
  ( ! [X21] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X21)))) ) | $spl14),
  inference(superposition,[],[f9107,f14833])).
fof(f29251,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9106,f14833])).
fof(f29250,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9105,f14833])).
fof(f29249,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9104,f14833])).
fof(f25473,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl98),
  inference(cnf_transformation,[],[f25473_D])).
fof(f25473_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f25471,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl97),
  inference(cnf_transformation,[],[f25471_D])).
fof(f25471_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl97),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl97])])).
fof(f25268,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f15047,f14832])).
fof(f14832,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(backward_demodulation,[],[f14756,f14099])).
fof(f14099,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f243,f9109])).
fof(f25389,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl95),
  inference(cnf_transformation,[],[f25389_D])).
fof(f25389_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl95),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl95])])).
fof(f25387,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl92),
  inference(cnf_transformation,[],[f25387_D])).
fof(f25387_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f25481,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f25480,f14832])).
fof(f25480,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f25267,f14832])).
fof(f25267,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f14908,f14832])).
fof(f25479,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f25258,f8353])).
fof(f25258,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f14814,f14832])).
fof(f25478,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f25255,f347])).
fof(f25255,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f14799,f14832])).
fof(f25477,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f25254,f365])).
fof(f25254,plain,(
  ( ! [X182] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X182)))))))) ) | $spl14),
  inference(superposition,[],[f14797,f14832])).
fof(f25476,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f25253,f362])).
fof(f25253,plain,(
  ( ! [X181] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X181)))))))) ) | $spl14),
  inference(superposition,[],[f14796,f14832])).
fof(f25475,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f25252,f358])).
fof(f25252,plain,(
  ( ! [X180] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X180))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f14795,f14832])).
fof(f25474,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f25251,f360])).
fof(f25251,plain,(
  ( ! [X179] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X179))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f14794,f14832])).
fof(f25469,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f25250,f359])).
fof(f25250,plain,(
  ( ! [X178] : (s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X178),s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f14793,f14832])).
fof(f25365,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl75),
  inference(cnf_transformation,[],[f25365_D])).
fof(f25365_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl75),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl75])])).
fof(f25385,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl90),
  inference(cnf_transformation,[],[f25385_D])).
fof(f25385_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f25468,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f25467,f9094])).
fof(f25467,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(forward_demodulation,[],[f25245,f14832])).
fof(f25245,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(superposition,[],[f11132,f14832])).
fof(f25383,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl88),
  inference(cnf_transformation,[],[f25383_D])).
fof(f25383_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f25466,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f25465,f14832])).
fof(f25465,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f25244,f14832])).
fof(f25244,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f10989,f14832])).
fof(f25371,plain,(
  ( ! [X22] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl82),
  inference(cnf_transformation,[],[f25371_D])).
fof(f25371_D,plain,(
  ( ! [X22] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f25423,plain,(
  ( ! [X120] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X120),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f25422,f14832])).
fof(f25422,plain,(
  ( ! [X120] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X120),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))))) ) | $spl14),
  inference(forward_demodulation,[],[f25166,f14832])).
fof(f25166,plain,(
  ( ! [X120] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X120),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))))) ) | $spl14),
  inference(superposition,[],[f9108,f14832])).
fof(f25370,plain,(
  ( ! [X21] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X21)))) ) | $spl80),
  inference(cnf_transformation,[],[f25370_D])).
fof(f25370_D,plain,(
  ( ! [X21] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X21)))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f25421,plain,(
  ( ! [X119] : (s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X119))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))) ) | $spl14),
  inference(forward_demodulation,[],[f25420,f14832])).
fof(f25420,plain,(
  ( ! [X119] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num',X119)))) ) | $spl14),
  inference(forward_demodulation,[],[f25165,f14832])).
fof(f25165,plain,(
  ( ! [X119] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num',X119)))) ) | $spl14),
  inference(superposition,[],[f9107,f14832])).
fof(f25369,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl78),
  inference(cnf_transformation,[],[f25369_D])).
fof(f25369_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f25419,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f25418,f14832])).
fof(f25418,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f25164,f14832])).
fof(f25164,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9106,f14832])).
fof(f25367,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl76),
  inference(cnf_transformation,[],[f25367_D])).
fof(f25367_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f25417,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f25416,f14832])).
fof(f25416,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f25163,f14832])).
fof(f25163,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9105,f14832])).
fof(f25363,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl72),
  inference(cnf_transformation,[],[f25363_D])).
fof(f25363_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f25415,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f25414,f14832])).
fof(f25414,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(forward_demodulation,[],[f25162,f14832])).
fof(f25162,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))))) | $spl14),
  inference(superposition,[],[f9104,f14832])).
fof(f25072,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f14908,f14832])).
fof(f25071,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0')))) | $spl14),
  inference(superposition,[],[f11132,f14832])).
fof(f25070,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f10989,f14832])).
fof(f25373,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl84),
  inference(cnf_transformation,[],[f25373_D])).
fof(f25373_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f25375,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl86),
  inference(cnf_transformation,[],[f25375_D])).
fof(f25375_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f25055,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9152,f14832])).
fof(f25052,plain,(
  ( ! [X22] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0')))))))) ) | $spl14),
  inference(superposition,[],[f9108,f14832])).
fof(f25051,plain,(
  ( ! [X21] : (s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num',X21)))) ) | $spl14),
  inference(superposition,[],[f9107,f14832])).
fof(f25050,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9106,f14832])).
fof(f25049,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))),s('type.num.num','const.conLang.true_tag_0'))) | $spl14),
  inference(superposition,[],[f9105,f14832])).
fof(f25048,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9104,f14832])).
fof(f22394,plain,(
  ( ! [X14] : (s(bool,'T_0') = s(bool,X14)) ) | $spl68),
  inference(cnf_transformation,[],[f22394_D])).
fof(f22394_D,plain,(
  ( ! [X14] : (s(bool,'T_0') = s(bool,X14)) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f23622,plain,(
  s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl71),
  inference(cnf_transformation,[],[f23622_D])).
fof(f23622_D,plain,(
  s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl71),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl71])])).
fof(f23623,plain,(
  ( ! [X16] : (s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,X16)) ) | ($spl14 | $spl46)),
  inference(forward_demodulation,[],[f23573,f352])).
fof(f352,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f231,f218])).
fof(f231,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f58])).
fof(f58,axiom,(
  ! [X15] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|26')).
fof(f23573,plain,(
  ( ! [X17,X16] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X17))) | s(bool,'T_0') = s(bool,X16)) ) | ($spl14 | $spl46)),
  inference(duplicate_literal_removal,[],[f23476])).
fof(f23476,plain,(
  ( ! [X17,X16] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X17))) | s(bool,'T_0') = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) ) | ($spl14 | $spl46)),
  inference(superposition,[],[f3169,f21439])).
fof(f21439,plain,(
  ( ! [X6] : (s(bool,X6) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,X6)) ) | $spl46),
  inference(subsumption_resolution,[],[f21389,f350])).
fof(f21389,plain,(
  ( ! [X6] : (p(s(bool,'F_0')) | s(bool,X6) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,X6)) ) | $spl46),
  inference(superposition,[],[f702,f19060])).
fof(f702,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f682,f350])).
fof(f682,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f308,f253])).
fof(f308,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f168])).
fof(f168,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f150])).
fof(f150,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X11,X12] : ((p(s(bool,X11)) => p(s(bool,X12))) => ((p(s(bool,X12)) => p(s(bool,X11))) => s(bool,X11) = s(bool,X12)))),
  file('thm.patProps.Boolv_|49||49|','thm.bool.IMP_ANTISYM_AX')).
fof(f23620,plain,(
  ( ! [X14] : (s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,X14)) ) | ($spl12 | $spl46)),
  inference(forward_demodulation,[],[f23574,f353])).
fof(f353,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.conLang.true_tag_0')))) )),
  inference(forward_demodulation,[],[f232,f218])).
fof(f232,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X15] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|29')).
fof(f23574,plain,(
  ( ! [X14,X15] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X15),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X14)) ) | ($spl12 | $spl46)),
  inference(duplicate_literal_removal,[],[f23475])).
fof(f23475,plain,(
  ( ! [X14,X15] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X15),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X14) | s(bool,'T_0') = s(bool,X14)) ) | ($spl12 | $spl46)),
  inference(superposition,[],[f3168,f21439])).
fof(f19061,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | $spl49),
  inference(cnf_transformation,[],[f19061_D])).
fof(f19061_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl49),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl49])])).
fof(f22395,plain,(
  ( ! [X16] : (s(bool,'T_0') != s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X16)) ) | ($spl14 | $spl46)),
  inference(forward_demodulation,[],[f22349,f352])).
fof(f22349,plain,(
  ( ! [X17,X16] : (s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X17))) | s(bool,'T_0') = s(bool,X16)) ) | ($spl14 | $spl46)),
  inference(duplicate_literal_removal,[],[f22259])).
fof(f22259,plain,(
  ( ! [X17,X16] : (s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X17))) | s(bool,'T_0') = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) ) | ($spl14 | $spl46)),
  inference(superposition,[],[f3169,f21447])).
fof(f21447,plain,(
  ( ! [X23] : (s(bool,X23) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X23)) ) | $spl46),
  inference(subsumption_resolution,[],[f21399,f350])).
fof(f21399,plain,(
  ( ! [X23] : (p(s(bool,'F_0')) | s(bool,X23) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X23)) ) | $spl46),
  inference(superposition,[],[f702,f19077])).
fof(f19077,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | $spl46),
  inference(backward_demodulation,[],[f19060,f5081])).
fof(f5081,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0')))),
  inference(forward_demodulation,[],[f5047,f4696])).
fof(f4696,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f367,f221])).
fof(f367,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f249,f218])).
fof(f249,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X15] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X15))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|21')).
fof(f5047,plain,(
  s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f368,f221])).
fof(f22393,plain,(
  ( ! [X14] : (s(bool,'T_0') != s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X14)) ) | ($spl12 | $spl46)),
  inference(forward_demodulation,[],[f22350,f353])).
fof(f22350,plain,(
  ( ! [X14,X15] : (s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X15),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X14)) ) | ($spl12 | $spl46)),
  inference(duplicate_literal_removal,[],[f22258])).
fof(f22258,plain,(
  ( ! [X14,X15] : (s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X15),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X14) | s(bool,'T_0') = s(bool,X14)) ) | ($spl12 | $spl46)),
  inference(superposition,[],[f3168,f21447])).
fof(f20471,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl64),
  inference(cnf_transformation,[],[f20471_D])).
fof(f20471_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f20473,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl66),
  inference(cnf_transformation,[],[f20473_D])).
fof(f20473_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f20457,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f253,f15812])).
fof(f15812,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f9271,f9236])).
fof(f9271,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9269,f6240])).
fof(f6240,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(forward_demodulation,[],[f6195,f5941])).
fof(f5941,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(superposition,[],[f301,f221])).
fof(f301,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X15,X16] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num',X16))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|22')).
fof(f6195,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f302,f221])).
fof(f302,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f144])).
fof(f144,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X15,X16] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num',X15))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|25')).
fof(f9269,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X2))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl14),
  inference(forward_demodulation,[],[f9161,f349])).
fof(f9161,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X2)))) ) | $spl14),
  inference(backward_demodulation,[],[f8959,f5943])).
fof(f5943,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f301,f1753])).
fof(f20455,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f15812,f253])).
fof(f19792,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl58),
  inference(cnf_transformation,[],[f19792_D])).
fof(f19792_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f19804,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl63),
  inference(cnf_transformation,[],[f19804_D])).
fof(f19804_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl63),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl63])])).
fof(f19805,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f19785,f352])).
fof(f19785,plain,(
  ( ! [X4] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(superposition,[],[f3169,f15571])).
fof(f15571,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f9266,f9236])).
fof(f9266,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.false_tag_0')))) ) | $spl14),
  inference(backward_demodulation,[],[f9264,f6439])).
fof(f6439,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(forward_demodulation,[],[f6391,f5762])).
fof(f5762,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(superposition,[],[f300,f221])).
fof(f300,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X15,X16] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num',X16))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|28')).
fof(f6391,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.conLang.false_tag_0')))) )),
  inference(superposition,[],[f303,f221])).
fof(f9264,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl14),
  inference(forward_demodulation,[],[f9156,f349])).
fof(f9156,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))),s('type.num.num',X2)))) ) | $spl14),
  inference(backward_demodulation,[],[f8959,f5764])).
fof(f5764,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f300,f1753])).
fof(f19802,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | ($spl12 | $spl14)),
  inference(forward_demodulation,[],[f19784,f353])).
fof(f19784,plain,(
  ( ! [X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0')))) ) | ($spl12 | $spl14)),
  inference(superposition,[],[f3168,f15571])).
fof(f19794,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl60),
  inference(cnf_transformation,[],[f19794_D])).
fof(f19794_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f19776,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f253,f15571])).
fof(f19774,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f15571,f253])).
fof(f19068,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl54),
  inference(cnf_transformation,[],[f19068_D])).
fof(f19068_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f19070,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) | $spl56),
  inference(cnf_transformation,[],[f19070_D])).
fof(f19070_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f18969,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(superposition,[],[f9152,f9246])).
fof(f9246,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f9114,f349])).
fof(f9114,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(backward_demodulation,[],[f8959,f1759])).
fof(f1759,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f243,f1753])).
fof(f19064,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl50),
  inference(cnf_transformation,[],[f19064_D])).
fof(f19064_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f19066,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) | $spl52),
  inference(cnf_transformation,[],[f19066_D])).
fof(f19066_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f18968,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(superposition,[],[f9152,f9245])).
fof(f9245,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl14),
  inference(forward_demodulation,[],[f9113,f349])).
fof(f9113,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(backward_demodulation,[],[f8959,f1758])).
fof(f1758,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f244,f1753])).
fof(f19060,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl46),
  inference(cnf_transformation,[],[f19060_D])).
fof(f19060_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f19062,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | $spl48),
  inference(cnf_transformation,[],[f19062_D])).
fof(f19062_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f18967,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(superposition,[],[f9152,f9236])).
fof(f14902,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl43),
  inference(cnf_transformation,[],[f14902_D])).
fof(f14902_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f14904,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl44),
  inference(cnf_transformation,[],[f14904_D])).
fof(f14904_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f14900,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f14899,f14756])).
fof(f14899,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f14763,f9246])).
fof(f14763,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9143,f9109])).
fof(f14896,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl39),
  inference(cnf_transformation,[],[f14896_D])).
fof(f14896_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f14898,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | $spl40),
  inference(cnf_transformation,[],[f14898_D])).
fof(f14898_D,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f14894,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl14),
  inference(forward_demodulation,[],[f14893,f14756])).
fof(f14893,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f14762,f9245])).
fof(f14762,plain,(
  s('type.num.num','const.conLang.false_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9143,f9111])).
fof(f14597,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl36),
  inference(cnf_transformation,[],[f14597_D])).
fof(f14597_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f14579,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl35),
  inference(cnf_transformation,[],[f14579_D])).
fof(f14579_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f14595,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f14483,f9245])).
fof(f14483,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9100,f9111])).
fof(f14577,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | $spl32),
  inference(cnf_transformation,[],[f14577_D])).
fof(f14577_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f14407,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | $spl14),
  inference(superposition,[],[f9100,f9111])).
fof(f14310,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl30),
  inference(cnf_transformation,[],[f14310_D])).
fof(f14310_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f14292,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl29),
  inference(cnf_transformation,[],[f14292_D])).
fof(f14292_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f14308,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(forward_demodulation,[],[f14196,f9246])).
fof(f14196,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))))) | $spl14),
  inference(superposition,[],[f9100,f9109])).
fof(f14290,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | $spl26),
  inference(cnf_transformation,[],[f14290_D])).
fof(f14290_D,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f14120,plain,(
  s('type.num.num','const.conLang.true_tag_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.conLang.false_tag_0'))) | s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.conLang.true_tag_0'))))) | $spl14),
  inference(superposition,[],[f9100,f9109])).
fof(f7668,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f7667,f1371])).
fof(f7667,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.conLang.false_tag_0') | $spl10),
  inference(forward_demodulation,[],[f7638,f296])).
fof(f7638,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | $spl10),
  inference(unit_resulting_resolution,[],[f251,f7630])).
fof(f7630,plain,(
  ( ! [X4,X5] : (s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) != s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X4),s('type.list.list'('type.patSem.v'),X5))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num',X4)) ) | $spl10),
  inference(superposition,[],[f330,f7459])).
fof(f7459,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.patSem.v'),'const.list.NIL_0'))) | $spl10),
  inference(forward_demodulation,[],[f6573,f3167])).
fof(f6573,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'F_0'))) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.patSem.v'),'const.list.NIL_0')))),
  inference(superposition,[],[f251,f297])).
fof(f7447,plain,(
  $false | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f7446,f1371])).
fof(f7446,plain,(
  s('type.num.num','const.conLang.true_tag_0') = s('type.num.num','const.conLang.false_tag_0') | ($spl0 | $spl3 | $spl4)),
  inference(forward_demodulation,[],[f7417,f296])).
fof(f7417,plain,(
  s('type.num.num','const.conLang.false_tag_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0'))) | ($spl0 | $spl3 | $spl4)),
  inference(unit_resulting_resolution,[],[f251,f7351])).
fof(f7351,plain,(
  ( ! [X4,X3] : (s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) != s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X3),s('type.list.list'('type.patSem.v'),X4))) | s('type.num.num','const.conLang.false_tag_0') = s('type.num.num',X3)) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f330,f6578])).
fof(f6578,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num','const.conLang.false_tag_0'),s('type.list.list'('type.patSem.v'),'const.list.NIL_0'))) | ($spl0 | $spl3 | $spl4)),
  inference(forward_demodulation,[],[f6573,f3200])).
fof(f3200,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'F_0'))) | ($spl0 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f3194,f3191])).
fof(f3191,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f342,f639])).
fof(f3194,plain,(
  s(bool,'F_0') = s(bool,sK0) | ($spl3 | $spl4)),
  inference(unit_resulting_resolution,[],[f3193,f253])).
fof(f3193,plain,(
  s(bool,'T_0') != s(bool,sK0) | ($spl3 | $spl4)),
  inference(forward_demodulation,[],[f345,f639])).
fof(f6334,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl22),
  inference(cnf_transformation,[],[f6334_D])).
fof(f6334_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f6336,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl24),
  inference(cnf_transformation,[],[f6336_D])).
fof(f6336_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f6297,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f253,f916])).
fof(f916,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f242,f221])).
fof(f242,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f64])).
fof(f64,axiom,(
  ! [X15] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X15))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|32')).
fof(f6296,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f916,f253])).
fof(f5729,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl18),
  inference(cnf_transformation,[],[f5729_D])).
fof(f5729_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f5731,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.conLang.false_tag_0'))) | $spl20),
  inference(cnf_transformation,[],[f5731_D])).
fof(f5731_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.conLang.false_tag_0'))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f5692,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f253,f879])).
fof(f879,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.conLang.false_tag_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f241,f221])).
fof(f241,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f65])).
fof(f65,axiom,(
  ! [X15] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X15))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))))),
  file('thm.patProps.Boolv_|49||49|','thm.numeral.numeral_distrib|split|33')).
fof(f5691,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.conLang.false_tag_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f879,f253])).
fof(f3167,plain,(
  ( ! [X0] : (s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0)))) ) | $spl10),
  inference(cnf_transformation,[],[f3167_D])).
fof(f3167_D,plain,(
  ( ! [X0] : (s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0)))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f3169,plain,(
  ( ! [X4,X5] : (s(bool,X5) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,X5)) ) | $spl14),
  inference(cnf_transformation,[],[f3169_D])).
fof(f3169_D,plain,(
  ( ! [X4,X5] : (s(bool,X5) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,X5)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f5193,plain,(
  ( ! [X6,X7,X5] : (s(bool,X7) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X6))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X5))) | s(bool,'T_0') = s(bool,X7)) ) | ($spl0 | $spl3 | $spl4)),
  inference(duplicate_literal_removal,[],[f5165])).
fof(f5165,plain,(
  ( ! [X6,X7,X5] : (s(bool,X7) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X6))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X5))) | s(bool,'T_0') = s(bool,X7) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X5)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f3942,f3713])).
fof(f3713,plain,(
  ( ! [X12,X11] : (s(bool,X12) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X11))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X12)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f3696,f216])).
fof(f3696,plain,(
  ( ! [X12,X11] : (~p(s(bool,'T_0')) | s(bool,X12) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X11))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X12)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f3646,f352])).
fof(f3646,plain,(
  ( ! [X18,X16] : (~p(s(bool,X18)) | s(bool,X16) = s(bool,X18) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X16)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(forward_demodulation,[],[f3645,f296])).
fof(f3645,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X18)) | s(bool,X18) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X16),s(bool,X17))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X16)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f3621,f216])).
fof(f3621,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X18)) | s(bool,X18) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X16),s(bool,X17))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X16)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f311,f3263])).
fof(f3263,plain,(
  ( ! [X8,X9] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X8),s(bool,X9))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X8)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f3241,f296])).
fof(f3241,plain,(
  ( ! [X0] : (s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f3200,f253])).
fof(f311,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f169])).
fof(f3942,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f3898,f253])).
fof(f3898,plain,(
  ( ! [X6] : (s(bool,'F_0') != s(bool,X6) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X6)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f3897,f216])).
fof(f3897,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X6) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X6)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(forward_demodulation,[],[f3803,f352])).
fof(f3803,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X7)))) | s(bool,'F_0') != s(bool,X6) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X6)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f259,f3713])).
fof(f259,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f177])).
fof(f177,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f116])).
fof(f116,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.patProps.Boolv_|49||49|','thm.bool.EQ_CLAUSES|split|3')).
fof(f3168,plain,(
  ( ! [X2,X1] : (s(bool,X2) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl12),
  inference(cnf_transformation,[],[f3168_D])).
fof(f3168_D,plain,(
  ( ! [X2,X1] : (s(bool,X2) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0'))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f5194,plain,(
  ( ! [X4,X2,X3] : (s(bool,X4) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.conLang.true_tag_0'))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X2))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl0 | $spl3 | $spl4)),
  inference(duplicate_literal_removal,[],[f5164])).
fof(f5164,plain,(
  ( ! [X4,X2,X3] : (s(bool,X4) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.conLang.true_tag_0'))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X2))) | s(bool,'T_0') = s(bool,X4) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X2)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f3942,f3714])).
fof(f3714,plain,(
  ( ! [X14,X13] : (s(bool,X14) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X13),s('type.num.num','const.conLang.true_tag_0'))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X14)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f3697,f216])).
fof(f3697,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | s(bool,X14) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X13),s('type.num.num','const.conLang.true_tag_0'))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X14)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f3646,f353])).
fof(f5235,plain,(
  ( ! [X1] : (s(bool,X1) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X1)) ) | $spl16),
  inference(cnf_transformation,[],[f5235_D])).
fof(f5235_D,plain,(
  ( ! [X1] : (s(bool,X1) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X1)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f5195,plain,(
  ( ! [X0,X1] : (s(bool,X1) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X1)) ) | ($spl0 | $spl3 | $spl4)),
  inference(duplicate_literal_removal,[],[f5163])).
fof(f5163,plain,(
  ( ! [X0,X1] : (s(bool,X1) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X1) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f3942,f4674])).
fof(f4674,plain,(
  ( ! [X7] : (s(bool,X7) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X7)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f4660,f216])).
fof(f4660,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | s(bool,X7) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X7)))) ) | ($spl0 | $spl3 | $spl4)),
  inference(superposition,[],[f3646,f4582])).
fof(f4582,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f4552,f352])).
fof(f4552,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.true_tag_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f366,f1273])).
fof(f3201,plain,(
  $false | ($spl0 | $spl3 | $spl4 | $spl7)),
  inference(subsumption_resolution,[],[f3200,f3192])).
fof(f3192,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) != s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'F_0'))) | ($spl0 | $spl4 | $spl7)),
  inference(backward_demodulation,[],[f3191,f640])).
fof(f640,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'F_0'))) != s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) | $spl7),
  inference(cnf_transformation,[],[f640_D])).
fof(f640_D,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'F_0'))) != s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f3190,plain,(
  $false | ($spl3 | $spl4 | $spl9)),
  inference(subsumption_resolution,[],[f639,f652])).
fof(f652,plain,(
  s(bool,'T_0') != s(bool,sK1) | ($spl3 | $spl9)),
  inference(backward_demodulation,[],[f645,f345])).
fof(f645,plain,(
  s(bool,'T_0') = s(bool,sK0) | $spl9),
  inference(unit_resulting_resolution,[],[f643,f253])).
fof(f3189,plain,(
  $false | ($spl0 | $spl3 | $spl7 | $spl9)),
  inference(subsumption_resolution,[],[f3188,f3187])).
fof(f3187,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'F_0'))) | ($spl0 | $spl3 | $spl9)),
  inference(forward_demodulation,[],[f3186,f645])).
fof(f3186,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'F_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) | ($spl0 | $spl3 | $spl9)),
  inference(forward_demodulation,[],[f342,f654])).
fof(f654,plain,(
  s(bool,'F_0') = s(bool,sK1) | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f652,f253])).
fof(f3188,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) != s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'F_0'))) | ($spl7 | $spl9)),
  inference(forward_demodulation,[],[f640,f645])).
fof(f3129,plain,(
  ( ! [X4,X5,X3] : (s(bool,X5) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X4))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X3))) | s(bool,'T_0') = s(bool,X5)) ) | ($spl6 | $spl9)),
  inference(duplicate_literal_removal,[],[f3107])).
fof(f3107,plain,(
  ( ! [X4,X5,X3] : (s(bool,X5) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X4))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X3))) | s(bool,'T_0') = s(bool,X5) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X3)))) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f2391,f1492])).
fof(f1492,plain,(
  ( ! [X12,X11] : (s(bool,X12) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X11))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X12)))) ) | ($spl6 | $spl9)),
  inference(subsumption_resolution,[],[f1477,f216])).
fof(f1477,plain,(
  ( ! [X12,X11] : (~p(s(bool,'T_0')) | s(bool,X12) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X11))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X12)))) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f1226,f352])).
fof(f1226,plain,(
  ( ! [X18,X16] : (~p(s(bool,X18)) | s(bool,X16) = s(bool,X18) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X16)))) ) | ($spl6 | $spl9)),
  inference(forward_demodulation,[],[f1225,f296])).
fof(f1225,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X18)) | s(bool,X18) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X16),s(bool,X17))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X16)))) ) | ($spl6 | $spl9)),
  inference(subsumption_resolution,[],[f1203,f216])).
fof(f1203,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X18)) | s(bool,X18) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X16),s(bool,X17))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X16)))) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f311,f1015])).
fof(f1015,plain,(
  ( ! [X19,X20] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X19),s(bool,X20))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X19)))) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f719,f296])).
fof(f719,plain,(
  ( ! [X0] : (s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f650,f253])).
fof(f650,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'F_0'))) | ($spl6 | $spl9)),
  inference(backward_demodulation,[],[f645,f641])).
fof(f2391,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f2237,f253])).
fof(f2237,plain,(
  ( ! [X6] : (s(bool,'F_0') != s(bool,X6) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X6)))) ) | ($spl6 | $spl9)),
  inference(subsumption_resolution,[],[f2236,f216])).
fof(f2236,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X6) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X6)))) ) | ($spl6 | $spl9)),
  inference(forward_demodulation,[],[f2142,f352])).
fof(f2142,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.conLang.true_tag_0'),s('type.num.num',X7)))) | s(bool,'F_0') != s(bool,X6) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X6)))) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f259,f1492])).
fof(f3130,plain,(
  ( ! [X2,X0,X1] : (s(bool,X2) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0'))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X2)) ) | ($spl6 | $spl9)),
  inference(duplicate_literal_removal,[],[f3106])).
fof(f3106,plain,(
  ( ! [X2,X0,X1] : (s(bool,X2) != s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.conLang.true_tag_0'))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X2) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0)))) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f2391,f1493])).
fof(f1493,plain,(
  ( ! [X14,X13] : (s(bool,X14) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X13),s('type.num.num','const.conLang.true_tag_0'))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X14)))) ) | ($spl6 | $spl9)),
  inference(subsumption_resolution,[],[f1478,f216])).
fof(f1478,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | s(bool,X14) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X13),s('type.num.num','const.conLang.true_tag_0'))) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'T_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X14)))) ) | ($spl6 | $spl9)),
  inference(superposition,[],[f1226,f353])).
fof(f639,plain,(
  s(bool,'T_0') = s(bool,sK1) | $spl4),
  inference(cnf_transformation,[],[f639_D])).
fof(f639_D,plain,(
  s(bool,'T_0') = s(bool,sK1) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f643,plain,(
  s(bool,'F_0') != s(bool,sK0) | $spl9),
  inference(cnf_transformation,[],[f643_D])).
fof(f643_D,plain,(
  s(bool,'F_0') != s(bool,sK0) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f633,plain,(
  s(bool,'F_0') != s(bool,sK0) | s(bool,'T_0') = s(bool,sK1) | $spl3),
  inference(superposition,[],[f345,f253])).
fof(f641,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'F_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) | $spl6),
  inference(cnf_transformation,[],[f641_D])).
fof(f641_D,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'F_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f632,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,'F_0'))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) | s(bool,'T_0') = s(bool,sK1) | $spl0),
  inference(superposition,[],[f342,f253])).
fof(f381,plain,(
  $false | ($spl1 | $spl2)),
  inference(trivial_inequality_removal,[],[f380])).
fof(f380,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) != s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f343,f344])).
fof(f342,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK1))) | $spl0),
  inference(cnf_transformation,[],[f342_D])).
fof(f342_D,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK1))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f344,plain,(
  s(bool,sK0) = s(bool,sK1) | $spl2),
  inference(cnf_transformation,[],[f344_D])).
fof(f344_D,plain,(
  s(bool,sK0) = s(bool,sK1) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f214,plain,(
  s(bool,sK0) = s(bool,sK1) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK1)))),
  inference(cnf_transformation,[],[f172])).
fof(f172,plain,(
  (s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK1))) | s(bool,sK0) = s(bool,sK1)) & (s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) != s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK1))) | s(bool,sK0) != s(bool,sK1))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f171])).
fof(f171,plain,(
  ? [X0,X1] : ((s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X1))) | s(bool,X0) = s(bool,X1)) & (s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0))) != s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X1))) | s(bool,X0) != s(bool,X1)))),
  inference(nnf_transformation,[],[f166])).
fof(f166,plain,(
  ? [X0,X1] : (s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X1))) <~> s(bool,X0) = s(bool,X1))),
  inference(ennf_transformation,[],[f83])).
fof(f83,plain,(
  ~! [X0,X1] : (s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X0))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X1))) <=> s(bool,X0) = s(bool,X1))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X6))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X7))) <=> s(bool,X6) = s(bool,X7))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X6))) = s('type.patSem.v','const.patSem.Boolv_1'(s(bool,X7))) <=> s(bool,X6) = s(bool,X7))),
  file('thm.patProps.Boolv_|49||49|','thm.patProps.Boolv_|49||49|')).
fof(f343,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) != s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK1))) | $spl1),
  inference(cnf_transformation,[],[f343_D])).
fof(f343_D,plain,(
  s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) != s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK1))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f345,plain,(
  s(bool,sK0) != s(bool,sK1) | $spl3),
  inference(cnf_transformation,[],[f345_D])).
fof(f345_D,plain,(
  s(bool,sK0) != s(bool,sK1) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f215,plain,(
  s(bool,sK0) != s(bool,sK1) | s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK0))) != s('type.patSem.v','const.patSem.Boolv_1'(s(bool,sK1)))),
  inference(cnf_transformation,[],[f172])).
% SZS output end Proof for thm.patProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 605
% Passive clauses: 2462
% Generated clauses: 54647
% Final active clauses: 490
% Final passive clauses: 1518
% Input formulas: 81
% Initial clauses: 126
% 
% Duplicate literals: 320
% Trivial inequalities: 300
% Fw subsumption resolutions: 875
% Fw demodulations: 19815
% Bw demodulations: 340
% Condensations: 346
% Global subsumptions: 1
% 
% Simple tautologies: 190
% Equational tautologies: 239
% Forward subsumptions: 27142
% Fw demodulations to eq. taut.: 2843
% Bw demodulations to eq. taut.: 24
% 
% Unit resulting resolution: 11598
% Factoring: 1
% Forward superposition: 14193
% Backward superposition: 6419
% Self superposition: 134
% Equality factoring: 32
% Equality resolution: 91
% 
% Split clauses: 107
% Split components: 214
% SAT solver clauses: 2686
% SAT solver unit clauses: 226
% SAT solver binary clauses: 1228
% 
% Sat splits: 107
% Sat splitting refutations: 7
% 
% Memory used [KB]: 25330
% Time elapsed: 3.059 s
% ------------------------------
% ------------------------------
% Success in time 4.42 s
