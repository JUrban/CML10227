Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_mtiProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_mtiProof
% SZS output start Proof for thm.clos_mtiProof
fof(f1389,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f1388])).
fof(f1388,plain,(
  s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK8(sK7)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK8(sK7)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(forward_demodulation,[],[f1387,f224])).
fof(f224,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.list.HD_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.list.HD_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.list.HD_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X7] : ! [X14,X12] : s(X7,X14) = s(X7,'const.list.HD_1'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X14),s('type.list.list'(X7),X12)))))),
  file('thm.clos_mtiProof.clos_mtiProof_8|49|_prove_ltb','thm.list.HD')).
fof(f1387,plain,(
  s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK8(sK7)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.list.HD_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK8(sK7)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(forward_demodulation,[],[f179,f226])).
fof(f226,plain,(
  ( ! [X0] : (s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK8(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) = s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0] : s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK8(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) = s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8])],[f75])).
fof(f75,plain,(
  ! [X0] : ? [X1] : s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X1),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) = s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ? [X13] : s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X13),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) = s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X6),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  file('thm.clos_mtiProof.clos_mtiProof_8|49|_prove_ltb','thm.clos_mti.intro_multi_sing')).
fof(f179,plain,(
  s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.list.HD_1'(s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f132])).
fof(f132,plain,(
  s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.list.HD_1'(s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7])],[f94])).
fof(f94,plain,(
  ? [X0] : s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) != s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.list.HD_1'(s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0] : s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.list.HD_1'(s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X6),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.list.HD_1'(s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X6),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X6),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.list.HD_1'(s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X6),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  file('thm.clos_mtiProof.clos_mtiProof_8|49|_prove_ltb','thm.clos_mtiProof.clos_mtiProof_8|49|_prove_ltb')).
% SZS output end Proof for thm.clos_mtiProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 142
% Passive clauses: 378
% Generated clauses: 1203
% Final active clauses: 141
% Final passive clauses: 192
% Input formulas: 37
% Initial clauses: 112
% 
% Duplicate literals: 36
% Trivial inequalities: 5
% Fw subsumption resolutions: 57
% Fw demodulations: 89
% Bw demodulations: 1
% 
% Simple tautologies: 93
% Equational tautologies: 11
% Forward subsumptions: 530
% 
% Binary resolution: 632
% Factoring: 8
% Forward superposition: 98
% Backward superposition: 143
% Self superposition: 5
% Equality factoring: 2
% Equality resolution: 3
% 
% Split clauses: 33
% Split components: 67
% SAT solver clauses: 50
% SAT solver unit clauses: 8
% SAT solver binary clauses: 26
% 
% Sat splits: 33
% 
% TWLsolver clauses: 50
% TWLsolver calls for satisfiability: 32
% 
% Memory used [KB]: 1279
% Time elapsed: 0.036 s
% ------------------------------
% ------------------------------
% Success in time 0.04 s
