Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.ml_translator
% (146372)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 133
% Passive clauses: 1703
% Generated clauses: 11289
% Final active clauses: 115
% Final passive clauses: 1414
% Input formulas: 23
% Initial clauses: 55
% 
% Duplicate literals: 540
% Trivial inequalities: 175
% Fw subsumption resolutions: 1727
% Fw demodulations: 1598
% Bw demodulations: 14
% 
% Simple tautologies: 259
% Equational tautologies: 19
% Forward subsumptions: 4495
% 
% Binary resolution: 515
% Forward superposition: 3237
% Backward superposition: 3124
% Self superposition: 78
% Equality factoring: 45
% Equality resolution: 27
% 
% Split clauses: 437
% Split components: 885
% SAT solver clauses: 880
% SAT solver unit clauses: 14
% SAT solver binary clauses: 99
% 
% Sat splits: 437
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 879
% TWLsolver calls for satisfiability: 183
% 
% Memory used [KB]: 6780
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.ml_translator
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ml_translator
% SZS output start Proof for thm.ml_translator
fof(f8368,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f8363,f94,f167,f96,f169,f1693,f1695,f98,f171,f134,f187,f249,f253,f95,f166,f105,f175,f5745,f5763,f876,f895,f101,f173,f129,f183,f1575,f1577,f127,f181,f133,f188,f5746,f5765,f782,f801,f128,f184])).
fof(f184,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4))))) ) | $spl24),
  inference(cnf_transformation,[],[f184_D])).
fof(f184_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f128,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4))))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4)))) | (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) & p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(X0,X3))),s('type.semanticPrimitives.v',X4)))))) & (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(X0,X3))),s('type.semanticPrimitives.v',X4)))) | p(s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4))))))),
  inference(flattening,[],[f86])).
fof(f86,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4)))) | (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) & p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(X0,X3))),s('type.semanticPrimitives.v',X4)))))) & ((~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(X0,X3))),s('type.semanticPrimitives.v',X4))))) | p(s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4))))))),
  inference(nnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4)))) <=> (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) & p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(X0,X3))),s('type.semanticPrimitives.v',X4))))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (p(s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4)))) <=> (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) & p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(X0,X3))),s('type.semanticPrimitives.v',X4))))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : ! [X13,X14,X16,X15] : (p(s(bool,'const.ml_translator.And_4'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X13),s(fun(X6,bool),X14),s(X6,X16),s('type.semanticPrimitives.v',X15)))) <=> (p(s(bool,happ(s(fun(X6,bool),X14),s(X6,X16)))) & p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X13),s(X6,X16))),s('type.semanticPrimitives.v',X15))))))),
  file('thm.ml_translator.Eval_Fun_And','thm.ml_translator.And_def')).
fof(f801,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'const.ml_translator.And_4'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X6,bool),X8),s(X6,X9),s('type.semanticPrimitives.v',X10)))) | s(bool,'T_0') = s(bool,happ(s(fun(X6,bool),X8),s(X6,X9)))) ) | $spl92),
  inference(cnf_transformation,[],[f801_D])).
fof(f801_D,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'const.ml_translator.And_4'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X6,bool),X8),s(X6,X9),s('type.semanticPrimitives.v',X10)))) | s(bool,'T_0') = s(bool,happ(s(fun(X6,bool),X8),s(X6,X9)))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f782,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'const.ml_translator.And_4'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X6,bool),X8),s(X6,X9),s('type.semanticPrimitives.v',X10)))) | s(bool,'T_0') = s(bool,happ(s(fun(X6,bool),X8),s(X6,X9)))) ) | ($spl10 | $spl24)),
  inference(resolution,[],[f184,f173])).
fof(f5765,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK8),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)))) | $spl1098),
  inference(cnf_transformation,[],[f5765_D])).
fof(f5765_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK8),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)))) <=> ~$spl1098),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1098])])).
fof(f5746,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK0,bool),sK8),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)))) | ($spl92 | $spl256)),
  inference(resolution,[],[f1577,f801])).
fof(f188,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X2),s('type.ast.exp',X5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(fun(X0,X1),X3)))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(X0,sK11(X7,X6,X5,X4,X3,X2,X1,X0)))),s('type.semanticPrimitives.v',sK10(X7,X6,X5,X4,X3,X2,X1,X0)))))) ) | $spl32),
  inference(cnf_transformation,[],[f188_D])).
fof(f188_D,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X2),s('type.ast.exp',X5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(fun(X0,X1),X3)))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(X0,sK11(X7,X6,X5,X4,X3,X2,X1,X0)))),s('type.semanticPrimitives.v',sK10(X7,X6,X5,X4,X3,X2,X1,X0)))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f133,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X2),s('type.ast.exp',X5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(fun(X0,X1),X3)))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(X0,sK11(X7,X6,X5,X4,X3,X2,X1,X0)))),s('type.semanticPrimitives.v',sK10(X7,X6,X5,X4,X3,X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : ((p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(X0,sK11(X7,X6,X5,X4,X3,X2,X1,X0)))),s('type.semanticPrimitives.v',sK10(X7,X6,X5,X4,X3,X2,X1,X0))))) & ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),X2),s('type.semanticPrimitives.v',sK10(X7,X6,X5,X4,X3,X2,X1,X0)),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4))),s('type.ast.exp',X5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(X1,happ(s(fun(X0,X1),X3),s(X0,sK11(X7,X6,X5,X4,X3,X2,X1,X0)))))))))) | p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X2),s('type.ast.exp',X5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(fun(X0,X1),X3)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11])],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : (? [X8,X9] : (p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(X0,X9))),s('type.semanticPrimitives.v',X8)))) & ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),X2),s('type.semanticPrimitives.v',X8),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4))),s('type.ast.exp',X5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(X1,happ(s(fun(X0,X1),X3),s(X0,X9))))))))) | p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X2),s('type.ast.exp',X5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(fun(X0,X1),X3)))))))),
  inference(ennf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : (! [X8,X9] : (p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(X0,X9))),s('type.semanticPrimitives.v',X8)))) => p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),X2),s('type.semanticPrimitives.v',X8),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4))),s('type.ast.exp',X5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(X1,happ(s(fun(X0,X1),X3),s(X0,X9))))))))) => p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X2),s('type.ast.exp',X5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(fun(X0,X1),X3)))))))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7] : (! [X8,X9] : (p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(X0,X9))),s('type.semanticPrimitives.v',X8)))) => p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),X2),s('type.semanticPrimitives.v',X8),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4))),s('type.ast.exp',X5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(X1,happ(s(fun(X0,X1),X3),s(X0,X9))))))))) => p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X2),s('type.ast.exp',X5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(fun(X0,X1),X3)))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12,X13] : (! [X15,X16] : (p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X13),s(X6,X16))),s('type.semanticPrimitives.v',X15)))) => p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),X8),s('type.semanticPrimitives.v',X15),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X10))),s('type.ast.exp',X11),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X7,fun('type.semanticPrimitives.v',bool)),X12),s(X7,happ(s(fun(X6,X7),X9),s(X6,X16))))))))) => p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X10),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X8),s('type.ast.exp',X11))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X13),s(fun(X7,fun('type.semanticPrimitives.v',bool)),X12),s(fun(X6,X7),X9)))))))),
  file('thm.ml_translator.Eval_Fun_And','thm.ml_translator.Eval_Fun')).
fof(f181,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4))) = s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2))),s(X0,X3))),s('type.semanticPrimitives.v',X4)))) ) | $spl18),
  inference(cnf_transformation,[],[f181_D])).
fof(f181_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4))) = s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2))),s(X0,X3))),s('type.semanticPrimitives.v',X4)))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f127,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4))) = s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2))),s(X0,X3))),s('type.semanticPrimitives.v',X4)))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2,X3,X4] : s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4))) = s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2))),s(X0,X3))),s('type.semanticPrimitives.v',X4)))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4))) = s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2))),s(X0,X3))),s('type.semanticPrimitives.v',X4)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6] : ! [X24,X25,X26,X27] : s(bool,'const.ml_translator.And_4'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X24),s(fun(X6,bool),X25),s(X6,X26),s('type.semanticPrimitives.v',X27))) = s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X6,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X24),s(fun(X6,bool),X25))),s(X6,X26))),s('type.semanticPrimitives.v',X27)))),
  file('thm.ml_translator.Eval_Fun_And','ARITY_2_4_const.ml_translator.And')).
fof(f1577,plain,(
  p(s(bool,'const.ml_translator.And_4'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)),s('type.semanticPrimitives.v',sK10('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0))))) | $spl256),
  inference(cnf_transformation,[],[f1577_D])).
fof(f1577_D,plain,(
  p(s(bool,'const.ml_translator.And_4'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)),s('type.semanticPrimitives.v',sK10('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0))))) <=> ~$spl256),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl256])])).
fof(f1575,plain,(
  p(s(bool,'const.ml_translator.And_4'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)),s('type.semanticPrimitives.v',sK10('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0))))) | ($spl7 | $spl18 | $spl32 | $spl48)),
  inference(forward_demodulation,[],[f1574,f181])).
fof(f1574,plain,(
  p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8))),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)))),s('type.semanticPrimitives.v',sK10('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0))))) | ($spl7 | $spl32 | $spl48)),
  inference(subsumption_resolution,[],[f1561,f171])).
fof(f1561,plain,(
  p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8))),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)))),s('type.semanticPrimitives.v',sK10('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0))))) | ($spl32 | $spl48)),
  inference(superposition,[],[f188,f253])).
fof(f183,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(X0,X3))),s('type.semanticPrimitives.v',X4)))) | ~p(s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4))))) ) | $spl22),
  inference(cnf_transformation,[],[f183_D])).
fof(f183_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(X0,X3))),s('type.semanticPrimitives.v',X4)))) | ~p(s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f129,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(X0,X3))),s('type.semanticPrimitives.v',X4)))) | ~p(s(bool,'const.ml_translator.And_4'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s(fun(X0,bool),X2),s(X0,X3),s('type.semanticPrimitives.v',X4))))) )),
  inference(cnf_transformation,[],[f87])).
fof(f173,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl10),
  inference(cnf_transformation,[],[f173_D])).
fof(f173_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f101,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X17] : (s(bool,'T_0') = s(bool,X17) <=> p(s(bool,X17)))),
  file('thm.ml_translator.Eval_Fun_And','thm.bool.EQ_CLAUSES|split|1')).
fof(f895,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'const.ml_translator.And_4'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X6,bool),X8),s(X6,X9),s('type.semanticPrimitives.v',X10)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s(X6,X9))),s('type.semanticPrimitives.v',X10)))) ) | $spl116),
  inference(cnf_transformation,[],[f895_D])).
fof(f895_D,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'const.ml_translator.And_4'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X6,bool),X8),s(X6,X9),s('type.semanticPrimitives.v',X10)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s(X6,X9))),s('type.semanticPrimitives.v',X10)))) ) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f876,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'const.ml_translator.And_4'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X6,bool),X8),s(X6,X9),s('type.semanticPrimitives.v',X10)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s(X6,X9))),s('type.semanticPrimitives.v',X10)))) ) | ($spl10 | $spl22)),
  inference(resolution,[],[f183,f173])).
fof(f5763,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)))),s('type.semanticPrimitives.v',sK10('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)))) | $spl1096),
  inference(cnf_transformation,[],[f5763_D])).
fof(f5763_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)))),s('type.semanticPrimitives.v',sK10('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)))) <=> ~$spl1096),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1096])])).
fof(f5745,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)))),s('type.semanticPrimitives.v',sK10('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)))) | ($spl116 | $spl256)),
  inference(resolution,[],[f1577,f895])).
fof(f175,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl14),
  inference(cnf_transformation,[],[f175_D])).
fof(f175_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f105,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X17] : (s(bool,'F_0') = s(bool,X17) <=> ~p(s(bool,X17)))),
  file('thm.ml_translator.Eval_Fun_And','thm.bool.EQ_CLAUSES|split|3')).
fof(f166,plain,(
  ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),sK2),s('type.ast.exp',sK5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8))),s(fun(sK1,fun('type.semanticPrimitives.v',bool)),sK6),s(fun(sK0,sK1),sK3)))))) | $spl1),
  inference(cnf_transformation,[],[f166_D])).
fof(f166_D,plain,(
  ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),sK2),s('type.ast.exp',sK5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8))),s(fun(sK1,fun('type.semanticPrimitives.v',bool)),sK6),s(fun(sK0,sK1),sK3)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f95,plain,(
  ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),sK2),s('type.ast.exp',sK5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8))),s(fun(sK1,fun('type.semanticPrimitives.v',bool)),sK6),s(fun(sK0,sK1),sK3))))))),
  inference(cnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X9,X10] : (~p(s(bool,happ(s(fun(sK0,bool),sK8),s(sK0,X10)))) | ~p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(sK0,X10))),s('type.semanticPrimitives.v',X9)))) | p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),sK2),s('type.semanticPrimitives.v',X9),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK4))),s('type.ast.exp',sK5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK1,fun('type.semanticPrimitives.v',bool)),sK6),s(sK1,happ(s(fun(sK0,sK1),sK3),s(sK0,X10))))))))) & ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),sK2),s('type.ast.exp',sK5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8))),s(fun(sK1,fun('type.semanticPrimitives.v',bool)),sK6),s(fun(sK0,sK1),sK3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8])],[f56])).
fof(f56,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8] : (! [X9,X10] : (~p(s(bool,happ(s(fun(X0,bool),X8),s(X0,X10)))) | ~p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(X0,X10))),s('type.semanticPrimitives.v',X9)))) | p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),X2),s('type.semanticPrimitives.v',X9),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4))),s('type.ast.exp',X5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(X1,happ(s(fun(X0,X1),X3),s(X0,X10))))))))) & ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X2),s('type.ast.exp',X5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X0,bool),X8))),s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(fun(X0,X1),X3)))))))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8] : (! [X9,X10] : (~p(s(bool,happ(s(fun(X0,bool),X8),s(X0,X10)))) | (~p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(X0,X10))),s('type.semanticPrimitives.v',X9)))) | p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),X2),s('type.semanticPrimitives.v',X9),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4))),s('type.ast.exp',X5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(X1,happ(s(fun(X0,X1),X3),s(X0,X10)))))))))) & ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X2),s('type.ast.exp',X5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X0,bool),X8))),s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(fun(X0,X1),X3)))))))),
  inference(ennf_transformation,[],[f26])).
fof(f26,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : (! [X9,X10] : (p(s(bool,happ(s(fun(X0,bool),X8),s(X0,X10)))) => (p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(X0,X10))),s('type.semanticPrimitives.v',X9)))) => p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),X2),s('type.semanticPrimitives.v',X9),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4))),s('type.ast.exp',X5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(X1,happ(s(fun(X0,X1),X3),s(X0,X10)))))))))) => p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X2),s('type.ast.exp',X5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X0,bool),X8))),s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(fun(X0,X1),X3)))))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8] : (! [X9,X10] : (p(s(bool,happ(s(fun(X0,bool),X8),s(X0,X10)))) => (p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(X0,X10))),s('type.semanticPrimitives.v',X9)))) => p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),X2),s('type.semanticPrimitives.v',X9),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4))),s('type.ast.exp',X5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(X1,happ(s(fun(X0,X1),X3),s(X0,X10)))))))))) => p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X2),s('type.ast.exp',X5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X0,bool),X8))),s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(fun(X0,X1),X3)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14] : (! [X15,X16] : (p(s(bool,happ(s(fun(X6,bool),X14),s(X6,X16)))) => (p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X13),s(X6,X16))),s('type.semanticPrimitives.v',X15)))) => p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),X8),s('type.semanticPrimitives.v',X15),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X10))),s('type.ast.exp',X11),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X7,fun('type.semanticPrimitives.v',bool)),X12),s(X7,happ(s(fun(X6,X7),X9),s(X6,X16)))))))))) => p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X10),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X8),s('type.ast.exp',X11))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X13),s(fun(X6,bool),X14))),s(fun(X7,fun('type.semanticPrimitives.v',bool)),X12),s(fun(X6,X7),X9)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14] : (! [X15,X16] : (p(s(bool,happ(s(fun(X6,bool),X14),s(X6,X16)))) => (p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X13),s(X6,X16))),s('type.semanticPrimitives.v',X15)))) => p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),X8),s('type.semanticPrimitives.v',X15),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X10))),s('type.ast.exp',X11),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X7,fun('type.semanticPrimitives.v',bool)),X12),s(X7,happ(s(fun(X6,X7),X9),s(X6,X16)))))))))) => p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X10),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X8),s('type.ast.exp',X11))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X13),s(fun(X6,bool),X14))),s(fun(X7,fun('type.semanticPrimitives.v',bool)),X12),s(fun(X6,X7),X9)))))))),
  file('thm.ml_translator.Eval_Fun_And','thm.ml_translator.Eval_Fun_And')).
fof(f253,plain,(
  s(bool,'F_0') = s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),sK2),s('type.ast.exp',sK5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8))),s(fun(sK1,fun('type.semanticPrimitives.v',bool)),sK6),s(fun(sK0,sK1),sK3))))) | $spl48),
  inference(cnf_transformation,[],[f253_D])).
fof(f253_D,plain,(
  s(bool,'F_0') = s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),sK2),s('type.ast.exp',sK5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8))),s(fun(sK1,fun('type.semanticPrimitives.v',bool)),sK6),s(fun(sK0,sK1),sK3))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f249,plain,(
  s(bool,'F_0') = s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),sK2),s('type.ast.exp',sK5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),'const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8))),s(fun(sK1,fun('type.semanticPrimitives.v',bool)),sK6),s(fun(sK0,sK1),sK3))))) | ($spl1 | $spl14)),
  inference(resolution,[],[f166,f175])).
fof(f187,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X2),s('type.ast.exp',X5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(fun(X0,X1),X3)))))) | ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),X2),s('type.semanticPrimitives.v',sK10(X7,X6,X5,X4,X3,X2,X1,X0)),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4))),s('type.ast.exp',X5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(X1,happ(s(fun(X0,X1),X3),s(X0,sK11(X7,X6,X5,X4,X3,X2,X1,X0)))))))))) ) | $spl30),
  inference(cnf_transformation,[],[f187_D])).
fof(f187_D,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X2),s('type.ast.exp',X5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(fun(X0,X1),X3)))))) | ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),X2),s('type.semanticPrimitives.v',sK10(X7,X6,X5,X4,X3,X2,X1,X0)),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4))),s('type.ast.exp',X5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(X1,happ(s(fun(X0,X1),X3),s(X0,sK11(X7,X6,X5,X4,X3,X2,X1,X0)))))))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f134,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X2),s('type.ast.exp',X5))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.Arrow_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X7),s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(fun(X0,X1),X3)))))) | ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),X2),s('type.semanticPrimitives.v',sK10(X7,X6,X5,X4,X3,X2,X1,X0)),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X4))),s('type.ast.exp',X5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(X1,fun('type.semanticPrimitives.v',bool)),X6),s(X1,happ(s(fun(X0,X1),X3),s(X0,sK11(X7,X6,X5,X4,X3,X2,X1,X0)))))))))) )),
  inference(cnf_transformation,[],[f89])).
fof(f171,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f171_D])).
fof(f171_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f98,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.ml_translator.Eval_Fun_And',aHL_FALSITY)).
fof(f1695,plain,(
  ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),sK2),s('type.semanticPrimitives.v',sK10('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK4))),s('type.ast.exp',sK5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK1,fun('type.semanticPrimitives.v',bool)),sK6),s(sK1,happ(s(fun(sK0,sK1),sK3),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0))))))))) | $spl287),
  inference(cnf_transformation,[],[f1695_D])).
fof(f1695_D,plain,(
  ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),sK2),s('type.semanticPrimitives.v',sK10('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK4))),s('type.ast.exp',sK5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK1,fun('type.semanticPrimitives.v',bool)),sK6),s(sK1,happ(s(fun(sK0,sK1),sK3),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0))))))))) <=> ~$spl287),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl287])])).
fof(f1693,plain,(
  ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),sK2),s('type.semanticPrimitives.v',sK10('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK4))),s('type.ast.exp',sK5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK1,fun('type.semanticPrimitives.v',bool)),sK6),s(sK1,happ(s(fun(sK0,sK1),sK3),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0))))))))) | ($spl7 | $spl30 | $spl48)),
  inference(subsumption_resolution,[],[f1679,f171])).
fof(f1679,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),sK2),s('type.semanticPrimitives.v',sK10('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK4))),s('type.ast.exp',sK5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK1,fun('type.semanticPrimitives.v',bool)),sK6),s(sK1,happ(s(fun(sK0,sK1),sK3),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0))))))))) | ($spl30 | $spl48)),
  inference(superposition,[],[f187,f253])).
fof(f169,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f169_D])).
fof(f169_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f96,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.ml_translator.Eval_Fun_And',aHL_TRUTH)).
fof(f167,plain,(
  ( ! [X10,X9] : (p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),sK2),s('type.semanticPrimitives.v',X9),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK4))),s('type.ast.exp',sK5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK1,fun('type.semanticPrimitives.v',bool)),sK6),s(sK1,happ(s(fun(sK0,sK1),sK3),s(sK0,X10)))))))) | ~p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(sK0,X10))),s('type.semanticPrimitives.v',X9)))) | ~p(s(bool,happ(s(fun(sK0,bool),sK8),s(sK0,X10))))) ) | $spl2),
  inference(cnf_transformation,[],[f167_D])).
fof(f167_D,plain,(
  ( ! [X10,X9] : (p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),sK2),s('type.semanticPrimitives.v',X9),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK4))),s('type.ast.exp',sK5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK1,fun('type.semanticPrimitives.v',bool)),sK6),s(sK1,happ(s(fun(sK0,sK1),sK3),s(sK0,X10)))))))) | ~p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(sK0,X10))),s('type.semanticPrimitives.v',X9)))) | ~p(s(bool,happ(s(fun(sK0,bool),sK8),s(sK0,X10))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f94,plain,(
  ( ! [X10,X9] : (p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.ml_translator.write_3'(s('type.list.list'('type.string.char'),sK2),s('type.semanticPrimitives.v',X9),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK4))),s('type.ast.exp',sK5),s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK1,fun('type.semanticPrimitives.v',bool)),sK6),s(sK1,happ(s(fun(sK0,sK1),sK3),s(sK0,X10)))))))) | ~p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(sK0,X10))),s('type.semanticPrimitives.v',X9)))) | ~p(s(bool,happ(s(fun(sK0,bool),sK8),s(sK0,X10))))) )),
  inference(cnf_transformation,[],[f68])).
fof(f8363,plain,(
  $false | ($spl2 | $spl4 | $spl287 | $spl1096 | $spl1098)),
  inference(subsumption_resolution,[],[f8362,f169])).
fof(f8362,plain,(
  ~p(s(bool,'T_0')) | ($spl2 | $spl4 | $spl287 | $spl1096 | $spl1098)),
  inference(forward_demodulation,[],[f8361,f5765])).
fof(f8361,plain,(
  ~p(s(bool,happ(s(fun(sK0,bool),sK8),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0))))) | ($spl2 | $spl4 | $spl287 | $spl1096)),
  inference(subsumption_resolution,[],[f8360,f169])).
fof(f8360,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(sK0,bool),sK8),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0))))) | ($spl2 | $spl287 | $spl1096)),
  inference(forward_demodulation,[],[f8345,f5763])).
fof(f8345,plain,(
  ~p(s(bool,happ(s(fun('type.semanticPrimitives.v',bool),happ(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0)))),s('type.semanticPrimitives.v',sK10('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0))))) | ~p(s(bool,happ(s(fun(sK0,bool),sK8),s(sK0,sK11('const.ml_translator.And_2'(s(fun(sK0,fun('type.semanticPrimitives.v',bool)),sK7),s(fun(sK0,bool),sK8)),sK6,sK5,sK4,sK3,sK2,sK1,sK0))))) | ($spl2 | $spl287)),
  inference(resolution,[],[f1695,f167])).
% SZS output end Proof for thm.ml_translator
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 110
% Passive clauses: 765
% Generated clauses: 8189
% Final active clauses: 101
% Final passive clauses: 612
% Input formulas: 23
% Initial clauses: 55
% 
% Duplicate literals: 642
% Trivial inequalities: 51
% Fw subsumption resolutions: 702
% Fw demodulations: 669
% Bw demodulations: 48
% Condensations: 791
% Global subsumptions: 4
% 
% Simple tautologies: 154
% Equational tautologies: 21
% Forward subsumptions: 3288
% 
% Binary resolution: 327
% Factoring: 1
% Forward superposition: 2626
% Backward superposition: 1414
% Self superposition: 55
% Equality factoring: 36
% Equality resolution: 10
% 
% Split clauses: 96
% Split components: 197
% SAT solver clauses: 1167
% SAT solver unit clauses: 58
% SAT solver binary clauses: 28
% SAT solver learnt clauses: 9
% 
% Sat splits: 96
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 1150
% TWLsolver calls for satisfiability: 305
% 
% Memory used [KB]: 9338
% Time elapsed: 0.634 s
% ------------------------------
% ------------------------------
% Success in time 1.3 s
