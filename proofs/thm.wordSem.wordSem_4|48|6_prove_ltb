Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordSem
% SZS output start Proof for thm.wordSem
fof(f1968,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1967,f133,f230,f228,f1966])).
fof(f1966,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f230,f135])).
fof(f135,plain,(
  ( ! [X6,X4,X8,X7,X5,X9] : (s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),sK9) != s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(sK7)),X4),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X5),s('type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(sK6),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X7),s('type.num.num',X8))))))))),s('type.wordSem.state'(sK7,sK8),X9)))))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  (s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),sK9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(sK7)),sK10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(sK7,sK8),sK11))))) | s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),sK9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(sK7)),sK12),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',sK13),s('type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(sK6),sK14),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK15),s('type.num.num',sK16))))))))),s('type.wordSem.state'(sK7,sK8),sK17)))))) & ! [X10,X11] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),sK9) != s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(sK7)),X10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(sK7,sK8),X11))))) & ! [X4,X5,X6,X7,X8,X9] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),sK9) != s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(sK7)),X4),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X5),s('type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(sK6),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X7),s('type.num.num',X8))))))))),s('type.wordSem.state'(sK7,sK8),X9)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16,sK17])],[f90])).
fof(f90,plain,(
  ? [X0,X1,X2,X3] : ((? [X18,X19] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X18),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(X1,X2),X19))))) | ? [X12,X13,X14,X15,X16,X17] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X12),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X14),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X15),s('type.num.num',X16))))))))),s('type.wordSem.state'(X1,X2),X17)))))) & ! [X10,X11] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) != s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(X1,X2),X11))))) & ! [X4,X5,X6,X7,X8,X9] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) != s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X4),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X5),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X7),s('type.num.num',X8))))))))),s('type.wordSem.state'(X1,X2),X9))))))),
  inference(rectify,[],[f65])).
fof(f65,plain,(
  ? [X0,X1,X2,X3] : ((? [X10,X11] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(X1,X2),X11))))) | ? [X4,X5,X6,X7,X8,X9] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X4),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X5),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X7),s('type.num.num',X8))))))))),s('type.wordSem.state'(X1,X2),X9)))))) & ! [X18,X19] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) != s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X18),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(X1,X2),X19))))) & ! [X12,X13,X14,X15,X16,X17] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) != s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X12),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X14),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X15),s('type.num.num',X16))))))))),s('type.wordSem.state'(X1,X2),X17))))))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ? [X0,X1,X2,X3] : ((? [X10,X11] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(X1,X2),X11))))) | ? [X4,X5,X6,X7,X8,X9] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X4),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X5),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X7),s('type.num.num',X8))))))))),s('type.wordSem.state'(X1,X2),X9)))))) & (! [X18,X19] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) != s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X18),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(X1,X2),X19))))) & ! [X12,X13,X14,X15,X16,X17] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) != s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X12),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X14),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X15),s('type.num.num',X16))))))))),s('type.wordSem.state'(X1,X2),X17)))))))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ~! [X0,X1,X2,X3] : ((? [X10,X11] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(X1,X2),X11))))) | ? [X4,X5,X6,X7,X8,X9] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X4),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X5),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X7),s('type.num.num',X8))))))))),s('type.wordSem.state'(X1,X2),X9)))))) => (? [X18,X19] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X18),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(X1,X2),X19))))) | ? [X12,X13,X14,X15,X16,X17] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X12),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X14),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X15),s('type.num.num',X16))))))))),s('type.wordSem.state'(X1,X2),X17)))))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ~! [X0,X1,X2] : ! [X3] : ((? [X10,X11] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(X1,X2),X11))))) | ? [X4,X5,X6,X7,X8,X9] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X4),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X5),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X7),s('type.num.num',X8))))))))),s('type.wordSem.state'(X1,X2),X9)))))) => (? [X18,X19] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X18),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(X1,X2),X19))))) | ? [X12,X13,X14,X15,X16,X17] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),X3) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X12),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X1,X2)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X0),X14),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X15),s('type.num.num',X16))))))))),s('type.wordSem.state'(X1,X2),X17)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9] : ((? [X10,X11] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),X9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(X7,X8),X11))))) | ? [X10,X12,X13,X14,X15,X11] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),X9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X12),s('type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X6),X13),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X14),s('type.num.num',X15))))))))),s('type.wordSem.state'(X7,X8),X11)))))) => (? [X10,X11] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),X9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(X7,X8),X11))))) | ? [X10,X12,X13,X14,X15,X11] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),X9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X12),s('type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X6),X13),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X14),s('type.num.num',X15))))))))),s('type.wordSem.state'(X7,X8),X11)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9] : ((? [X10,X11] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),X9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(X7,X8),X11))))) | ? [X10,X12,X13,X14,X15,X11] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),X9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X12),s('type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X6),X13),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X14),s('type.num.num',X15))))))))),s('type.wordSem.state'(X7,X8),X11)))))) => (? [X10,X11] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),X9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(X7,X8),X11))))) | ? [X10,X12,X13,X14,X15,X11] : s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),X9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(X7,X8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',X12),s('type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(X6),X13),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X14),s('type.num.num',X15))))))))),s('type.wordSem.state'(X7,X8),X11)))))))),
  file('thm.wordSem.wordSem_4|48|6_prove_ltb','thm.wordSem.wordSem_4|48|6_prove_ltb')).
fof(f228,plain,(
  s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),sK9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(sK7)),sK10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(sK7,sK8),sK11))))) | $spl0),
  inference(cnf_transformation,[],[f228_D])).
fof(f228_D,plain,(
  s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),sK9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(sK7)),sK10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(sK7,sK8),sK11))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f230,plain,(
  s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),sK9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(sK7)),sK12),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',sK13),s('type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(sK6),sK14),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK15),s('type.num.num',sK16))))))))),s('type.wordSem.state'(sK7,sK8),sK17))))) | $spl2),
  inference(cnf_transformation,[],[f230_D])).
fof(f230_D,plain,(
  s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),sK9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(sK7)),sK12),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',sK13),s('type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(sK6),sK14),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK15),s('type.num.num',sK16))))))))),s('type.wordSem.state'(sK7,sK8),sK17))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f133,plain,(
  s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),sK9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(sK7)),sK12),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.num.num',sK13),s('type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.wordLang.prog'(sK6),sK14),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK15),s('type.num.num',sK16))))))))),s('type.wordSem.state'(sK7,sK8),sK17))))) | s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),sK9) = s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(sK7)),sK10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(sK7,sK8),sK11)))))),
  inference(cnf_transformation,[],[f91])).
fof(f1967,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f228,f134])).
fof(f134,plain,(
  ( ! [X10,X11] : (s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),sK9) != s('type.pair.prod'('type.sptree.spt'('type.wordSem.word_loc'(sK7)),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8))),'const.pair.,_2'(s('type.sptree.spt'('type.wordSem.word_loc'(sK7)),X10),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'type.wordSem.state'(sK7,sK8)),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK6),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.wordSem.state'(sK7,sK8),X11)))))) )),
  inference(cnf_transformation,[],[f91])).
% SZS output end Proof for thm.wordSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 174
% Passive clauses: 688
% Generated clauses: 1828
% Final active clauses: 174
% Final passive clauses: 454
% Input formulas: 26
% Initial clauses: 93
% 
% Duplicate literals: 39
% Trivial inequalities: 13
% Fw subsumption resolutions: 134
% 
% Simple tautologies: 60
% Equational tautologies: 11
% Forward subsumptions: 864
% 
% Binary resolution: 1181
% Factoring: 200
% Forward superposition: 86
% Backward superposition: 51
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 7
% 
% Split clauses: 43
% Split components: 87
% SAT solver clauses: 80
% SAT solver unit clauses: 8
% SAT solver binary clauses: 30
% SAT solver learnt clauses: 1
% 
% Sat splits: 43
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 79
% TWLsolver calls for satisfiability: 59
% 
% Memory used [KB]: 1407
% Time elapsed: 0.077 s
% ------------------------------
% ------------------------------
% Success in time 0.1 s
