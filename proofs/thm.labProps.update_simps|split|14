Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.labProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.labProps
% SZS output start Proof for thm.labProps
fof(f10398,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f10368])).
fof(f10368,plain,(
  s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),sK3))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),sK3)))),
  inference(superposition,[],[f566,f9354])).
fof(f9354,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.list.list'('type.labLang.sec'(X28)),'const.labSem.state_code_1'(s('type.labSem.state'(X28,X29),X31))) = s('type.list.list'('type.labLang.sec'(X28)),'const.labSem.state_code_1'(s('type.labSem.state'(X28,X29),'const.labSem.upd_pc_2'(s('type.num.num',X30),s('type.labSem.state'(X28,X29),X31)))))) )),
  inference(superposition,[],[f653,f656])).
fof(f656,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.labSem.state'(X0,X1),'const.labSem.upd_pc_2'(s('type.num.num',X2),s('type.labSem.state'(X0,X1),X3))) = s('type.labSem.state'(X0,X1),'const.labSem.state_pc_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.labSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f336])).
fof(f336,plain,(
  ! [X0,X1,X2,X3] : s('type.labSem.state'(X0,X1),'const.labSem.upd_pc_2'(s('type.num.num',X2),s('type.labSem.state'(X0,X1),X3))) = s('type.labSem.state'(X0,X1),'const.labSem.state_pc_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.labSem.state'(X0,X1),X3)))),
  inference(flattening,[],[f335])).
fof(f335,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.labSem.state'(X0,X1),'const.labSem.upd_pc_2'(s('type.num.num',X2),s('type.labSem.state'(X0,X1),X3))) = s('type.labSem.state'(X0,X1),'const.labSem.state_pc_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.labSem.state'(X0,X1),X3)))),
  inference(rectify,[],[f185])).
fof(f185,axiom,(
  ! [X7,X6] : ! [X15,X9] : s('type.labSem.state'(X7,X6),'const.labSem.upd_pc_2'(s('type.num.num',X15),s('type.labSem.state'(X7,X6),X9))) = s('type.labSem.state'(X7,X6),'const.labSem.state_pc_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X15))),s('type.labSem.state'(X7,X6),X9)))),
  file('thm.labProps.update_simps|split|14','thm.labSem.upd_pc_def')).
fof(f653,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),'const.labSem.state_pc_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.labSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f330])).
fof(f330,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),'const.labSem.state_pc_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.labSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f329])).
fof(f329,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),'const.labSem.state_pc_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.labSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f103])).
fof(f103,axiom,(
  ! [X7,X12] : ! [X9,X13] : s('type.list.list'('type.labLang.sec'(X7)),'const.labSem.state_code_1'(s('type.labSem.state'(X7,X12),X9))) = s('type.list.list'('type.labLang.sec'(X7)),'const.labSem.state_code_1'(s('type.labSem.state'(X7,X12),'const.labSem.state_pc_fupd_2'(s(fun('type.num.num','type.num.num'),X13),s('type.labSem.state'(X7,X12),X9)))))),
  file('thm.labProps.update_simps|split|14','thm.labSem.labSem_|49|36_prove_ltb')).
fof(f566,plain,(
  s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),sK3))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.upd_pc_2'(s('type.num.num',sK2),s('type.labSem.state'(sK0,sK1),sK3)))))),
  inference(cnf_transformation,[],[f553])).
fof(f553,plain,(
  s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),sK3))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.upd_pc_2'(s('type.num.num',sK2),s('type.labSem.state'(sK0,sK1),sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f551])).
fof(f551,plain,(
  ? [X0,X1,X2,X3] : s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) != s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),'const.labSem.upd_pc_2'(s('type.num.num',X2),s('type.labSem.state'(X0,X1),X3)))))),
  inference(ennf_transformation,[],[f190])).
fof(f190,plain,(
  ~! [X0,X1,X2,X3] : s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) = s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),'const.labSem.upd_pc_2'(s('type.num.num',X2),s('type.labSem.state'(X0,X1),X3)))))),
  inference(flattening,[],[f189])).
fof(f189,plain,(
  ~! [X0,X1] : ! [X2,X3] : s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) = s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),'const.labSem.upd_pc_2'(s('type.num.num',X2),s('type.labSem.state'(X0,X1),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : s('type.list.list'('type.labLang.sec'(X6)),'const.labSem.state_code_1'(s('type.labSem.state'(X6,X7),X9))) = s('type.list.list'('type.labLang.sec'(X6)),'const.labSem.state_code_1'(s('type.labSem.state'(X6,X7),'const.labSem.upd_pc_2'(s('type.num.num',X8),s('type.labSem.state'(X6,X7),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : s('type.list.list'('type.labLang.sec'(X6)),'const.labSem.state_code_1'(s('type.labSem.state'(X6,X7),X9))) = s('type.list.list'('type.labLang.sec'(X6)),'const.labSem.state_code_1'(s('type.labSem.state'(X6,X7),'const.labSem.upd_pc_2'(s('type.num.num',X8),s('type.labSem.state'(X6,X7),X9)))))),
  file('thm.labProps.update_simps|split|14','thm.labProps.update_simps|split|14')).
% SZS output end Proof for thm.labProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 120
% Passive clauses: 1294
% Generated clauses: 9684
% Final active clauses: 119
% Final passive clauses: 1116
% Input formulas: 187
% Initial clauses: 198
% 
% Duplicate literals: 299
% Trivial inequalities: 84
% Fw subsumption resolutions: 480
% Fw demodulations: 965
% 
% Simple tautologies: 100
% Equational tautologies: 20
% Forward subsumptions: 6296
% 
% Binary resolution: 3
% Forward superposition: 4443
% Backward superposition: 3038
% Self superposition: 135
% Equality factoring: 47
% Equality resolution: 10
% 
% Split clauses: 73
% Split components: 146
% SAT solver clauses: 171
% SAT solver unit clauses: 24
% SAT solver binary clauses: 57
% 
% Sat splits: 73
% 
% TWLsolver clauses: 171
% TWLsolver calls for satisfiability: 44
% 
% Memory used [KB]: 7419
% Time elapsed: 0.196 s
% ------------------------------
% ------------------------------
% Success in time 0.22 s
