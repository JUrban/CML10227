Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.HoodMelvilleQueue
% (21797)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 126
% Passive clauses: 3167
% Generated clauses: 17005
% Final active clauses: 121
% Final passive clauses: 2892
% Input formulas: 69
% Initial clauses: 102
% 
% Duplicate literals: 577
% Trivial inequalities: 254
% Fw subsumption resolutions: 1689
% Fw demodulations: 1836
% Bw demodulations: 4
% 
% Simple tautologies: 273
% Equational tautologies: 52
% Forward subsumptions: 8834
% 
% Binary resolution: 219
% Factoring: 1
% Forward superposition: 6741
% Backward superposition: 5301
% Self superposition: 204
% Equality factoring: 96
% Equality resolution: 35
% 
% Split clauses: 259
% Split components: 519
% SAT solver clauses: 455
% SAT solver unit clauses: 11
% SAT solver binary clauses: 84
% 
% Sat splits: 259
% 
% TWLsolver clauses: 455
% TWLsolver calls for satisfiability: 119
% 
% Memory used [KB]: 18421
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.HoodMelvilleQueue
% (21825)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 98
% Passive clauses: 1323
% Generated clauses: 9158
% Final active clauses: 98
% Final passive clauses: 1219
% Input formulas: 69
% Initial clauses: 102
% 
% Duplicate literals: 197
% Trivial inequalities: 40
% Fw subsumption resolutions: 165
% Fw demodulations: 867
% Bw demodulations: 6
% Condensations: 393
% Global subsumptions: 8
% 
% Simple tautologies: 88
% Equational tautologies: 40
% Forward subsumptions: 4046
% 
% Binary resolution: 52
% Factoring: 1
% Forward superposition: 3029
% Backward superposition: 2743
% Self superposition: 110
% Equality factoring: 52
% Equality resolution: 20
% 
% SAT solver clauses: 2083
% SAT solver unit clauses: 156
% SAT solver binary clauses: 53
% SAT solver learnt clauses: 16
% 
% TWLsolver clauses: 2051
% TWLsolver calls for satisfiability: 398
% 
% Memory used [KB]: 27504
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.HoodMelvilleQueue
% (21848)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 146
% Passive clauses: 2007
% Generated clauses: 85978
% Final active clauses: 127
% Final passive clauses: 938
% Input formulas: 69
% Initial clauses: 102
% Discarded non-redundant clauses: 11953
% 
% Duplicate literals: 774
% Trivial inequalities: 185
% Fw subsumption resolutions: 1085
% Fw demodulations: 42107
% Bw demodulations: 242
% Condensations: 1835
% Global subsumptions: 5
% 
% Simple tautologies: 240
% Equational tautologies: 138
% Forward subsumptions: 21299
% Fw demodulations to eq. taut.: 7847
% Bw demodulations to eq. taut.: 70
% 
% Unit resulting resolution: 25134
% Factoring: 1
% Forward superposition: 7872
% Backward superposition: 5943
% Self superposition: 223
% Equality factoring: 98
% Equality resolution: 35
% 
% Split clauses: 40
% Split components: 80
% SAT solver clauses: 2111
% SAT solver unit clauses: 544
% SAT solver binary clauses: 739
% 
% Sat splits: 40
% Sat splitting refutations: 17
% 
% Memory used [KB]: 157353
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 27 next slice time: 27
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.HoodMelvilleQueue
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.HoodMelvilleQueue
% SZS output start Proof for thm.HoodMelvilleQueue
fof(f3387,plain,(
  $false),
  inference(subsumption_resolution,[],[f2986,f904])).
fof(f904,plain,(
  ( ! [X6,X5,X9] : (s(X5,X6) = s(X5,happ(s(fun('type.list.list'(sK0),X5),X9),s('type.list.list'(sK0),sK1)))) )),
  inference(superposition,[],[f187,f143])).
fof(f143,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X1,X2) = s(X1,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0'),s(X1,X2),s(fun('type.num.num',fun('type.list.list'(X0),fun('type.list.list'(X0),fun('type.list.list'(X0),fun('type.list.list'(X0),X1))))),X3),s(fun('type.num.num',fun('type.list.list'(X0),fun('type.list.list'(X0),X1))),X4),s(fun('type.list.list'(X0),X1),X5)))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X1,X2) = s(X1,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0'),s(X1,X2),s(fun('type.num.num',fun('type.list.list'(X0),fun('type.list.list'(X0),fun('type.list.list'(X0),fun('type.list.list'(X0),X1))))),X3),s(fun('type.num.num',fun('type.list.list'(X0),fun('type.list.list'(X0),X1))),X4),s(fun('type.list.list'(X0),X1),X5)))),
  inference(flattening,[],[f90])).
fof(f90,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : s(X1,X2) = s(X1,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0'),s(X1,X2),s(fun('type.num.num',fun('type.list.list'(X0),fun('type.list.list'(X0),fun('type.list.list'(X0),fun('type.list.list'(X0),X1))))),X3),s(fun('type.num.num',fun('type.list.list'(X0),fun('type.list.list'(X0),X1))),X4),s(fun('type.list.list'(X0),X1),X5)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6,X23] : ! [X31,X22,X32,X33] : s(X23,X31) = s(X23,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Idle_0'),s(X23,X31),s(fun('type.num.num',fun('type.list.list'(X6),fun('type.list.list'(X6),fun('type.list.list'(X6),fun('type.list.list'(X6),X23))))),X22),s(fun('type.num.num',fun('type.list.list'(X6),fun('type.list.list'(X6),X23))),X32),s(fun('type.list.list'(X6),X23),X33)))),
  file('thm.HoodMelvilleQueue.status_distinct|split|2','thm.HoodMelvilleQueue.status_case_def|split|0')).
fof(f187,plain,(
  ( ! [X6,X8,X7,X5,X9] : (s(X5,happ(s(fun('type.list.list'(sK0),X5),X6),s('type.list.list'(sK0),sK1))) = s(X5,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(sK0),'const.HoodMelvilleQueue.Idle_0'),s(X5,X7),s(fun('type.num.num',fun('type.list.list'(sK0),fun('type.list.list'(sK0),fun('type.list.list'(sK0),fun('type.list.list'(sK0),X5))))),X8),s(fun('type.num.num',fun('type.list.list'(sK0),fun('type.list.list'(sK0),X5))),X9),s(fun('type.list.list'(sK0),X5),X6)))) )),
  inference(superposition,[],[f136,f125])).
fof(f125,plain,(
  s('type.HoodMelvilleQueue.status'(sK0),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(sK0),'const.HoodMelvilleQueue.Finished_1'(s('type.list.list'(sK0),sK1)))),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  s('type.HoodMelvilleQueue.status'(sK0),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(sK0),'const.HoodMelvilleQueue.Finished_1'(s('type.list.list'(sK0),sK1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f108])).
fof(f108,plain,(
  ? [X0,X1] : s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Finished_1'(s('type.list.list'(X0),X1)))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1] : s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0') != s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Finished_1'(s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1] : ~s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Finished_1'(s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ~s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Finished_1'(s('type.list.list'(X6),X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ~s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Finished_1'(s('type.list.list'(X6),X7)))),
  file('thm.HoodMelvilleQueue.status_distinct|split|2','thm.HoodMelvilleQueue.status_distinct|split|2')).
fof(f136,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun('type.list.list'(X1),X0),X6),s('type.list.list'(X1),X2))) = s(X0,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X1),'const.HoodMelvilleQueue.Finished_1'(s('type.list.list'(X1),X2))),s(X0,X3),s(fun('type.num.num',fun('type.list.list'(X1),fun('type.list.list'(X1),fun('type.list.list'(X1),fun('type.list.list'(X1),X0))))),X4),s(fun('type.num.num',fun('type.list.list'(X1),fun('type.list.list'(X1),X0))),X5),s(fun('type.list.list'(X1),X0),X6)))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s(X0,happ(s(fun('type.list.list'(X1),X0),X6),s('type.list.list'(X1),X2))) = s(X0,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X1),'const.HoodMelvilleQueue.Finished_1'(s('type.list.list'(X1),X2))),s(X0,X3),s(fun('type.num.num',fun('type.list.list'(X1),fun('type.list.list'(X1),fun('type.list.list'(X1),fun('type.list.list'(X1),X0))))),X4),s(fun('type.num.num',fun('type.list.list'(X1),fun('type.list.list'(X1),X0))),X5),s(fun('type.list.list'(X1),X0),X6)))),
  inference(flattening,[],[f78])).
fof(f78,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6] : s(X0,happ(s(fun('type.list.list'(X1),X0),X6),s('type.list.list'(X1),X2))) = s(X0,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X1),'const.HoodMelvilleQueue.Finished_1'(s('type.list.list'(X1),X2))),s(X0,X3),s(fun('type.num.num',fun('type.list.list'(X1),fun('type.list.list'(X1),fun('type.list.list'(X1),fun('type.list.list'(X1),X0))))),X4),s(fun('type.num.num',fun('type.list.list'(X1),fun('type.list.list'(X1),X0))),X5),s(fun('type.list.list'(X1),X0),X6)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X23,X6] : ! [X7,X31,X22,X32,X33] : s(X23,happ(s(fun('type.list.list'(X6),X23),X33),s('type.list.list'(X6),X7))) = s(X23,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Finished_1'(s('type.list.list'(X6),X7))),s(X23,X31),s(fun('type.num.num',fun('type.list.list'(X6),fun('type.list.list'(X6),fun('type.list.list'(X6),fun('type.list.list'(X6),X23))))),X22),s(fun('type.num.num',fun('type.list.list'(X6),fun('type.list.list'(X6),X23))),X32),s(fun('type.list.list'(X6),X23),X33)))),
  file('thm.HoodMelvilleQueue.status_distinct|split|2','thm.HoodMelvilleQueue.status_case_def|split|3')).
fof(f2986,plain,(
  ( ! [X541,X535] : (s('type.HoodMelvilleQueue.status'(X535),'const.HoodMelvilleQueue.Idle_0') != s('type.HoodMelvilleQueue.status'(X535),happ(s(fun('type.list.list'(sK0),'type.HoodMelvilleQueue.status'(X535)),X541),s('type.list.list'(sK0),sK1)))) )),
  inference(superposition,[],[f154,f904])).
fof(f154,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0') != s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Reversing_5'(s('type.num.num',X5),s('type.list.list'(X0),X4),s('type.list.list'(X0),X3),s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0') != s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Reversing_5'(s('type.num.num',X5),s('type.list.list'(X0),X4),s('type.list.list'(X0),X3),s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : ~s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Reversing_5'(s('type.num.num',X5),s('type.list.list'(X0),X4),s('type.list.list'(X0),X3),s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X34,X35,X36,X37,X38] : ~s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Reversing_5'(s('type.num.num',X38),s('type.list.list'(X6),X37),s('type.list.list'(X6),X36),s('type.list.list'(X6),X35),s('type.list.list'(X6),X34)))),
  file('thm.HoodMelvilleQueue.status_distinct|split|2','thm.HoodMelvilleQueue.status_distinct|split|0')).
% SZS output end Proof for thm.HoodMelvilleQueue
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 57
% Passive clauses: 874
% Generated clauses: 3208
% Final active clauses: 48
% Final passive clauses: 802
% Input formulas: 69
% Initial clauses: 40
% 
% Selected by SInE selection: 21
% SInE iterations: 1
% 
% Duplicate literals: 8
% Trivial inequalities: 29
% Fw subsumption resolutions: 249
% Fw demodulations: 154
% Bw demodulations: 4
% 
% Simple tautologies: 28
% Equational tautologies: 1
% Forward subsumptions: 1500
% Bw demodulations to eq. taut.: 4
% 
% Binary resolution: 10
% Forward superposition: 1337
% Backward superposition: 1374
% Self superposition: 22
% Equality resolution: 11
% 
% Split clauses: 29
% Split components: 58
% SAT solver clauses: 33
% SAT solver unit clauses: 2
% SAT solver binary clauses: 30
% 
% Sat splits: 29
% Sat splitting refutations: 3
% 
% Memory used [KB]: 5884
% Time elapsed: 0.119 s
% ------------------------------
% ------------------------------
% Success in time 12.34 s
