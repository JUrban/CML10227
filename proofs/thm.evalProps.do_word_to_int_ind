Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.evalProps
% (111237)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 239
% Passive clauses: 4040
% Generated clauses: 17578
% Final active clauses: 122
% Final passive clauses: 1495
% Input formulas: 19
% Initial clauses: 37
% 
% Duplicate literals: 565
% Trivial inequalities: 140
% Fw subsumption resolutions: 1358
% Fw demodulations: 2032
% Bw demodulations: 42
% 
% Simple tautologies: 243
% Equational tautologies: 32
% Forward subsumptions: 8792
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 4
% 
% Binary resolution: 234
% Forward superposition: 7852
% Backward superposition: 4679
% Self superposition: 279
% Equality factoring: 60
% Equality resolution: 29
% 
% Split clauses: 284
% Split components: 593
% SAT solver clauses: 653
% SAT solver unit clauses: 36
% SAT solver binary clauses: 116
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 284
% Sat splitting refutations: 30
% 
% TWLsolver clauses: 652
% TWLsolver calls for satisfiability: 149
% 
% Memory used [KB]: 19701
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.evalProps
% (111269)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 118
% Passive clauses: 897
% Generated clauses: 8268
% Final active clauses: 78
% Final passive clauses: 456
% Input formulas: 19
% Initial clauses: 37
% 
% Duplicate literals: 220
% Trivial inequalities: 34
% Fw subsumption resolutions: 507
% Fw demodulations: 1206
% Bw demodulations: 333
% Condensations: 393
% 
% Simple tautologies: 35
% Equational tautologies: 30
% Forward subsumptions: 3580
% Bw demodulations to eq. taut.: 18
% 
% Binary resolution: 61
% Forward superposition: 2366
% Backward superposition: 1824
% Self superposition: 141
% Equality factoring: 54
% Equality resolution: 6
% 
% Split clauses: 15
% Split components: 30
% SAT solver clauses: 1357
% SAT solver unit clauses: 53
% SAT solver binary clauses: 37
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 4
% 
% Sat splits: 15
% Sat splitting refutations: 13
% 
% TWLsolver clauses: 1355
% TWLsolver calls for satisfiability: 1018
% 
% Memory used [KB]: 13176
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.evalProps
% (111296)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 372
% Passive clauses: 5347
% Generated clauses: 83481
% Final active clauses: 41
% Final passive clauses: 118
% Input formulas: 19
% Initial clauses: 37
% Discarded non-redundant clauses: 3386
% 
% Duplicate literals: 3546
% Trivial inequalities: 322
% Fw subsumption resolutions: 1569
% Fw demodulations: 19063
% Bw demodulations: 1212
% Condensations: 5992
% Global subsumptions: 1584
% 
% Simple tautologies: 401
% Equational tautologies: 2694
% Forward subsumptions: 40302
% Fw demodulations to eq. taut.: 23
% Bw demodulations to eq. taut.: 91
% 
% Unit resulting resolution: 10425
% Forward superposition: 17068
% Backward superposition: 13077
% Self superposition: 560
% Equality factoring: 312
% Equality resolution: 39
% 
% Split clauses: 362
% Split components: 832
% SAT solver clauses: 9228
% SAT solver unit clauses: 73
% SAT solver binary clauses: 1239
% 
% Sat splits: 362
% Sat splitting refutations: 1570
% 
% Memory used [KB]: 102599
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.evalProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.evalProps
% SZS output start Proof for thm.evalProps
fof(f5624,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f90,f97,f98,f137,f158,f191,f352,f207,f1493,f1509,f208,f1494,f1511,f1510,f1513,f1517,f1518,f1488,f1476,f1490,f1521,f1523,f1524,f1460,f1447,f1462,f1525,f1526,f1527,f1528,f1529,f1530,f1531,f1311,f1299,f1313,f1532,f1533,f1534,f1283,f1270,f1285,f1535,f1536,f1522,f1537,f1538,f1516,f1514,f1596,f106,f105,f1604,f114,f112,f1613,f174,f173,f1684,f2239,f2289,f2290,f1520,f2310,f2318,f2316,f2314,f2312,f2341,f2349,f2347,f2345,f2343,f2372,f2380,f2378,f2376,f2374,f2403,f2459,f2460,f2322,f2321,f2486,f2484,f2482,f2480,f2530,f2563,f2571,f2569,f2567,f2565,f2596,f2604,f2602,f2600,f2598,f2627,f2635,f2633,f2631,f2629,f2658,f2713,f2714,f2577,f2576,f2738,f2736,f2734,f2732,f2575,f2743,f2765,f2789,f2797,f2795,f2793,f2791,f2818,f2826,f2824,f2822,f2820,f2908,f2916,f2914,f2912,f2910,f2939,f2993,f2994,f3025,f3027,f3029,f3030,f3031,f3033,f3035,f3037,f3038,f3039,f3041,f3047,f1603,f110,f108,f3057,f3067,f3074,f3076,f2740,f2801,f2800,f2276,f3084,f3082,f3080,f3078,f3146,f3417,f3486,f3501,f2660,f3505,f2405,f3512,f2941,f3522,f3154,f3152,f3150,f3148,f3523,f3577,f3589,f3579,f3650,f3663,f3892,f3585,f3583,f3581,f3894,f3910,f3923,f3936,f3944,f3986,f4000,f4008,f4011,f4015,f4019,f3988,f4033,f2666,f2664,f2662,f3946,f4037,f2411,f2409,f2407,f3938,f4044,f2947,f2945,f2943,f3925,f4051,f3912,f4064,f109,f4068,f3969,f3968,f4074,f4079,f4081,f2280,f4188,f4228,f3994,f3992,f3990,f4002,f4232,f3658,f3656,f3654,f3652,f113,f5216,f5219,f4076,f4072,f4070,f5220,f5276,f5277,f5296,f5298,f2278,f2274,f5606,f5607])).
fof(f5607,plain,(
  $false | ($spl8 | $spl37 | $spl39 | $spl41)),
  inference(subsumption_resolution,[],[f5566,f522])).
fof(f522,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(forward_demodulation,[],[f118,f116])).
fof(f116,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X1)))))) )),
  inference(resolution,[],[f58,f82])).
fof(f82,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X21] : (s(bool,'T_0') = s(bool,X21) <=> p(s(bool,X21)))),
  file('thm.evalProps.do_word_to_int_ind','thm.bool.EQ_CLAUSES|split|0')).
fof(f58,plain,(
  ( ! [X10,X9] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X9))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X10))))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X12] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X12)))))) & ! [X11] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X11)))))) & ! [X9,X10] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X9))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X10)))))) & ! [X7,X8] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X7))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X8)))))) & ! [X5,X6] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X5))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X6)))))) & ! [X4] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X4)))))) & ! [X3] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X3)))))) & ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f45])).
fof(f45,plain,(
  ? [X0] : (! [X12] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X12)))))) & ! [X11] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X11)))))) & ! [X9,X10] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X9))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X10)))))) & ! [X7,X8] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X7))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X8)))))) & ! [X5,X6] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X5))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X6)))))) & ! [X4] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X4)))))) & ! [X3] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X3)))))) & ? [X1,X2] : ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X1))),s('type.ast.lit',X2)))))),
  inference(rectify,[],[f41])).
fof(f41,plain,(
  ? [X0] : (! [X10] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X10)))))) & ! [X9] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X9)))))) & ! [X7,X8] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X7))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X8)))))) & ! [X5,X6] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X5))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X6)))))) & ! [X3,X4] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X3))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X4)))))) & ! [X2] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X2)))))) & ! [X1] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1)))))) & ? [X11,X12] : ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X11))),s('type.ast.lit',X12)))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ? [X0] : ((! [X10] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X10)))))) & ! [X9] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X9)))))) & ! [X7,X8] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X7))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X8)))))) & ! [X5,X6] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X5))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X6)))))) & ! [X3,X4] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X3))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X4)))))) & ! [X2] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X2)))))) & ! [X1] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1))))))) & ? [X11,X12] : ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X11))),s('type.ast.lit',X12)))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ~! [X0] : ((! [X10] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X10)))))) & ! [X9] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X9)))))) & ! [X7,X8] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X7))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X8)))))) & ! [X5,X6] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X5))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X6)))))) & ! [X3,X4] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X3))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X4)))))) & ! [X2] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X2)))))) & ! [X1] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1))))))) => ! [X11,X12] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X0),s('type.ast.word_size',X11))),s('type.ast.lit',X12)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((! [X7] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X7)))))) & ! [X7] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X7)))))) & ! [X8,X9] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size',X8))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X9)))))) & ! [X8,X10] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size',X8))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X10)))))) & ! [X8,X11] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size',X8))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X11)))))) & ! [X12] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X12)))))) & ! [X13] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X13))))))) => ! [X14,X15] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size',X14))),s('type.ast.lit',X15)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((! [X7] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X7)))))) & ! [X7] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X7)))))) & ! [X8,X9] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size',X8))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X9)))))) & ! [X8,X10] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size',X8))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X10)))))) & ! [X8,X11] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size',X8))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X11)))))) & ! [X12] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X12)))))) & ! [X13] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X13))))))) => ! [X14,X15] : p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),X6),s('type.ast.word_size',X14))),s('type.ast.lit',X15)))))),
  file('thm.evalProps.do_word_to_int_ind','thm.evalProps.do_word_to_int_ind')).
fof(f118,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X4))),s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X5)))))) )),
  inference(resolution,[],[f58,f77])).
fof(f77,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X21] : (s(bool,'F_0') = s(bool,X21) <=> ~p(s(bool,X21)))),
  file('thm.evalProps.do_word_to_int_ind','thm.bool.EQ_CLAUSES|split|3')).
fof(f5566,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl8 | $spl37 | $spl39 | $spl41)),
  inference(backward_demodulation,[],[f5495,f4259])).
fof(f4259,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2))) | $spl8),
  inference(resolution,[],[f4114,f78])).
fof(f78,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f53])).
fof(f4114,plain,(
  ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl8),
  inference(forward_demodulation,[],[f63,f112])).
fof(f63,plain,(
  ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',sK2))))),
  inference(cnf_transformation,[],[f46])).
fof(f5495,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X2))),s('type.ast.lit',sK2)))) ) | ($spl8 | $spl37 | $spl39 | $spl41)),
  inference(superposition,[],[f116,f3485])).
fof(f3485,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | ($spl8 | $spl37 | $spl39 | $spl41)),
  inference(subsumption_resolution,[],[f3484,f2275])).
fof(f2275,plain,(
  s('type.ast.lit',sK2) != s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | $spl37),
  inference(cnf_transformation,[],[f2275_D])).
fof(f2275_D,plain,(
  s('type.ast.lit',sK2) != s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f3484,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | ($spl8 | $spl39 | $spl41)),
  inference(subsumption_resolution,[],[f3483,f2277])).
fof(f2277,plain,(
  s('type.ast.lit',sK2) != s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | $spl39),
  inference(cnf_transformation,[],[f2277_D])).
fof(f2277_D,plain,(
  s('type.ast.lit',sK2) != s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f3483,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | ($spl8 | $spl41)),
  inference(subsumption_resolution,[],[f3482,f2279])).
fof(f2279,plain,(
  s('type.ast.lit',sK2) != s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | $spl41),
  inference(cnf_transformation,[],[f2279_D])).
fof(f2279_D,plain,(
  s('type.ast.lit',sK2) != s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f3482,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl8),
  inference(subsumption_resolution,[],[f3405,f83])).
fof(f83,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.evalProps.do_word_to_int_ind',aHL_FALSITY)).
fof(f3405,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl8),
  inference(superposition,[],[f458,f3162])).
fof(f3162,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2))) | $spl8),
  inference(resolution,[],[f3117,f78])).
fof(f3117,plain,(
  ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl8),
  inference(forward_demodulation,[],[f63,f112])).
fof(f458,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(X0))))) )),
  inference(superposition,[],[f62,f71])).
fof(f71,plain,(
  ( ! [X0] : (s('type.ast.lit',X0) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(X0))))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0] : (s('type.ast.lit',X0) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14,sK15,sK16,sK17])],[f23])).
fof(f23,plain,(
  ! [X0] : (? [X5] : s('type.ast.lit',X0) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X5))) | ? [X4] : s('type.ast.lit',X0) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X4))) | ? [X3] : s('type.ast.lit',X0) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X3))) | ? [X2] : s('type.ast.lit',X0) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X2))) | ? [X1] : s('type.ast.lit',X0) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X16] : (? [X17] : s('type.ast.lit',X16) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X17))) | ? [X18] : s('type.ast.lit',X16) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X18))) | ? [X19] : s('type.ast.lit',X16) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X19))) | ? [X18] : s('type.ast.lit',X16) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X18))) | ? [X18] : s('type.ast.lit',X16) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X18))))),
  file('thm.evalProps.do_word_to_int_ind','thm.ast.lit_nchotomy')).
fof(f62,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X3))))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f5606,plain,(
  $false | ($spl8 | $spl37 | $spl39 | $spl41)),
  inference(trivial_inequality_removal,[],[f5577])).
fof(f5577,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl8 | $spl37 | $spl39 | $spl41)),
  inference(superposition,[],[f4257,f5495])).
fof(f4257,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2))) | $spl8),
  inference(resolution,[],[f4114,f81])).
fof(f81,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f55])).
fof(f2274,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl34),
  inference(cnf_transformation,[],[f2274_D])).
fof(f2274_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f2278,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | $spl38),
  inference(cnf_transformation,[],[f2278_D])).
fof(f2278_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f5298,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | ($spl8 | $spl37 | $spl41)),
  inference(subsumption_resolution,[],[f5297,f2275])).
fof(f5297,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | ($spl8 | $spl41)),
  inference(subsumption_resolution,[],[f4253,f2279])).
fof(f4253,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl8),
  inference(resolution,[],[f4114,f458])).
fof(f5296,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | ($spl8 | $spl37 | $spl41)),
  inference(subsumption_resolution,[],[f5295,f2275])).
fof(f5295,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | ($spl8 | $spl41)),
  inference(subsumption_resolution,[],[f5294,f2279])).
fof(f5294,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl8),
  inference(subsumption_resolution,[],[f4666,f83])).
fof(f4666,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl8),
  inference(superposition,[],[f458,f4259])).
fof(f5277,plain,(
  $false | ($spl8 | $spl38)),
  inference(subsumption_resolution,[],[f5236,f522])).
fof(f5236,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl8 | $spl38)),
  inference(backward_demodulation,[],[f4233,f4259])).
fof(f4233,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit',sK2)))) ) | $spl38),
  inference(superposition,[],[f248,f2278])).
fof(f248,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X1)))))) )),
  inference(resolution,[],[f60,f82])).
fof(f60,plain,(
  ( ! [X6,X5] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X5))),s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),X6))))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f5276,plain,(
  $false | ($spl8 | $spl38)),
  inference(trivial_inequality_removal,[],[f5247])).
fof(f5247,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl8 | $spl38)),
  inference(superposition,[],[f4257,f4233])).
fof(f5220,plain,(
  $false | ($spl8 | $spl172)),
  inference(subsumption_resolution,[],[f5202,f4257])).
fof(f5202,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2))) | $spl172),
  inference(superposition,[],[f297,f3579])).
fof(f297,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X0)))))) )),
  inference(resolution,[],[f56,f82])).
fof(f56,plain,(
  ( ! [X12] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X12))))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f4070,plain,(
  s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl208),
  inference(cnf_transformation,[],[f4070_D])).
fof(f4070_D,plain,(
  s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f4072,plain,(
  s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl210),
  inference(cnf_transformation,[],[f4072_D])).
fof(f4072_D,plain,(
  s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f4076,plain,(
  s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl214),
  inference(cnf_transformation,[],[f4076_D])).
fof(f4076_D,plain,(
  s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f5219,plain,(
  s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | ($spl41 | $spl172 | $spl176)),
  inference(subsumption_resolution,[],[f5218,f2279])).
fof(f5218,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | ($spl41 | $spl172 | $spl176)),
  inference(forward_demodulation,[],[f5217,f3583])).
fof(f5217,plain,(
  s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | ($spl41 | $spl172)),
  inference(subsumption_resolution,[],[f5199,f2279])).
fof(f5199,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl172),
  inference(superposition,[],[f71,f3579])).
fof(f5216,plain,(
  s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | ($spl41 | $spl172 | $spl176)),
  inference(subsumption_resolution,[],[f5215,f2279])).
fof(f5215,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | ($spl41 | $spl172 | $spl176)),
  inference(forward_demodulation,[],[f5214,f3583])).
fof(f5214,plain,(
  s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | ($spl41 | $spl172)),
  inference(subsumption_resolution,[],[f5198,f2279])).
fof(f5198,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl172),
  inference(superposition,[],[f3579,f71])).
fof(f113,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | $spl10),
  inference(cnf_transformation,[],[f113_D])).
fof(f113_D,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f3652,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl180),
  inference(cnf_transformation,[],[f3652_D])).
fof(f3652_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f3654,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl182),
  inference(cnf_transformation,[],[f3654_D])).
fof(f3654_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f3656,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl184),
  inference(cnf_transformation,[],[f3656_D])).
fof(f3656_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f3658,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl186),
  inference(cnf_transformation,[],[f3658_D])).
fof(f3658_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f4232,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | $spl168),
  inference(forward_demodulation,[],[f4231,f3152])).
fof(f4231,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl168),
  inference(forward_demodulation,[],[f4230,f3152])).
fof(f4230,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl168),
  inference(forward_demodulation,[],[f4229,f3152])).
fof(f4229,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl168),
  inference(forward_demodulation,[],[f3639,f3152])).
fof(f3639,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl168),
  inference(superposition,[],[f439,f3152])).
fof(f439,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(X0))))) )),
  inference(superposition,[],[f57,f71])).
fof(f57,plain,(
  ( ! [X11] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X11))))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f4002,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl206),
  inference(cnf_transformation,[],[f4002_D])).
fof(f4002_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f3990,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl200),
  inference(cnf_transformation,[],[f3990_D])).
fof(f3990_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f3992,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl202),
  inference(cnf_transformation,[],[f3992_D])).
fof(f3992_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f3994,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl204),
  inference(cnf_transformation,[],[f3994_D])).
fof(f3994_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f4228,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | $spl176),
  inference(forward_demodulation,[],[f4227,f3583])).
fof(f4227,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl176),
  inference(forward_demodulation,[],[f4226,f3583])).
fof(f4226,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl176),
  inference(forward_demodulation,[],[f4225,f3583])).
fof(f4225,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl176),
  inference(forward_demodulation,[],[f3974,f3583])).
fof(f3974,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl176),
  inference(superposition,[],[f439,f3583])).
fof(f4188,plain,(
  $false | ($spl5 | $spl11 | $spl38)),
  inference(trivial_inequality_removal,[],[f4177])).
fof(f4177,plain,(
  s('type.ast.word_size','const.ast.W8_0') != s('type.ast.word_size','const.ast.W8_0') | ($spl5 | $spl11 | $spl38)),
  inference(superposition,[],[f1647,f2462])).
fof(f2462,plain,(
  ( ! [X0] : (s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X0)) ) | ($spl11 | $spl38)),
  inference(subsumption_resolution,[],[f2416,f84])).
fof(f84,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f9])).
fof(f9,axiom,(
  p(s(bool,'T_0'))),
  file('thm.evalProps.do_word_to_int_ind','thm.bool.TRUTH')).
fof(f2416,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X0)) ) | ($spl11 | $spl38)),
  inference(backward_demodulation,[],[f2292,f1636])).
fof(f1636,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit',sK2)))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X0)) ) | $spl11),
  inference(superposition,[],[f114,f72])).
fof(f72,plain,(
  ( ! [X0] : (s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X0)) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X0) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X20] : (s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X20) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X20))),
  file('thm.evalProps.do_word_to_int_ind','thm.ast.word_size_nchotomy')).
fof(f2292,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit',sK2)))) ) | $spl38),
  inference(superposition,[],[f248,f2278])).
fof(f1647,plain,(
  s('type.ast.word_size','const.ast.W8_0') != s('type.ast.word_size','const.ast.W64_0') | $spl5),
  inference(backward_demodulation,[],[f1583,f107])).
fof(f107,plain,(
  s('type.ast.word_size','const.ast.W64_0') != s('type.ast.word_size',sK1) | $spl5),
  inference(cnf_transformation,[],[f107_D])).
fof(f107_D,plain,(
  s('type.ast.word_size','const.ast.W64_0') != s('type.ast.word_size',sK1) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f1583,plain,(
  s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',sK1) | $spl5),
  inference(trivial_inequality_removal,[],[f1582])).
fof(f1582,plain,(
  s('type.ast.word_size','const.ast.W64_0') != s('type.ast.word_size','const.ast.W64_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',sK1) | $spl5),
  inference(superposition,[],[f107,f72])).
fof(f2280,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | $spl40),
  inference(cnf_transformation,[],[f2280_D])).
fof(f2280_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f4081,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | ($spl11 | $spl35 | $spl37)),
  inference(subsumption_resolution,[],[f4080,f2273])).
fof(f2273,plain,(
  s('type.ast.lit',sK2) != s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl35),
  inference(cnf_transformation,[],[f2273_D])).
fof(f2273_D,plain,(
  s('type.ast.lit',sK2) != s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f4080,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | ($spl11 | $spl37)),
  inference(subsumption_resolution,[],[f3613,f2275])).
fof(f3613,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl11),
  inference(resolution,[],[f114,f439])).
fof(f4079,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | ($spl11 | $spl35 | $spl37)),
  inference(subsumption_resolution,[],[f4078,f2273])).
fof(f4078,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | ($spl11 | $spl37)),
  inference(subsumption_resolution,[],[f4077,f2275])).
fof(f4077,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl11),
  inference(subsumption_resolution,[],[f3792,f83])).
fof(f3792,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl11),
  inference(superposition,[],[f439,f3619])).
fof(f3619,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2))) | $spl11),
  inference(resolution,[],[f114,f78])).
fof(f4074,plain,(
  s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl212),
  inference(cnf_transformation,[],[f4074_D])).
fof(f4074_D,plain,(
  s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f3968,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl176),
  inference(superposition,[],[f3583,f71])).
fof(f3969,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl176),
  inference(superposition,[],[f71,f3583])).
fof(f4068,plain,(
  $false | ($spl5 | $spl9)),
  inference(subsumption_resolution,[],[f1583,f111])).
fof(f111,plain,(
  s('type.ast.word_size','const.ast.W8_0') != s('type.ast.word_size',sK1) | $spl9),
  inference(cnf_transformation,[],[f111_D])).
fof(f111_D,plain,(
  s('type.ast.word_size','const.ast.W8_0') != s('type.ast.word_size',sK1) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f109,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl6),
  inference(cnf_transformation,[],[f109_D])).
fof(f109_D,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f4064,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl168),
  inference(forward_demodulation,[],[f4063,f3152])).
fof(f4063,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl168),
  inference(forward_demodulation,[],[f4062,f3152])).
fof(f4062,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl168),
  inference(forward_demodulation,[],[f4061,f3152])).
fof(f4061,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl168),
  inference(forward_demodulation,[],[f3638,f3152])).
fof(f3638,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl168),
  inference(superposition,[],[f458,f3152])).
fof(f3912,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl190),
  inference(cnf_transformation,[],[f3912_D])).
fof(f3912_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f4051,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl168),
  inference(forward_demodulation,[],[f4050,f3152])).
fof(f4050,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl168),
  inference(forward_demodulation,[],[f4049,f3152])).
fof(f4049,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl168),
  inference(forward_demodulation,[],[f4048,f3152])).
fof(f4048,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl168),
  inference(forward_demodulation,[],[f3854,f3152])).
fof(f3854,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | $spl168),
  inference(superposition,[],[f306,f3152])).
fof(f306,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(X0)))) | s('type.ast.lit',X0) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(X0))))) )),
  inference(superposition,[],[f56,f71])).
fof(f3925,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl192),
  inference(cnf_transformation,[],[f3925_D])).
fof(f3925_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f2943,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl150),
  inference(cnf_transformation,[],[f2943_D])).
fof(f2943_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f2945,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl152),
  inference(cnf_transformation,[],[f2945_D])).
fof(f2945_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f2947,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl154),
  inference(cnf_transformation,[],[f2947_D])).
fof(f2947_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f4044,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl144),
  inference(forward_demodulation,[],[f4043,f2914])).
fof(f4043,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl144),
  inference(forward_demodulation,[],[f4042,f2914])).
fof(f4042,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl144),
  inference(forward_demodulation,[],[f4041,f2914])).
fof(f4041,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl144),
  inference(forward_demodulation,[],[f3856,f2914])).
fof(f3856,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl144),
  inference(superposition,[],[f306,f2914])).
fof(f3938,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl194),
  inference(cnf_transformation,[],[f3938_D])).
fof(f3938_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f2407,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl68),
  inference(cnf_transformation,[],[f2407_D])).
fof(f2407_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f2409,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl70),
  inference(cnf_transformation,[],[f2409_D])).
fof(f2409_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f2411,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl72),
  inference(cnf_transformation,[],[f2411_D])).
fof(f2411_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f4037,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl62),
  inference(forward_demodulation,[],[f4036,f2378])).
fof(f4036,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl62),
  inference(forward_demodulation,[],[f4035,f2378])).
fof(f4035,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl62),
  inference(forward_demodulation,[],[f4034,f2378])).
fof(f4034,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl62),
  inference(forward_demodulation,[],[f3858,f2378])).
fof(f3858,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl62),
  inference(superposition,[],[f306,f2378])).
fof(f3946,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl196),
  inference(cnf_transformation,[],[f3946_D])).
fof(f3946_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f2662,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl108),
  inference(cnf_transformation,[],[f2662_D])).
fof(f2662_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f2664,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl110),
  inference(cnf_transformation,[],[f2664_D])).
fof(f2664_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f2666,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl112),
  inference(cnf_transformation,[],[f2666_D])).
fof(f2666_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f4033,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl102),
  inference(forward_demodulation,[],[f4032,f2633])).
fof(f4032,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl102),
  inference(forward_demodulation,[],[f4031,f2633])).
fof(f4031,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl102),
  inference(forward_demodulation,[],[f4030,f2633])).
fof(f4030,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl102),
  inference(forward_demodulation,[],[f3859,f2633])).
fof(f3859,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl102),
  inference(superposition,[],[f306,f2633])).
fof(f3988,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl198),
  inference(cnf_transformation,[],[f3988_D])).
fof(f3988_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f4019,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl176),
  inference(forward_demodulation,[],[f4018,f3583])).
fof(f4018,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl176),
  inference(forward_demodulation,[],[f4017,f3583])).
fof(f4017,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl176),
  inference(forward_demodulation,[],[f4016,f3583])).
fof(f4016,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl176),
  inference(forward_demodulation,[],[f3972,f3583])).
fof(f3972,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl176),
  inference(superposition,[],[f306,f3583])).
fof(f4015,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl176),
  inference(forward_demodulation,[],[f4014,f3583])).
fof(f4014,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl176),
  inference(forward_demodulation,[],[f4013,f3583])).
fof(f4013,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl176),
  inference(forward_demodulation,[],[f4012,f3583])).
fof(f4012,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl176),
  inference(forward_demodulation,[],[f3973,f3583])).
fof(f3973,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | $spl176),
  inference(superposition,[],[f458,f3583])).
fof(f4011,plain,(
  $false | ($spl8 | $spl40)),
  inference(subsumption_resolution,[],[f3558,f3597])).
fof(f3597,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2))) | $spl8),
  inference(resolution,[],[f3592,f81])).
fof(f3592,plain,(
  ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl8),
  inference(forward_demodulation,[],[f63,f112])).
fof(f3558,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2))) | $spl40),
  inference(superposition,[],[f297,f2280])).
fof(f4008,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl11 | $spl176)),
  inference(forward_demodulation,[],[f4007,f3583])).
fof(f4007,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl11 | $spl176)),
  inference(forward_demodulation,[],[f4006,f3583])).
fof(f4006,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl11 | $spl176)),
  inference(forward_demodulation,[],[f4005,f3583])).
fof(f4005,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl11 | $spl176)),
  inference(forward_demodulation,[],[f4004,f3583])).
fof(f4004,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl11 | $spl176)),
  inference(subsumption_resolution,[],[f4003,f83])).
fof(f4003,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl11 | $spl176)),
  inference(forward_demodulation,[],[f3974,f3619])).
fof(f4000,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl8 | $spl176)),
  inference(forward_demodulation,[],[f3999,f3583])).
fof(f3999,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl8 | $spl176)),
  inference(forward_demodulation,[],[f3998,f3583])).
fof(f3998,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl8 | $spl176)),
  inference(forward_demodulation,[],[f3997,f3583])).
fof(f3997,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl8 | $spl176)),
  inference(forward_demodulation,[],[f3996,f3583])).
fof(f3996,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl8 | $spl176)),
  inference(subsumption_resolution,[],[f3995,f83])).
fof(f3995,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl8 | $spl176)),
  inference(forward_demodulation,[],[f3973,f3599])).
fof(f3599,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2))) | $spl8),
  inference(resolution,[],[f3592,f78])).
fof(f3986,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl8 | $spl176)),
  inference(forward_demodulation,[],[f3985,f3583])).
fof(f3985,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl8 | $spl176)),
  inference(forward_demodulation,[],[f3984,f3583])).
fof(f3984,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl8 | $spl176)),
  inference(forward_demodulation,[],[f3983,f3583])).
fof(f3983,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl8 | $spl176)),
  inference(forward_demodulation,[],[f3982,f3583])).
fof(f3982,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl8 | $spl176)),
  inference(subsumption_resolution,[],[f3981,f83])).
fof(f3981,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))))))))) | ($spl8 | $spl176)),
  inference(forward_demodulation,[],[f3972,f3599])).
fof(f3944,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | ($spl8 | $spl102)),
  inference(forward_demodulation,[],[f3943,f2633])).
fof(f3943,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | ($spl8 | $spl102)),
  inference(forward_demodulation,[],[f3942,f2633])).
fof(f3942,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | ($spl8 | $spl102)),
  inference(forward_demodulation,[],[f3941,f2633])).
fof(f3941,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | ($spl8 | $spl102)),
  inference(forward_demodulation,[],[f3940,f2633])).
fof(f3940,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | ($spl8 | $spl102)),
  inference(subsumption_resolution,[],[f3939,f83])).
fof(f3939,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | ($spl8 | $spl102)),
  inference(forward_demodulation,[],[f3859,f3599])).
fof(f3936,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | ($spl8 | $spl62)),
  inference(forward_demodulation,[],[f3935,f2378])).
fof(f3935,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | ($spl8 | $spl62)),
  inference(forward_demodulation,[],[f3934,f2378])).
fof(f3934,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | ($spl8 | $spl62)),
  inference(forward_demodulation,[],[f3933,f2378])).
fof(f3933,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | ($spl8 | $spl62)),
  inference(forward_demodulation,[],[f3932,f2378])).
fof(f3932,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | ($spl8 | $spl62)),
  inference(subsumption_resolution,[],[f3931,f83])).
fof(f3931,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | ($spl8 | $spl62)),
  inference(forward_demodulation,[],[f3858,f3599])).
fof(f3923,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | ($spl8 | $spl144)),
  inference(forward_demodulation,[],[f3922,f2914])).
fof(f3922,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | ($spl8 | $spl144)),
  inference(forward_demodulation,[],[f3921,f2914])).
fof(f3921,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | ($spl8 | $spl144)),
  inference(forward_demodulation,[],[f3920,f2914])).
fof(f3920,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | ($spl8 | $spl144)),
  inference(forward_demodulation,[],[f3919,f2914])).
fof(f3919,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | ($spl8 | $spl144)),
  inference(subsumption_resolution,[],[f3918,f83])).
fof(f3918,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | ($spl8 | $spl144)),
  inference(forward_demodulation,[],[f3856,f3599])).
fof(f3910,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl8 | $spl168)),
  inference(forward_demodulation,[],[f3909,f3152])).
fof(f3909,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl8 | $spl168)),
  inference(forward_demodulation,[],[f3908,f3152])).
fof(f3908,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl8 | $spl168)),
  inference(forward_demodulation,[],[f3907,f3152])).
fof(f3907,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl8 | $spl168)),
  inference(forward_demodulation,[],[f3906,f3152])).
fof(f3906,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl8 | $spl168)),
  inference(subsumption_resolution,[],[f3905,f83])).
fof(f3905,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl8 | $spl168)),
  inference(forward_demodulation,[],[f3854,f3599])).
fof(f3894,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl188),
  inference(cnf_transformation,[],[f3894_D])).
fof(f3894_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f3581,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl174),
  inference(cnf_transformation,[],[f3581_D])).
fof(f3581_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f3583,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl176),
  inference(cnf_transformation,[],[f3583_D])).
fof(f3583_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f3585,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl178),
  inference(cnf_transformation,[],[f3585_D])).
fof(f3585_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f3892,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | ($spl8 | $spl40)),
  inference(forward_demodulation,[],[f3891,f2280])).
fof(f3891,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | ($spl8 | $spl40)),
  inference(forward_demodulation,[],[f3890,f2280])).
fof(f3890,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | ($spl8 | $spl40)),
  inference(forward_demodulation,[],[f3889,f2280])).
fof(f3889,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | ($spl8 | $spl40)),
  inference(forward_demodulation,[],[f3888,f2280])).
fof(f3888,plain,(
  s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | ($spl8 | $spl40)),
  inference(subsumption_resolution,[],[f3887,f83])).
fof(f3887,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | ($spl8 | $spl40)),
  inference(forward_demodulation,[],[f3848,f3599])).
fof(f3848,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl40),
  inference(superposition,[],[f306,f2280])).
fof(f3663,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl11 | $spl168)),
  inference(forward_demodulation,[],[f3662,f3152])).
fof(f3662,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl11 | $spl168)),
  inference(forward_demodulation,[],[f3661,f3152])).
fof(f3661,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl11 | $spl168)),
  inference(forward_demodulation,[],[f3660,f3152])).
fof(f3660,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl11 | $spl168)),
  inference(forward_demodulation,[],[f3659,f3152])).
fof(f3659,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl11 | $spl168)),
  inference(subsumption_resolution,[],[f3639,f114])).
fof(f3650,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl8 | $spl168)),
  inference(forward_demodulation,[],[f3649,f3152])).
fof(f3649,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl8 | $spl168)),
  inference(forward_demodulation,[],[f3648,f3152])).
fof(f3648,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl8 | $spl168)),
  inference(forward_demodulation,[],[f3647,f3152])).
fof(f3647,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl8 | $spl168)),
  inference(forward_demodulation,[],[f3646,f3152])).
fof(f3646,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))))))))) | ($spl8 | $spl168)),
  inference(subsumption_resolution,[],[f3638,f3592])).
fof(f3579,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl172),
  inference(cnf_transformation,[],[f3579_D])).
fof(f3579_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f3589,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | $spl40),
  inference(forward_demodulation,[],[f3588,f2280])).
fof(f3588,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl40),
  inference(forward_demodulation,[],[f3587,f2280])).
fof(f3587,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl40),
  inference(forward_demodulation,[],[f3586,f2280])).
fof(f3586,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl40),
  inference(forward_demodulation,[],[f3567,f2280])).
fof(f3567,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl40),
  inference(superposition,[],[f439,f2280])).
fof(f3577,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl40),
  inference(forward_demodulation,[],[f3576,f2280])).
fof(f3576,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl40),
  inference(forward_demodulation,[],[f3575,f2280])).
fof(f3575,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl40),
  inference(forward_demodulation,[],[f3574,f2280])).
fof(f3574,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl40),
  inference(forward_demodulation,[],[f3566,f2280])).
fof(f3566,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2))))))) | $spl40),
  inference(superposition,[],[f458,f2280])).
fof(f3523,plain,(
  $false | ($spl5 | $spl30)),
  inference(subsumption_resolution,[],[f1520,f1647])).
fof(f3148,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | $spl164),
  inference(cnf_transformation,[],[f3148_D])).
fof(f3148_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f3150,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | $spl166),
  inference(cnf_transformation,[],[f3150_D])).
fof(f3150_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f3152,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | $spl168),
  inference(cnf_transformation,[],[f3152_D])).
fof(f3152_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f3154,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | $spl170),
  inference(cnf_transformation,[],[f3154_D])).
fof(f3154_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f3522,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl122),
  inference(forward_demodulation,[],[f3521,f2740])).
fof(f3521,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | $spl122),
  inference(forward_demodulation,[],[f3520,f2740])).
fof(f3520,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | $spl122),
  inference(forward_demodulation,[],[f3519,f2740])).
fof(f3519,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | $spl122),
  inference(forward_demodulation,[],[f3382,f2740])).
fof(f3382,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | $spl122),
  inference(superposition,[],[f458,f2740])).
fof(f2941,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl148),
  inference(cnf_transformation,[],[f2941_D])).
fof(f2941_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f3512,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl144),
  inference(forward_demodulation,[],[f3511,f2914])).
fof(f3511,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl144),
  inference(forward_demodulation,[],[f3510,f2914])).
fof(f3510,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl144),
  inference(forward_demodulation,[],[f3509,f2914])).
fof(f3509,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl144),
  inference(forward_demodulation,[],[f3387,f2914])).
fof(f3387,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl144),
  inference(superposition,[],[f458,f2914])).
fof(f2405,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl66),
  inference(cnf_transformation,[],[f2405_D])).
fof(f2405_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f3505,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl62),
  inference(forward_demodulation,[],[f3504,f2378])).
fof(f3504,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl62),
  inference(forward_demodulation,[],[f3503,f2378])).
fof(f3503,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl62),
  inference(forward_demodulation,[],[f3502,f2378])).
fof(f3502,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl62),
  inference(forward_demodulation,[],[f3389,f2378])).
fof(f3389,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl62),
  inference(superposition,[],[f458,f2378])).
fof(f2660,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl106),
  inference(cnf_transformation,[],[f2660_D])).
fof(f2660_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f3501,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl102),
  inference(forward_demodulation,[],[f3500,f2633])).
fof(f3500,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl102),
  inference(forward_demodulation,[],[f3499,f2633])).
fof(f3499,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl102),
  inference(forward_demodulation,[],[f3498,f2633])).
fof(f3498,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl102),
  inference(forward_demodulation,[],[f3390,f2633])).
fof(f3390,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl102),
  inference(superposition,[],[f458,f2633])).
fof(f3486,plain,(
  $false | ($spl8 | $spl35 | $spl37 | $spl39 | $spl41)),
  inference(subsumption_resolution,[],[f3485,f2273])).
fof(f3417,plain,(
  $false | ($spl5 | $spl8 | $spl35 | $spl37 | $spl39 | $spl41)),
  inference(subsumption_resolution,[],[f3416,f1647])).
fof(f3416,plain,(
  s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size','const.ast.W64_0') | ($spl8 | $spl35 | $spl37 | $spl39 | $spl41)),
  inference(subsumption_resolution,[],[f3415,f2273])).
fof(f3415,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size','const.ast.W64_0') | ($spl8 | $spl37 | $spl39 | $spl41)),
  inference(subsumption_resolution,[],[f3414,f2275])).
fof(f3414,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size','const.ast.W64_0') | ($spl8 | $spl39 | $spl41)),
  inference(subsumption_resolution,[],[f3413,f2277])).
fof(f3413,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size','const.ast.W64_0') | ($spl8 | $spl41)),
  inference(subsumption_resolution,[],[f3371,f2279])).
fof(f3371,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size','const.ast.W64_0') | $spl8),
  inference(resolution,[],[f458,f3164])).
fof(f3164,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit',sK2)))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0)) ) | $spl8),
  inference(superposition,[],[f3117,f72])).
fof(f3146,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | $spl122),
  inference(forward_demodulation,[],[f3145,f2740])).
fof(f3145,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | $spl122),
  inference(forward_demodulation,[],[f3144,f2740])).
fof(f3144,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | $spl122),
  inference(forward_demodulation,[],[f3143,f2740])).
fof(f3143,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | $spl122),
  inference(forward_demodulation,[],[f3136,f2740])).
fof(f3136,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2))))))) | $spl122),
  inference(superposition,[],[f439,f2740])).
fof(f3078,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | $spl156),
  inference(cnf_transformation,[],[f3078_D])).
fof(f3078_D,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f3080,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | $spl158),
  inference(cnf_transformation,[],[f3080_D])).
fof(f3080_D,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f3082,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | $spl160),
  inference(cnf_transformation,[],[f3082_D])).
fof(f3082_D,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f3084,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | $spl162),
  inference(cnf_transformation,[],[f3084_D])).
fof(f3084_D,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f2276,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | $spl36),
  inference(cnf_transformation,[],[f2276_D])).
fof(f2276_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f2800,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | $spl128),
  inference(superposition,[],[f2795,f71])).
fof(f2801,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | $spl128),
  inference(superposition,[],[f71,f2795])).
fof(f2740,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) | $spl122),
  inference(cnf_transformation,[],[f2740_D])).
fof(f2740_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f3076,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | ($spl35 | $spl39 | $spl41)),
  inference(subsumption_resolution,[],[f3075,f2273])).
fof(f3075,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | ($spl39 | $spl41)),
  inference(subsumption_resolution,[],[f2887,f2277])).
fof(f2887,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl41),
  inference(trivial_inequality_removal,[],[f2886])).
fof(f2886,plain,(
  s('type.ast.lit',sK2) != s('type.ast.lit',sK2) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl41),
  inference(superposition,[],[f2279,f71])).
fof(f3074,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | $spl144),
  inference(forward_demodulation,[],[f3073,f2914])).
fof(f3073,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl144),
  inference(forward_demodulation,[],[f3072,f2914])).
fof(f3072,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl144),
  inference(forward_demodulation,[],[f3071,f2914])).
fof(f3071,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl144),
  inference(forward_demodulation,[],[f2923,f2914])).
fof(f2923,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | $spl144),
  inference(superposition,[],[f439,f2914])).
fof(f3067,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | $spl102),
  inference(forward_demodulation,[],[f3066,f2633])).
fof(f3066,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl102),
  inference(forward_demodulation,[],[f3065,f2633])).
fof(f3065,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl102),
  inference(forward_demodulation,[],[f3064,f2633])).
fof(f3064,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl102),
  inference(forward_demodulation,[],[f2642,f2633])).
fof(f2642,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | $spl102),
  inference(superposition,[],[f439,f2633])).
fof(f3057,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | $spl62),
  inference(forward_demodulation,[],[f3056,f2378])).
fof(f3056,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl62),
  inference(forward_demodulation,[],[f3055,f2378])).
fof(f3055,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl62),
  inference(forward_demodulation,[],[f3054,f2378])).
fof(f3054,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl62),
  inference(forward_demodulation,[],[f2387,f2378])).
fof(f2387,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | $spl62),
  inference(superposition,[],[f439,f2378])).
fof(f108,plain,(
  s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',sK1) | $spl4),
  inference(cnf_transformation,[],[f108_D])).
fof(f108_D,plain,(
  s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',sK1) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f110,plain,(
  ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | $spl7),
  inference(cnf_transformation,[],[f110_D])).
fof(f110_D,plain,(
  ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f1603,plain,(
  ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',sK1)),
  inference(superposition,[],[f63,f72])).
fof(f3047,plain,(
  $false | ($spl7 | $spl36)),
  inference(subsumption_resolution,[],[f3046,f85])).
fof(f85,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.evalProps.do_word_to_int_ind',aHL_TRUTH)).
fof(f3046,plain,(
  ~p(s(bool,'T_0')) | ($spl7 | $spl36)),
  inference(forward_demodulation,[],[f110,f2773])).
fof(f2773,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit',sK2)))) ) | $spl36),
  inference(superposition,[],[f223,f2276])).
fof(f223,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X1)))))) )),
  inference(resolution,[],[f59,f82])).
fof(f59,plain,(
  ( ! [X8,X7] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X7))),s('type.ast.lit','const.ast.Char_1'(s('type.string.char',X8))))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f3041,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f3040,f85])).
fof(f3040,plain,(
  ~p(s(bool,'T_0')) | $spl36),
  inference(forward_demodulation,[],[f63,f2773])).
fof(f3039,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f93,f2773])).
fof(f93,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',sK2)))),
  inference(resolution,[],[f63,f81])).
fof(f3038,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f94,f2773])).
fof(f94,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',sK2)))),
  inference(resolution,[],[f63,f79])).
fof(f79,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X21] : (s(bool,'T_0') = s(bool,X21) <=> p(s(bool,X21)))),
  file('thm.evalProps.do_word_to_int_ind','thm.bool.EQ_CLAUSES|split|1')).
fof(f3037,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f3036,f522])).
fof(f3036,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl36),
  inference(forward_demodulation,[],[f95,f2773])).
fof(f95,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',sK2)))),
  inference(resolution,[],[f63,f78])).
fof(f3035,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f3034,f522])).
fof(f3034,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl36),
  inference(forward_demodulation,[],[f96,f2773])).
fof(f96,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',sK2)))),
  inference(resolution,[],[f63,f76])).
fof(f76,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X21] : (s(bool,'F_0') = s(bool,X21) <=> ~p(s(bool,X21)))),
  file('thm.evalProps.do_word_to_int_ind','thm.bool.EQ_CLAUSES|split|2')).
fof(f3033,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f3032,f522])).
fof(f3032,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl36),
  inference(forward_demodulation,[],[f115,f2773])).
fof(f115,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',sK2)))),
  inference(subsumption_resolution,[],[f99,f84])).
fof(f99,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',sK2)))),
  inference(superposition,[],[f63,f89])).
fof(f89,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.evalProps.do_word_to_int_ind',aHL_BOOL_CASES)).
fof(f3031,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f1599,f2773])).
fof(f1599,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',sK2)))),
  inference(resolution,[],[f63,f81])).
fof(f3030,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f1600,f2773])).
fof(f1600,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',sK2)))),
  inference(resolution,[],[f63,f79])).
fof(f3029,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f3028,f522])).
fof(f3028,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl36),
  inference(forward_demodulation,[],[f1601,f2773])).
fof(f1601,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',sK2)))),
  inference(resolution,[],[f63,f78])).
fof(f3027,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f3026,f522])).
fof(f3026,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl36),
  inference(forward_demodulation,[],[f1602,f2773])).
fof(f1602,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',sK2)))),
  inference(resolution,[],[f63,f76])).
fof(f3025,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f3024,f522])).
fof(f3024,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl36),
  inference(forward_demodulation,[],[f1612,f2773])).
fof(f1612,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',sK2)))),
  inference(subsumption_resolution,[],[f1605,f84])).
fof(f1605,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',sK2)))),
  inference(superposition,[],[f63,f89])).
fof(f2994,plain,(
  $false | ($spl4 | $spl36)),
  inference(subsumption_resolution,[],[f2950,f522])).
fof(f2950,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl4 | $spl36)),
  inference(backward_demodulation,[],[f2773,f1826])).
fof(f1826,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2))) | $spl4),
  inference(forward_demodulation,[],[f95,f108])).
fof(f2993,plain,(
  $false | ($spl4 | $spl36)),
  inference(trivial_inequality_removal,[],[f2961])).
fof(f2961,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl4 | $spl36)),
  inference(superposition,[],[f1824,f2773])).
fof(f1824,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2))) | $spl4),
  inference(forward_demodulation,[],[f93,f108])).
fof(f2939,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | ($spl4 | $spl144)),
  inference(forward_demodulation,[],[f2938,f2914])).
fof(f2938,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | ($spl4 | $spl144)),
  inference(forward_demodulation,[],[f2937,f2914])).
fof(f2937,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | ($spl4 | $spl144)),
  inference(forward_demodulation,[],[f2936,f2914])).
fof(f2936,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | ($spl4 | $spl144)),
  inference(forward_demodulation,[],[f2935,f2914])).
fof(f2935,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | ($spl4 | $spl144)),
  inference(subsumption_resolution,[],[f2934,f83])).
fof(f2934,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))))))))) | ($spl4 | $spl144)),
  inference(forward_demodulation,[],[f2923,f1826])).
fof(f2910,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | $spl140),
  inference(cnf_transformation,[],[f2910_D])).
fof(f2910_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f2912,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | $spl142),
  inference(cnf_transformation,[],[f2912_D])).
fof(f2912_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f2914,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | $spl144),
  inference(cnf_transformation,[],[f2914_D])).
fof(f2914_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f2916,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | $spl146),
  inference(cnf_transformation,[],[f2916_D])).
fof(f2916_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f2908,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | ($spl4 | $spl138)),
  inference(forward_demodulation,[],[f2907,f2826])).
fof(f2907,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | ($spl4 | $spl138)),
  inference(forward_demodulation,[],[f2906,f2826])).
fof(f2906,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | ($spl4 | $spl138)),
  inference(forward_demodulation,[],[f2905,f2826])).
fof(f2905,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | ($spl4 | $spl138)),
  inference(forward_demodulation,[],[f2904,f2826])).
fof(f2904,plain,(
  s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | ($spl4 | $spl138)),
  inference(subsumption_resolution,[],[f2903,f83])).
fof(f2903,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | ($spl4 | $spl138)),
  inference(forward_demodulation,[],[f2892,f1826])).
fof(f2892,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))))))))) | $spl138),
  inference(superposition,[],[f439,f2826])).
fof(f2820,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | $spl132),
  inference(cnf_transformation,[],[f2820_D])).
fof(f2820_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f2822,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | $spl134),
  inference(cnf_transformation,[],[f2822_D])).
fof(f2822_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f2824,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | $spl136),
  inference(cnf_transformation,[],[f2824_D])).
fof(f2824_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f2826,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | $spl138),
  inference(cnf_transformation,[],[f2826_D])).
fof(f2826_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f2818,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | $spl128),
  inference(forward_demodulation,[],[f2817,f2795])).
fof(f2817,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | $spl128),
  inference(forward_demodulation,[],[f2816,f2795])).
fof(f2816,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | $spl128),
  inference(forward_demodulation,[],[f2815,f2795])).
fof(f2815,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | $spl128),
  inference(forward_demodulation,[],[f2804,f2795])).
fof(f2804,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2)))))))))) | $spl128),
  inference(superposition,[],[f439,f2795])).
fof(f2791,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | $spl124),
  inference(cnf_transformation,[],[f2791_D])).
fof(f2791_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f2793,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | $spl126),
  inference(cnf_transformation,[],[f2793_D])).
fof(f2793_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f2795,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | $spl128),
  inference(cnf_transformation,[],[f2795_D])).
fof(f2795_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f2797,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | $spl130),
  inference(cnf_transformation,[],[f2797_D])).
fof(f2797_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f2789,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | $spl36),
  inference(forward_demodulation,[],[f2788,f2276])).
fof(f2788,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | $spl36),
  inference(forward_demodulation,[],[f2787,f2276])).
fof(f2787,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | $spl36),
  inference(forward_demodulation,[],[f2786,f2276])).
fof(f2786,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | $spl36),
  inference(forward_demodulation,[],[f2775,f2276])).
fof(f2775,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14(sK2))))))) | $spl36),
  inference(superposition,[],[f439,f2276])).
fof(f2765,plain,(
  $false | ($spl4 | $spl40)),
  inference(subsumption_resolution,[],[f2748,f1824])).
fof(f2748,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2))) | $spl40),
  inference(superposition,[],[f363,f2280])).
fof(f363,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X0)))))) )),
  inference(resolution,[],[f61,f82])).
fof(f61,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X4))))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f2743,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | ($spl35 | $spl39)),
  inference(subsumption_resolution,[],[f2742,f2277])).
fof(f2742,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | $spl35),
  inference(trivial_inequality_removal,[],[f2741])).
fof(f2741,plain,(
  s('type.ast.lit',sK2) != s('type.ast.lit',sK2) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | $spl35),
  inference(superposition,[],[f2273,f71])).
fof(f2575,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl39),
  inference(trivial_inequality_removal,[],[f2574])).
fof(f2574,plain,(
  s('type.ast.lit',sK2) != s('type.ast.lit',sK2) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl39),
  inference(superposition,[],[f2277,f71])).
fof(f2732,plain,(
  s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | $spl114),
  inference(cnf_transformation,[],[f2732_D])).
fof(f2732_D,plain,(
  s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f2734,plain,(
  s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | $spl116),
  inference(cnf_transformation,[],[f2734_D])).
fof(f2734_D,plain,(
  s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f2736,plain,(
  s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | $spl118),
  inference(cnf_transformation,[],[f2736_D])).
fof(f2736_D,plain,(
  s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f2738,plain,(
  s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | $spl120),
  inference(cnf_transformation,[],[f2738_D])).
fof(f2738_D,plain,(
  s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f2576,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | $spl86),
  inference(superposition,[],[f2569,f71])).
fof(f2577,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | $spl86),
  inference(superposition,[],[f71,f2569])).
fof(f2714,plain,(
  $false | ($spl4 | $spl34)),
  inference(subsumption_resolution,[],[f2670,f522])).
fof(f2670,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl4 | $spl34)),
  inference(backward_demodulation,[],[f2545,f1826])).
fof(f2545,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit',sK2)))) ) | $spl34),
  inference(superposition,[],[f116,f2274])).
fof(f2713,plain,(
  $false | ($spl4 | $spl34)),
  inference(trivial_inequality_removal,[],[f2681])).
fof(f2681,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl4 | $spl34)),
  inference(superposition,[],[f1824,f2545])).
fof(f2658,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | ($spl4 | $spl102)),
  inference(forward_demodulation,[],[f2657,f2633])).
fof(f2657,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | ($spl4 | $spl102)),
  inference(forward_demodulation,[],[f2656,f2633])).
fof(f2656,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | ($spl4 | $spl102)),
  inference(forward_demodulation,[],[f2655,f2633])).
fof(f2655,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | ($spl4 | $spl102)),
  inference(forward_demodulation,[],[f2654,f2633])).
fof(f2654,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | ($spl4 | $spl102)),
  inference(subsumption_resolution,[],[f2653,f83])).
fof(f2653,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))))))))) | ($spl4 | $spl102)),
  inference(forward_demodulation,[],[f2642,f1826])).
fof(f2629,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | $spl98),
  inference(cnf_transformation,[],[f2629_D])).
fof(f2629_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f2631,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | $spl100),
  inference(cnf_transformation,[],[f2631_D])).
fof(f2631_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f2633,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | $spl102),
  inference(cnf_transformation,[],[f2633_D])).
fof(f2633_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f2635,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | $spl104),
  inference(cnf_transformation,[],[f2635_D])).
fof(f2635_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f2627,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | ($spl4 | $spl94)),
  inference(forward_demodulation,[],[f2626,f2602])).
fof(f2626,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | ($spl4 | $spl94)),
  inference(forward_demodulation,[],[f2625,f2602])).
fof(f2625,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | ($spl4 | $spl94)),
  inference(forward_demodulation,[],[f2624,f2602])).
fof(f2624,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | ($spl4 | $spl94)),
  inference(forward_demodulation,[],[f2623,f2602])).
fof(f2623,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f2622,f83])).
fof(f2622,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | ($spl4 | $spl94)),
  inference(forward_demodulation,[],[f2611,f1826])).
fof(f2611,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))))))))) | $spl94),
  inference(superposition,[],[f439,f2602])).
fof(f2598,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | $spl90),
  inference(cnf_transformation,[],[f2598_D])).
fof(f2598_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f2600,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | $spl92),
  inference(cnf_transformation,[],[f2600_D])).
fof(f2600_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f2602,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | $spl94),
  inference(cnf_transformation,[],[f2602_D])).
fof(f2602_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f2604,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | $spl96),
  inference(cnf_transformation,[],[f2604_D])).
fof(f2604_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f2596,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | ($spl4 | $spl86)),
  inference(forward_demodulation,[],[f2595,f2569])).
fof(f2595,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | ($spl4 | $spl86)),
  inference(forward_demodulation,[],[f2594,f2569])).
fof(f2594,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | ($spl4 | $spl86)),
  inference(forward_demodulation,[],[f2593,f2569])).
fof(f2593,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | ($spl4 | $spl86)),
  inference(forward_demodulation,[],[f2592,f2569])).
fof(f2592,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | ($spl4 | $spl86)),
  inference(subsumption_resolution,[],[f2591,f83])).
fof(f2591,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | ($spl4 | $spl86)),
  inference(forward_demodulation,[],[f2580,f1826])).
fof(f2580,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))))))))) | $spl86),
  inference(superposition,[],[f439,f2569])).
fof(f2565,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | $spl82),
  inference(cnf_transformation,[],[f2565_D])).
fof(f2565_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f2567,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | $spl84),
  inference(cnf_transformation,[],[f2567_D])).
fof(f2567_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f2569,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | $spl86),
  inference(cnf_transformation,[],[f2569_D])).
fof(f2569_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f2571,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | $spl88),
  inference(cnf_transformation,[],[f2571_D])).
fof(f2571_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f2563,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f2562,f2274])).
fof(f2562,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f2561,f2274])).
fof(f2561,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f2560,f2274])).
fof(f2560,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f2559,f2274])).
fof(f2559,plain,(
  s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | ($spl4 | $spl34)),
  inference(subsumption_resolution,[],[f2558,f83])).
fof(f2558,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f2547,f1826])).
fof(f2547,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.IntLit_1'(s('type.integer.int',sK13(sK2))))))) | $spl34),
  inference(superposition,[],[f439,f2274])).
fof(f2530,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl4),
  inference(subsumption_resolution,[],[f2496,f83])).
fof(f2496,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl4),
  inference(superposition,[],[f439,f1826])).
fof(f2480,plain,(
  s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | $spl74),
  inference(cnf_transformation,[],[f2480_D])).
fof(f2480_D,plain,(
  s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f2482,plain,(
  s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | $spl76),
  inference(cnf_transformation,[],[f2482_D])).
fof(f2482_D,plain,(
  s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f2484,plain,(
  s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | $spl78),
  inference(cnf_transformation,[],[f2484_D])).
fof(f2484_D,plain,(
  s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f2486,plain,(
  s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | $spl80),
  inference(cnf_transformation,[],[f2486_D])).
fof(f2486_D,plain,(
  s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f2321,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | $spl46),
  inference(superposition,[],[f2316,f71])).
fof(f2322,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK17('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | $spl46),
  inference(superposition,[],[f71,f2316])).
fof(f2460,plain,(
  $false | ($spl4 | $spl38)),
  inference(subsumption_resolution,[],[f2414,f522])).
fof(f2414,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl4 | $spl38)),
  inference(backward_demodulation,[],[f2292,f1826])).
fof(f2459,plain,(
  $false | ($spl4 | $spl38)),
  inference(trivial_inequality_removal,[],[f2427])).
fof(f2427,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl4 | $spl38)),
  inference(superposition,[],[f1824,f2292])).
fof(f2403,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | ($spl4 | $spl62)),
  inference(forward_demodulation,[],[f2402,f2378])).
fof(f2402,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | ($spl4 | $spl62)),
  inference(forward_demodulation,[],[f2401,f2378])).
fof(f2401,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | ($spl4 | $spl62)),
  inference(forward_demodulation,[],[f2400,f2378])).
fof(f2400,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | ($spl4 | $spl62)),
  inference(forward_demodulation,[],[f2399,f2378])).
fof(f2399,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | ($spl4 | $spl62)),
  inference(subsumption_resolution,[],[f2398,f83])).
fof(f2398,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))))))))) | ($spl4 | $spl62)),
  inference(forward_demodulation,[],[f2387,f1826])).
fof(f2374,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | $spl58),
  inference(cnf_transformation,[],[f2374_D])).
fof(f2374_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f2376,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | $spl60),
  inference(cnf_transformation,[],[f2376_D])).
fof(f2376_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f2378,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | $spl62),
  inference(cnf_transformation,[],[f2378_D])).
fof(f2378_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f2380,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | $spl64),
  inference(cnf_transformation,[],[f2380_D])).
fof(f2380_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f2372,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | ($spl4 | $spl54)),
  inference(forward_demodulation,[],[f2371,f2347])).
fof(f2371,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | ($spl4 | $spl54)),
  inference(forward_demodulation,[],[f2370,f2347])).
fof(f2370,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | ($spl4 | $spl54)),
  inference(forward_demodulation,[],[f2369,f2347])).
fof(f2369,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | ($spl4 | $spl54)),
  inference(forward_demodulation,[],[f2368,f2347])).
fof(f2368,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | ($spl4 | $spl54)),
  inference(subsumption_resolution,[],[f2367,f83])).
fof(f2367,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | ($spl4 | $spl54)),
  inference(forward_demodulation,[],[f2356,f1826])).
fof(f2356,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))))))))) | $spl54),
  inference(superposition,[],[f439,f2347])).
fof(f2343,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | $spl50),
  inference(cnf_transformation,[],[f2343_D])).
fof(f2343_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f2345,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | $spl52),
  inference(cnf_transformation,[],[f2345_D])).
fof(f2345_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f2347,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | $spl54),
  inference(cnf_transformation,[],[f2347_D])).
fof(f2347_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f2349,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | $spl56),
  inference(cnf_transformation,[],[f2349_D])).
fof(f2349_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f2341,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | ($spl4 | $spl46)),
  inference(forward_demodulation,[],[f2340,f2316])).
fof(f2340,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | ($spl4 | $spl46)),
  inference(forward_demodulation,[],[f2339,f2316])).
fof(f2339,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | ($spl4 | $spl46)),
  inference(forward_demodulation,[],[f2338,f2316])).
fof(f2338,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | ($spl4 | $spl46)),
  inference(forward_demodulation,[],[f2337,f2316])).
fof(f2337,plain,(
  s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | ($spl4 | $spl46)),
  inference(subsumption_resolution,[],[f2336,f83])).
fof(f2336,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | ($spl4 | $spl46)),
  inference(forward_demodulation,[],[f2325,f1826])).
fof(f2325,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))))))))) | $spl46),
  inference(superposition,[],[f439,f2316])).
fof(f2312,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | $spl42),
  inference(cnf_transformation,[],[f2312_D])).
fof(f2312_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f2314,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | $spl44),
  inference(cnf_transformation,[],[f2314_D])).
fof(f2314_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f2316,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | $spl46),
  inference(cnf_transformation,[],[f2316_D])).
fof(f2316_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f2318,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | $spl48),
  inference(cnf_transformation,[],[f2318_D])).
fof(f2318_D,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f2310,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | ($spl4 | $spl38)),
  inference(forward_demodulation,[],[f2309,f2278])).
fof(f2309,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | ($spl4 | $spl38)),
  inference(forward_demodulation,[],[f2308,f2278])).
fof(f2308,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | ($spl4 | $spl38)),
  inference(forward_demodulation,[],[f2307,f2278])).
fof(f2307,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | ($spl4 | $spl38)),
  inference(forward_demodulation,[],[f2306,f2278])).
fof(f2306,plain,(
  s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | ($spl4 | $spl38)),
  inference(subsumption_resolution,[],[f2305,f83])).
fof(f2305,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | ($spl4 | $spl38)),
  inference(forward_demodulation,[],[f2294,f1826])).
fof(f2294,plain,(
  p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13('const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2))))))) | $spl38),
  inference(superposition,[],[f439,f2278])).
fof(f1520,plain,(
  s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size','const.ast.W64_0') | $spl30),
  inference(cnf_transformation,[],[f1520_D])).
fof(f1520_D,plain,(
  s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size','const.ast.W64_0') <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f2290,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size','const.ast.W64_0') | $spl4),
  inference(subsumption_resolution,[],[f2265,f83])).
fof(f2265,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size','const.ast.W64_0') | $spl4),
  inference(superposition,[],[f439,f1847])).
fof(f1847,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit',sK2))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X0)) ) | $spl4),
  inference(superposition,[],[f1826,f72])).
fof(f2289,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl4),
  inference(subsumption_resolution,[],[f2264,f83])).
fof(f2264,plain,(
  p(s(bool,'F_0')) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | $spl4),
  inference(superposition,[],[f439,f1826])).
fof(f2239,plain,(
  s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),sK16(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),sK15(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.Char_1'(s('type.string.char',sK14(sK2)))) | s('type.ast.lit',sK2) = s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',sK13(sK2)))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size','const.ast.W64_0') | $spl11),
  inference(resolution,[],[f439,f1636])).
fof(f1684,plain,(
  $false | ($spl7 | $spl14)),
  inference(resolution,[],[f174,f110])).
fof(f173,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1),s('type.ast.lit',sK2))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0')),X1,'type.ast.lit'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1))))) ) | $spl12),
  inference(cnf_transformation,[],[f173_D])).
fof(f173_D,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1),s('type.ast.lit',sK2))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0')),X1,'type.ast.lit'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1))))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f174,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',X0))))) ) | $spl14),
  inference(cnf_transformation,[],[f174_D])).
fof(f174_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',X0))))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f1613,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',X0)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1),s('type.ast.lit',sK2))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0')),X1,'type.ast.lit'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1))))) ) | $spl7),
  inference(resolution,[],[f110,f73])).
fof(f73,plain,(
  ( ! [X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,sK18(X2,X1,X0))))) | ~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : ((! [X5] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,sK18(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK18(X2,X1,X0)))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK18])],[f50])).
fof(f50,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : (? [X4] : (! [X5] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(rectify,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : (? [X3] : (! [X4] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(ennf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) => ! [X2] : (! [X3] : (! [X4] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) => ! [X2] : (! [X3] : (! [X4] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X22] : ! [X30] : (p(s(bool,'const.relation.WF_1'(s(fun(X22,fun(X22,bool)),X30)))) => ! [X6] : (! [X24] : (! [X29] : (p(s(bool,happ(s(fun(X22,bool),happ(s(fun(X22,fun(X22,bool)),X30),s(X22,X29))),s(X22,X24)))) => p(s(bool,happ(s(fun(X22,bool),X6),s(X22,X29))))) => p(s(bool,happ(s(fun(X22,bool),X6),s(X22,X24))))) => ! [X24] : p(s(bool,happ(s(fun(X22,bool),X6),s(X22,X24))))))),
  file('thm.evalProps.do_word_to_int_ind','thm.relation.WF_INDUCTION_THM')).
fof(f112,plain,(
  s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',sK1) | $spl8),
  inference(cnf_transformation,[],[f112_D])).
fof(f112_D,plain,(
  s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',sK1) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f114,plain,(
  ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | $spl11),
  inference(cnf_transformation,[],[f114_D])).
fof(f114_D,plain,(
  ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f1604,plain,(
  ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',sK1)),
  inference(superposition,[],[f63,f72])).
fof(f105,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1),s('type.ast.lit',sK2))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1)),X1,'type.ast.lit'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1))))) ) | $spl0),
  inference(cnf_transformation,[],[f105_D])).
fof(f105_D,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1),s('type.ast.lit',sK2))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1)),X1,'type.ast.lit'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f106,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',X0))))) ) | $spl2),
  inference(cnf_transformation,[],[f106_D])).
fof(f106_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',X0))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f1596,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',X0)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1),s('type.ast.lit',sK2))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1)),X1,'type.ast.lit'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1))))) )),
  inference(resolution,[],[f63,f73])).
fof(f1514,plain,(
  ( ! [X14] : (s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X14)) ) | $spl26),
  inference(cnf_transformation,[],[f1514_D])).
fof(f1514_D,plain,(
  ( ! [X14] : (s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X14)) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f1516,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl29),
  inference(cnf_transformation,[],[f1516_D])).
fof(f1516_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f1538,plain,(
  ( ! [X17] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X17)) )),
  inference(subsumption_resolution,[],[f1185,f301])).
fof(f301,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X1)))))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0)) )),
  inference(superposition,[],[f56,f72])).
fof(f1185,plain,(
  ( ! [X17,X18] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X17))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X18)))))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X17)) )),
  inference(superposition,[],[f75,f695])).
fof(f695,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X1))))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0)) )),
  inference(superposition,[],[f297,f72])).
fof(f75,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f52])).
fof(f1537,plain,(
  ( ! [X25] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X25)) )),
  inference(subsumption_resolution,[],[f1189,f301])).
fof(f1189,plain,(
  ( ! [X26,X25] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X25))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X26)))))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X25)) )),
  inference(superposition,[],[f77,f695])).
fof(f1522,plain,(
  ( ! [X14] : (s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X14)) ) | $spl32),
  inference(cnf_transformation,[],[f1522_D])).
fof(f1522_D,plain,(
  ( ! [X14] : (s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X14)) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f1536,plain,(
  ( ! [X19] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X19)) )),
  inference(subsumption_resolution,[],[f1231,f367])).
fof(f367,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X1)))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X0)) )),
  inference(superposition,[],[f61,f72])).
fof(f1231,plain,(
  ( ! [X19,X20] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X19))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X20)))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X19)) )),
  inference(superposition,[],[f75,f889])).
fof(f889,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X1))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X0)) )),
  inference(superposition,[],[f363,f72])).
fof(f1535,plain,(
  ( ! [X27] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X27)) )),
  inference(subsumption_resolution,[],[f1235,f367])).
fof(f1235,plain,(
  ( ! [X28,X27] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X27))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X28)))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X27)) )),
  inference(superposition,[],[f77,f889])).
fof(f1285,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0)) )),
  inference(forward_demodulation,[],[f1284,f297])).
fof(f1284,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X1))))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0)) )),
  inference(duplicate_literal_removal,[],[f1259])).
fof(f1259,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X1))))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0)) )),
  inference(superposition,[],[f1054,f72])).
fof(f1054,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X4))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X5))))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X4)) )),
  inference(resolution,[],[f301,f77])).
fof(f1270,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size','const.ast.W64_0')),
  inference(superposition,[],[f1054,f297])).
fof(f1283,plain,(
  ( ! [X4] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X4)) )),
  inference(duplicate_literal_removal,[],[f1273])).
fof(f1273,plain,(
  ( ! [X4] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X4) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X4)) )),
  inference(superposition,[],[f1054,f695])).
fof(f1534,plain,(
  ( ! [X8] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X8)) )),
  inference(subsumption_resolution,[],[f1274,f1054])).
fof(f1274,plain,(
  ( ! [X8,X9] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X8) | s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X8))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X9)))))) )),
  inference(superposition,[],[f1054,f89])).
fof(f1533,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X12)) )),
  inference(subsumption_resolution,[],[f1276,f301])).
fof(f1276,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X12) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X12))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X13))))))) )),
  inference(superposition,[],[f1054,f82])).
fof(f1532,plain,(
  ( ! [X14] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X14)) )),
  inference(subsumption_resolution,[],[f1277,f301])).
fof(f1277,plain,(
  ( ! [X14,X15] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X14) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X14))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X15))))))) )),
  inference(superposition,[],[f1054,f80])).
fof(f80,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f54])).
fof(f1313,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X2)) )),
  inference(forward_demodulation,[],[f1312,f363])).
fof(f1312,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X3))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X2)) )),
  inference(duplicate_literal_removal,[],[f1288])).
fof(f1288,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X3))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X2) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X2)) )),
  inference(superposition,[],[f1082,f72])).
fof(f1082,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X4))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X5))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X4)) )),
  inference(resolution,[],[f367,f77])).
fof(f1299,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size','const.ast.W64_0')),
  inference(superposition,[],[f1082,f363])).
fof(f1311,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X2)) )),
  inference(duplicate_literal_removal,[],[f1300])).
fof(f1300,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X2) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X2)) )),
  inference(superposition,[],[f1082,f889])).
fof(f1531,plain,(
  ( ! [X8] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X8)) )),
  inference(subsumption_resolution,[],[f1302,f1082])).
fof(f1302,plain,(
  ( ! [X8,X9] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X8) | s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X8))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X9)))))) )),
  inference(superposition,[],[f1082,f89])).
fof(f1530,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X12)) )),
  inference(subsumption_resolution,[],[f1304,f367])).
fof(f1304,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X12) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X12))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X13))))))) )),
  inference(superposition,[],[f1082,f82])).
fof(f1529,plain,(
  ( ! [X14] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X14)) )),
  inference(subsumption_resolution,[],[f1305,f367])).
fof(f1305,plain,(
  ( ! [X14,X15] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X14) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X14))),s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),X15))))))) )),
  inference(superposition,[],[f1082,f80])).
fof(f1528,plain,(
  ( ! [X17] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X17)) )),
  inference(subsumption_resolution,[],[f1348,f433])).
fof(f433,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1)))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X0)) )),
  inference(superposition,[],[f57,f72])).
fof(f1348,plain,(
  ( ! [X17,X18] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X17))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X18)))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X17)) )),
  inference(superposition,[],[f75,f944])).
fof(f944,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X0)) )),
  inference(superposition,[],[f429,f72])).
fof(f429,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X0)))))) )),
  inference(resolution,[],[f57,f82])).
fof(f1527,plain,(
  ( ! [X25] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X25)) )),
  inference(subsumption_resolution,[],[f1352,f433])).
fof(f1352,plain,(
  ( ! [X26,X25] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X25))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X26)))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X25)) )),
  inference(superposition,[],[f77,f944])).
fof(f1526,plain,(
  ( ! [X19] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X19)) )),
  inference(subsumption_resolution,[],[f1409,f453])).
fof(f453,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1)))))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0)) )),
  inference(superposition,[],[f62,f72])).
fof(f1409,plain,(
  ( ! [X19,X20] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X19))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X20)))))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X19)) )),
  inference(superposition,[],[f75,f999])).
fof(f999,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X0))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1))))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0)) )),
  inference(superposition,[],[f449,f72])).
fof(f449,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X0)))))) )),
  inference(resolution,[],[f62,f82])).
fof(f1525,plain,(
  ( ! [X27] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X27)) )),
  inference(subsumption_resolution,[],[f1413,f453])).
fof(f1413,plain,(
  ( ! [X28,X27] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X27))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X28)))))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X27)) )),
  inference(superposition,[],[f77,f999])).
fof(f1462,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X2)) )),
  inference(forward_demodulation,[],[f1461,f429])).
fof(f1461,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X3))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X2)) )),
  inference(duplicate_literal_removal,[],[f1437])).
fof(f1437,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X3))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X2) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X2)) )),
  inference(superposition,[],[f1111,f72])).
fof(f1111,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X4))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X5))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X4)) )),
  inference(resolution,[],[f433,f77])).
fof(f1447,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size','const.ast.W64_0')),
  inference(superposition,[],[f1111,f429])).
fof(f1460,plain,(
  ( ! [X4] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X4)) )),
  inference(duplicate_literal_removal,[],[f1450])).
fof(f1450,plain,(
  ( ! [X4] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X4) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X4)) )),
  inference(superposition,[],[f1111,f944])).
fof(f1524,plain,(
  ( ! [X8] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X8)) )),
  inference(subsumption_resolution,[],[f1451,f1111])).
fof(f1451,plain,(
  ( ! [X8,X9] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X8) | s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X8))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X9)))))) )),
  inference(superposition,[],[f1111,f89])).
fof(f1523,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X12)) )),
  inference(subsumption_resolution,[],[f1453,f433])).
fof(f1453,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X12) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X12))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X13))))))) )),
  inference(superposition,[],[f1111,f82])).
fof(f1521,plain,(
  ( ! [X14] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X14)) )),
  inference(subsumption_resolution,[],[f1454,f433])).
fof(f1454,plain,(
  ( ! [X14,X15] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X14) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X14))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X15))))))) )),
  inference(superposition,[],[f1111,f80])).
fof(f1490,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0)) )),
  inference(forward_demodulation,[],[f1489,f449])).
fof(f1489,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1))))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0)) )),
  inference(duplicate_literal_removal,[],[f1464])).
fof(f1464,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X1))))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0)) )),
  inference(superposition,[],[f1140,f72])).
fof(f1140,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X4))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X5))))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X4)) )),
  inference(resolution,[],[f453,f77])).
fof(f1476,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size','const.ast.W64_0')),
  inference(superposition,[],[f1140,f449])).
fof(f1488,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X2)) )),
  inference(duplicate_literal_removal,[],[f1477])).
fof(f1477,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X2) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X2)) )),
  inference(superposition,[],[f1140,f999])).
fof(f1518,plain,(
  ( ! [X8] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X8)) )),
  inference(subsumption_resolution,[],[f1479,f1140])).
fof(f1479,plain,(
  ( ! [X8,X9] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X8) | s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X8))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X9)))))) )),
  inference(superposition,[],[f1140,f89])).
fof(f1517,plain,(
  ( ! [X12] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X12)) )),
  inference(subsumption_resolution,[],[f1481,f453])).
fof(f1481,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X12) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X12))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X13))))))) )),
  inference(superposition,[],[f1140,f82])).
fof(f1513,plain,(
  ( ! [X14] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X14)) )),
  inference(subsumption_resolution,[],[f1482,f453])).
fof(f1482,plain,(
  ( ! [X14,X15] : (s(bool,'T_0') != s(bool,'F_0') | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X14) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',X14))),s('type.ast.lit','const.ast.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X15))))))) )),
  inference(superposition,[],[f1140,f80])).
fof(f1510,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',X4)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X5)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X5),s('type.ast.lit',X4))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X5,'type.ast.lit')))))) ) | $spl22),
  inference(cnf_transformation,[],[f1510_D])).
fof(f1510_D,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',X4)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X5)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X5),s('type.ast.lit',X4))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X5,'type.ast.lit')))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f1511,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X3)))) ) | $spl24),
  inference(cnf_transformation,[],[f1511_D])).
fof(f1511_D,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X3)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f1494,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X3))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',X4)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X5),s('type.ast.lit',X4))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X5,'type.ast.lit'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X5))))) ) | $spl4),
  inference(resolution,[],[f1315,f73])).
fof(f1315,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X0,'type.ast.lit'))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X0)))) ) | $spl4),
  inference(resolution,[],[f193,f81])).
fof(f193,plain,(
  ( ! [X4] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X4)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X4,'type.ast.lit')))))) ) | $spl4),
  inference(resolution,[],[f176,f74])).
fof(f74,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK18(X2,X1,X0))))) | ~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f176,plain,(
  ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | $spl4),
  inference(backward_demodulation,[],[f108,f63])).
fof(f208,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',X0))))) ) | $spl18),
  inference(cnf_transformation,[],[f208_D])).
fof(f208_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',X0))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f1509,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X2)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X2),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X0,'type.ast.lit')))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X2,'type.ast.lit')))))) ) | $spl20),
  inference(cnf_transformation,[],[f1509_D])).
fof(f1509_D,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X2)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X2),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X0,'type.ast.lit')))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X2,'type.ast.lit')))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1493,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X0))) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',X1)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X2),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X0,'type.ast.lit')))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X2,'type.ast.lit'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X2))))) ) | $spl4),
  inference(resolution,[],[f1315,f73])).
fof(f207,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1),s('type.ast.lit',sK2))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X1,'type.ast.lit')))))) ) | $spl16),
  inference(cnf_transformation,[],[f207_D])).
fof(f207_D,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1),s('type.ast.lit',sK2))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X1,'type.ast.lit')))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f352,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',X0)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1),s('type.ast.lit',sK2))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X1,'type.ast.lit'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1))))) ) | $spl4),
  inference(subsumption_resolution,[],[f322,f83])).
fof(f322,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',X0)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1),s('type.ast.lit',sK2))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X1,'type.ast.lit'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1))))) ) | $spl4),
  inference(superposition,[],[f73,f196])).
fof(f196,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2))) | $spl4),
  inference(resolution,[],[f176,f78])).
fof(f191,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',X0)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1),s('type.ast.lit',sK2))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0')),X1,'type.ast.lit'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1))))) ) | $spl4),
  inference(resolution,[],[f176,f73])).
fof(f158,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',X0)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1),s('type.ast.lit',sK2))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0')),X1,'type.ast.lit'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1))))) ) | $spl7),
  inference(resolution,[],[f110,f73])).
fof(f137,plain,(
  $false | $spl2),
  inference(resolution,[],[f106,f63])).
fof(f98,plain,(
  ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W64_0'))),s('type.ast.lit',sK2)))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',sK1)),
  inference(superposition,[],[f63,f72])).
fof(f97,plain,(
  ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size','const.ast.W8_0'))),s('type.ast.lit',sK2)))) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',sK1)),
  inference(superposition,[],[f63,f72])).
fof(f90,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1))),s('type.ast.lit',X0)))) | ~p(s(bool,happ(s(fun('type.ast.lit',bool),happ(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1),s('type.ast.lit',sK2))),s('type.ast.lit',sK18(happ(s(fun('type.ast.word_size',fun('type.ast.lit',bool)),sK0),s('type.ast.word_size',sK1)),X1,'type.ast.lit'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.ast.lit',fun('type.ast.lit',bool)),X1))))) )),
  inference(resolution,[],[f63,f73])).
% SZS output end Proof for thm.evalProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 160
% Passive clauses: 1313
% Generated clauses: 5587
% Final active clauses: 64
% Final passive clauses: 807
% Input formulas: 19
% Initial clauses: 34
% 
% Selected by SInE selection: 16
% SInE iterations: 1
% 
% Duplicate literals: 54
% Trivial inequalities: 138
% Fw subsumption resolutions: 338
% Fw demodulations: 1010
% Bw demodulations: 46
% 
% Simple tautologies: 8
% Equational tautologies: 2
% Forward subsumptions: 2764
% 
% Binary resolution: 217
% Forward superposition: 1434
% Backward superposition: 1903
% Self superposition: 58
% Equality resolution: 7
% 
% Split clauses: 106
% Split components: 354
% SAT solver clauses: 139
% SAT solver unit clauses: 12
% SAT solver binary clauses: 53
% 
% Sat splits: 106
% Sat splitting refutations: 32
% 
% Memory used [KB]: 6780
% Time elapsed: 0.457 s
% ------------------------------
% ------------------------------
% Success in time 12.223 s
