Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.modSem
% (134151)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 117
% Passive clauses: 3412
% Generated clauses: 13367
% Final active clauses: 112
% Final passive clauses: 3145
% Input formulas: 37
% Initial clauses: 43
% 
% Duplicate literals: 624
% Trivial inequalities: 98
% Fw subsumption resolutions: 1797
% Fw demodulations: 217
% Bw demodulations: 2
% 
% Simple tautologies: 224
% Equational tautologies: 76
% Forward subsumptions: 5870
% 
% Binary resolution: 495
% Factoring: 4
% Forward superposition: 5184
% Backward superposition: 4266
% Self superposition: 287
% Equality factoring: 190
% Equality resolution: 12
% 
% Split clauses: 429
% Split components: 881
% SAT solver clauses: 1049
% SAT solver unit clauses: 24
% SAT solver binary clauses: 212
% 
% Sat splits: 429
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1049
% TWLsolver calls for satisfiability: 178
% 
% Memory used [KB]: 10106
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.modSem
% (134184)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 113
% Passive clauses: 746
% Generated clauses: 14523
% Final active clauses: 109
% Final passive clauses: 621
% Input formulas: 37
% Initial clauses: 43
% 
% Duplicate literals: 698
% Trivial inequalities: 301
% Fw subsumption resolutions: 1376
% Fw demodulations: 1351
% Bw demodulations: 10
% Condensations: 1289
% 
% Simple tautologies: 251
% Equational tautologies: 40
% Forward subsumptions: 6965
% 
% Binary resolution: 49
% Factoring: 2
% Forward superposition: 4474
% Backward superposition: 3814
% Self superposition: 200
% Equality factoring: 93
% Equality resolution: 17
% 
% Split clauses: 73
% Split components: 162
% SAT solver clauses: 1501
% SAT solver unit clauses: 68
% SAT solver binary clauses: 63
% 
% Sat splits: 73
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1501
% TWLsolver calls for satisfiability: 171
% 
% Memory used [KB]: 16247
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.modSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.modSem
% SZS output start Proof for thm.modSem
fof(f113133,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f113094])).
fof(f113094,plain,(
  s(fun(sK0,'type.modSem.state'(sK1)),'const.combin.o_2'(s(fun('type.modSem.state'(sK1),'type.modSem.state'(sK1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),sK4),s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),sK3))))),s(fun(sK0,'type.modSem.state'(sK1)),sK2))) != s(fun(sK0,'type.modSem.state'(sK1)),'const.combin.o_2'(s(fun('type.modSem.state'(sK1),'type.modSem.state'(sK1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),sK4),s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),sK3))))),s(fun(sK0,'type.modSem.state'(sK1)),sK2)))),
  inference(superposition,[],[f115,f3885])).
fof(f3885,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X3,'type.modSem.state'(X0)),'const.combin.o_2'(s(fun('type.modSem.state'(X0),'type.modSem.state'(X0)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X1),s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X2))))),s(fun(X3,'type.modSem.state'(X0)),X4))) = s(fun(X3,'type.modSem.state'(X0)),'const.combin.o_2'(s(fun('type.modSem.state'(X0),'type.modSem.state'(X0)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X1))),s(fun(X3,'type.modSem.state'(X0)),'const.combin.o_2'(s(fun('type.modSem.state'(X0),'type.modSem.state'(X0)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X2))),s(fun(X3,'type.modSem.state'(X0)),X4)))))) )),
  inference(superposition,[],[f157,f126])).
fof(f126,plain,(
  ( ! [X2,X0,X1] : (s(fun('type.modSem.state'(X0),'type.modSem.state'(X0)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X2),s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X1))))) = s(fun('type.modSem.state'(X0),'type.modSem.state'(X0)),'const.combin.o_2'(s(fun('type.modSem.state'(X0),'type.modSem.state'(X0)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X2))),s(fun('type.modSem.state'(X0),'type.modSem.state'(X0)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X1)))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1,X2] : s(fun('type.modSem.state'(X0),'type.modSem.state'(X0)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X2),s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X1))))) = s(fun('type.modSem.state'(X0),'type.modSem.state'(X0)),'const.combin.o_2'(s(fun('type.modSem.state'(X0),'type.modSem.state'(X0)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X2))),s(fun('type.modSem.state'(X0),'type.modSem.state'(X0)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X1)))))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0] : ! [X1,X2] : s(fun('type.modSem.state'(X0),'type.modSem.state'(X0)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X2),s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X1))))) = s(fun('type.modSem.state'(X0),'type.modSem.state'(X0)),'const.combin.o_2'(s(fun('type.modSem.state'(X0),'type.modSem.state'(X0)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X2))),s(fun('type.modSem.state'(X0),'type.modSem.state'(X0)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X1)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : ! [X9,X10] : s(fun('type.modSem.state'(X7),'type.modSem.state'(X7)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X10),s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X9))))) = s(fun('type.modSem.state'(X7),'type.modSem.state'(X7)),'const.combin.o_2'(s(fun('type.modSem.state'(X7),'type.modSem.state'(X7)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X10))),s(fun('type.modSem.state'(X7),'type.modSem.state'(X7)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X9)))))),
  file('thm.modSem.state_fupdfupds_comp|split|11','thm.modSem.state_fupdfupds_comp|split|10')).
fof(f157,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))) )),
  inference(cnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(flattening,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X14,X6,X21,X15] : ! [X10,X9,X8] : s(fun(X21,X14),'const.combin.o_2'(s(fun(X6,X14),X10),s(fun(X21,X6),'const.combin.o_2'(s(fun(X15,X6),X9),s(fun(X21,X15),X8))))) = s(fun(X21,X14),'const.combin.o_2'(s(fun(X15,X14),'const.combin.o_2'(s(fun(X6,X14),X10),s(fun(X15,X6),X9))),s(fun(X21,X15),X8)))),
  file('thm.modSem.state_fupdfupds_comp|split|11','thm.combin.o_ASSOC')).
fof(f115,plain,(
  s(fun(sK0,'type.modSem.state'(sK1)),'const.combin.o_2'(s(fun('type.modSem.state'(sK1),'type.modSem.state'(sK1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),sK4),s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),sK3))))),s(fun(sK0,'type.modSem.state'(sK1)),sK2))) != s(fun(sK0,'type.modSem.state'(sK1)),'const.combin.o_2'(s(fun('type.modSem.state'(sK1),'type.modSem.state'(sK1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),sK4))),s(fun(sK0,'type.modSem.state'(sK1)),'const.combin.o_2'(s(fun('type.modSem.state'(sK1),'type.modSem.state'(sK1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),sK3))),s(fun(sK0,'type.modSem.state'(sK1)),sK2)))))),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  s(fun(sK0,'type.modSem.state'(sK1)),'const.combin.o_2'(s(fun('type.modSem.state'(sK1),'type.modSem.state'(sK1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),sK4),s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),sK3))))),s(fun(sK0,'type.modSem.state'(sK1)),sK2))) != s(fun(sK0,'type.modSem.state'(sK1)),'const.combin.o_2'(s(fun('type.modSem.state'(sK1),'type.modSem.state'(sK1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),sK4))),s(fun(sK0,'type.modSem.state'(sK1)),'const.combin.o_2'(s(fun('type.modSem.state'(sK1),'type.modSem.state'(sK1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),sK3))),s(fun(sK0,'type.modSem.state'(sK1)),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f105])).
fof(f105,plain,(
  ? [X0,X1,X2,X3,X4] : s(fun(X0,'type.modSem.state'(X1)),'const.combin.o_2'(s(fun('type.modSem.state'(X1),'type.modSem.state'(X1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X4),s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X3))))),s(fun(X0,'type.modSem.state'(X1)),X2))) != s(fun(X0,'type.modSem.state'(X1)),'const.combin.o_2'(s(fun('type.modSem.state'(X1),'type.modSem.state'(X1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X4))),s(fun(X0,'type.modSem.state'(X1)),'const.combin.o_2'(s(fun('type.modSem.state'(X1),'type.modSem.state'(X1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X3))),s(fun(X0,'type.modSem.state'(X1)),X2)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1,X2,X3,X4] : s(fun(X0,'type.modSem.state'(X1)),'const.combin.o_2'(s(fun('type.modSem.state'(X1),'type.modSem.state'(X1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X4),s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X3))))),s(fun(X0,'type.modSem.state'(X1)),X2))) = s(fun(X0,'type.modSem.state'(X1)),'const.combin.o_2'(s(fun('type.modSem.state'(X1),'type.modSem.state'(X1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X4))),s(fun(X0,'type.modSem.state'(X1)),'const.combin.o_2'(s(fun('type.modSem.state'(X1),'type.modSem.state'(X1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X3))),s(fun(X0,'type.modSem.state'(X1)),X2)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : s(fun(X0,'type.modSem.state'(X1)),'const.combin.o_2'(s(fun('type.modSem.state'(X1),'type.modSem.state'(X1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X4),s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X3))))),s(fun(X0,'type.modSem.state'(X1)),X2))) = s(fun(X0,'type.modSem.state'(X1)),'const.combin.o_2'(s(fun('type.modSem.state'(X1),'type.modSem.state'(X1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X4))),s(fun(X0,'type.modSem.state'(X1)),'const.combin.o_2'(s(fun('type.modSem.state'(X1),'type.modSem.state'(X1)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X3))),s(fun(X0,'type.modSem.state'(X1)),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : s(fun(X6,'type.modSem.state'(X7)),'const.combin.o_2'(s(fun('type.modSem.state'(X7),'type.modSem.state'(X7)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X10),s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X9))))),s(fun(X6,'type.modSem.state'(X7)),X8))) = s(fun(X6,'type.modSem.state'(X7)),'const.combin.o_2'(s(fun('type.modSem.state'(X7),'type.modSem.state'(X7)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X10))),s(fun(X6,'type.modSem.state'(X7)),'const.combin.o_2'(s(fun('type.modSem.state'(X7),'type.modSem.state'(X7)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X9))),s(fun(X6,'type.modSem.state'(X7)),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : s(fun(X6,'type.modSem.state'(X7)),'const.combin.o_2'(s(fun('type.modSem.state'(X7),'type.modSem.state'(X7)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X10),s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X9))))),s(fun(X6,'type.modSem.state'(X7)),X8))) = s(fun(X6,'type.modSem.state'(X7)),'const.combin.o_2'(s(fun('type.modSem.state'(X7),'type.modSem.state'(X7)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X10))),s(fun(X6,'type.modSem.state'(X7)),'const.combin.o_2'(s(fun('type.modSem.state'(X7),'type.modSem.state'(X7)),'const.modSem.state_globals_fupd_1'(s(fun('type.list.list'('type.option.option'('type.modSem.v')),'type.list.list'('type.option.option'('type.modSem.v'))),X9))),s(fun(X6,'type.modSem.state'(X7)),X8)))))),
  file('thm.modSem.state_fupdfupds_comp|split|11','thm.modSem.state_fupdfupds_comp|split|11')).
% SZS output end Proof for thm.modSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 560
% Passive clauses: 9300
% Generated clauses: 120576
% Final active clauses: 270
% Final passive clauses: 2001
% Input formulas: 37
% Initial clauses: 43
% Discarded non-redundant clauses: 455
% 
% Duplicate literals: 2342
% Trivial inequalities: 1334
% Fw subsumption resolutions: 6667
% Fw demodulations: 22161
% Bw demodulations: 5045
% Condensations: 2849
% Global subsumptions: 68
% 
% Simple tautologies: 828
% Equational tautologies: 513
% Forward subsumptions: 74207
% Fw demodulations to eq. taut.: 39
% Bw demodulations to eq. taut.: 831
% 
% Unit resulting resolution: 3903
% Factoring: 4
% Forward superposition: 37294
% Backward superposition: 29566
% Self superposition: 795
% Equality factoring: 211
% Equality resolution: 47
% 
% Split clauses: 159
% Split components: 323
% SAT solver clauses: 9783
% SAT solver unit clauses: 1337
% SAT solver binary clauses: 3129
% 
% Sat splits: 159
% Sat splitting refutations: 95
% 
% Memory used [KB]: 140978
% Time elapsed: 6.929 s
% ------------------------------
% ------------------------------
% Success in time 8.271 s
