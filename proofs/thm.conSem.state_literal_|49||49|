Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.conSem
% (48480)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 118
% Passive clauses: 973
% Generated clauses: 16537
% Final active clauses: 113
% Final passive clauses: 677
% Input formulas: 24
% Initial clauses: 32
% 
% Duplicate literals: 712
% Trivial inequalities: 187
% Fw subsumption resolutions: 1802
% Fw demodulations: 1616
% Bw demodulations: 2
% 
% Simple tautologies: 187
% Equational tautologies: 26
% Forward subsumptions: 10536
% Fw demodulations to eq. taut.: 19
% 
% Binary resolution: 6
% Forward superposition: 6367
% Backward superposition: 5638
% Self superposition: 208
% Equality factoring: 53
% Equality resolution: 17
% 
% Split clauses: 267
% Split components: 545
% SAT solver clauses: 655
% SAT solver unit clauses: 39
% SAT solver binary clauses: 143
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 267
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 654
% TWLsolver calls for satisfiability: 127
% 
% Memory used [KB]: 13304
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.conSem
% (48503)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit

% Active clauses: 74
% Passive clauses: 244
% Generated clauses: 9365
% Final active clauses: 69
% Final passive clauses: 166
% Input formulas: 24
% Initial clauses: 32
% 
% Duplicate literals: 548
% Trivial inequalities: 125
% Fw subsumption resolutions: 602
% Fw demodulations: 583
% Bw demodulations: 2
% Condensations: 1539
% 
% Simple tautologies: 121
% Equational tautologies: 25
% Forward subsumptions: 5168
% 
% Binary resolution: 4
% Forward superposition: 3114
% Backward superposition: 2380
% Self superposition: 170
% Equality factoring: 62
% Equality resolution: 17
% 
% Split clauses: 29
% Split components: 61
% SAT solver clauses: 447
% SAT solver unit clauses: 48
% SAT solver binary clauses: 44
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 4
% 
% Sat splits: 29
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 445
% TWLsolver calls for satisfiability: 197
% 
% Memory used [KB]: 8827
% Time elapsed: 0.740 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.conSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.conSem
% SZS output start Proof for thm.conSem
fof(f13107,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f81,f118,f116,f114,f112,f110,f80,f117,f79,f115,f78,f113,f77,f111,f109,f124,f147,f150,f148,f596,f597,f744,f598,f745,f743,f2241,f2243,f9999,f10018,f10019,f10021,f10023,f2242,f9893,f10024,f10025,f10000,f10026,f10443,f10467,f10499,f11831,f11861,f11903,f12521,f12557,f12609,f12634,f12635,f13003,f13038,f13062,f13102,f13103,f13104,f13105,f13106])).
fof(f13106,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f112,f12969])).
fof(f12969,plain,(
  s('type.num.num',sK2) = s('type.num.num',sK6) | $spl0),
  inference(forward_demodulation,[],[f12968,f119])).
fof(f119,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(forward_demodulation,[],[f103,f102])).
fof(f102,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X16,X17] : ! [X18,X19] : s(X17,X18) = s(X17,'const.combin.K_2'(s(X17,X18),s(X16,X19)))),
  file('thm.conSem.state_literal_|49||49|','thm.combin.K_THM')).
fof(f103,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(flattening,[],[f57])).
fof(f57,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X17,X16] : ! [X24,X25] : s(X17,'const.combin.K_2'(s(X17,X24),s(X16,X25))) = s(X17,happ(s(fun(X16,X17),'const.combin.K_1'(s(X17,X24))),s(X16,X25)))),
  file('thm.conSem.state_literal_|49||49|','ARITY_1_2_const.combin.K')).
fof(f12968,plain,(
  s('type.num.num',sK6) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f12967,f119])).
fof(f12967,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f12966,f94])).
fof(f94,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : ! [X20,X21] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X21),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X6),X20))))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X6),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X21),s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_|49||48|8_prove_ltb')).
fof(f12966,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f12892,f94])).
fof(f12892,plain,(
  s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f109,f97])).
fof(f97,plain,(
  ( ! [X2,X0,X1] : (s('type.conSem.state'(X0),X1) != s('type.conSem.state'(X0),X2) | s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1,X2] : ((s('type.conSem.state'(X0),X1) != s('type.conSem.state'(X0),X2) | (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2))))) & (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) != s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X2))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2))) | s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) != s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2))) | s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2))) | s('type.conSem.state'(X0),X1) = s('type.conSem.state'(X0),X2)))),
  inference(flattening,[],[f74])).
fof(f74,plain,(
  ! [X0,X1,X2] : ((s('type.conSem.state'(X0),X1) != s('type.conSem.state'(X0),X2) | (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2))))) & ((s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) != s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X2))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2))) | s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) != s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2))) | s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2)))) | s('type.conSem.state'(X0),X1) = s('type.conSem.state'(X0),X2)))),
  inference(nnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1,X2] : (s('type.conSem.state'(X0),X1) = s('type.conSem.state'(X0),X2) <=> (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2)))))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0] : ! [X1,X2] : (s('type.conSem.state'(X0),X1) = s('type.conSem.state'(X0),X2) <=> (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2))) & s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2))) & s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X22,X23] : (s('type.conSem.state'(X6),X22) = s('type.conSem.state'(X6),X23) <=> (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X6),X22))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X6),X23))) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X6),X22))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X6),X23))) & s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X6),X22))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X6),X23))) & s('type.ffi.ffi_state'(X6),'const.conSem.state_ffi_1'(s('type.conSem.state'(X6),X22))) = s('type.ffi.ffi_state'(X6),'const.conSem.state_ffi_1'(s('type.conSem.state'(X6),X23)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.state_component_equality')).
fof(f13105,plain,(
  $false | ($spl0 | $spl6)),
  inference(global_subsumption,[],[f115,f81,f80,f79,f78,f77,f82,f83,f84,f85,f86,f87,f88,f89,f90,f91,f92,f93,f94,f95,f96,f101,f100,f99,f98,f97,f102,f119,f104,f105,f106,f107,f108,f136,f138,f139,f147,f176,f186,f187,f219,f220,f232,f242,f243,f286,f289,f500,f501,f509,f596,f597,f598,f615,f632,f656,f1291,f901,f902,f903,f921,f941,f952,f953,f1061,f1062,f1063,f1137,f1125,f1417,f1346,f1347,f1348,f1553,f1554,f1947,f1700,f1944,f1722,f1972,f2223,f2013,f2160,f2413,f2426,f2427,f2639,f2640,f3411,f3407,f3294,f3295,f3321,f3322,f3586,f3500,f3501,f3560,f3629,f3660,f3661,f3806,f4090,f4124,f4117,f4591,f4253,f4254,f4976,f4977,f5461,f5462,f5826,f5900,f5901,f6445,f6446,f6447,f6450,f6451,f6452,f6471,f6472,f6457,f6458,f6459,f6462,f6463,f6464,f6465,f6474,f6475,f6526,f6527,f6724,f6725,f6726,f6800,f6818,f6819,f6820,f6998,f7001,f7129,f7132,f7137,f7139,f7140,f7527,f7179,f7180,f7181,f7184,f7185,f7187,f7195,f7196,f7199,f7203,f7323,f7326,f7424,f7412,f7994,f7995,f7996,f7997,f7998,f8235,f8233,f8110,f8111,f8112,f8311,f8350,f8351,f8352,f8353,f8354,f8467,f8468,f8469,f9246,f9244,f9239,f9164,f9312,f9157,f8962,f9400,f9401,f9402,f9403,f9404,f9965,f9963,f9898,f10019,f10021,f10023,f10025,f10576,f10577,f10785,f10786,f10787,f12377,f12373,f12372,f12371,f12191,f12192,f12238,f12239,f109,f12819,f12817,f12688,f12689,f12969,f12970,f12978,f12979,f12991,f12992,f13061,f13037,f13002])).
fof(f13002,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),sK4) = s('type.list.list'('type.option.option'('type.conSem.v')),sK8) | $spl0),
  inference(forward_demodulation,[],[f13001,f9404])).
fof(f13001,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),sK8) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f13000,f9404])).
fof(f13000,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f12999,f96])).
fof(f12999,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f12998,f96])).
fof(f12998,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f12997,f9400])).
fof(f12997,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f12996,f9400])).
fof(f12996,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f12995,f93])).
fof(f12995,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f12994,f93])).
fof(f12994,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f12993,f86])).
fof(f12993,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f12889,f86])).
fof(f12889,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f109,f99])).
fof(f13037,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),sK4) = s('type.list.list'('type.option.option'('type.conSem.v')),sK8) | $spl0),
  inference(forward_demodulation,[],[f13036,f9404])).
fof(f13036,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),sK8) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f13035,f9404])).
fof(f13035,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f13034,f96])).
fof(f13034,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f13033,f96])).
fof(f13033,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f13032,f9400])).
fof(f13032,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f13031,f9400])).
fof(f13031,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f13030,f93])).
fof(f13030,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f13029,f93])).
fof(f13029,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f13028,f86])).
fof(f13028,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f12885,f86])).
fof(f12885,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f109,f99])).
fof(f13061,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),sK4) = s('type.list.list'('type.option.option'('type.conSem.v')),sK8) | $spl0),
  inference(forward_demodulation,[],[f13060,f9404])).
fof(f13060,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),sK8) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f13059,f9404])).
fof(f13059,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f13058,f96])).
fof(f13058,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f13057,f96])).
fof(f13057,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f13056,f9400])).
fof(f13056,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f13055,f9400])).
fof(f13055,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f13054,f93])).
fof(f13054,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f13053,f93])).
fof(f13053,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f12895,f86])).
fof(f12895,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(superposition,[],[f86,f109])).
fof(f12992,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(backward_demodulation,[],[f12991,f12979])).
fof(f12991,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7) | $spl0),
  inference(forward_demodulation,[],[f12990,f8354])).
fof(f12990,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f12989,f8354])).
fof(f12989,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f12988,f95])).
fof(f12988,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f12987,f95])).
fof(f12987,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f12986,f8350])).
fof(f12986,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f12985,f8350])).
fof(f12985,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f12984,f95])).
fof(f12984,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f12983,f95])).
fof(f12983,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f12982,f8351])).
fof(f12982,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f12981,f8351])).
fof(f12981,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f12980,f89])).
fof(f12980,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f12890,f89])).
fof(f12890,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f109,f98])).
fof(f12979,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(backward_demodulation,[],[f12978,f12970])).
fof(f12978,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) = s('type.ffi.ffi_state'(sK1),sK9) | $spl0),
  inference(forward_demodulation,[],[f12977,f7998])).
fof(f12977,plain,(
  s('type.ffi.ffi_state'(sK1),sK9) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f12976,f7998])).
fof(f12976,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f12975,f91])).
fof(f12975,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f12974,f91])).
fof(f12974,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f12973,f90])).
fof(f12973,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f12972,f90])).
fof(f12972,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f12971,f85])).
fof(f12971,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(forward_demodulation,[],[f12891,f85])).
fof(f12891,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f109,f100])).
fof(f12970,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(backward_demodulation,[],[f12969,f109])).
fof(f12689,plain,(
  ( ! [X313,X315,X310,X312,X314,X311] : (s(bool,'F_0') != s(bool,happ(s(fun(X313,bool),'const.combin.K_1'(s(bool,X311))),s(X313,X314))) | s(bool,X315) = s(bool,happ(s(fun(X310,bool),'const.combin.K_1'(s(bool,X311))),s(X310,X312))) | s(bool,'T_0') = s(bool,X315)) )),
  inference(superposition,[],[f12377,f119])).
fof(f12688,plain,(
  ( ! [X308,X304,X306,X309,X305,X307] : (s(bool,'F_0') != s(bool,happ(s(fun(X307,bool),'const.combin.K_1'(s(bool,X304))),s(X307,X308))) | s(bool,X309) = s(bool,'const.combin.K_2'(s(bool,X304),s(X305,X306))) | s(bool,'T_0') = s(bool,X309)) )),
  inference(superposition,[],[f12377,f102])).
fof(f12817,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X4))),s(X3,X5))) | s(bool,X0) = s(bool,X4)) )),
  inference(condensation,[],[f12816])).
fof(f12816,plain,(
  ( ! [X127,X125,X123,X128,X126,X124,X129] : (s(bool,'F_0') != s(bool,happ(s(fun(X124,bool),'const.combin.K_1'(s(bool,X123))),s(X124,X125))) | s(bool,'T_0') = s(bool,X126) | s(bool,X123) = s(bool,X127) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X127),s(X128,X129)))) )),
  inference(duplicate_literal_removal,[],[f12662])).
fof(f12662,plain,(
  ( ! [X127,X125,X123,X128,X126,X124,X129] : (s(bool,'F_0') != s(bool,happ(s(fun(X124,bool),'const.combin.K_1'(s(bool,X123))),s(X124,X125))) | s(bool,'T_0') = s(bool,X126) | s(bool,'T_0') = s(bool,X126) | s(bool,X123) = s(bool,X127) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X127),s(X128,X129)))) )),
  inference(superposition,[],[f12377,f219])).
fof(f12819,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,X1))),s(X0,X2))) | s(bool,'F_0') != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X4))),s(X3,X5))) | s(bool,X1) = s(bool,X4)) )),
  inference(condensation,[],[f12818])).
fof(f12818,plain,(
  ( ! [X121,X118,X116,X122,X120,X119,X117] : (s(bool,'F_0') != s(bool,happ(s(fun(X117,bool),'const.combin.K_1'(s(bool,X116))),s(X117,X118))) | s(bool,'T_0') = s(bool,X119) | s(bool,X116) = s(bool,X120) | s(bool,'T_0') = s(bool,happ(s(fun(X121,bool),'const.combin.K_1'(s(bool,X120))),s(X121,X122)))) )),
  inference(duplicate_literal_removal,[],[f12661])).
fof(f12661,plain,(
  ( ! [X121,X118,X116,X122,X120,X119,X117] : (s(bool,'F_0') != s(bool,happ(s(fun(X117,bool),'const.combin.K_1'(s(bool,X116))),s(X117,X118))) | s(bool,'T_0') = s(bool,X119) | s(bool,'T_0') = s(bool,X119) | s(bool,X116) = s(bool,X120) | s(bool,'T_0') = s(bool,happ(s(fun(X121,bool),'const.combin.K_1'(s(bool,X120))),s(X121,X122)))) )),
  inference(superposition,[],[f12377,f220])).
fof(f12239,plain,(
  ( ! [X313,X315,X310,X312,X314,X311] : (s(bool,X313) != s(bool,happ(s(fun(X314,bool),'const.combin.K_1'(s(bool,X311))),s(X314,X315))) | s(bool,X313) = s(bool,happ(s(fun(X310,bool),'const.combin.K_1'(s(bool,X311))),s(X310,X312))) | s(bool,'T_0') = s(bool,X313)) )),
  inference(superposition,[],[f7412,f119])).
fof(f12238,plain,(
  ( ! [X308,X304,X306,X309,X305,X307] : (s(bool,X307) != s(bool,happ(s(fun(X308,bool),'const.combin.K_1'(s(bool,X304))),s(X308,X309))) | s(bool,X307) = s(bool,'const.combin.K_2'(s(bool,X304),s(X305,X306))) | s(bool,'T_0') = s(bool,X307)) )),
  inference(superposition,[],[f7412,f102])).
fof(f12192,plain,(
  ( ! [X302,X304,X306,X303,X305,X307] : (s(bool,X303) != s(bool,happ(s(fun(X305,bool),'const.combin.K_1'(s(bool,X306))),s(X305,X307))) | s(bool,X306) = s(bool,happ(s(fun(X302,bool),'const.combin.K_1'(s(bool,X303))),s(X302,X304))) | s(bool,'T_0') = s(bool,happ(s(fun(X302,bool),'const.combin.K_1'(s(bool,X303))),s(X302,X304)))) )),
  inference(superposition,[],[f7412,f119])).
fof(f12191,plain,(
  ( ! [X300,X296,X298,X301,X297,X299] : (s(bool,X296) != s(bool,happ(s(fun(X299,bool),'const.combin.K_1'(s(bool,X300))),s(X299,X301))) | s(bool,X300) = s(bool,'const.combin.K_2'(s(bool,X296),s(X297,X298))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X296),s(X297,X298)))) )),
  inference(superposition,[],[f7412,f102])).
fof(f12371,plain,(
  ( ! [X78,X76,X74,X79,X77,X75,X73] : (s(bool,happ(s(fun(X74,bool),'const.combin.K_1'(s(bool,X75))),s(X74,X76))) != s(bool,happ(s(fun(X77,bool),'const.combin.K_1'(s(bool,X78))),s(X77,X79))) | s(bool,X73) = s(bool,X78) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,X75)) )),
  inference(duplicate_literal_removal,[],[f12163])).
fof(f12163,plain,(
  ( ! [X78,X76,X74,X79,X77,X75,X73] : (s(bool,happ(s(fun(X74,bool),'const.combin.K_1'(s(bool,X75))),s(X74,X76))) != s(bool,happ(s(fun(X77,bool),'const.combin.K_1'(s(bool,X78))),s(X77,X79))) | s(bool,X73) = s(bool,X78) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,X75) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f7412,f243])).
fof(f12372,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (s(bool,'const.combin.K_2'(s(bool,X67),s(X68,X69))) != s(bool,happ(s(fun(X70,bool),'const.combin.K_1'(s(bool,X71))),s(X70,X72))) | s(bool,X66) = s(bool,X71) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,X67)) )),
  inference(duplicate_literal_removal,[],[f12162])).
fof(f12162,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (s(bool,'const.combin.K_2'(s(bool,X67),s(X68,X69))) != s(bool,happ(s(fun(X70,bool),'const.combin.K_1'(s(bool,X71))),s(X70,X72))) | s(bool,X66) = s(bool,X71) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,X67) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f7412,f242])).
fof(f12373,plain,(
  ( ! [X57,X54,X52,X58,X56,X55,X53] : (s(bool,X53) != s(bool,happ(s(fun(X54,bool),'const.combin.K_1'(s(bool,X55))),s(X54,X56))) | s(bool,X52) = s(bool,X55) | s(bool,'T_0') = s(bool,X52) | s(bool,'T_0') = s(bool,happ(s(fun(X57,bool),'const.combin.K_1'(s(bool,X53))),s(X57,X58)))) )),
  inference(duplicate_literal_removal,[],[f12160])).
fof(f12160,plain,(
  ( ! [X57,X54,X52,X58,X56,X55,X53] : (s(bool,X53) != s(bool,happ(s(fun(X54,bool),'const.combin.K_1'(s(bool,X55))),s(X54,X56))) | s(bool,X52) = s(bool,X55) | s(bool,'T_0') = s(bool,X52) | s(bool,'T_0') = s(bool,X52) | s(bool,'T_0') = s(bool,happ(s(fun(X57,bool),'const.combin.K_1'(s(bool,X53))),s(X57,X58)))) )),
  inference(superposition,[],[f7412,f220])).
fof(f12377,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,X2))),s(X1,X3))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f12151])).
fof(f12151,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,X2))),s(X1,X3))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f7412,f84])).
fof(f10787,plain,(
  ( ! [X146,X144,X147,X145,X148] : (s(bool,X144) = s(bool,'const.combin.K_2'(s(bool,X145),s(bool,X144))) | s(bool,X145) = s(bool,happ(s(fun(X146,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X146,X147))) | s(bool,X144) = s(bool,X148) | s(bool,'T_0') = s(bool,X148)) )),
  inference(superposition,[],[f9965,f136])).
fof(f10786,plain,(
  ( ! [X142,X140,X138,X143,X141,X139,X137] : (s(bool,X137) = s(bool,'const.combin.K_2'(s(bool,X138),s(bool,X137))) | s(bool,X138) = s(bool,happ(s(fun(X139,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X139,X140))) | s(bool,X137) = s(bool,X141) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X141),s(X142,X143)))) )),
  inference(superposition,[],[f9965,f219])).
fof(f10785,plain,(
  ( ! [X134,X132,X130,X136,X135,X133,X131] : (s(bool,X130) = s(bool,'const.combin.K_2'(s(bool,X131),s(bool,X130))) | s(bool,X131) = s(bool,happ(s(fun(X132,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X132,X133))) | s(bool,X130) = s(bool,X134) | s(bool,'T_0') = s(bool,happ(s(fun(X135,bool),'const.combin.K_1'(s(bool,X134))),s(X135,X136)))) )),
  inference(superposition,[],[f9965,f220])).
fof(f10577,plain,(
  ( ! [X92,X90,X93,X91,X89] : (s(bool,X89) != s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X90))),s(bool,X89))) | s(bool,'T_0') = s(bool,X90) | s(bool,X89) = s(bool,X91) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X91),s(X92,X93)))) )),
  inference(superposition,[],[f9312,f219])).
fof(f10576,plain,(
  ( ! [X88,X87,X85,X86,X84] : (s(bool,X84) != s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X85))),s(bool,X84))) | s(bool,'T_0') = s(bool,X85) | s(bool,X84) = s(bool,X86) | s(bool,'T_0') = s(bool,happ(s(fun(X87,bool),'const.combin.K_1'(s(bool,X86))),s(X87,X88)))) )),
  inference(superposition,[],[f9312,f220])).
fof(f9898,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) != s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X2,X3))) | s(bool,X0) = s(bool,X1)) )),
  inference(condensation,[],[f9897])).
fof(f9897,plain,(
  ( ! [X261,X257,X259,X260,X258] : (s(bool,X260) != s(bool,happ(s(fun(X258,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X258,X259))) | s(bool,X260) = s(bool,X261) | s(bool,'T_0') = s(bool,X261) | s(bool,'T_0') = s(bool,X257)) )),
  inference(duplicate_literal_removal,[],[f9670])).
fof(f9670,plain,(
  ( ! [X261,X257,X259,X260,X258] : (s(bool,X260) != s(bool,happ(s(fun(X258,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X258,X259))) | s(bool,X260) = s(bool,X261) | s(bool,'T_0') = s(bool,X261) | s(bool,'T_0') = s(bool,X257) | s(bool,'T_0') = s(bool,X257)) )),
  inference(superposition,[],[f3629,f9239])).
fof(f9963,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,X1))),s(X0,X2))) | s(bool,X1) = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X3,X4)))) )),
  inference(condensation,[],[f9962])).
fof(f9962,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (s(bool,X44) = s(bool,happ(s(fun(X45,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X45,X46))) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,happ(s(fun(X47,bool),'const.combin.K_1'(s(bool,X44))),s(X47,X48)))) )),
  inference(duplicate_literal_removal,[],[f9489])).
fof(f9489,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (s(bool,X44) = s(bool,happ(s(fun(X45,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X45,X46))) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,happ(s(fun(X47,bool),'const.combin.K_1'(s(bool,X44))),s(X47,X48)))) )),
  inference(superposition,[],[f9239,f220])).
fof(f9965,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X3,X4)))) )),
  inference(condensation,[],[f9964])).
fof(f9964,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) = s(bool,happ(s(fun(X27,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(duplicate_literal_removal,[],[f9486])).
fof(f9486,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) = s(bool,happ(s(fun(X27,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(superposition,[],[f9239,f219])).
fof(f9404,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'('type.option.option'('type.conSem.v')),X3) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X4),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X3))),s('type.conSem.state'(X4),X5)))))) )),
  inference(superposition,[],[f96,f119])).
fof(f9403,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X16),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X13),X15))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X13),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X16),s('type.conSem.state'(X13),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X14),s('type.conSem.state'(X13),X15)))))))) )),
  inference(superposition,[],[f96,f86])).
fof(f9402,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X12),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X9),X11))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X9),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X12),s('type.conSem.state'(X9),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X10),s('type.conSem.state'(X9),X11)))))))) )),
  inference(superposition,[],[f96,f93])).
fof(f9401,plain,(
  ( ! [X6,X8,X7,X5] : (s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X5),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X8),s('type.conSem.state'(X5),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X6),s('type.conSem.state'(X5),X7))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X8),s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X6),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X5),X7)))))))) )),
  inference(superposition,[],[f96,f96])).
fof(f9400,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X4),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X1),X3))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X4),s('type.conSem.state'(X0),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X2),s('type.conSem.state'(X1),X3)))))))) )),
  inference(superposition,[],[f96,f106])).
fof(f8962,plain,(
  ( ! [X883,X881,X882,X880,X884,X879] : (s(bool,f(s(X879,sK10(X880,X881,bool,X879)))) != s(bool,happ(s(fun(X882,bool),'const.combin.K_1'(s(bool,X883))),s(X882,X884))) | s(fun(X879,bool),X880) = s(fun(X879,bool),X881) | s(bool,'T_0') = s(bool,X883) | s(bool,'T_0') = s(bool,g(s(X879,sK10(X880,X881,bool,X879))))) )),
  inference(superposition,[],[f108,f243])).
fof(f9157,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) != s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,X3))),s(X2,X4))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X3)) )),
  inference(condensation,[],[f9156])).
fof(f9156,plain,(
  ( ! [X292,X288,X290,X293,X289,X291] : (s(bool,X292) != s(bool,happ(s(fun(X289,bool),'const.combin.K_1'(s(bool,X290))),s(X289,X291))) | s(bool,X292) = s(bool,X293) | s(bool,'T_0') = s(bool,X293) | s(bool,'T_0') = s(bool,X288) | s(bool,'T_0') = s(bool,X290)) )),
  inference(duplicate_literal_removal,[],[f8887])).
fof(f8887,plain,(
  ( ! [X292,X288,X290,X293,X289,X291] : (s(bool,X292) != s(bool,happ(s(fun(X289,bool),'const.combin.K_1'(s(bool,X290))),s(X289,X291))) | s(bool,X292) = s(bool,X293) | s(bool,'T_0') = s(bool,X293) | s(bool,'T_0') = s(bool,X288) | s(bool,'T_0') = s(bool,X290) | s(bool,'T_0') = s(bool,X288)) )),
  inference(superposition,[],[f3629,f243])).
fof(f9312,plain,(
  ( ! [X4,X0,X3] : (s(bool,'T_0') != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X0))),s(X3,X4))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f9163,f102])).
fof(f9163,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1,X2))) != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X0))),s(X3,X4)))) )),
  inference(condensation,[],[f9162])).
fof(f9162,plain,(
  ( ! [X187,X185,X188,X186,X184,X183] : (s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X187,X188))) != s(bool,happ(s(fun(X184,bool),'const.combin.K_1'(s(bool,X185))),s(X184,X186))) | s(bool,'T_0') = s(bool,X183) | s(bool,'T_0') = s(bool,X185)) )),
  inference(duplicate_literal_removal,[],[f8872])).
fof(f8872,plain,(
  ( ! [X187,X185,X188,X186,X184,X183] : (s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X187,X188))) != s(bool,happ(s(fun(X184,bool),'const.combin.K_1'(s(bool,X185))),s(X184,X186))) | s(bool,'T_0') = s(bool,X183) | s(bool,'T_0') = s(bool,X185) | s(bool,'T_0') = s(bool,X183)) )),
  inference(superposition,[],[f1137,f243])).
fof(f9164,plain,(
  ( ! [X175,X173,X171,X169,X174,X172,X170] : (s(bool,'const.combin.K_2'(s(bool,X173),s(X174,X175))) != s(bool,happ(s(fun(X170,bool),'const.combin.K_1'(s(bool,X171))),s(X170,X172))) | s(bool,X169) = s(bool,X173) | s(bool,'T_0') = s(bool,X169) | s(bool,'T_0') = s(bool,X171)) )),
  inference(duplicate_literal_removal,[],[f8870])).
fof(f8870,plain,(
  ( ! [X175,X173,X171,X169,X174,X172,X170] : (s(bool,'const.combin.K_2'(s(bool,X173),s(X174,X175))) != s(bool,happ(s(fun(X170,bool),'const.combin.K_1'(s(bool,X171))),s(X170,X172))) | s(bool,X169) = s(bool,X173) | s(bool,'T_0') = s(bool,X169) | s(bool,'T_0') = s(bool,X171) | s(bool,'T_0') = s(bool,X169)) )),
  inference(superposition,[],[f1125,f243])).
fof(f9239,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) = s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f9238])).
fof(f9238,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X1) = s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X2,X3))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f8715])).
fof(f8715,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X1) = s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X2,X3))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f243,f84])).
fof(f9244,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,X2))),s(X1,X3))) = s(bool,happ(s(fun(X4,bool),'const.combin.K_1'(s(bool,X0))),s(X4,X5))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(condensation,[],[f9243])).
fof(f9243,plain,(
  ( ! [X78,X76,X74,X79,X77,X75,X73] : (s(bool,happ(s(fun(X74,bool),'const.combin.K_1'(s(bool,X75))),s(X74,X76))) = s(bool,happ(s(fun(X77,bool),'const.combin.K_1'(s(bool,X78))),s(X77,X79))) | s(bool,'T_0') = s(bool,X78) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,X75)) )),
  inference(duplicate_literal_removal,[],[f8690])).
fof(f8690,plain,(
  ( ! [X78,X76,X74,X79,X77,X75,X73] : (s(bool,happ(s(fun(X74,bool),'const.combin.K_1'(s(bool,X75))),s(X74,X76))) = s(bool,happ(s(fun(X77,bool),'const.combin.K_1'(s(bool,X78))),s(X77,X79))) | s(bool,'T_0') = s(bool,X78) | s(bool,'T_0') = s(bool,X73) | s(bool,'T_0') = s(bool,X75) | s(bool,'T_0') = s(bool,X73)) )),
  inference(superposition,[],[f243,f243])).
fof(f9246,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) = s(bool,happ(s(fun(X4,bool),'const.combin.K_1'(s(bool,X0))),s(X4,X5))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(condensation,[],[f9245])).
fof(f9245,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (s(bool,'const.combin.K_2'(s(bool,X67),s(X68,X69))) = s(bool,happ(s(fun(X70,bool),'const.combin.K_1'(s(bool,X71))),s(X70,X72))) | s(bool,'T_0') = s(bool,X71) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,X67)) )),
  inference(duplicate_literal_removal,[],[f8689])).
fof(f8689,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (s(bool,'const.combin.K_2'(s(bool,X67),s(X68,X69))) = s(bool,happ(s(fun(X70,bool),'const.combin.K_1'(s(bool,X71))),s(X70,X72))) | s(bool,'T_0') = s(bool,X71) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,X67) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f243,f242])).
fof(f8469,plain,(
  ( ! [X24,X23,X21,X19,X22,X20,X18] : (s(bool,X19) != s(bool,happ(s(fun(X20,bool),'const.combin.K_1'(s(bool,X18))),s(X20,X21))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X19),s(X22,X23))) | s(bool,X18) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f8235,f136])).
fof(f8468,plain,(
  ( ! [X14,X12,X10,X17,X15,X13,X11,X9,X16] : (s(bool,X10) != s(bool,happ(s(fun(X11,bool),'const.combin.K_1'(s(bool,X9))),s(X11,X12))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X10),s(X13,X14))) | s(bool,X9) = s(bool,X15) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X15),s(X16,X17)))) )),
  inference(superposition,[],[f8235,f219])).
fof(f8467,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s(bool,X1) != s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,X0))),s(X2,X3))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1),s(X4,X5))) | s(bool,X0) = s(bool,X6) | s(bool,'T_0') = s(bool,happ(s(fun(X7,bool),'const.combin.K_1'(s(bool,X6))),s(X7,X8)))) )),
  inference(superposition,[],[f8235,f220])).
fof(f8354,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X4),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3))),s('type.conSem.state'(X4),X5)))))) )),
  inference(superposition,[],[f95,f119])).
fof(f8353,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X16),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X13),X15))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X13),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X16),s('type.conSem.state'(X13),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X14),s('type.conSem.state'(X13),X15)))))))) )),
  inference(superposition,[],[f95,f89])).
fof(f8352,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X9),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X12),s('type.conSem.state'(X9),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X10),s('type.conSem.state'(X9),X11))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X12),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X10),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X9),X11)))))))) )),
  inference(superposition,[],[f95,f95])).
fof(f8351,plain,(
  ( ! [X6,X8,X7,X5] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X8),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X5),X7))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X5),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X8),s('type.conSem.state'(X5),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X6),s('type.conSem.state'(X5),X7)))))))) )),
  inference(superposition,[],[f95,f92])).
fof(f8350,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X4),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X1),X3))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X4),s('type.conSem.state'(X0),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X2),s('type.conSem.state'(X1),X3)))))))) )),
  inference(superposition,[],[f95,f105])).
fof(f8311,plain,(
  ( ! [X6,X4,X8,X7,X5,X9] : (s('type.ffi.ffi_state'(X8),happ(s(fun('type.ffi.ffi_state'(X4),'type.ffi.ffi_state'(X8)),X9),s('type.ffi.ffi_state'(X4),X6))) = s('type.ffi.ffi_state'(X8),'const.conSem.state_ffi_1'(s('type.conSem.state'(X8),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X4),'type.ffi.ffi_state'(X8)),X9),s('type.conSem.state'(X4),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X5),'type.ffi.ffi_state'(X4)),'const.combin.K_1'(s('type.ffi.ffi_state'(X4),X6))),s('type.conSem.state'(X5),X7)))))))) )),
  inference(superposition,[],[f107,f7998])).
fof(f8112,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,X15) != s(bool,happ(s(fun(X16,bool),'const.combin.K_1'(s(bool,X14))),s(X16,X17))) | s(bool,'T_0') = s(bool,X15) | s(bool,X14) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f7424,f136])).
fof(f8111,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s(bool,X8) != s(bool,happ(s(fun(X9,bool),'const.combin.K_1'(s(bool,X7))),s(X9,X10))) | s(bool,'T_0') = s(bool,X8) | s(bool,X7) = s(bool,X11) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X11),s(X12,X13)))) )),
  inference(superposition,[],[f7424,f219])).
fof(f8110,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,X1) != s(bool,happ(s(fun(X2,bool),'const.combin.K_1'(s(bool,X0))),s(X2,X3))) | s(bool,'T_0') = s(bool,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,happ(s(fun(X5,bool),'const.combin.K_1'(s(bool,X4))),s(X5,X6)))) )),
  inference(superposition,[],[f7424,f220])).
fof(f8233,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'const.combin.K_1'(s(bool,X1))),s(X0,X2))) | s(bool,X1) != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X3,X4)))) )),
  inference(condensation,[],[f8232])).
fof(f8232,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (s(bool,X44) != s(bool,happ(s(fun(X45,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X45,X46))) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,happ(s(fun(X47,bool),'const.combin.K_1'(s(bool,X44))),s(X47,X48)))) )),
  inference(duplicate_literal_removal,[],[f8080])).
fof(f8080,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (s(bool,X44) != s(bool,happ(s(fun(X45,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X45,X46))) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,happ(s(fun(X47,bool),'const.combin.K_1'(s(bool,X44))),s(X47,X48)))) )),
  inference(superposition,[],[f7424,f220])).
fof(f8235,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X3,X4))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) )),
  inference(condensation,[],[f8234])).
fof(f8234,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) != s(bool,happ(s(fun(X27,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(duplicate_literal_removal,[],[f8077])).
fof(f8077,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) != s(bool,happ(s(fun(X27,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(superposition,[],[f7424,f219])).
fof(f7998,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.ffi.ffi_state'(X4),X6) = s('type.ffi.ffi_state'(X4),'const.conSem.state_ffi_1'(s('type.conSem.state'(X4),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X5),'type.ffi.ffi_state'(X4)),'const.combin.K_1'(s('type.ffi.ffi_state'(X4),X6))),s('type.conSem.state'(X5),X7)))))) )),
  inference(superposition,[],[f107,f119])).
fof(f7997,plain,(
  ( ! [X19,X17,X20,X18,X16] : (s('type.ffi.ffi_state'(X19),happ(s(fun('type.ffi.ffi_state'(X16),'type.ffi.ffi_state'(X19)),X20),s('type.ffi.ffi_state'(X16),'const.conSem.state_ffi_1'(s('type.conSem.state'(X16),X18))))) = s('type.ffi.ffi_state'(X19),'const.conSem.state_ffi_1'(s('type.conSem.state'(X19),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X16),'type.ffi.ffi_state'(X19)),X20),s('type.conSem.state'(X16),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X17),s('type.conSem.state'(X16),X18)))))))) )),
  inference(superposition,[],[f107,f85])).
fof(f7996,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.ffi.ffi_state'(X14),happ(s(fun('type.ffi.ffi_state'(X11),'type.ffi.ffi_state'(X14)),X15),s('type.ffi.ffi_state'(X11),'const.conSem.state_ffi_1'(s('type.conSem.state'(X11),X13))))) = s('type.ffi.ffi_state'(X14),'const.conSem.state_ffi_1'(s('type.conSem.state'(X14),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X11),'type.ffi.ffi_state'(X14)),X15),s('type.conSem.state'(X11),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X12),s('type.conSem.state'(X11),X13)))))))) )),
  inference(superposition,[],[f107,f90])).
fof(f7995,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.ffi.ffi_state'(X9),happ(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X9)),X10),s('type.ffi.ffi_state'(X6),'const.conSem.state_ffi_1'(s('type.conSem.state'(X6),X8))))) = s('type.ffi.ffi_state'(X9),'const.conSem.state_ffi_1'(s('type.conSem.state'(X9),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X9)),X10),s('type.conSem.state'(X6),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X7),s('type.conSem.state'(X6),X8)))))))) )),
  inference(superposition,[],[f107,f91])).
fof(f7994,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.ffi.ffi_state'(X4),'const.conSem.state_ffi_1'(s('type.conSem.state'(X4),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X4)),X5),s('type.conSem.state'(X0),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X2),s('type.conSem.state'(X1),X3))))))) = s('type.ffi.ffi_state'(X4),happ(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X4)),X5),s('type.ffi.ffi_state'(X0),happ(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X2),s('type.ffi.ffi_state'(X1),'const.conSem.state_ffi_1'(s('type.conSem.state'(X1),X3)))))))) )),
  inference(superposition,[],[f107,f107])).
fof(f7412,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,X2))),s(X1,X3))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f220])).
fof(f7424,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f7406])).
fof(f7406,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f220])).
fof(f7326,plain,(
  ( ! [X810,X808,X812,X811,X809,X813] : (s(X810,f(s(bool,'T_0'))) != s(X810,g(s(bool,'T_0'))) | s(fun(bool,X810),X808) = s(fun(bool,X810),X809) | s(bool,X811) = s(bool,sK10(X808,X809,X810,bool)) | s(bool,'T_0') = s(bool,happ(s(fun(X812,bool),'const.combin.K_1'(s(bool,X811))),s(X812,X813)))) )),
  inference(superposition,[],[f108,f220])).
fof(f7323,plain,(
  ( ! [X790,X795,X793,X791,X794,X792] : (s(bool,'T_0') != s(bool,f(s(X790,sK10(X791,X792,bool,X790)))) | s(fun(X790,bool),X791) = s(fun(X790,bool),X792) | s(bool,X793) = s(bool,g(s(X790,sK10(X791,X792,bool,X790)))) | s(bool,'T_0') = s(bool,happ(s(fun(X794,bool),'const.combin.K_1'(s(bool,X793))),s(X794,X795)))) )),
  inference(superposition,[],[f108,f220])).
fof(f7203,plain,(
  ( ! [X476,X472,X474,X471,X475,X473,X470] : (s(bool,X470) != s(bool,'const.combin.K_2'(s(bool,X471),s(bool,X470))) | s(bool,'T_0') = s(bool,happ(s(fun(X472,bool),'const.combin.K_1'(s(bool,X471))),s(X472,X473))) | s(bool,X470) = s(bool,X474) | s(bool,'T_0') = s(bool,happ(s(fun(X475,bool),'const.combin.K_1'(s(bool,X474))),s(X475,X476)))) )),
  inference(superposition,[],[f2413,f220])).
fof(f7199,plain,(
  ( ! [X445,X447,X449,X451,X446,X448,X450] : (s(bool,X445) = s(bool,'const.combin.K_2'(s(bool,X446),s(bool,X445))) | s(bool,X446) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X447,X448))) | s(bool,X445) = s(bool,X449) | s(bool,'T_0') = s(bool,happ(s(fun(X450,bool),'const.combin.K_1'(s(bool,X449))),s(X450,X451)))) )),
  inference(superposition,[],[f2223,f220])).
fof(f7196,plain,(
  ( ! [X428,X430,X426,X432,X429,X431,X427] : (s(bool,X426) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X427))),s(bool,X426))) | s(bool,X427) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X428,X429))) | s(bool,X426) = s(bool,X430) | s(bool,'T_0') = s(bool,happ(s(fun(X431,bool),'const.combin.K_1'(s(bool,X430))),s(X431,X432)))) )),
  inference(superposition,[],[f2013,f220])).
fof(f7195,plain,(
  ( ! [X422,X424,X421,X423,X425] : (s(bool,X421) != s(bool,'const.combin.K_2'(s(bool,X422),s(bool,X421))) | s(bool,'T_0') = s(bool,X422) | s(bool,X421) = s(bool,X423) | s(bool,'T_0') = s(bool,happ(s(fun(X424,bool),'const.combin.K_1'(s(bool,X423))),s(X424,X425)))) )),
  inference(superposition,[],[f1972,f220])).
fof(f7187,plain,(
  ( ! [X377,X372,X374,X376,X378,X373,X375] : (s(bool,X372) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X373))),s(bool,X372))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X373),s(X374,X375))) | s(bool,X372) = s(bool,X376) | s(bool,'T_0') = s(bool,happ(s(fun(X377,bool),'const.combin.K_1'(s(bool,X376))),s(X377,X378)))) )),
  inference(superposition,[],[f500,f220])).
fof(f7185,plain,(
  ( ! [X364,X360,X362,X365,X361,X363] : (s(bool,X360) = s(bool,'const.combin.K_2'(s(bool,X361),s(bool,X360))) | s(bool,X361) = s(bool,X362) | s(bool,'T_0') = s(bool,X362) | s(bool,X360) = s(bool,X363) | s(bool,'T_0') = s(bool,happ(s(fun(X364,bool),'const.combin.K_1'(s(bool,X363))),s(X364,X365)))) )),
  inference(superposition,[],[f219,f220])).
fof(f7184,plain,(
  ( ! [X356,X358,X354,X357,X359,X353,X355] : (s(bool,X353) = s(bool,'const.combin.K_2'(s(bool,X354),s(bool,X353))) | s(bool,'F_0') = s(bool,happ(s(fun(X355,bool),'const.combin.K_1'(s(bool,X354))),s(X355,X356))) | s(bool,X353) = s(bool,X357) | s(bool,'T_0') = s(bool,happ(s(fun(X358,bool),'const.combin.K_1'(s(bool,X357))),s(X358,X359)))) )),
  inference(superposition,[],[f187,f220])).
fof(f7181,plain,(
  ( ! [X333,X335,X337,X332,X334,X336,X338] : (s(bool,X332) = s(bool,'const.combin.K_2'(s(bool,X333),s(bool,X332))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X333),s(X334,X335))) | s(bool,X332) = s(bool,X336) | s(bool,'T_0') = s(bool,happ(s(fun(X337,bool),'const.combin.K_1'(s(bool,X336))),s(X337,X338)))) )),
  inference(superposition,[],[f186,f220])).
fof(f7180,plain,(
  ( ! [X327,X329,X331,X328,X330] : (s(bool,X327) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X328))),s(bool,X327))) | s(bool,'F_0') = s(bool,X328) | s(bool,X327) = s(bool,X329) | s(bool,'T_0') = s(bool,happ(s(fun(X330,bool),'const.combin.K_1'(s(bool,X329))),s(X330,X331)))) )),
  inference(superposition,[],[f176,f220])).
fof(f7179,plain,(
  ( ! [X325,X323,X324,X326,X322] : (s(bool,X322) = s(bool,'const.combin.K_2'(s(bool,X323),s(bool,X322))) | s(bool,'F_0') = s(bool,X323) | s(bool,X322) = s(bool,X324) | s(bool,'T_0') = s(bool,happ(s(fun(X325,bool),'const.combin.K_1'(s(bool,X324))),s(X325,X326)))) )),
  inference(superposition,[],[f138,f220])).
fof(f7527,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) != s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X2))),s(X3,X4)))) )),
  inference(condensation,[],[f7526])).
fof(f7526,plain,(
  ( ! [X280,X282,X279,X281,X283,X284] : (s(bool,X279) != s(bool,X280) | s(bool,'T_0') = s(bool,X281) | s(bool,'T_0') = s(bool,X280) | s(bool,X279) = s(bool,X282) | s(bool,'T_0') = s(bool,happ(s(fun(X283,bool),'const.combin.K_1'(s(bool,X282))),s(X283,X284)))) )),
  inference(duplicate_literal_removal,[],[f7172])).
fof(f7172,plain,(
  ( ! [X280,X282,X279,X281,X283,X284] : (s(bool,X279) != s(bool,X280) | s(bool,'T_0') = s(bool,X281) | s(bool,'T_0') = s(bool,X281) | s(bool,'T_0') = s(bool,X280) | s(bool,X279) = s(bool,X282) | s(bool,'T_0') = s(bool,happ(s(fun(X283,bool),'const.combin.K_1'(s(bool,X282))),s(X283,X284)))) )),
  inference(superposition,[],[f3629,f220])).
fof(f7140,plain,(
  ( ! [X54,X52,X50,X48,X56,X55,X53,X51,X49] : (s(bool,X49) != s(bool,'const.combin.K_2'(s(bool,X48),s(X50,X51))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X49),s(X52,X53))) | s(bool,X48) = s(bool,X54) | s(bool,'T_0') = s(bool,happ(s(fun(X55,bool),'const.combin.K_1'(s(bool,X54))),s(X55,X56)))) )),
  inference(superposition,[],[f1417,f220])).
fof(f7139,plain,(
  ( ! [X39,X47,X45,X43,X41,X46,X44,X42,X40] : (s(bool,X40) != s(bool,'const.combin.K_2'(s(bool,X39),s(X41,X42))) | s(bool,'T_0') = s(bool,happ(s(fun(X43,bool),'const.combin.K_1'(s(bool,X40))),s(X43,X44))) | s(bool,X39) = s(bool,X45) | s(bool,'T_0') = s(bool,happ(s(fun(X46,bool),'const.combin.K_1'(s(bool,X45))),s(X46,X47)))) )),
  inference(superposition,[],[f1346,f220])).
fof(f7137,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X25] : (s(bool,X26) != s(bool,'const.combin.K_2'(s(bool,X25),s(X27,X28))) | s(bool,'T_0') = s(bool,X26) | s(bool,X25) = s(bool,X29) | s(bool,'T_0') = s(bool,happ(s(fun(X30,bool),'const.combin.K_1'(s(bool,X29))),s(X30,X31)))) )),
  inference(superposition,[],[f1137,f220])).
fof(f7132,plain,(
  ( ! [X850,X848,X852,X847,X851,X849] : (s(X849,f(s(bool,X850))) != s(X849,g(s(bool,X850))) | s(fun(bool,X849),X847) = s(fun(bool,X849),X848) | s(bool,'T_0') = s(bool,sK10(X847,X848,X849,bool)) | s(bool,'T_0') = s(bool,happ(s(fun(X851,bool),'const.combin.K_1'(s(bool,X850))),s(X851,X852)))) )),
  inference(superposition,[],[f108,f220])).
fof(f7129,plain,(
  ( ! [X831,X829,X833,X830,X834,X832] : (s(bool,X832) != s(bool,f(s(X829,sK10(X830,X831,bool,X829)))) | s(fun(X829,bool),X830) = s(fun(X829,bool),X831) | s(bool,'T_0') = s(bool,g(s(X829,sK10(X830,X831,bool,X829)))) | s(bool,'T_0') = s(bool,happ(s(fun(X833,bool),'const.combin.K_1'(s(bool,X832))),s(X833,X834)))) )),
  inference(superposition,[],[f108,f220])).
fof(f7001,plain,(
  ( ! [X866,X870,X868,X867,X865,X869] : (s(X867,f(s(bool,X868))) != s(X867,g(s(bool,X868))) | s(fun(bool,X867),X865) = s(fun(bool,X867),X866) | s(bool,'T_0') = s(bool,X868) | s(bool,'T_0') = s(bool,happ(s(fun(X869,bool),'const.combin.K_1'(s(bool,sK10(X865,X866,X867,bool)))),s(X869,X870)))) )),
  inference(superposition,[],[f108,f220])).
fof(f6998,plain,(
  ( ! [X850,X848,X852,X847,X851,X849] : (s(bool,X850) != s(bool,f(s(X847,sK10(X848,X849,bool,X847)))) | s(fun(X847,bool),X848) = s(fun(X847,bool),X849) | s(bool,'T_0') = s(bool,X850) | s(bool,'T_0') = s(bool,happ(s(fun(X851,bool),'const.combin.K_1'(s(bool,g(s(X847,sK10(X848,X849,bool,X847)))))),s(X851,X852)))) )),
  inference(superposition,[],[f108,f220])).
fof(f6820,plain,(
  ( ! [X107,X105,X106,X104] : (s(bool,X104) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X105))),s(bool,X104))) | s(bool,X105) = s(bool,X106) | s(bool,'T_0') = s(bool,X106) | s(bool,X104) = s(bool,X107) | s(bool,'T_0') = s(bool,X107)) )),
  inference(superposition,[],[f220,f136])).
fof(f6819,plain,(
  ( ! [X103,X101,X99,X102,X100,X98] : (s(bool,X98) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X99))),s(bool,X98))) | s(bool,X99) = s(bool,X100) | s(bool,'T_0') = s(bool,X100) | s(bool,X98) = s(bool,X101) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X101),s(X102,X103)))) )),
  inference(superposition,[],[f220,f219])).
fof(f6818,plain,(
  ( ! [X94,X92,X97,X95,X93,X96] : (s(bool,X92) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X93))),s(bool,X92))) | s(bool,X93) = s(bool,X94) | s(bool,'T_0') = s(bool,X94) | s(bool,X92) = s(bool,X95) | s(bool,'T_0') = s(bool,happ(s(fun(X96,bool),'const.combin.K_1'(s(bool,X95))),s(X96,X97)))) )),
  inference(superposition,[],[f220,f220])).
fof(f6800,plain,(
  ( ! [X261,X263,X265,X260,X262,X264] : (s(bool,'T_0') = s(bool,happ(s(fun(X263,bool),'const.combin.K_1'(s(bool,X261))),s(X263,X264))) | s(bool,X265) = s(bool,happ(s(fun(X260,bool),'const.combin.K_1'(s(bool,X261))),s(X260,X262))) | s(bool,'T_0') = s(bool,X265)) )),
  inference(superposition,[],[f220,f119])).
fof(f6726,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (s(bool,X16) = s(bool,X17) | s(bool,X17) = s(bool,X18) | s(bool,'T_0') = s(bool,happ(s(fun(X19,bool),'const.combin.K_1'(s(bool,X18))),s(X19,X20))) | s(bool,X16) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f220,f136])).
fof(f6725,plain,(
  ( ! [X14,X12,X10,X8,X15,X13,X11,X9] : (s(bool,X8) = s(bool,X9) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,happ(s(fun(X11,bool),'const.combin.K_1'(s(bool,X10))),s(X11,X12))) | s(bool,X8) = s(bool,X13) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X13),s(X14,X15)))) )),
  inference(superposition,[],[f220,f219])).
fof(f6724,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X2))),s(X3,X4))) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,happ(s(fun(X6,bool),'const.combin.K_1'(s(bool,X5))),s(X6,X7)))) )),
  inference(superposition,[],[f220,f220])).
fof(f6527,plain,(
  ( ! [X99,X97,X95,X98,X96] : (s(bool,X95) != s(bool,'const.combin.K_2'(s(bool,X96),s(bool,X95))) | s(bool,'T_0') = s(bool,happ(s(fun(X97,bool),'const.combin.K_1'(s(bool,X96))),s(X97,X98))) | s(bool,X95) = s(bool,X99) | s(bool,'T_0') = s(bool,X99)) )),
  inference(superposition,[],[f2413,f136])).
fof(f6526,plain,(
  ( ! [X94,X92,X90,X88,X93,X91,X89] : (s(bool,X88) != s(bool,'const.combin.K_2'(s(bool,X89),s(bool,X88))) | s(bool,'T_0') = s(bool,happ(s(fun(X90,bool),'const.combin.K_1'(s(bool,X89))),s(X90,X91))) | s(bool,X88) = s(bool,X92) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X92),s(X93,X94)))) )),
  inference(superposition,[],[f2413,f219])).
fof(f6475,plain,(
  ( ! [X61,X57,X60,X56,X55] : (s(bool,'F_0') != s(bool,f(s(X55,sK10(X56,X57,bool,X55)))) | s(fun(X55,bool),X56) = s(fun(X55,bool),X57) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,g(s(X55,sK10(X56,X57,bool,X55)))),s(X60,X61)))) )),
  inference(forward_demodulation,[],[f6468,f102])).
fof(f6468,plain,(
  ( ! [X61,X59,X57,X60,X58,X56,X55] : (s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X58,X59))) != s(bool,f(s(X55,sK10(X56,X57,bool,X55)))) | s(fun(X55,bool),X56) = s(fun(X55,bool),X57) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,g(s(X55,sK10(X56,X57,bool,X55)))),s(X60,X61)))) )),
  inference(superposition,[],[f108,f2223])).
fof(f6474,plain,(
  ( ! [X54,X50,X48,X53,X49] : (s(bool,'F_0') != s(bool,f(s(X48,sK10(X49,X50,bool,X48)))) | s(fun(X48,bool),X49) = s(fun(X48,bool),X50) | s(bool,'T_0') = s(bool,happ(s(fun(X53,bool),'const.combin.K_1'(s(bool,g(s(X48,sK10(X49,X50,bool,X48)))))),s(X53,X54)))) )),
  inference(forward_demodulation,[],[f6467,f102])).
fof(f6467,plain,(
  ( ! [X54,X52,X50,X48,X53,X51,X49] : (s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X51,X52))) != s(bool,f(s(X48,sK10(X49,X50,bool,X48)))) | s(fun(X48,bool),X49) = s(fun(X48,bool),X50) | s(bool,'T_0') = s(bool,happ(s(fun(X53,bool),'const.combin.K_1'(s(bool,g(s(X48,sK10(X49,X50,bool,X48)))))),s(X53,X54)))) )),
  inference(superposition,[],[f108,f2013])).
fof(f6465,plain,(
  ( ! [X39,X37,X41,X38,X42,X40] : (s(bool,'const.combin.K_2'(s(bool,X40),s(X41,X42))) != s(bool,f(s(X37,sK10(X38,X39,bool,X37)))) | s(fun(X37,bool),X38) = s(fun(X37,bool),X39) | s(bool,'T_0') = s(bool,X40) | s(bool,'T_0') = s(bool,g(s(X37,sK10(X38,X39,bool,X37))))) )),
  inference(superposition,[],[f108,f242])).
fof(f6464,plain,(
  ( ! [X35,X33,X31,X36,X34,X32] : (s(bool,'T_0') != s(bool,f(s(X31,sK10(X32,X33,bool,X31)))) | s(fun(X31,bool),X32) = s(fun(X31,bool),X33) | s(bool,X34) = s(bool,g(s(X31,sK10(X32,X33,bool,X31)))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X34),s(X35,X36)))) )),
  inference(superposition,[],[f108,f219])).
fof(f6463,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X28) != s(bool,f(s(X25,sK10(X26,X27,bool,X25)))) | s(fun(X25,bool),X26) = s(fun(X25,bool),X27) | s(bool,'T_0') = s(bool,g(s(X25,sK10(X26,X27,bool,X25)))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X28),s(X29,X30)))) )),
  inference(superposition,[],[f108,f219])).
fof(f6462,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s(bool,X22) != s(bool,f(s(X19,sK10(X20,X21,bool,X19)))) | s(fun(X19,bool),X20) = s(fun(X19,bool),X21) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,g(s(X19,sK10(X20,X21,bool,X19)))),s(X23,X24)))) )),
  inference(superposition,[],[f108,f219])).
fof(f6459,plain,(
  ( ! [X10,X8,X7,X9] : (s(bool,X10) != s(bool,f(s(X7,sK10(X8,X9,bool,X7)))) | s(fun(X7,bool),X8) = s(fun(X7,bool),X9) | s(bool,'T_0') = s(bool,X10) | s(bool,'T_0') = s(bool,g(s(X7,sK10(X8,X9,bool,X7))))) )),
  inference(superposition,[],[f108,f136])).
fof(f6458,plain,(
  ( ! [X6,X4,X5,X3] : (s(bool,'T_0') != s(bool,f(s(X3,sK10(X4,X5,bool,X3)))) | s(fun(X3,bool),X4) = s(fun(X3,bool),X5) | s(bool,X6) = s(bool,g(s(X3,sK10(X4,X5,bool,X3)))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f108,f136])).
fof(f6457,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK10(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK10(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f108,f84])).
fof(f6472,plain,(
  ( ! [X61,X57,X60,X56,X55] : (s(X57,f(s(bool,'F_0'))) != s(X57,g(s(bool,'F_0'))) | s(fun(bool,X57),X55) = s(fun(bool,X57),X56) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,sK10(X55,X56,X57,bool)),s(X60,X61)))) )),
  inference(forward_demodulation,[],[f6456,f102])).
fof(f6456,plain,(
  ( ! [X61,X59,X57,X60,X58,X56,X55] : (s(X57,f(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X58,X59))))) != s(X57,g(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X58,X59))))) | s(fun(bool,X57),X55) = s(fun(bool,X57),X56) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,sK10(X55,X56,X57,bool)),s(X60,X61)))) )),
  inference(superposition,[],[f108,f2223])).
fof(f6471,plain,(
  ( ! [X54,X50,X48,X53,X49] : (s(X50,f(s(bool,'F_0'))) != s(X50,g(s(bool,'F_0'))) | s(fun(bool,X50),X48) = s(fun(bool,X50),X49) | s(bool,'T_0') = s(bool,happ(s(fun(X53,bool),'const.combin.K_1'(s(bool,sK10(X48,X49,X50,bool)))),s(X53,X54)))) )),
  inference(forward_demodulation,[],[f6455,f102])).
fof(f6455,plain,(
  ( ! [X54,X52,X50,X48,X53,X51,X49] : (s(X50,f(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X51,X52))))) != s(X50,g(s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X51,X52))))) | s(fun(bool,X50),X48) = s(fun(bool,X50),X49) | s(bool,'T_0') = s(bool,happ(s(fun(X53,bool),'const.combin.K_1'(s(bool,sK10(X48,X49,X50,bool)))),s(X53,X54)))) )),
  inference(superposition,[],[f108,f2013])).
fof(f6452,plain,(
  ( ! [X35,X33,X31,X36,X34,X32] : (s(X33,f(s(bool,'T_0'))) != s(X33,g(s(bool,'T_0'))) | s(fun(bool,X33),X31) = s(fun(bool,X33),X32) | s(bool,X34) = s(bool,sK10(X31,X32,X33,bool)) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X34),s(X35,X36)))) )),
  inference(superposition,[],[f108,f219])).
fof(f6451,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(X27,f(s(bool,X28))) != s(X27,g(s(bool,X28))) | s(fun(bool,X27),X25) = s(fun(bool,X27),X26) | s(bool,'T_0') = s(bool,sK10(X25,X26,X27,bool)) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X28),s(X29,X30)))) )),
  inference(superposition,[],[f108,f219])).
fof(f6450,plain,(
  ( ! [X24,X23,X21,X19,X22,X20] : (s(X21,f(s(bool,X22))) != s(X21,g(s(bool,X22))) | s(fun(bool,X21),X19) = s(fun(bool,X21),X20) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,sK10(X19,X20,X21,bool)),s(X23,X24)))) )),
  inference(superposition,[],[f108,f219])).
fof(f6447,plain,(
  ( ! [X10,X8,X7,X9] : (s(X9,f(s(bool,X10))) != s(X9,g(s(bool,X10))) | s(fun(bool,X9),X7) = s(fun(bool,X9),X8) | s(bool,'T_0') = s(bool,X10) | s(bool,'T_0') = s(bool,sK10(X7,X8,X9,bool))) )),
  inference(superposition,[],[f108,f136])).
fof(f6446,plain,(
  ( ! [X6,X4,X5,X3] : (s(X5,f(s(bool,'T_0'))) != s(X5,g(s(bool,'T_0'))) | s(fun(bool,X5),X3) = s(fun(bool,X5),X4) | s(bool,X6) = s(bool,sK10(X3,X4,X5,bool)) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f108,f136])).
fof(f6445,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK10(X0,X1,X2,bool))) )),
  inference(superposition,[],[f108,f84])).
fof(f5901,plain,(
  ( ! [X99,X97,X95,X98,X96] : (s(bool,X95) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X96))),s(bool,X95))) | s(bool,X96) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X97,X98))) | s(bool,X95) = s(bool,X99) | s(bool,'T_0') = s(bool,X99)) )),
  inference(superposition,[],[f2013,f136])).
fof(f5900,plain,(
  ( ! [X94,X92,X90,X88,X93,X91,X89] : (s(bool,X88) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X89))),s(bool,X88))) | s(bool,X89) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X90,X91))) | s(bool,X88) = s(bool,X92) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X92),s(X93,X94)))) )),
  inference(superposition,[],[f2013,f219])).
fof(f5826,plain,(
  ( ! [X6,X4,X2,X7,X5,X3] : (s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,happ(s(fun(X4,bool),'const.combin.K_1'(s(bool,X3))),s(X4,X5))) | s(bool,'T_0') = s(bool,happ(s(fun(X6,bool),'const.combin.K_1'(s(bool,X2))),s(X6,X7)))) )),
  inference(superposition,[],[f2013,f2013])).
fof(f5462,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (s(bool,X10) != s(bool,'const.combin.K_2'(s(bool,X9),s(X11,X12))) | s(bool,'T_0') = s(bool,happ(s(fun(X13,bool),'const.combin.K_1'(s(bool,X10))),s(X13,X14))) | s(bool,X9) = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f1346,f136])).
fof(f5461,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s(bool,X1) != s(bool,'const.combin.K_2'(s(bool,X0),s(X2,X3))) | s(bool,'T_0') = s(bool,happ(s(fun(X4,bool),'const.combin.K_1'(s(bool,X1))),s(X4,X5))) | s(bool,X0) = s(bool,X6) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X6),s(X7,X8)))) )),
  inference(superposition,[],[f1346,f219])).
fof(f4977,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s(bool,X87) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X88))),s(bool,X87))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X88),s(X89,X90))) | s(bool,X87) = s(bool,X91) | s(bool,'T_0') = s(bool,X91)) )),
  inference(superposition,[],[f500,f136])).
fof(f4976,plain,(
  ( ! [X80,X85,X83,X81,X86,X84,X82] : (s(bool,X80) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X81))),s(bool,X80))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X81),s(X82,X83))) | s(bool,X80) = s(bool,X84) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X84),s(X85,X86)))) )),
  inference(superposition,[],[f500,f219])).
fof(f4254,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s(bool,X87) = s(bool,'const.combin.K_2'(s(bool,X88),s(bool,X87))) | s(bool,'F_0') = s(bool,happ(s(fun(X89,bool),'const.combin.K_1'(s(bool,X88))),s(X89,X90))) | s(bool,X87) = s(bool,X91) | s(bool,'T_0') = s(bool,X91)) )),
  inference(superposition,[],[f187,f136])).
fof(f4253,plain,(
  ( ! [X80,X85,X83,X81,X86,X84,X82] : (s(bool,X80) = s(bool,'const.combin.K_2'(s(bool,X81),s(bool,X80))) | s(bool,'F_0') = s(bool,happ(s(fun(X82,bool),'const.combin.K_1'(s(bool,X81))),s(X82,X83))) | s(bool,X80) = s(bool,X84) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X84),s(X85,X86)))) )),
  inference(superposition,[],[f187,f219])).
fof(f4591,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun(X1,bool),'const.combin.K_1'(s(bool,X0))),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f4590])).
fof(f4590,plain,(
  ( ! [X12,X15,X11,X16] : (s(bool,'F_0') = s(bool,happ(s(fun(X15,bool),'const.combin.K_1'(s(bool,X11))),s(X15,X16))) | s(bool,'T_0') = s(bool,X12) | s(bool,'T_0') = s(bool,X11)) )),
  inference(subsumption_resolution,[],[f4213,f1972])).
fof(f4213,plain,(
  ( ! [X14,X12,X15,X13,X11,X16] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X12),s(X13,X14))) | s(bool,'F_0') = s(bool,happ(s(fun(X15,bool),'const.combin.K_1'(s(bool,X11))),s(X15,X16))) | s(bool,'T_0') = s(bool,X12) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f187,f136])).
fof(f4117,plain,(
  ( ! [X140,X138,X141,X139,X137] : (s(bool,X138) != s(bool,X140) | s(bool,X141) = s(bool,happ(s(fun(X137,bool),'const.combin.K_1'(s(bool,X138))),s(X137,X139))) | s(bool,'T_0') = s(bool,X141) | s(bool,'T_0') = s(bool,X140)) )),
  inference(superposition,[],[f3629,f119])).
fof(f4124,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) != s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X2),s(X3,X4)))) )),
  inference(condensation,[],[f4123])).
fof(f4123,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (s(bool,X55) != s(bool,X56) | s(bool,'T_0') = s(bool,X57) | s(bool,'T_0') = s(bool,X56) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X58),s(X59,X60)))) )),
  inference(duplicate_literal_removal,[],[f4102])).
fof(f4102,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (s(bool,X55) != s(bool,X56) | s(bool,'T_0') = s(bool,X57) | s(bool,'T_0') = s(bool,X57) | s(bool,'T_0') = s(bool,X56) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X58),s(X59,X60)))) )),
  inference(superposition,[],[f3629,f219])).
fof(f4090,plain,(
  ( ! [X134,X132,X136,X135,X133] : (s(bool,X133) != s(bool,X135) | s(bool,X135) = s(bool,X136) | s(bool,'T_0') = s(bool,X136) | s(bool,'T_0') = s(bool,happ(s(fun(X132,bool),'const.combin.K_1'(s(bool,X133))),s(X132,X134)))) )),
  inference(superposition,[],[f3629,f119])).
fof(f3806,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X2) = s(bool,'const.combin.K_2'(s(bool,X1),s(X3,X4))) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f3660,f84])).
fof(f3661,plain,(
  ( ! [X103,X105,X106,X104] : (s(bool,'F_0') != s(bool,X104) | s(bool,X106) = s(bool,happ(s(fun(X103,bool),'const.combin.K_1'(s(bool,X104))),s(X103,X105))) | s(bool,'T_0') = s(bool,X106)) )),
  inference(superposition,[],[f3560,f119])).
fof(f3660,plain,(
  ( ! [X101,X99,X102,X100] : (s(bool,'F_0') != s(bool,X99) | s(bool,X102) = s(bool,'const.combin.K_2'(s(bool,X99),s(X100,X101))) | s(bool,'T_0') = s(bool,X102)) )),
  inference(superposition,[],[f3560,f102])).
fof(f3629,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f3560,f84])).
fof(f3560,plain,(
  ( ! [X112,X115] : (s(bool,'F_0') != s(bool,X112) | s(bool,X112) = s(bool,X115) | s(bool,'T_0') = s(bool,X115)) )),
  inference(superposition,[],[f3411,f102])).
fof(f3501,plain,(
  ( ! [X167,X165,X163,X166,X164,X168] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X164),s(X166,X167))) | s(bool,X168) = s(bool,happ(s(fun(X163,bool),'const.combin.K_1'(s(bool,X164))),s(X163,X165))) | s(bool,'T_0') = s(bool,X168)) )),
  inference(superposition,[],[f3411,f119])).
fof(f3500,plain,(
  ( ! [X158,X161,X159,X157,X162,X160] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X157),s(X160,X161))) | s(bool,X162) = s(bool,'const.combin.K_2'(s(bool,X157),s(X158,X159))) | s(bool,'T_0') = s(bool,X162)) )),
  inference(superposition,[],[f3411,f102])).
fof(f3586,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X3),s(X4,X5))) | s(bool,X0) = s(bool,X3)) )),
  inference(condensation,[],[f3585])).
fof(f3585,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X66),s(X67,X68))) | s(bool,'T_0') = s(bool,X69) | s(bool,X66) = s(bool,X70) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X70),s(X71,X72)))) )),
  inference(duplicate_literal_removal,[],[f3486])).
fof(f3486,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X66),s(X67,X68))) | s(bool,'T_0') = s(bool,X69) | s(bool,'T_0') = s(bool,X69) | s(bool,X66) = s(bool,X70) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X70),s(X71,X72)))) )),
  inference(superposition,[],[f3411,f219])).
fof(f3322,plain,(
  ( ! [X167,X165,X163,X166,X164,X168] : (s(bool,X166) != s(bool,'const.combin.K_2'(s(bool,X164),s(X167,X168))) | s(bool,X166) = s(bool,happ(s(fun(X163,bool),'const.combin.K_1'(s(bool,X164))),s(X163,X165))) | s(bool,'T_0') = s(bool,X166)) )),
  inference(superposition,[],[f1125,f119])).
fof(f3321,plain,(
  ( ! [X158,X161,X159,X157,X162,X160] : (s(bool,X160) != s(bool,'const.combin.K_2'(s(bool,X157),s(X161,X162))) | s(bool,X160) = s(bool,'const.combin.K_2'(s(bool,X157),s(X158,X159))) | s(bool,'T_0') = s(bool,X160)) )),
  inference(superposition,[],[f1125,f102])).
fof(f3295,plain,(
  ( ! [X158,X163,X161,X159,X162,X160] : (s(bool,X159) != s(bool,'const.combin.K_2'(s(bool,X161),s(X162,X163))) | s(bool,X161) = s(bool,happ(s(fun(X158,bool),'const.combin.K_1'(s(bool,X159))),s(X158,X160))) | s(bool,'T_0') = s(bool,happ(s(fun(X158,bool),'const.combin.K_1'(s(bool,X159))),s(X158,X160)))) )),
  inference(superposition,[],[f1125,f119])).
fof(f3294,plain,(
  ( ! [X156,X154,X152,X157,X155,X153] : (s(bool,X152) != s(bool,'const.combin.K_2'(s(bool,X155),s(X156,X157))) | s(bool,X155) = s(bool,'const.combin.K_2'(s(bool,X152),s(X153,X154))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X152),s(X153,X154)))) )),
  inference(superposition,[],[f1125,f102])).
fof(f3407,plain,(
  ( ! [X47,X45,X50,X48,X46,X51,X49] : (s(bool,'const.combin.K_2'(s(bool,X46),s(X47,X48))) != s(bool,'const.combin.K_2'(s(bool,X49),s(X50,X51))) | s(bool,X45) = s(bool,X49) | s(bool,'T_0') = s(bool,X45) | s(bool,'T_0') = s(bool,X46)) )),
  inference(duplicate_literal_removal,[],[f3281])).
fof(f3281,plain,(
  ( ! [X47,X45,X50,X48,X46,X51,X49] : (s(bool,'const.combin.K_2'(s(bool,X46),s(X47,X48))) != s(bool,'const.combin.K_2'(s(bool,X49),s(X50,X51))) | s(bool,X45) = s(bool,X49) | s(bool,'T_0') = s(bool,X45) | s(bool,'T_0') = s(bool,X46) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f1125,f242])).
fof(f3411,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f3273])).
fof(f3273,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1125,f84])).
fof(f2640,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s(bool,X87) = s(bool,'const.combin.K_2'(s(bool,X88),s(bool,X87))) | s(bool,X88) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X89,X90))) | s(bool,X87) = s(bool,X91) | s(bool,'T_0') = s(bool,X91)) )),
  inference(superposition,[],[f2223,f136])).
fof(f2639,plain,(
  ( ! [X80,X85,X83,X81,X86,X84,X82] : (s(bool,X80) = s(bool,'const.combin.K_2'(s(bool,X81),s(bool,X80))) | s(bool,X81) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X82,X83))) | s(bool,X80) = s(bool,X84) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X84),s(X85,X86)))) )),
  inference(superposition,[],[f2223,f219])).
fof(f2427,plain,(
  ( ! [X54,X55,X53] : (s(bool,X53) != s(bool,'const.combin.K_2'(s(bool,X54),s(bool,X53))) | s(bool,'T_0') = s(bool,X54) | s(bool,X53) = s(bool,X55) | s(bool,'T_0') = s(bool,X55)) )),
  inference(superposition,[],[f1972,f136])).
fof(f2426,plain,(
  ( ! [X52,X50,X48,X51,X49] : (s(bool,X48) != s(bool,'const.combin.K_2'(s(bool,X49),s(bool,X48))) | s(bool,'T_0') = s(bool,X49) | s(bool,X48) = s(bool,X50) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X50),s(X51,X52)))) )),
  inference(superposition,[],[f1972,f219])).
fof(f2413,plain,(
  ( ! [X111,X114,X112,X115,X113] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X112),s(X114,X115))) | s(bool,'T_0') = s(bool,happ(s(fun(X111,bool),'const.combin.K_1'(s(bool,X112))),s(X111,X113)))) )),
  inference(superposition,[],[f1972,f119])).
fof(f2160,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1,X2))) | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1,X2)))) )),
  inference(equality_factoring,[],[f1944])).
fof(f2013,plain,(
  ( ! [X111,X114,X112,X115,X113] : (s(bool,X112) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X114,X115))) | s(bool,'T_0') = s(bool,happ(s(fun(X111,bool),'const.combin.K_1'(s(bool,X112))),s(X111,X113)))) )),
  inference(superposition,[],[f1944,f119])).
fof(f2223,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X3,X4)))) )),
  inference(condensation,[],[f2222])).
fof(f2222,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(duplicate_literal_removal,[],[f1999])).
fof(f1999,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(superposition,[],[f1944,f219])).
fof(f1972,plain,(
  ( ! [X4,X0,X3] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X0),s(X3,X4))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f1892,f102])).
fof(f1892,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1,X2))) != s(bool,'const.combin.K_2'(s(bool,X0),s(X3,X4)))) )),
  inference(condensation,[],[f1891])).
fof(f1891,plain,(
  ( ! [X99,X97,X95,X100,X98,X96] : (s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X99,X100))) != s(bool,'const.combin.K_2'(s(bool,X96),s(X97,X98))) | s(bool,'T_0') = s(bool,X95) | s(bool,'T_0') = s(bool,X96)) )),
  inference(duplicate_literal_removal,[],[f1786])).
fof(f1786,plain,(
  ( ! [X99,X97,X95,X100,X98,X96] : (s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X99,X100))) != s(bool,'const.combin.K_2'(s(bool,X96),s(X97,X98))) | s(bool,'T_0') = s(bool,X95) | s(bool,'T_0') = s(bool,X96) | s(bool,'T_0') = s(bool,X95)) )),
  inference(superposition,[],[f1137,f242])).
fof(f1722,plain,(
  ( ! [X127,X125,X123,X126,X124,X122] : (s(bool,X125) = s(bool,'const.combin.K_2'(s(bool,X123),s(X126,X127))) | s(bool,'T_0') = s(bool,happ(s(fun(X122,bool),'const.combin.K_1'(s(bool,X123))),s(X122,X124))) | s(bool,'T_0') = s(bool,X125)) )),
  inference(superposition,[],[f242,f119])).
fof(f1944,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f1943])).
fof(f1943,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X2,X3))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f1701])).
fof(f1701,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X1) = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X2,X3))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f242,f84])).
fof(f1700,plain,(
  ( ! [X127,X125,X123,X126,X124,X122] : (s(bool,X123) = s(bool,'const.combin.K_2'(s(bool,X125),s(X126,X127))) | s(bool,'T_0') = s(bool,X125) | s(bool,'T_0') = s(bool,happ(s(fun(X122,bool),'const.combin.K_1'(s(bool,X123))),s(X122,X124)))) )),
  inference(superposition,[],[f242,f119])).
fof(f1947,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.K_2'(s(bool,X0),s(X4,X5))) = s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(condensation,[],[f1946])).
fof(f1946,plain,(
  ( ! [X47,X45,X50,X48,X46,X51,X49] : (s(bool,'const.combin.K_2'(s(bool,X46),s(X47,X48))) = s(bool,'const.combin.K_2'(s(bool,X49),s(X50,X51))) | s(bool,'T_0') = s(bool,X49) | s(bool,'T_0') = s(bool,X45) | s(bool,'T_0') = s(bool,X46)) )),
  inference(duplicate_literal_removal,[],[f1691])).
fof(f1691,plain,(
  ( ! [X47,X45,X50,X48,X46,X51,X49] : (s(bool,'const.combin.K_2'(s(bool,X46),s(X47,X48))) = s(bool,'const.combin.K_2'(s(bool,X49),s(X50,X51))) | s(bool,'T_0') = s(bool,X49) | s(bool,'T_0') = s(bool,X45) | s(bool,'T_0') = s(bool,X46) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f242,f242])).
fof(f1554,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (s(bool,X10) != s(bool,'const.combin.K_2'(s(bool,X9),s(X11,X12))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X10),s(X13,X14))) | s(bool,X9) = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f1417,f136])).
fof(f1553,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s(bool,X1) != s(bool,'const.combin.K_2'(s(bool,X0),s(X2,X3))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X1),s(X4,X5))) | s(bool,X0) = s(bool,X6) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X6),s(X7,X8)))) )),
  inference(superposition,[],[f1417,f219])).
fof(f1348,plain,(
  ( ! [X10,X8,X7,X11,X9] : (s(bool,X8) != s(bool,'const.combin.K_2'(s(bool,X7),s(X9,X10))) | s(bool,'T_0') = s(bool,X8) | s(bool,X7) = s(bool,X11) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f1137,f136])).
fof(f1347,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,X1) != s(bool,'const.combin.K_2'(s(bool,X0),s(X2,X3))) | s(bool,'T_0') = s(bool,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X4),s(X5,X6)))) )),
  inference(superposition,[],[f1137,f219])).
fof(f1346,plain,(
  ( ! [X92,X90,X93,X91,X89] : (s(bool,X90) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X92,X93))) | s(bool,'T_0') = s(bool,happ(s(fun(X89,bool),'const.combin.K_1'(s(bool,X90))),s(X89,X91)))) )),
  inference(superposition,[],[f1137,f119])).
fof(f1417,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X3,X4))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) )),
  inference(condensation,[],[f1416])).
fof(f1416,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(duplicate_literal_removal,[],[f1334])).
fof(f1334,plain,(
  ( ! [X30,X28,X26,X29,X27,X25] : (s(bool,X26) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X27,X28))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X26),s(X29,X30)))) )),
  inference(superposition,[],[f1137,f219])).
fof(f1125,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) != s(bool,'const.combin.K_2'(s(bool,X1),s(X2,X3))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f219])).
fof(f1137,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f1119])).
fof(f1119,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,'const.combin.K_2'(s(bool,'T_0'),s(X1,X2))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f219])).
fof(f1063,plain,(
  ( ! [X101,X99,X97,X95,X100,X98,X96] : (s(bool,X95) = s(bool,'const.combin.K_2'(s(bool,X96),s(bool,X95))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X96),s(X97,X98))) | s(bool,X95) = s(bool,X99) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X99),s(X100,X101)))) )),
  inference(superposition,[],[f186,f219])).
fof(f1062,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s(bool,X90) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X91))),s(bool,X90))) | s(bool,'F_0') = s(bool,X91) | s(bool,X90) = s(bool,X92) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X92),s(X93,X94)))) )),
  inference(superposition,[],[f176,f219])).
fof(f1061,plain,(
  ( ! [X88,X87,X85,X89,X86] : (s(bool,X85) = s(bool,'const.combin.K_2'(s(bool,X86),s(bool,X85))) | s(bool,'F_0') = s(bool,X86) | s(bool,X85) = s(bool,X87) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X87),s(X88,X89)))) )),
  inference(superposition,[],[f138,f219])).
fof(f953,plain,(
  ( ! [X57,X58,X56,X55] : (s(bool,X55) = s(bool,'const.combin.K_2'(s(bool,X56),s(bool,X55))) | s(bool,X56) = s(bool,X57) | s(bool,'T_0') = s(bool,X57) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f219,f136])).
fof(f952,plain,(
  ( ! [X54,X52,X50,X53,X51,X49] : (s(bool,X49) = s(bool,'const.combin.K_2'(s(bool,X50),s(bool,X49))) | s(bool,X50) = s(bool,X51) | s(bool,'T_0') = s(bool,X51) | s(bool,X49) = s(bool,X52) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X52),s(X53,X54)))) )),
  inference(superposition,[],[f219,f219])).
fof(f941,plain,(
  ( ! [X118,X116,X114,X117,X115,X113] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X114),s(X116,X117))) | s(bool,X118) = s(bool,happ(s(fun(X113,bool),'const.combin.K_1'(s(bool,X114))),s(X113,X115))) | s(bool,'T_0') = s(bool,X118)) )),
  inference(superposition,[],[f219,f119])).
fof(f921,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (s(bool,'T_0') = s(bool,X71) | s(bool,X73) = s(bool,happ(s(fun(X70,bool),'const.combin.K_1'(s(bool,X71))),s(X70,X72))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X73),s(X74,X75)))) )),
  inference(superposition,[],[f219,f119])).
fof(f903,plain,(
  ( ! [X12,X10,X8,X13,X11,X9] : (s(bool,X8) = s(bool,X9) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X10),s(X11,X12))) | s(bool,X8) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f219,f136])).
fof(f902,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X2),s(X3,X4))) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X5),s(X6,X7)))) )),
  inference(superposition,[],[f219,f219])).
fof(f901,plain,(
  ( ! [X103,X107,X105,X102,X106,X104] : (s(bool,X103) = s(bool,X105) | s(bool,'T_0') = s(bool,happ(s(fun(X102,bool),'const.combin.K_1'(s(bool,X103))),s(X102,X104))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X105),s(X106,X107)))) )),
  inference(superposition,[],[f219,f119])).
fof(f1291,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X3),s(X4,X5)))) )),
  inference(condensation,[],[f1290])).
fof(f1290,plain,(
  ( ! [X39,X43,X41,X38,X44,X42,X40] : (s(bool,'T_0') = s(bool,X39) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X38),s(X40,X41))) | s(bool,X38) = s(bool,X42) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X42),s(X43,X44)))) )),
  inference(duplicate_literal_removal,[],[f869])).
fof(f869,plain,(
  ( ! [X39,X43,X41,X38,X44,X42,X40] : (s(bool,'T_0') = s(bool,X39) | s(bool,'T_0') = s(bool,X39) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X38),s(X40,X41))) | s(bool,X38) = s(bool,X42) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X42),s(X43,X44)))) )),
  inference(superposition,[],[f219,f219])).
fof(f656,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,X48) = s(bool,'const.combin.K_2'(s(bool,X49),s(bool,X48))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X49),s(X50,X51))) | s(bool,'T_0') = s(bool,X48)) )),
  inference(superposition,[],[f186,f84])).
fof(f632,plain,(
  ( ! [X39,X36,X40] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X36),s(X39,X40))) | s(bool,'T_0') = s(bool,X36)) )),
  inference(superposition,[],[f186,f102])).
fof(f615,plain,(
  ( ! [X39,X41,X38,X42,X40] : (s(bool,X38) = s(bool,'const.combin.K_2'(s(bool,X39),s(bool,X38))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X39),s(X40,X41))) | s(bool,X38) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f186,f136])).
fof(f509,plain,(
  ( ! [X26,X24,X25] : (s(bool,X24) = s(bool,happ(s(fun(bool,bool),'const.combin.K_1'(s(bool,X25))),s(bool,X24))) | s(bool,'F_0') = s(bool,X25) | s(bool,X24) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(superposition,[],[f176,f136])).
fof(f501,plain,(
  ( ! [X47,X45,X48,X46,X49] : (s(bool,'T_0') = s(bool,happ(s(fun(X48,bool),'const.combin.K_1'(s(bool,X46))),s(X48,X49))) | s(bool,'F_0') = s(bool,happ(s(fun(X45,bool),'const.combin.K_1'(s(bool,X46))),s(X45,X47)))) )),
  inference(superposition,[],[f176,f119])).
fof(f500,plain,(
  ( ! [X43,X41,X44,X42,X40] : (s(bool,'T_0') = s(bool,happ(s(fun(X43,bool),'const.combin.K_1'(s(bool,X40))),s(X43,X44))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X40),s(X41,X42)))) )),
  inference(superposition,[],[f176,f102])).
fof(f289,plain,(
  ( ! [X10,X11,X9] : (s(bool,X9) = s(bool,'const.combin.K_2'(s(bool,X10),s(bool,X9))) | s(bool,'F_0') = s(bool,X10) | s(bool,X9) = s(bool,X11) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f138,f136])).
fof(f286,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f82,f136])).
fof(f243,plain,(
  ( ! [X24,X23,X21,X22] : (s(bool,X24) = s(bool,happ(s(fun(X21,bool),'const.combin.K_1'(s(bool,X22))),s(X21,X23))) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f136,f119])).
fof(f242,plain,(
  ( ! [X19,X17,X20,X18] : (s(bool,X20) = s(bool,'const.combin.K_2'(s(bool,X17),s(X18,X19))) | s(bool,'T_0') = s(bool,X17) | s(bool,'T_0') = s(bool,X20)) )),
  inference(superposition,[],[f136,f102])).
fof(f232,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f136,f136])).
fof(f220,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,X29) = s(bool,X31) | s(bool,'T_0') = s(bool,X31) | s(bool,'T_0') = s(bool,happ(s(fun(X28,bool),'const.combin.K_1'(s(bool,X29))),s(X28,X30)))) )),
  inference(superposition,[],[f136,f119])).
fof(f219,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,X24) = s(bool,X27) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X24),s(X25,X26)))) )),
  inference(superposition,[],[f136,f102])).
fof(f187,plain,(
  ( ! [X19,X17,X20,X18,X16] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X17),s(X19,X20))) | s(bool,'F_0') = s(bool,happ(s(fun(X16,bool),'const.combin.K_1'(s(bool,X17))),s(X16,X18)))) )),
  inference(superposition,[],[f138,f119])).
fof(f186,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X11),s(X14,X15))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X11),s(X12,X13)))) )),
  inference(superposition,[],[f138,f102])).
fof(f176,plain,(
  ( ! [X6,X4,X5] : (s(bool,'T_0') = s(bool,happ(s(fun(X4,bool),'const.combin.K_1'(s(bool,X5))),s(X4,X6))) | s(bool,'F_0') = s(bool,X5)) )),
  inference(superposition,[],[f119,f84])).
fof(f139,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f83,f84])).
fof(f138,plain,(
  ( ! [X4,X2,X3] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X2),s(X3,X4))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(superposition,[],[f84,f102])).
fof(f136,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f84,f84])).
fof(f108,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK10(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK10(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK10(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK10(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10])],[f70])).
fof(f70,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f67])).
fof(f67,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.conSem.state_literal_|49||49|',aHL_EXT)).
fof(f107,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.conSem.state'(X1),X2))))) = s('type.ffi.ffi_state'(X0),happ(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.ffi.ffi_state'(X1),'const.conSem.state_ffi_1'(s('type.conSem.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0,X1,X2,X3] : s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.conSem.state'(X1),X2))))) = s('type.ffi.ffi_state'(X0),happ(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.ffi.ffi_state'(X1),'const.conSem.state_ffi_1'(s('type.conSem.state'(X1),X2)))))),
  inference(flattening,[],[f65])).
fof(f65,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.conSem.state'(X1),X2))))) = s('type.ffi.ffi_state'(X0),happ(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.ffi.ffi_state'(X1),'const.conSem.state_ffi_1'(s('type.conSem.state'(X1),X2)))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X7,X6] : ! [X20,X21] : s('type.ffi.ffi_state'(X7),'const.conSem.state_ffi_1'(s('type.conSem.state'(X7),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),X21),s('type.conSem.state'(X6),X20))))) = s('type.ffi.ffi_state'(X7),happ(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),X21),s('type.ffi.ffi_state'(X6),'const.conSem.state_ffi_1'(s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_|49||49||49|_prove_ltb')).
fof(f106,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X1),X2))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.conSem.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X1),X2))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.conSem.state'(X1),X2)))))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X1),X2))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.conSem.state'(X1),X2)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X7,X6] : ! [X20,X21] : s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X6),X20))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X7),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),X21),s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_|49||48|4_prove_ltb')).
fof(f105,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X1),X2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.conSem.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X1),X2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.conSem.state'(X1),X2)))))),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X1),X2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.conSem.state'(X1),X2)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X7,X6] : ! [X20,X21] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X6),X20))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X7),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),X21),s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_|49||48||49|_prove_ltb')).
fof(f104,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X1),X2))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.conSem.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2,X3] : s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X1),X2))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.conSem.state'(X1),X2)))))),
  inference(flattening,[],[f59])).
fof(f59,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X1),X2))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.conSem.state'(X1),X2)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7,X6] : ! [X20,X21] : s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X6),X20))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X7),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),X21),s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_98_prove_ltb')).
fof(f98,plain,(
  ( ! [X2,X0,X1] : (s('type.conSem.state'(X0),X1) != s('type.conSem.state'(X0),X2) | s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f75])).
fof(f99,plain,(
  ( ! [X2,X0,X1] : (s('type.conSem.state'(X0),X1) != s('type.conSem.state'(X0),X2) | s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f75])).
fof(f100,plain,(
  ( ! [X2,X0,X1] : (s('type.conSem.state'(X0),X1) != s('type.conSem.state'(X0),X2) | s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f75])).
fof(f101,plain,(
  ( ! [X2,X0,X1] : (s('type.conSem.state'(X0),X1) = s('type.conSem.state'(X0),X2) | s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X2))) | s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) != s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X2))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X2))) | s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) != s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f75])).
fof(f96,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1))))) = s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1))))) = s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1))))) = s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X20,X21] : s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X6),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X21),s('type.conSem.state'(X6),X20))))) = s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X21),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_|49||49||48|_prove_ltb')).
fof(f95,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : ! [X20,X21] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X6),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X21),s('type.conSem.state'(X6),X20))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X21),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_|49||48|9_prove_ltb')).
fof(f93,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X20,X21] : s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X6),X20))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X6),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X21),s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_|49||48|3_prove_ltb')).
fof(f92,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X20,X21] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X6),X20))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X6),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X21),s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_|49||48||48|_prove_ltb')).
fof(f91,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0] : ! [X1,X2] : s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X20,X21] : s('type.ffi.ffi_state'(X6),'const.conSem.state_ffi_1'(s('type.conSem.state'(X6),X20))) = s('type.ffi.ffi_state'(X6),'const.conSem.state_ffi_1'(s('type.conSem.state'(X6),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X21),s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_|49||48|7_prove_ltb')).
fof(f90,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ! [X0] : ! [X1,X2] : s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X20,X21] : s('type.ffi.ffi_state'(X6),'const.conSem.state_ffi_1'(s('type.conSem.state'(X6),X20))) = s('type.ffi.ffi_state'(X6),'const.conSem.state_ffi_1'(s('type.conSem.state'(X6),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X21),s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_|49||48|6_prove_ltb')).
fof(f89,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : ! [X20,X21] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X6),X20))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X6),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X21),s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_99_prove_ltb')).
fof(f88,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X20,X21] : s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X6),X20))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X6),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X21),s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_97_prove_ltb')).
fof(f87,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X20,X21] : s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X6),X20))) = s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X6),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X21),s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_96_prove_ltb')).
fof(f86,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : ! [X20,X21] : s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X6),X20))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X6),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X21),s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_|49||48|2_prove_ltb')).
fof(f85,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : ! [X1,X2] : s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X20,X21] : s('type.ffi.ffi_state'(X6),'const.conSem.state_ffi_1'(s('type.conSem.state'(X6),X20))) = s('type.ffi.ffi_state'(X6),'const.conSem.state_ffi_1'(s('type.conSem.state'(X6),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X21),s('type.conSem.state'(X6),X20)))))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.conSem_|49||48|5_prove_ltb')).
fof(f84,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.conSem.state_literal_|49||49|',aHL_BOOL_CASES)).
fof(f83,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.conSem.state_literal_|49||49|',aHL_FALSITY)).
fof(f82,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.conSem.state_literal_|49||49|',aHL_TRUTH)).
fof(f13104,plain,(
  $false | $spl0),
  inference(global_subsumption,[],[f81,f80,f79,f78,f77,f82,f83,f84,f85,f86,f87,f88,f89,f90,f91,f92,f93,f94,f95,f96,f101,f100,f99,f98,f97,f102,f119,f104,f105,f106,f107,f108,f136,f138,f139,f147,f176,f186,f187,f219,f220,f232,f242,f243,f286,f289,f500,f501,f509,f596,f597,f598,f615,f632,f656,f1291,f901,f902,f903,f921,f941,f952,f953,f1061,f1062,f1063,f1137,f1125,f1417,f1346,f1347,f1348,f1553,f1554,f1947,f1700,f1944,f1722,f1972,f2223,f2013,f2160,f2413,f2426,f2427,f2639,f2640,f3411,f3407,f3294,f3295,f3321,f3322,f3586,f3500,f3501,f3560,f3629,f3660,f3661,f3806,f4090,f4124,f4117,f4591,f4253,f4254,f4976,f4977,f5461,f5462,f5826,f5900,f5901,f6445,f6446,f6447,f6450,f6451,f6452,f6471,f6472,f6457,f6458,f6459,f6462,f6463,f6464,f6465,f6474,f6475,f6526,f6527,f6724,f6725,f6726,f6800,f6818,f6819,f6820,f6998,f7001,f7129,f7132,f7137,f7139,f7140,f7527,f7179,f7180,f7181,f7184,f7185,f7187,f7195,f7196,f7199,f7203,f7323,f7326,f7424,f7412,f7994,f7995,f7996,f7997,f7998,f8235,f8233,f8110,f8111,f8112,f8311,f8350,f8351,f8352,f8353,f8354,f8467,f8468,f8469,f9246,f9244,f9239,f9164,f9312,f9157,f8962,f9400,f9401,f9402,f9403,f9404,f9965,f9963,f9898,f10019,f10021,f10023,f10025,f10576,f10577,f10785,f10786,f10787,f12377,f12373,f12372,f12371,f12191,f12192,f12238,f12239,f109,f12819,f12817,f12688,f12689,f12969,f12970,f12978,f12979,f12991,f12992,f13061,f13037,f13002])).
fof(f13103,plain,(
  $false | $spl0),
  inference(global_subsumption,[],[f81,f80,f79,f78,f77,f82,f83,f84,f85,f86,f87,f88,f89,f90,f91,f92,f93,f94,f95,f96,f101,f100,f99,f98,f97,f102,f119,f104,f105,f106,f107,f108,f136,f138,f139,f147,f176,f186,f187,f219,f220,f232,f242,f243,f286,f289,f500,f501,f509,f596,f597,f598,f615,f632,f656,f1291,f901,f902,f903,f921,f941,f952,f953,f1061,f1062,f1063,f1137,f1125,f1417,f1346,f1347,f1348,f1553,f1554,f1947,f1700,f1944,f1722,f1972,f2223,f2013,f2160,f2413,f2426,f2427,f2639,f2640,f3411,f3407,f3294,f3295,f3321,f3322,f3586,f3500,f3501,f3560,f3629,f3660,f3661,f3806,f4090,f4124,f4117,f4591,f4253,f4254,f4976,f4977,f5461,f5462,f5826,f5900,f5901,f6445,f6446,f6447,f6450,f6451,f6452,f6471,f6472,f6457,f6458,f6459,f6462,f6463,f6464,f6465,f6474,f6475,f6526,f6527,f6724,f6725,f6726,f6800,f6818,f6819,f6820,f6998,f7001,f7129,f7132,f7137,f7139,f7140,f7527,f7179,f7180,f7181,f7184,f7185,f7187,f7195,f7196,f7199,f7203,f7323,f7326,f7424,f7412,f7994,f7995,f7996,f7997,f7998,f8235,f8233,f8110,f8111,f8112,f8311,f8350,f8351,f8352,f8353,f8354,f8467,f8468,f8469,f9246,f9244,f9239,f9164,f9312,f9157,f8962,f9400,f9401,f9402,f9403,f9404,f9965,f9963,f9898,f10019,f10021,f10023,f10025,f10576,f10577,f10785,f10786,f10787,f12377,f12373,f12372,f12371,f12191,f12192,f12238,f12239,f109,f12819,f12817,f12688,f12689,f12969,f12970,f12978,f12979,f12991,f12992,f13061,f13037])).
fof(f13102,plain,(
  $false | $spl0),
  inference(global_subsumption,[],[f81,f80,f79,f78,f77,f82,f83,f84,f85,f86,f87,f88,f89,f90,f91,f92,f93,f94,f95,f96,f101,f100,f99,f98,f97,f102,f119,f104,f105,f106,f107,f108,f136,f138,f139,f147,f176,f186,f187,f219,f220,f232,f242,f243,f286,f289,f500,f501,f509,f596,f597,f598,f615,f632,f656,f1291,f901,f902,f903,f921,f941,f952,f953,f1061,f1062,f1063,f1137,f1125,f1417,f1346,f1347,f1348,f1553,f1554,f1947,f1700,f1944,f1722,f1972,f2223,f2013,f2160,f2413,f2426,f2427,f2639,f2640,f3411,f3407,f3294,f3295,f3321,f3322,f3586,f3500,f3501,f3560,f3629,f3660,f3661,f3806,f4090,f4124,f4117,f4591,f4253,f4254,f4976,f4977,f5461,f5462,f5826,f5900,f5901,f6445,f6446,f6447,f6450,f6451,f6452,f6471,f6472,f6457,f6458,f6459,f6462,f6463,f6464,f6465,f6474,f6475,f6526,f6527,f6724,f6725,f6726,f6800,f6818,f6819,f6820,f6998,f7001,f7129,f7132,f7137,f7139,f7140,f7527,f7179,f7180,f7181,f7184,f7185,f7187,f7195,f7196,f7199,f7203,f7323,f7326,f7424,f7412,f7994,f7995,f7996,f7997,f7998,f8235,f8233,f8110,f8111,f8112,f8311,f8350,f8351,f8352,f8353,f8354,f8467,f8468,f8469,f9246,f9244,f9239,f9164,f9312,f9157,f8962,f9400,f9401,f9402,f9403,f9404,f9965,f9963,f9898,f10019,f10021,f10023,f10025,f10576,f10577,f10785,f10786,f10787,f12377,f12373,f12372,f12371,f12191,f12192,f12238,f12239,f109,f12819,f12817,f12688,f12689,f12969,f12970,f12978,f12979,f12991,f12992,f13061])).
fof(f13062,plain,(
  $false | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f13061,f116])).
fof(f13038,plain,(
  $false | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f13037,f116])).
fof(f13003,plain,(
  $false | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f13002,f116])).
fof(f12635,plain,(
  $false | ($spl0 | $spl2 | $spl7)),
  inference(subsumption_resolution,[],[f116,f12544])).
fof(f12544,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),sK4) = s('type.list.list'('type.option.option'('type.conSem.v')),sK8) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12543,f9404])).
fof(f12543,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),sK8) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12542,f9404])).
fof(f12542,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12541,f96])).
fof(f12541,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12540,f96])).
fof(f12540,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12539,f9400])).
fof(f12539,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12538,f9400])).
fof(f12538,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12537,f93])).
fof(f12537,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12536,f93])).
fof(f12536,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12535,f86])).
fof(f12535,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12434,f86])).
fof(f12434,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f11920,f99])).
fof(f11920,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f109,f111])).
fof(f12634,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f114,f12533])).
fof(f12533,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12532,f8354])).
fof(f12532,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12531,f8354])).
fof(f12531,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12530,f95])).
fof(f12530,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12529,f95])).
fof(f12529,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12528,f8350])).
fof(f12528,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12527,f8350])).
fof(f12527,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12526,f95])).
fof(f12526,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12525,f95])).
fof(f12525,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12524,f8351])).
fof(f12524,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12523,f8351])).
fof(f12523,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12522,f89])).
fof(f12522,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12435,f89])).
fof(f12435,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f11920,f98])).
fof(f12609,plain,(
  $false | ($spl0 | $spl2 | $spl9)),
  inference(subsumption_resolution,[],[f12608,f118])).
fof(f12608,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) = s('type.ffi.ffi_state'(sK1),sK9) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12607,f7998])).
fof(f12607,plain,(
  s('type.ffi.ffi_state'(sK1),sK9) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12606,f7998])).
fof(f12606,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12605,f91])).
fof(f12605,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12604,f91])).
fof(f12604,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12603,f90])).
fof(f12603,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12602,f90])).
fof(f12602,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12441,f85])).
fof(f12441,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2)),
  inference(superposition,[],[f85,f11920])).
fof(f12557,plain,(
  $false | ($spl0 | $spl2 | $spl9)),
  inference(subsumption_resolution,[],[f12556,f118])).
fof(f12556,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) = s('type.ffi.ffi_state'(sK1),sK9) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12555,f7998])).
fof(f12555,plain,(
  s('type.ffi.ffi_state'(sK1),sK9) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12554,f7998])).
fof(f12554,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12553,f91])).
fof(f12553,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12552,f91])).
fof(f12552,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12551,f90])).
fof(f12551,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12550,f90])).
fof(f12550,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12549,f85])).
fof(f12549,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12432,f85])).
fof(f12432,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f11920,f100])).
fof(f12521,plain,(
  $false | ($spl0 | $spl2 | $spl9)),
  inference(subsumption_resolution,[],[f12520,f118])).
fof(f12520,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) = s('type.ffi.ffi_state'(sK1),sK9) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12519,f7998])).
fof(f12519,plain,(
  s('type.ffi.ffi_state'(sK1),sK9) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12518,f7998])).
fof(f12518,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12517,f91])).
fof(f12517,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12516,f91])).
fof(f12516,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12515,f90])).
fof(f12515,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12514,f90])).
fof(f12514,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12513,f85])).
fof(f12513,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f12436,f85])).
fof(f12436,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f11920,f100])).
fof(f11903,plain,(
  $false | ($spl0 | $spl2 | $spl6 | $spl9)),
  inference(subsumption_resolution,[],[f11902,f118])).
fof(f11902,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) = s('type.ffi.ffi_state'(sK1),sK9) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11901,f7998])).
fof(f11901,plain,(
  s('type.ffi.ffi_state'(sK1),sK9) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11900,f7998])).
fof(f11900,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11899,f91])).
fof(f11899,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11898,f91])).
fof(f11898,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11897,f90])).
fof(f11897,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11896,f90])).
fof(f11896,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11753,f85])).
fof(f11753,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl6)),
  inference(superposition,[],[f85,f10508])).
fof(f10508,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f125,f111])).
fof(f125,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl6)),
  inference(forward_demodulation,[],[f109,f115])).
fof(f11861,plain,(
  $false | ($spl0 | $spl2 | $spl6 | $spl9)),
  inference(subsumption_resolution,[],[f11860,f118])).
fof(f11860,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) = s('type.ffi.ffi_state'(sK1),sK9) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11859,f7998])).
fof(f11859,plain,(
  s('type.ffi.ffi_state'(sK1),sK9) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11858,f7998])).
fof(f11858,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11857,f91])).
fof(f11857,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11856,f91])).
fof(f11856,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11855,f90])).
fof(f11855,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11854,f90])).
fof(f11854,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11853,f85])).
fof(f11853,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11744,f85])).
fof(f11744,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl6)),
  inference(unit_resulting_resolution,[],[f10508,f100])).
fof(f11831,plain,(
  $false | ($spl0 | $spl2 | $spl6 | $spl9)),
  inference(subsumption_resolution,[],[f11830,f118])).
fof(f11830,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) = s('type.ffi.ffi_state'(sK1),sK9) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11829,f7998])).
fof(f11829,plain,(
  s('type.ffi.ffi_state'(sK1),sK9) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11828,f7998])).
fof(f11828,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11827,f91])).
fof(f11827,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11826,f91])).
fof(f11826,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11825,f90])).
fof(f11825,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11824,f90])).
fof(f11824,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11823,f85])).
fof(f11823,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f11748,f85])).
fof(f11748,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl6)),
  inference(unit_resulting_resolution,[],[f10508,f100])).
fof(f10499,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl6 | $spl9)),
  inference(subsumption_resolution,[],[f10498,f118])).
fof(f10498,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) = s('type.ffi.ffi_state'(sK1),sK9) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10497,f7998])).
fof(f10497,plain,(
  s('type.ffi.ffi_state'(sK1),sK9) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10496,f7998])).
fof(f10496,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10495,f91])).
fof(f10495,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10494,f91])).
fof(f10494,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10493,f90])).
fof(f10493,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10492,f90])).
fof(f10492,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10368,f85])).
fof(f10368,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(superposition,[],[f85,f127])).
fof(f127,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f126,f111])).
fof(f126,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f125,f113])).
fof(f10467,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl6 | $spl9)),
  inference(subsumption_resolution,[],[f10466,f118])).
fof(f10466,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) = s('type.ffi.ffi_state'(sK1),sK9) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10465,f7998])).
fof(f10465,plain,(
  s('type.ffi.ffi_state'(sK1),sK9) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10464,f7998])).
fof(f10464,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10463,f91])).
fof(f10463,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10462,f91])).
fof(f10462,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10461,f90])).
fof(f10461,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10460,f90])).
fof(f10460,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10459,f85])).
fof(f10459,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10359,f85])).
fof(f10359,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(unit_resulting_resolution,[],[f127,f100])).
fof(f10443,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl6 | $spl9)),
  inference(subsumption_resolution,[],[f10442,f118])).
fof(f10442,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) = s('type.ffi.ffi_state'(sK1),sK9) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10441,f7998])).
fof(f10441,plain,(
  s('type.ffi.ffi_state'(sK1),sK9) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10440,f7998])).
fof(f10440,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10439,f91])).
fof(f10439,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10438,f91])).
fof(f10438,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10437,f90])).
fof(f10437,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10436,f90])).
fof(f10436,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10435,f85])).
fof(f10435,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f10363,f85])).
fof(f10363,plain,(
  s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.ffi.ffi_state'(sK1),'const.conSem.state_ffi_1'(s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(unit_resulting_resolution,[],[f127,f100])).
fof(f10026,plain,(
  ( ! [X443,X438,X444] : (s(bool,'T_0') = s(bool,happ(s(fun(X443,bool),'const.combin.K_1'(s(bool,X438))),s(X443,X444)))) ) | $spl28),
  inference(cnf_transformation,[],[f10026_D])).
fof(f10026_D,plain,(
  ( ! [X443,X438,X444] : (s(bool,'T_0') = s(bool,happ(s(fun(X443,bool),'const.combin.K_1'(s(bool,X438))),s(X443,X444)))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f10000,plain,(
  ( ! [X173,X174] : (s(bool,'T_0') != s(bool,happ(s(fun(X173,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X173,X174)))) ) | $spl24),
  inference(cnf_transformation,[],[f10000_D])).
fof(f10000_D,plain,(
  ( ! [X173,X174] : (s(bool,'T_0') != s(bool,happ(s(fun(X173,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X173,X174)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f10025,plain,(
  ( ! [X441,X443,X438,X444,X442] : (s(bool,'T_0') != s(bool,happ(s(fun(X441,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X441,X442))) | s(bool,'T_0') = s(bool,happ(s(fun(X443,bool),'const.combin.K_1'(s(bool,X438))),s(X443,X444)))) )),
  inference(subsumption_resolution,[],[f9690,f2413])).
fof(f9690,plain,(
  ( ! [X441,X443,X438,X444,X440,X442,X439] : (s(bool,'T_0') != s(bool,happ(s(fun(X441,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X441,X442))) | s(bool,'T_0') = s(bool,happ(s(fun(X443,bool),'const.combin.K_1'(s(bool,X438))),s(X443,X444))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X438),s(X439,X440)))) )),
  inference(superposition,[],[f2413,f9239])).
fof(f10024,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) ) | $spl26),
  inference(cnf_transformation,[],[f10024_D])).
fof(f10024_D,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2)))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f9893,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X0),s(X1,X2))) | s(bool,'T_0') != s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X3,X4)))) ) | ($spl13 | $spl22)),
  inference(condensation,[],[f9689])).
fof(f9689,plain,(
  ( ! [X436,X432,X434,X431,X437,X433,X435] : (s(bool,'T_0') != s(bool,happ(s(fun(X434,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X434,X435))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X431),s(X436,X437))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X431),s(X432,X433)))) ) | ($spl13 | $spl22)),
  inference(superposition,[],[f2386,f9239])).
fof(f2386,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X22),s(X23,X24))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X22),s(X25,X26)))) ) | ($spl13 | $spl22)),
  inference(subsumption_resolution,[],[f2306,f150])).
fof(f2306,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,X22),s(X23,X24))) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X22),s(X25,X26)))) ) | $spl22),
  inference(superposition,[],[f2243,f219])).
fof(f2242,plain,(
  ( ! [X96] : (s(bool,'T_0') = s(bool,X96)) ) | $spl20),
  inference(cnf_transformation,[],[f2242_D])).
fof(f2242_D,plain,(
  ( ! [X96] : (s(bool,'T_0') = s(bool,X96)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f10023,plain,(
  ( ! [X422,X423,X419] : (s(bool,'T_0') != s(bool,happ(s(fun(X422,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X422,X423))) | s(bool,'T_0') = s(bool,X419)) )),
  inference(subsumption_resolution,[],[f9687,f1972])).
fof(f9687,plain,(
  ( ! [X420,X422,X421,X423,X419] : (s(bool,'T_0') != s(bool,happ(s(fun(X422,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X422,X423))) | s(bool,'T_0') = s(bool,X419) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X419),s(X420,X421)))) )),
  inference(superposition,[],[f1972,f9239])).
fof(f10021,plain,(
  ( ! [X294,X296,X295] : (s(bool,'T_0') != s(bool,happ(s(fun(X295,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X295,X296))) | s(bool,'T_0') = s(bool,X294)) )),
  inference(forward_demodulation,[],[f10020,f119])).
fof(f10020,plain,(
  ( ! [X294,X296,X298,X295,X297] : (s(bool,happ(s(fun(X295,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X295,X296))) != s(bool,happ(s(fun(X297,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X297,X298))) | s(bool,'T_0') = s(bool,X294)) )),
  inference(subsumption_resolution,[],[f9677,f1972])).
fof(f9677,plain,(
  ( ! [X294,X300,X296,X298,X295,X297,X299] : (s(bool,happ(s(fun(X295,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X295,X296))) != s(bool,happ(s(fun(X297,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X297,X298))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X294),s(X299,X300))) | s(bool,'T_0') = s(bool,X294)) )),
  inference(superposition,[],[f8235,f9239])).
fof(f10019,plain,(
  ( ! [X290,X289,X291] : (s(bool,'T_0') != s(bool,happ(s(fun(X290,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X290,X291))) | s(bool,'T_0') = s(bool,X289)) )),
  inference(forward_demodulation,[],[f9895,f119])).
fof(f9895,plain,(
  ( ! [X292,X290,X293,X289,X291] : (s(bool,happ(s(fun(X290,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X290,X291))) != s(bool,happ(s(fun(X292,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X292,X293))) | s(bool,'T_0') = s(bool,X289)) )),
  inference(duplicate_literal_removal,[],[f9676])).
fof(f9676,plain,(
  ( ! [X292,X290,X293,X289,X291] : (s(bool,happ(s(fun(X290,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X290,X291))) != s(bool,happ(s(fun(X292,bool),'const.combin.K_1'(s(bool,'T_0'))),s(X292,X293))) | s(bool,'T_0') = s(bool,X289) | s(bool,'T_0') = s(bool,X289)) )),
  inference(superposition,[],[f7424,f9239])).
fof(f10018,plain,(
  ( ! [X285,X284,X286] : (s(bool,'T_0') != s(bool,happ(s(fun(X285,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X285,X286))) | s(bool,'T_0') = s(bool,X284)) ) | $spl13),
  inference(subsumption_resolution,[],[f9675,f9312])).
fof(f9675,plain,(
  ( ! [X288,X285,X287,X284,X286] : (s(bool,'T_0') != s(bool,happ(s(fun(X285,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X285,X286))) | s(bool,'T_0') = s(bool,happ(s(fun(X287,bool),'const.combin.K_1'(s(bool,X284))),s(X287,X288))) | s(bool,'T_0') = s(bool,X284)) ) | $spl13),
  inference(superposition,[],[f5596,f9239])).
fof(f5596,plain,(
  ( ! [X4,X2,X3] : (s(bool,'T_0') != s(bool,X2) | s(bool,'T_0') = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X2))),s(X3,X4)))) ) | $spl13),
  inference(subsumption_resolution,[],[f5518,f150])).
fof(f5518,plain,(
  ( ! [X4,X2,X3] : (s(bool,'T_0') != s(bool,X2) | s(bool,'T_0') = s(bool,happ(s(fun(X3,bool),'const.combin.K_1'(s(bool,X2))),s(X3,X4))) | s(bool,'T_0') = s(bool,'F_0')) )),
  inference(superposition,[],[f1346,f138])).
fof(f9999,plain,(
  ( ! [X173,X174,X172] : (s(bool,'T_0') != s(bool,happ(s(fun(X173,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X173,X174))) | s(bool,'T_0') = s(bool,X172)) ) | $spl13),
  inference(subsumption_resolution,[],[f9656,f1972])).
fof(f9656,plain,(
  ( ! [X175,X173,X176,X174,X172] : (s(bool,'T_0') != s(bool,happ(s(fun(X173,bool),'const.combin.K_1'(s(bool,'F_0'))),s(X173,X174))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X172),s(X175,X176))) | s(bool,'T_0') = s(bool,X172)) ) | $spl13),
  inference(superposition,[],[f1316,f9239])).
fof(f1316,plain,(
  ( ! [X76,X77,X75] : (s(bool,'T_0') != s(bool,X75) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X75),s(X76,X77)))) ) | $spl13),
  inference(subsumption_resolution,[],[f1026,f150])).
fof(f1026,plain,(
  ( ! [X76,X77,X75] : (s(bool,'T_0') != s(bool,X75) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X75),s(X76,X77)))) ) | $spl13),
  inference(superposition,[],[f150,f219])).
fof(f2243,plain,(
  ( ! [X97,X98] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X97,X98)))) ) | $spl22),
  inference(cnf_transformation,[],[f2243_D])).
fof(f2243_D,plain,(
  ( ! [X97,X98] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X97,X98)))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f2241,plain,(
  ( ! [X97,X98,X96] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X97,X98))) | s(bool,'T_0') = s(bool,X96)) ) | $spl13),
  inference(subsumption_resolution,[],[f2093,f1972])).
fof(f2093,plain,(
  ( ! [X99,X97,X100,X98,X96] : (s(bool,'T_0') != s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X97,X98))) | s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X96),s(X99,X100))) | s(bool,'T_0') = s(bool,X96)) ) | $spl13),
  inference(superposition,[],[f1316,f1944])).
fof(f743,plain,(
  ( ! [X12,X17,X16] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X12),s(X16,X17))) | s(bool,'T_0') = s(bool,X12)) ) | $spl14),
  inference(cnf_transformation,[],[f743_D])).
fof(f743_D,plain,(
  ( ! [X12,X17,X16] : (s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X12),s(X16,X17))) | s(bool,'T_0') = s(bool,X12)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f745,plain,(
  ( ! [X26,X25] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X25,X26)))) ) | $spl18),
  inference(cnf_transformation,[],[f745_D])).
fof(f745_D,plain,(
  ( ! [X26,X25] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X25,X26)))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f598,plain,(
  ( ! [X28,X26,X24,X27,X25] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,'F_0'),s(X25,X26))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X24),s(X27,X28))) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f186,f84])).
fof(f744,plain,(
  ( ! [X14,X15,X13] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X13),s(X14,X15))) | s(bool,'T_0') = s(bool,X13)) ) | $spl16),
  inference(cnf_transformation,[],[f744_D])).
fof(f744_D,plain,(
  ( ! [X14,X15,X13] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X13),s(X14,X15))) | s(bool,'T_0') = s(bool,X13)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f597,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X19),s(X20,X21))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X18),s(X22,X23))) | s(bool,'T_0') = s(bool,X19) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f186,f136])).
fof(f596,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (s(bool,'T_0') = s(bool,'const.combin.K_2'(s(bool,X13),s(X14,X15))) | s(bool,'F_0') = s(bool,'const.combin.K_2'(s(bool,X12),s(X16,X17))) | s(bool,'T_0') = s(bool,X12) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f186,f136])).
fof(f148,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl10),
  inference(cnf_transformation,[],[f148_D])).
fof(f148_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f150,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl13),
  inference(cnf_transformation,[],[f150_D])).
fof(f150_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f147,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f84])).
fof(f124,plain,(
  $false | ($spl1 | $spl2 | $spl4 | $spl6 | $spl8)),
  inference(trivial_inequality_removal,[],[f123])).
fof(f123,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl1 | $spl2 | $spl4 | $spl6 | $spl8)),
  inference(forward_demodulation,[],[f122,f111])).
fof(f122,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl1 | $spl4 | $spl6 | $spl8)),
  inference(forward_demodulation,[],[f121,f113])).
fof(f121,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl1 | $spl6 | $spl8)),
  inference(forward_demodulation,[],[f120,f115])).
fof(f120,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl1 | $spl8)),
  inference(forward_demodulation,[],[f110,f117])).
fof(f109,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(cnf_transformation,[],[f109_D])).
fof(f109_D,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f111,plain,(
  s('type.num.num',sK2) = s('type.num.num',sK6) | $spl2),
  inference(cnf_transformation,[],[f111_D])).
fof(f111_D,plain,(
  s('type.num.num',sK2) = s('type.num.num',sK6) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f77,plain,(
  s('type.num.num',sK2) = s('type.num.num',sK6) | s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0')))))))))),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  (s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | (s('type.num.num',sK2) = s('type.num.num',sK6) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7) & s('type.list.list'('type.option.option'('type.conSem.v')),sK4) = s('type.list.list'('type.option.option'('type.conSem.v')),sK8) & s('type.ffi.ffi_state'(sK1),sK5) = s('type.ffi.ffi_state'(sK1),sK9))) & (s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | s('type.num.num',sK2) != s('type.num.num',sK6) | s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7) | s('type.list.list'('type.option.option'('type.conSem.v')),sK4) != s('type.list.list'('type.option.option'('type.conSem.v')),sK8) | s('type.ffi.ffi_state'(sK1),sK5) != s('type.ffi.ffi_state'(sK1),sK9))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9])],[f72])).
fof(f72,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : ((s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.conSem.state'(X1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3))),s('type.conSem.state'(X1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X4))),s('type.conSem.state'(X1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X5))),s('type.conSem.state'(X0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.conSem.state'(X1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X7))),s('type.conSem.state'(X1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X8))),s('type.conSem.state'(X1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X9))),s('type.conSem.state'(X0),'const.bool.ARB_0'))))))))) | (s('type.num.num',X2) = s('type.num.num',X6) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X7) & s('type.list.list'('type.option.option'('type.conSem.v')),X4) = s('type.list.list'('type.option.option'('type.conSem.v')),X8) & s('type.ffi.ffi_state'(X1),X5) = s('type.ffi.ffi_state'(X1),X9))) & (s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.conSem.state'(X1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3))),s('type.conSem.state'(X1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X4))),s('type.conSem.state'(X1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X5))),s('type.conSem.state'(X0),'const.bool.ARB_0'))))))))) != s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.conSem.state'(X1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X7))),s('type.conSem.state'(X1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X8))),s('type.conSem.state'(X1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X9))),s('type.conSem.state'(X0),'const.bool.ARB_0'))))))))) | s('type.num.num',X2) != s('type.num.num',X6) | s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X7) | s('type.list.list'('type.option.option'('type.conSem.v')),X4) != s('type.list.list'('type.option.option'('type.conSem.v')),X8) | s('type.ffi.ffi_state'(X1),X5) != s('type.ffi.ffi_state'(X1),X9)))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : ((s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.conSem.state'(X1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3))),s('type.conSem.state'(X1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X4))),s('type.conSem.state'(X1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X5))),s('type.conSem.state'(X0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.conSem.state'(X1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X7))),s('type.conSem.state'(X1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X8))),s('type.conSem.state'(X1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X9))),s('type.conSem.state'(X0),'const.bool.ARB_0'))))))))) | (s('type.num.num',X2) = s('type.num.num',X6) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X7) & s('type.list.list'('type.option.option'('type.conSem.v')),X4) = s('type.list.list'('type.option.option'('type.conSem.v')),X8) & s('type.ffi.ffi_state'(X1),X5) = s('type.ffi.ffi_state'(X1),X9))) & (s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.conSem.state'(X1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3))),s('type.conSem.state'(X1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X4))),s('type.conSem.state'(X1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X5))),s('type.conSem.state'(X0),'const.bool.ARB_0'))))))))) != s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.conSem.state'(X1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X7))),s('type.conSem.state'(X1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X8))),s('type.conSem.state'(X1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X9))),s('type.conSem.state'(X0),'const.bool.ARB_0'))))))))) | (s('type.num.num',X2) != s('type.num.num',X6) | s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X7) | s('type.list.list'('type.option.option'('type.conSem.v')),X4) != s('type.list.list'('type.option.option'('type.conSem.v')),X8) | s('type.ffi.ffi_state'(X1),X5) != s('type.ffi.ffi_state'(X1),X9))))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : (s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.conSem.state'(X1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3))),s('type.conSem.state'(X1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X4))),s('type.conSem.state'(X1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X5))),s('type.conSem.state'(X0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.conSem.state'(X1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X7))),s('type.conSem.state'(X1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X8))),s('type.conSem.state'(X1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X9))),s('type.conSem.state'(X0),'const.bool.ARB_0'))))))))) <~> (s('type.num.num',X2) = s('type.num.num',X6) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X7) & s('type.list.list'('type.option.option'('type.conSem.v')),X4) = s('type.list.list'('type.option.option'('type.conSem.v')),X8) & s('type.ffi.ffi_state'(X1),X5) = s('type.ffi.ffi_state'(X1),X9)))),
  inference(ennf_transformation,[],[f27])).
fof(f27,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : (s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.conSem.state'(X1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3))),s('type.conSem.state'(X1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X4))),s('type.conSem.state'(X1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X5))),s('type.conSem.state'(X0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.conSem.state'(X1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X7))),s('type.conSem.state'(X1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X8))),s('type.conSem.state'(X1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X9))),s('type.conSem.state'(X0),'const.bool.ARB_0'))))))))) <=> (s('type.num.num',X2) = s('type.num.num',X6) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X7) & s('type.list.list'('type.option.option'('type.conSem.v')),X4) = s('type.list.list'('type.option.option'('type.conSem.v')),X8) & s('type.ffi.ffi_state'(X1),X5) = s('type.ffi.ffi_state'(X1),X9)))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9] : (s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.conSem.state'(X1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3))),s('type.conSem.state'(X1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X4))),s('type.conSem.state'(X1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X5))),s('type.conSem.state'(X0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(X1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.conSem.state'(X1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X7))),s('type.conSem.state'(X1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X8))),s('type.conSem.state'(X1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X9))),s('type.conSem.state'(X0),'const.bool.ARB_0'))))))))) <=> (s('type.num.num',X2) = s('type.num.num',X6) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X7) & s('type.list.list'('type.option.option'('type.conSem.v')),X4) = s('type.list.list'('type.option.option'('type.conSem.v')),X8) & s('type.ffi.ffi_state'(X1),X5) = s('type.ffi.ffi_state'(X1),X9)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15] : (s('type.conSem.state'(X7),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X8))),s('type.conSem.state'(X7),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X9))),s('type.conSem.state'(X7),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X10))),s('type.conSem.state'(X7),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),'const.combin.K_1'(s('type.ffi.ffi_state'(X7),X11))),s('type.conSem.state'(X6),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(X7),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.conSem.state'(X7),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X13))),s('type.conSem.state'(X7),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X14))),s('type.conSem.state'(X7),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),'const.combin.K_1'(s('type.ffi.ffi_state'(X7),X15))),s('type.conSem.state'(X6),'const.bool.ARB_0'))))))))) <=> (s('type.num.num',X8) = s('type.num.num',X12) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X9) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X13) & s('type.list.list'('type.option.option'('type.conSem.v')),X10) = s('type.list.list'('type.option.option'('type.conSem.v')),X14) & s('type.ffi.ffi_state'(X7),X11) = s('type.ffi.ffi_state'(X7),X15)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15] : (s('type.conSem.state'(X7),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X8))),s('type.conSem.state'(X7),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X9))),s('type.conSem.state'(X7),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X10))),s('type.conSem.state'(X7),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),'const.combin.K_1'(s('type.ffi.ffi_state'(X7),X11))),s('type.conSem.state'(X6),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(X7),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.conSem.state'(X7),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X13))),s('type.conSem.state'(X7),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),X14))),s('type.conSem.state'(X7),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),'const.combin.K_1'(s('type.ffi.ffi_state'(X7),X15))),s('type.conSem.state'(X6),'const.bool.ARB_0'))))))))) <=> (s('type.num.num',X8) = s('type.num.num',X12) & s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X9) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X13) & s('type.list.list'('type.option.option'('type.conSem.v')),X10) = s('type.list.list'('type.option.option'('type.conSem.v')),X14) & s('type.ffi.ffi_state'(X7),X11) = s('type.ffi.ffi_state'(X7),X15)))),
  file('thm.conSem.state_literal_|49||49|','thm.conSem.state_literal_|49||49|')).
fof(f113,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7) | $spl4),
  inference(cnf_transformation,[],[f113_D])).
fof(f113_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f78,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7) | s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0')))))))))),
  inference(cnf_transformation,[],[f73])).
fof(f115,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),sK4) = s('type.list.list'('type.option.option'('type.conSem.v')),sK8) | $spl6),
  inference(cnf_transformation,[],[f115_D])).
fof(f115_D,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),sK4) = s('type.list.list'('type.option.option'('type.conSem.v')),sK8) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f79,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),sK4) = s('type.list.list'('type.option.option'('type.conSem.v')),sK8) | s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0')))))))))),
  inference(cnf_transformation,[],[f73])).
fof(f117,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) = s('type.ffi.ffi_state'(sK1),sK9) | $spl8),
  inference(cnf_transformation,[],[f117_D])).
fof(f117_D,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) = s('type.ffi.ffi_state'(sK1),sK9) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f80,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) = s('type.ffi.ffi_state'(sK1),sK9) | s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0')))))))))),
  inference(cnf_transformation,[],[f73])).
fof(f110,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl1),
  inference(cnf_transformation,[],[f110_D])).
fof(f110_D,plain,(
  s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f112,plain,(
  s('type.num.num',sK2) != s('type.num.num',sK6) | $spl3),
  inference(cnf_transformation,[],[f112_D])).
fof(f112_D,plain,(
  s('type.num.num',sK2) != s('type.num.num',sK6) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f114,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7) | $spl5),
  inference(cnf_transformation,[],[f114_D])).
fof(f114_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f116,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),sK4) != s('type.list.list'('type.option.option'('type.conSem.v')),sK8) | $spl7),
  inference(cnf_transformation,[],[f116_D])).
fof(f116_D,plain,(
  s('type.list.list'('type.option.option'('type.conSem.v')),sK4) != s('type.list.list'('type.option.option'('type.conSem.v')),sK8) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f118,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) != s('type.ffi.ffi_state'(sK1),sK9) | $spl9),
  inference(cnf_transformation,[],[f118_D])).
fof(f118_D,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) != s('type.ffi.ffi_state'(sK1),sK9) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f81,plain,(
  s('type.ffi.ffi_state'(sK1),sK5) != s('type.ffi.ffi_state'(sK1),sK9) | s('type.list.list'('type.option.option'('type.conSem.v')),sK4) != s('type.list.list'('type.option.option'('type.conSem.v')),sK8) | s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7) | s('type.num.num',sK2) != s('type.num.num',sK6) | s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK3))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK4))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK5))),s('type.conSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.conSem.state'(sK1),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.conSem.state'(sK1),'const.conSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),sK7))),s('type.conSem.state'(sK1),'const.conSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),sK8))),s('type.conSem.state'(sK1),'const.conSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK9))),s('type.conSem.state'(sK0),'const.bool.ARB_0')))))))))),
  inference(cnf_transformation,[],[f73])).
% SZS output end Proof for thm.conSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 80
% Passive clauses: 271
% Generated clauses: 12903
% Final active clauses: 71
% Final passive clauses: 181
% Input formulas: 24
% Initial clauses: 32
% 
% Duplicate literals: 668
% Trivial inequalities: 141
% Fw subsumption resolutions: 810
% Fw demodulations: 1304
% Bw demodulations: 6
% Condensations: 1890
% Global subsumptions: 4
% 
% Simple tautologies: 147
% Equational tautologies: 77
% Forward subsumptions: 7542
% Fw demodulations to eq. taut.: 16
% Bw demodulations to eq. taut.: 1
% 
% Unit resulting resolution: 320
% Forward superposition: 4199
% Backward superposition: 3236
% Self superposition: 191
% Equality factoring: 64
% Equality resolution: 17
% 
% Split clauses: 17
% Split components: 37
% SAT solver clauses: 331
% SAT solver unit clauses: 39
% SAT solver binary clauses: 77
% 
% Sat splits: 17
% Sat splitting refutations: 20
% 
% Memory used [KB]: 8571
% Time elapsed: 0.511 s
% ------------------------------
% ------------------------------
% Success in time 1.889 s
