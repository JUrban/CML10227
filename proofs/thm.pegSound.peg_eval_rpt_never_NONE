Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.pegSound
% (109540)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1096
% Passive clauses: 8106
% Generated clauses: 23369
% Final active clauses: 1090
% Final passive clauses: 6653
% Input formulas: 132
% Initial clauses: 802
% 
% Duplicate literals: 242
% Trivial inequalities: 186
% Fw subsumption resolutions: 1457
% Fw demodulations: 1917
% Bw demodulations: 6
% 
% Simple tautologies: 309
% Equational tautologies: 36
% Forward subsumptions: 10941
% 
% Binary resolution: 8016
% Factoring: 1133
% Forward superposition: 3411
% Backward superposition: 6007
% Self superposition: 31
% Equality factoring: 2
% Equality resolution: 25
% 
% Split clauses: 328
% Split components: 658
% SAT solver clauses: 541
% SAT solver unit clauses: 7
% SAT solver binary clauses: 85
% 
% Sat splits: 328
% 
% TWLsolver clauses: 541
% TWLsolver calls for satisfiability: 425
% 
% Memory used [KB]: 15735
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.pegSound
% (109564)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 455
% Passive clauses: 2617
% Generated clauses: 9914
% Final active clauses: 443
% Final passive clauses: 1792
% Input formulas: 132
% Initial clauses: 802
% 
% Duplicate literals: 121
% Trivial inequalities: 7
% Fw subsumption resolutions: 724
% Fw demodulations: 449
% Bw demodulations: 378
% Condensations: 139
% Global subsumptions: 34
% 
% Simple tautologies: 251
% Equational tautologies: 13
% Forward subsumptions: 2975
% 
% Binary resolution: 2536
% Factoring: 336
% Forward superposition: 995
% Backward superposition: 717
% Self superposition: 20
% Equality factoring: 2
% Equality resolution: 6
% 
% Split clauses: 16
% Split components: 32
% SAT solver clauses: 3305
% SAT solver unit clauses: 826
% SAT solver binary clauses: 442
% SAT solver learnt clauses: 68
% SAT solver learnt literals: 394
% 
% Sat splits: 16
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 3169
% TWLsolver calls for satisfiability: 48404
% 
% Memory used [KB]: 15607
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.pegSound
% (109591)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1997
% Passive clauses: 11588
% Generated clauses: 65989
% Final active clauses: 1544
% Final passive clauses: 3236
% Input formulas: 132
% Initial clauses: 802
% Discarded non-redundant clauses: 4739
% 
% Duplicate literals: 352
% Trivial inequalities: 21
% Fw subsumption resolutions: 857
% Fw demodulations: 15605
% Bw demodulations: 2744
% Condensations: 996
% Global subsumptions: 311
% 
% Simple tautologies: 185
% Equational tautologies: 79
% Forward subsumptions: 27482
% Fw demodulations to eq. taut.: 4869
% Bw demodulations to eq. taut.: 58
% 
% Unit resulting resolution: 21244
% Factoring: 1
% Forward superposition: 10839
% Backward superposition: 11930
% Self superposition: 98
% Equality factoring: 26
% Equality resolution: 39
% 
% Split clauses: 52
% Split components: 104
% SAT solver clauses: 13108
% SAT solver unit clauses: 4318
% SAT solver binary clauses: 4780
% 
% Sat splits: 52
% Sat splitting refutations: 1102
% 
% Memory used [KB]: 175263
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.pegSound
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pegSound
% SZS output start Proof for thm.pegSound
fof(f1860,plain,(
  $false),
  inference(subsumption_resolution,[],[f1605,f1575])).
fof(f1575,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f260])).
fof(f260,plain,(
  ! [X0,X1] : s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(flattening,[],[f259])).
fof(f259,plain,(
  ! [X0] : ! [X1] : ~s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(rectify,[],[f98])).
fof(f98,axiom,(
  ! [X7] : ! [X47] : ~s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X47)))),
  file('thm.pegSound.peg_eval_rpt_never_NONE','thm.option.NOT_NONE_SOME')).
fof(f1605,plain,(
  s('type.option.option'('type.pair.prod'('type.list.list'(sK103),sK104)),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(sK103),sK104)),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK103),sK104),'const.pair.,_2'(s('type.list.list'(sK103),sK126(sK108,sK107,sK106,sK105,'const.option.NONE_0',sK104,sK103,sK102)),s(sK104,happ(s(fun('type.list.list'(sK104),sK104),sK107),s('type.list.list'(sK104),sK127(sK108,sK107,sK106,sK105,'const.option.NONE_0',sK104,sK103,sK102))))))))),
  inference(resolution,[],[f862,f1103])).
fof(f1103,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3) = s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X1),X2),'const.pair.,_2'(s('type.list.list'(X1),sK126(X7,X6,X5,X4,X3,X2,X1,X0)),s(X2,happ(s(fun('type.list.list'(X2),X2),X6),s('type.list.list'(X2),sK127(X7,X6,X5,X4,X3,X2,X1,X0)))))))) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),'const.peg.rpt_2'(s('type.peg.pegsym'(X1,X0,X2),X4),s(fun('type.list.list'(X2),X2),X6))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3))))) )),
  inference(cnf_transformation,[],[f575])).
fof(f575,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : ((~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),'const.peg.rpt_2'(s('type.peg.pegsym'(X1,X0,X2),X4),s(fun('type.list.list'(X2),X2),X6))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3)))) | (p(s(bool,'const.peg.peg_eval_list_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),X4))),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),sK126(X7,X6,X5,X4,X3,X2,X1,X0)),s('type.list.list'(X2),sK127(X7,X6,X5,X4,X3,X2,X1,X0))))))) & s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3) = s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X1),X2),'const.pair.,_2'(s('type.list.list'(X1),sK126(X7,X6,X5,X4,X3,X2,X1,X0)),s(X2,happ(s(fun('type.list.list'(X2),X2),X6),s('type.list.list'(X2),sK127(X7,X6,X5,X4,X3,X2,X1,X0)))))))))) & (! [X8,X9] : (~p(s(bool,'const.peg.peg_eval_list_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),X4))),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),X8),s('type.list.list'(X2),X9)))))) | s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3) != s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X1),X2),'const.pair.,_2'(s('type.list.list'(X1),X8),s(X2,happ(s(fun('type.list.list'(X2),X2),X6),s('type.list.list'(X2),X9)))))))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),'const.peg.rpt_2'(s('type.peg.pegsym'(X1,X0,X2),X4),s(fun('type.list.list'(X2),X2),X6))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK126,sK127])],[f574])).
fof(f574,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : ((~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),'const.peg.rpt_2'(s('type.peg.pegsym'(X1,X0,X2),X4),s(fun('type.list.list'(X2),X2),X6))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3)))) | ? [X10,X11] : (p(s(bool,'const.peg.peg_eval_list_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),X4))),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),X10),s('type.list.list'(X2),X11)))))) & s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3) = s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X1),X2),'const.pair.,_2'(s('type.list.list'(X1),X10),s(X2,happ(s(fun('type.list.list'(X2),X2),X6),s('type.list.list'(X2),X11))))))))) & (! [X8,X9] : (~p(s(bool,'const.peg.peg_eval_list_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),X4))),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),X8),s('type.list.list'(X2),X9)))))) | s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3) != s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X1),X2),'const.pair.,_2'(s('type.list.list'(X1),X8),s(X2,happ(s(fun('type.list.list'(X2),X2),X6),s('type.list.list'(X2),X9)))))))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),'const.peg.rpt_2'(s('type.peg.pegsym'(X1,X0,X2),X4),s(fun('type.list.list'(X2),X2),X6))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3))))))),
  inference(rectify,[],[f573])).
fof(f573,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : ((~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),'const.peg.rpt_2'(s('type.peg.pegsym'(X1,X0,X2),X4),s(fun('type.list.list'(X2),X2),X6))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3)))) | ? [X8,X9] : (p(s(bool,'const.peg.peg_eval_list_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),X4))),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),X8),s('type.list.list'(X2),X9)))))) & s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3) = s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X1),X2),'const.pair.,_2'(s('type.list.list'(X1),X8),s(X2,happ(s(fun('type.list.list'(X2),X2),X6),s('type.list.list'(X2),X9))))))))) & (! [X8,X9] : (~p(s(bool,'const.peg.peg_eval_list_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),X4))),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),X8),s('type.list.list'(X2),X9)))))) | s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3) != s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X1),X2),'const.pair.,_2'(s('type.list.list'(X1),X8),s(X2,happ(s(fun('type.list.list'(X2),X2),X6),s('type.list.list'(X2),X9)))))))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),'const.peg.rpt_2'(s('type.peg.pegsym'(X1,X0,X2),X4),s(fun('type.list.list'(X2),X2),X6))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3))))))),
  inference(nnf_transformation,[],[f226])).
fof(f226,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),'const.peg.rpt_2'(s('type.peg.pegsym'(X1,X0,X2),X4),s(fun('type.list.list'(X2),X2),X6))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3)))) <=> ? [X8,X9] : (p(s(bool,'const.peg.peg_eval_list_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),X4))),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),X8),s('type.list.list'(X2),X9)))))) & s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3) = s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X1),X2),'const.pair.,_2'(s('type.list.list'(X1),X8),s(X2,happ(s(fun('type.list.list'(X2),X2),X6),s('type.list.list'(X2),X9)))))))))),
  inference(flattening,[],[f225])).
fof(f225,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5,X6,X7] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),'const.peg.rpt_2'(s('type.peg.pegsym'(X1,X0,X2),X4),s(fun('type.list.list'(X2),X2),X6))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3)))) <=> ? [X8,X9] : (p(s(bool,'const.peg.peg_eval_list_3'(s('type.peg.peg'(X1,X0,X2),X7),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,X2),X4))),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),X8),s('type.list.list'(X2),X9)))))) & s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),X3) = s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X1),X2),'const.pair.,_2'(s('type.list.list'(X1),X8),s(X2,happ(s(fun('type.list.list'(X2),X2),X6),s('type.list.list'(X2),X9)))))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6,X7,X8] : ! [X47,X19,X51,X11,X12] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X6,X8),X12),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X6,X8)),'const.pair.,_2'(s('type.list.list'(X7),X51),s('type.peg.pegsym'(X7,X6,X8),'const.peg.rpt_2'(s('type.peg.pegsym'(X7,X6,X8),X19),s(fun('type.list.list'(X8),X8),X11))))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),X8)),X47)))) <=> ? [X10,X52] : (p(s(bool,'const.peg.peg_eval_list_3'(s('type.peg.peg'(X7,X6,X8),X12),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X6,X8)),'const.pair.,_2'(s('type.list.list'(X7),X51),s('type.peg.pegsym'(X7,X6,X8),X19))),s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),'const.pair.,_2'(s('type.list.list'(X7),X10),s('type.list.list'(X8),X52)))))) & s('type.option.option'('type.pair.prod'('type.list.list'(X7),X8)),X47) = s('type.option.option'('type.pair.prod'('type.list.list'(X7),X8)),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X7),X8),'const.pair.,_2'(s('type.list.list'(X7),X10),s(X8,happ(s(fun('type.list.list'(X8),X8),X11),s('type.list.list'(X8),X52)))))))))),
  file('thm.pegSound.peg_eval_rpt_never_NONE','thm.peg.peg_eval_rpt')).
fof(f862,plain,(
  p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK103,sK102,sK104),sK108),s('type.pair.prod'('type.list.list'(sK103),'type.peg.pegsym'(sK103,sK102,sK104)),'const.pair.,_2'(s('type.list.list'(sK103),sK106),s('type.peg.pegsym'(sK103,sK102,sK104),'const.peg.rpt_2'(s('type.peg.pegsym'(sK103,sK102,sK104),sK105),s(fun('type.list.list'(sK104),sK104),sK107))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK103),sK104)),'const.option.NONE_0'))))),
  inference(cnf_transformation,[],[f463])).
fof(f463,plain,(
  p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK103,sK102,sK104),sK108),s('type.pair.prod'('type.list.list'(sK103),'type.peg.pegsym'(sK103,sK102,sK104)),'const.pair.,_2'(s('type.list.list'(sK103),sK106),s('type.peg.pegsym'(sK103,sK102,sK104),'const.peg.rpt_2'(s('type.peg.pegsym'(sK103,sK102,sK104),sK105),s(fun('type.list.list'(sK104),sK104),sK107))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK103),sK104)),'const.option.NONE_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK102,sK103,sK104,sK105,sK106,sK107,sK108])],[f281])).
fof(f281,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,X2),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,X2),'const.peg.rpt_2'(s('type.peg.pegsym'(X1,X0,X2),X3),s(fun('type.list.list'(X2),X2),X5))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),'const.option.NONE_0'))))),
  inference(ennf_transformation,[],[f135])).
fof(f135,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6] : ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,X2),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,X2),'const.peg.rpt_2'(s('type.peg.pegsym'(X1,X0,X2),X3),s(fun('type.list.list'(X2),X2),X5))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),'const.option.NONE_0'))))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5,X6] : ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,X2),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,X2)),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,X2),'const.peg.rpt_2'(s('type.peg.pegsym'(X1,X0,X2),X3),s(fun('type.list.list'(X2),X2),X5))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),X2)),'const.option.NONE_0'))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11,X12] : ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X6,X8),X12),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X6,X8)),'const.pair.,_2'(s('type.list.list'(X7),X10),s('type.peg.pegsym'(X7,X6,X8),'const.peg.rpt_2'(s('type.peg.pegsym'(X7,X6,X8),X9),s(fun('type.list.list'(X8),X8),X11))))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),X8)),'const.option.NONE_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11,X12] : ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X6,X8),X12),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X6,X8)),'const.pair.,_2'(s('type.list.list'(X7),X10),s('type.peg.pegsym'(X7,X6,X8),'const.peg.rpt_2'(s('type.peg.pegsym'(X7,X6,X8),X9),s(fun('type.list.list'(X8),X8),X11))))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),X8)),'const.option.NONE_0'))))),
  file('thm.pegSound.peg_eval_rpt_never_NONE','thm.pegSound.peg_eval_rpt_never_NONE')).
% SZS output end Proof for thm.pegSound
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 634
% Passive clauses: 3
% Generated clauses: 259
% Final active clauses: 634
% Final passive clauses: 2
% Input formulas: 132
% Initial clauses: 728
% 
% Selected by SInE selection: 82
% SInE iterations: 1
% 
% Duplicate literals: 15
% Fw subsumption resolutions: 1
% 
% Simple tautologies: 93
% Equational tautologies: 3
% 
% Binary resolution: 129
% Forward superposition: 126
% 
% SAT solver clauses: 1
% 
% Memory used [KB]: 7675
% Time elapsed: 0.196 s
% ------------------------------
% ------------------------------
% Success in time 11.93 s
