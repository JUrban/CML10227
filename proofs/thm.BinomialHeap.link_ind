Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.BinomialHeap
% (42598)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 863
% Passive clauses: 6255
% Generated clauses: 30483
% Final active clauses: 720
% Final passive clauses: 4921
% Input formulas: 516
% Initial clauses: 842
% 
% Duplicate literals: 206
% Trivial inequalities: 43
% Fw subsumption resolutions: 1440
% Fw demodulations: 3211
% Bw demodulations: 133
% 
% Simple tautologies: 289
% Equational tautologies: 25
% Forward subsumptions: 18922
% Fw demodulations to eq. taut.: 4
% 
% Binary resolution: 5064
% Factoring: 930
% Forward superposition: 9798
% Backward superposition: 8638
% Self superposition: 52
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 379
% Split components: 760
% SAT solver clauses: 553
% SAT solver unit clauses: 17
% SAT solver binary clauses: 77
% 
% Sat splits: 379
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 553
% TWLsolver calls for satisfiability: 355
% 
% Memory used [KB]: 16886
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.BinomialHeap
% (42615)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 516
% Passive clauses: 2929
% Generated clauses: 20347
% Final active clauses: 427
% Final passive clauses: 2223
% Input formulas: 516
% Initial clauses: 842
% 
% Duplicate literals: 97
% Trivial inequalities: 18
% Fw subsumption resolutions: 667
% Fw demodulations: 2316
% Bw demodulations: 239
% Condensations: 112
% Global subsumptions: 25
% 
% Simple tautologies: 254
% Equational tautologies: 9
% Forward subsumptions: 10516
% Bw demodulations to eq. taut.: 4
% 
% Binary resolution: 1987
% Factoring: 244
% Forward superposition: 5566
% Backward superposition: 5039
% Self superposition: 65
% Equality factoring: 2
% Equality resolution: 5
% 
% Split clauses: 23
% Split components: 46
% SAT solver clauses: 4242
% SAT solver unit clauses: 1199
% SAT solver binary clauses: 150
% SAT solver learnt clauses: 50
% SAT solver learnt literals: 16
% 
% Sat splits: 23
% Sat splitting refutations: 15
% 
% TWLsolver clauses: 4142
% TWLsolver calls for satisfiability: 5450
% 
% Memory used [KB]: 30703
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.BinomialHeap
% (42632)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1010
% Passive clauses: 10599
% Generated clauses: 113330
% Final active clauses: 781
% Final passive clauses: 5840
% Input formulas: 516
% Initial clauses: 842
% Discarded non-redundant clauses: 11330
% 
% Duplicate literals: 8
% Trivial inequalities: 25
% Fw subsumption resolutions: 655
% Fw demodulations: 35973
% Bw demodulations: 1235
% Condensations: 47
% 
% Simple tautologies: 153
% Equational tautologies: 50
% Forward subsumptions: 57206
% Fw demodulations to eq. taut.: 299
% Bw demodulations to eq. taut.: 36
% 
% Unit resulting resolution: 31577
% Factoring: 1
% Forward superposition: 22070
% Backward superposition: 20535
% Self superposition: 184
% Equality factoring: 2
% Equality resolution: 11
% 
% Split clauses: 60
% Split components: 120
% SAT solver clauses: 11353
% SAT solver unit clauses: 3615
% SAT solver binary clauses: 4847
% 
% Sat splits: 60
% Sat splitting refutations: 632
% 
% Memory used [KB]: 300123
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.BinomialHeap
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.BinomialHeap
% SZS output start Proof for thm.BinomialHeap
fof(f74075,plain,(
  $false),
  inference(equality_resolution,[],[f45401])).
fof(f45401,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s('type.BinomialHeap.tree'('type.BinomialHeap.tree'(sK16)),'const.BinomialHeap.Node_3'(s('type.num.num',X21),s('type.BinomialHeap.tree'(sK16),sK20),s('type.list.list'('type.BinomialHeap.tree'('type.BinomialHeap.tree'(sK16))),X22))) != s('type.BinomialHeap.tree'('type.BinomialHeap.tree'(sK16)),'const.BinomialHeap.Node_3'(s('type.num.num',X23),s('type.BinomialHeap.tree'(sK16),X20),s('type.list.list'('type.BinomialHeap.tree'('type.BinomialHeap.tree'(sK16))),X24)))) )),
  inference(subsumption_resolution,[],[f45363,f1756])).
fof(f1756,plain,(
  ( ! [X26,X24,X23,X27,X25,X22] : (p(s(bool,happ(s(fun('type.BinomialHeap.tree'(sK16),bool),happ(s(fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool)),happ(s(fun(fun(sK15,fun(sK15,bool)),fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool))),happ(s(fun(fun(sK16,sK15),fun(fun(sK15,fun(sK15,bool)),fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool)))),sK17),s(fun(sK16,sK15),X23))),s(fun(sK15,fun(sK15,bool)),X24))),s('type.BinomialHeap.tree'(sK16),'const.BinomialHeap.Node_3'(s('type.num.num',X25),s(sK16,X26),s('type.list.list'('type.BinomialHeap.tree'(sK16)),X27))))),s('type.BinomialHeap.tree'(sK16),X22))))) )),
  inference(superposition,[],[f918,f1222])).
fof(f1222,plain,(
  ( ! [X0,X1] : (s('type.BinomialHeap.tree'(X0),X1) = s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',sK85(X1,X0)),s(X0,sK86(X1,X0)),s('type.list.list'('type.BinomialHeap.tree'(X0)),sK87(X1,X0))))) )),
  inference(cnf_transformation,[],[f895])).
fof(f895,plain,(
  ! [X0,X1] : s('type.BinomialHeap.tree'(X0),X1) = s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',sK85(X1,X0)),s(X0,sK86(X1,X0)),s('type.list.list'('type.BinomialHeap.tree'(X0)),sK87(X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK85,sK86,sK87])],[f624])).
fof(f624,plain,(
  ! [X0,X1] : ? [X2,X3,X4] : s('type.BinomialHeap.tree'(X0),X1) = s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X2),s(X0,X3),s('type.list.list'('type.BinomialHeap.tree'(X0)),X4)))),
  inference(flattening,[],[f623])).
fof(f623,plain,(
  ! [X0] : ! [X1] : ? [X2,X3,X4] : s('type.BinomialHeap.tree'(X0),X1) = s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X2),s(X0,X3),s('type.list.list'('type.BinomialHeap.tree'(X0)),X4)))),
  inference(rectify,[],[f84])).
fof(f84,axiom,(
  ! [X7] : ! [X80] : ? [X32,X31,X30] : s('type.BinomialHeap.tree'(X7),X80) = s('type.BinomialHeap.tree'(X7),'const.BinomialHeap.Node_3'(s('type.num.num',X32),s(X7,X31),s('type.list.list'('type.BinomialHeap.tree'(X7)),X30)))),
  file('thm.BinomialHeap.link_ind','thm.BinomialHeap.tree_nchotomy')).
fof(f918,plain,(
  ( ! [X14,X12,X10,X8,X7,X13,X11,X9] : (p(s(bool,happ(s(fun('type.BinomialHeap.tree'(sK16),bool),happ(s(fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool)),happ(s(fun(fun(sK15,fun(sK15,bool)),fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool))),happ(s(fun(fun(sK16,sK15),fun(fun(sK15,fun(sK15,bool)),fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool)))),sK17),s(fun(sK16,sK15),X7))),s(fun(sK15,fun(sK15,bool)),X8))),s('type.BinomialHeap.tree'(sK16),'const.BinomialHeap.Node_3'(s('type.num.num',X9),s(sK16,X10),s('type.list.list'('type.BinomialHeap.tree'(sK16)),X11))))),s('type.BinomialHeap.tree'(sK16),'const.BinomialHeap.Node_3'(s('type.num.num',X12),s(sK16,X13),s('type.list.list'('type.BinomialHeap.tree'(sK16)),X14))))))) )),
  inference(cnf_transformation,[],[f739])).
fof(f739,plain,(
  ! [X7,X8,X9,X10,X11,X12,X13,X14] : p(s(bool,happ(s(fun('type.BinomialHeap.tree'(sK16),bool),happ(s(fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool)),happ(s(fun(fun(sK15,fun(sK15,bool)),fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool))),happ(s(fun(fun(sK16,sK15),fun(fun(sK15,fun(sK15,bool)),fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool)))),sK17),s(fun(sK16,sK15),X7))),s(fun(sK15,fun(sK15,bool)),X8))),s('type.BinomialHeap.tree'(sK16),'const.BinomialHeap.Node_3'(s('type.num.num',X9),s(sK16,X10),s('type.list.list'('type.BinomialHeap.tree'(sK16)),X11))))),s('type.BinomialHeap.tree'(sK16),'const.BinomialHeap.Node_3'(s('type.num.num',X12),s(sK16,X13),s('type.list.list'('type.BinomialHeap.tree'(sK16)),X14)))))) & ~p(s(bool,happ(s(fun('type.BinomialHeap.tree'(sK16),bool),happ(s(fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool)),happ(s(fun(fun(sK15,fun(sK15,bool)),fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool))),happ(s(fun(fun(sK16,sK15),fun(fun(sK15,fun(sK15,bool)),fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool)))),sK17),s(fun(sK16,sK15),sK18))),s(fun(sK15,fun(sK15,bool)),sK19))),s('type.BinomialHeap.tree'(sK16),sK20))),s('type.BinomialHeap.tree'(sK16),sK21))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15,sK16,sK17,sK18,sK19,sK20,sK21])],[f738])).
fof(f738,plain,(
  ? [X0,X1,X2] : (! [X7,X8,X9,X10,X11,X12,X13,X14] : p(s(bool,happ(s(fun('type.BinomialHeap.tree'(X1),bool),happ(s(fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)),happ(s(fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool))),happ(s(fun(fun(X1,X0),fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)))),X2),s(fun(X1,X0),X7))),s(fun(X0,fun(X0,bool)),X8))),s('type.BinomialHeap.tree'(X1),'const.BinomialHeap.Node_3'(s('type.num.num',X9),s(X1,X10),s('type.list.list'('type.BinomialHeap.tree'(X1)),X11))))),s('type.BinomialHeap.tree'(X1),'const.BinomialHeap.Node_3'(s('type.num.num',X12),s(X1,X13),s('type.list.list'('type.BinomialHeap.tree'(X1)),X14)))))) & ? [X3,X4,X5,X6] : ~p(s(bool,happ(s(fun('type.BinomialHeap.tree'(X1),bool),happ(s(fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)),happ(s(fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool))),happ(s(fun(fun(X1,X0),fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)))),X2),s(fun(X1,X0),X3))),s(fun(X0,fun(X0,bool)),X4))),s('type.BinomialHeap.tree'(X1),X5))),s('type.BinomialHeap.tree'(X1),X6)))))),
  inference(rectify,[],[f658])).
fof(f658,plain,(
  ? [X0,X1,X2] : (! [X3,X4,X5,X6,X7,X8,X9,X10] : p(s(bool,happ(s(fun('type.BinomialHeap.tree'(X1),bool),happ(s(fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)),happ(s(fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool))),happ(s(fun(fun(X1,X0),fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)))),X2),s(fun(X1,X0),X3))),s(fun(X0,fun(X0,bool)),X4))),s('type.BinomialHeap.tree'(X1),'const.BinomialHeap.Node_3'(s('type.num.num',X5),s(X1,X6),s('type.list.list'('type.BinomialHeap.tree'(X1)),X7))))),s('type.BinomialHeap.tree'(X1),'const.BinomialHeap.Node_3'(s('type.num.num',X8),s(X1,X9),s('type.list.list'('type.BinomialHeap.tree'(X1)),X10)))))) & ? [X11,X12,X13,X14] : ~p(s(bool,happ(s(fun('type.BinomialHeap.tree'(X1),bool),happ(s(fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)),happ(s(fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool))),happ(s(fun(fun(X1,X0),fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)))),X2),s(fun(X1,X0),X11))),s(fun(X0,fun(X0,bool)),X12))),s('type.BinomialHeap.tree'(X1),X13))),s('type.BinomialHeap.tree'(X1),X14)))))),
  inference(ennf_transformation,[],[f519])).
fof(f519,plain,(
  ~! [X0,X1,X2] : (! [X3,X4,X5,X6,X7,X8,X9,X10] : p(s(bool,happ(s(fun('type.BinomialHeap.tree'(X1),bool),happ(s(fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)),happ(s(fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool))),happ(s(fun(fun(X1,X0),fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)))),X2),s(fun(X1,X0),X3))),s(fun(X0,fun(X0,bool)),X4))),s('type.BinomialHeap.tree'(X1),'const.BinomialHeap.Node_3'(s('type.num.num',X5),s(X1,X6),s('type.list.list'('type.BinomialHeap.tree'(X1)),X7))))),s('type.BinomialHeap.tree'(X1),'const.BinomialHeap.Node_3'(s('type.num.num',X8),s(X1,X9),s('type.list.list'('type.BinomialHeap.tree'(X1)),X10)))))) => ! [X11,X12,X13,X14] : p(s(bool,happ(s(fun('type.BinomialHeap.tree'(X1),bool),happ(s(fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)),happ(s(fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool))),happ(s(fun(fun(X1,X0),fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)))),X2),s(fun(X1,X0),X11))),s(fun(X0,fun(X0,bool)),X12))),s('type.BinomialHeap.tree'(X1),X13))),s('type.BinomialHeap.tree'(X1),X14)))))),
  inference(flattening,[],[f518])).
fof(f518,plain,(
  ~! [X0,X1] : ! [X2] : (! [X3,X4,X5,X6,X7,X8,X9,X10] : p(s(bool,happ(s(fun('type.BinomialHeap.tree'(X1),bool),happ(s(fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)),happ(s(fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool))),happ(s(fun(fun(X1,X0),fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)))),X2),s(fun(X1,X0),X3))),s(fun(X0,fun(X0,bool)),X4))),s('type.BinomialHeap.tree'(X1),'const.BinomialHeap.Node_3'(s('type.num.num',X5),s(X1,X6),s('type.list.list'('type.BinomialHeap.tree'(X1)),X7))))),s('type.BinomialHeap.tree'(X1),'const.BinomialHeap.Node_3'(s('type.num.num',X8),s(X1,X9),s('type.list.list'('type.BinomialHeap.tree'(X1)),X10)))))) => ! [X11,X12,X13,X14] : p(s(bool,happ(s(fun('type.BinomialHeap.tree'(X1),bool),happ(s(fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)),happ(s(fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool))),happ(s(fun(fun(X1,X0),fun(fun(X0,fun(X0,bool)),fun('type.BinomialHeap.tree'(X1),fun('type.BinomialHeap.tree'(X1),bool)))),X2),s(fun(X1,X0),X11))),s(fun(X0,fun(X0,bool)),X12))),s('type.BinomialHeap.tree'(X1),X13))),s('type.BinomialHeap.tree'(X1),X14)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : (! [X9,X10,X11,X12,X13,X14,X15,X16] : p(s(bool,happ(s(fun('type.BinomialHeap.tree'(X7),bool),happ(s(fun('type.BinomialHeap.tree'(X7),fun('type.BinomialHeap.tree'(X7),bool)),happ(s(fun(fun(X6,fun(X6,bool)),fun('type.BinomialHeap.tree'(X7),fun('type.BinomialHeap.tree'(X7),bool))),happ(s(fun(fun(X7,X6),fun(fun(X6,fun(X6,bool)),fun('type.BinomialHeap.tree'(X7),fun('type.BinomialHeap.tree'(X7),bool)))),X8),s(fun(X7,X6),X9))),s(fun(X6,fun(X6,bool)),X10))),s('type.BinomialHeap.tree'(X7),'const.BinomialHeap.Node_3'(s('type.num.num',X11),s(X7,X12),s('type.list.list'('type.BinomialHeap.tree'(X7)),X13))))),s('type.BinomialHeap.tree'(X7),'const.BinomialHeap.Node_3'(s('type.num.num',X14),s(X7,X15),s('type.list.list'('type.BinomialHeap.tree'(X7)),X16)))))) => ! [X17,X18,X19,X20] : p(s(bool,happ(s(fun('type.BinomialHeap.tree'(X7),bool),happ(s(fun('type.BinomialHeap.tree'(X7),fun('type.BinomialHeap.tree'(X7),bool)),happ(s(fun(fun(X6,fun(X6,bool)),fun('type.BinomialHeap.tree'(X7),fun('type.BinomialHeap.tree'(X7),bool))),happ(s(fun(fun(X7,X6),fun(fun(X6,fun(X6,bool)),fun('type.BinomialHeap.tree'(X7),fun('type.BinomialHeap.tree'(X7),bool)))),X8),s(fun(X7,X6),X17))),s(fun(X6,fun(X6,bool)),X18))),s('type.BinomialHeap.tree'(X7),X19))),s('type.BinomialHeap.tree'(X7),X20)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : (! [X9,X10,X11,X12,X13,X14,X15,X16] : p(s(bool,happ(s(fun('type.BinomialHeap.tree'(X7),bool),happ(s(fun('type.BinomialHeap.tree'(X7),fun('type.BinomialHeap.tree'(X7),bool)),happ(s(fun(fun(X6,fun(X6,bool)),fun('type.BinomialHeap.tree'(X7),fun('type.BinomialHeap.tree'(X7),bool))),happ(s(fun(fun(X7,X6),fun(fun(X6,fun(X6,bool)),fun('type.BinomialHeap.tree'(X7),fun('type.BinomialHeap.tree'(X7),bool)))),X8),s(fun(X7,X6),X9))),s(fun(X6,fun(X6,bool)),X10))),s('type.BinomialHeap.tree'(X7),'const.BinomialHeap.Node_3'(s('type.num.num',X11),s(X7,X12),s('type.list.list'('type.BinomialHeap.tree'(X7)),X13))))),s('type.BinomialHeap.tree'(X7),'const.BinomialHeap.Node_3'(s('type.num.num',X14),s(X7,X15),s('type.list.list'('type.BinomialHeap.tree'(X7)),X16)))))) => ! [X17,X18,X19,X20] : p(s(bool,happ(s(fun('type.BinomialHeap.tree'(X7),bool),happ(s(fun('type.BinomialHeap.tree'(X7),fun('type.BinomialHeap.tree'(X7),bool)),happ(s(fun(fun(X6,fun(X6,bool)),fun('type.BinomialHeap.tree'(X7),fun('type.BinomialHeap.tree'(X7),bool))),happ(s(fun(fun(X7,X6),fun(fun(X6,fun(X6,bool)),fun('type.BinomialHeap.tree'(X7),fun('type.BinomialHeap.tree'(X7),bool)))),X8),s(fun(X7,X6),X17))),s(fun(X6,fun(X6,bool)),X18))),s('type.BinomialHeap.tree'(X7),X19))),s('type.BinomialHeap.tree'(X7),X20)))))),
  file('thm.BinomialHeap.link_ind','thm.BinomialHeap.link_ind')).
fof(f45363,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s('type.BinomialHeap.tree'('type.BinomialHeap.tree'(sK16)),'const.BinomialHeap.Node_3'(s('type.num.num',X21),s('type.BinomialHeap.tree'(sK16),sK20),s('type.list.list'('type.BinomialHeap.tree'('type.BinomialHeap.tree'(sK16))),X22))) != s('type.BinomialHeap.tree'('type.BinomialHeap.tree'(sK16)),'const.BinomialHeap.Node_3'(s('type.num.num',X23),s('type.BinomialHeap.tree'(sK16),X20),s('type.list.list'('type.BinomialHeap.tree'('type.BinomialHeap.tree'(sK16))),X24))) | ~p(s(bool,happ(s(fun('type.BinomialHeap.tree'(sK16),bool),happ(s(fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool)),happ(s(fun(fun(sK15,fun(sK15,bool)),fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool))),happ(s(fun(fun(sK16,sK15),fun(fun(sK15,fun(sK15,bool)),fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool)))),sK17),s(fun(sK16,sK15),sK18))),s(fun(sK15,fun(sK15,bool)),sK19))),s('type.BinomialHeap.tree'(sK16),'const.BinomialHeap.Node_3'(s('type.num.num',sK85(X20,sK16)),s(sK16,sK86(X20,sK16)),s('type.list.list'('type.BinomialHeap.tree'(sK16)),sK87(X20,sK16)))))),s('type.BinomialHeap.tree'(sK16),sK21))))) )),
  inference(superposition,[],[f1404,f1222])).
fof(f1404,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.BinomialHeap.tree'('type.BinomialHeap.tree'(sK16)),'const.BinomialHeap.Node_3'(s('type.num.num',X3),s('type.BinomialHeap.tree'(sK16),sK20),s('type.list.list'('type.BinomialHeap.tree'('type.BinomialHeap.tree'(sK16))),X4))) != s('type.BinomialHeap.tree'('type.BinomialHeap.tree'(sK16)),'const.BinomialHeap.Node_3'(s('type.num.num',X1),s('type.BinomialHeap.tree'(sK16),X0),s('type.list.list'('type.BinomialHeap.tree'('type.BinomialHeap.tree'(sK16))),X2))) | ~p(s(bool,happ(s(fun('type.BinomialHeap.tree'(sK16),bool),happ(s(fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool)),happ(s(fun(fun(sK15,fun(sK15,bool)),fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool))),happ(s(fun(fun(sK16,sK15),fun(fun(sK15,fun(sK15,bool)),fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool)))),sK17),s(fun(sK16,sK15),sK18))),s(fun(sK15,fun(sK15,bool)),sK19))),s('type.BinomialHeap.tree'(sK16),X0))),s('type.BinomialHeap.tree'(sK16),sK21))))) )),
  inference(superposition,[],[f919,f1205])).
fof(f1205,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(X0,X2) = s(X0,X5) | s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X1),s(X0,X2),s('type.list.list'('type.BinomialHeap.tree'(X0)),X3))) != s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X4),s(X0,X5),s('type.list.list'('type.BinomialHeap.tree'(X0)),X6)))) )),
  inference(cnf_transformation,[],[f884])).
fof(f884,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X1),s(X0,X2),s('type.list.list'('type.BinomialHeap.tree'(X0)),X3))) != s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X4),s(X0,X5),s('type.list.list'('type.BinomialHeap.tree'(X0)),X6))) | (s('type.num.num',X1) = s('type.num.num',X4) & s(X0,X2) = s(X0,X5) & s('type.list.list'('type.BinomialHeap.tree'(X0)),X3) = s('type.list.list'('type.BinomialHeap.tree'(X0)),X6))) & (s('type.num.num',X1) != s('type.num.num',X4) | s(X0,X2) != s(X0,X5) | s('type.list.list'('type.BinomialHeap.tree'(X0)),X3) != s('type.list.list'('type.BinomialHeap.tree'(X0)),X6) | s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X1),s(X0,X2),s('type.list.list'('type.BinomialHeap.tree'(X0)),X3))) = s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X4),s(X0,X5),s('type.list.list'('type.BinomialHeap.tree'(X0)),X6)))))),
  inference(flattening,[],[f883])).
fof(f883,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X1),s(X0,X2),s('type.list.list'('type.BinomialHeap.tree'(X0)),X3))) != s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X4),s(X0,X5),s('type.list.list'('type.BinomialHeap.tree'(X0)),X6))) | (s('type.num.num',X1) = s('type.num.num',X4) & s(X0,X2) = s(X0,X5) & s('type.list.list'('type.BinomialHeap.tree'(X0)),X3) = s('type.list.list'('type.BinomialHeap.tree'(X0)),X6))) & ((s('type.num.num',X1) != s('type.num.num',X4) | s(X0,X2) != s(X0,X5) | s('type.list.list'('type.BinomialHeap.tree'(X0)),X3) != s('type.list.list'('type.BinomialHeap.tree'(X0)),X6)) | s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X1),s(X0,X2),s('type.list.list'('type.BinomialHeap.tree'(X0)),X3))) = s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X4),s(X0,X5),s('type.list.list'('type.BinomialHeap.tree'(X0)),X6)))))),
  inference(nnf_transformation,[],[f618])).
fof(f618,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X1),s(X0,X2),s('type.list.list'('type.BinomialHeap.tree'(X0)),X3))) = s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X4),s(X0,X5),s('type.list.list'('type.BinomialHeap.tree'(X0)),X6))) <=> (s('type.num.num',X1) = s('type.num.num',X4) & s(X0,X2) = s(X0,X5) & s('type.list.list'('type.BinomialHeap.tree'(X0)),X3) = s('type.list.list'('type.BinomialHeap.tree'(X0)),X6)))),
  inference(flattening,[],[f617])).
fof(f617,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5,X6] : (s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X1),s(X0,X2),s('type.list.list'('type.BinomialHeap.tree'(X0)),X3))) = s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X4),s(X0,X5),s('type.list.list'('type.BinomialHeap.tree'(X0)),X6))) <=> (s('type.num.num',X1) = s('type.num.num',X4) & s(X0,X2) = s(X0,X5) & s('type.list.list'('type.BinomialHeap.tree'(X0)),X3) = s('type.list.list'('type.BinomialHeap.tree'(X0)),X6)))),
  inference(rectify,[],[f86])).
fof(f86,axiom,(
  ! [X7] : ! [X45,X46,X47,X81,X82,X83] : (s('type.BinomialHeap.tree'(X7),'const.BinomialHeap.Node_3'(s('type.num.num',X45),s(X7,X46),s('type.list.list'('type.BinomialHeap.tree'(X7)),X47))) = s('type.BinomialHeap.tree'(X7),'const.BinomialHeap.Node_3'(s('type.num.num',X81),s(X7,X82),s('type.list.list'('type.BinomialHeap.tree'(X7)),X83))) <=> (s('type.num.num',X45) = s('type.num.num',X81) & s(X7,X46) = s(X7,X82) & s('type.list.list'('type.BinomialHeap.tree'(X7)),X47) = s('type.list.list'('type.BinomialHeap.tree'(X7)),X83)))),
  file('thm.BinomialHeap.link_ind','thm.BinomialHeap.tree_|49||49|')).
fof(f919,plain,(
  ~p(s(bool,happ(s(fun('type.BinomialHeap.tree'(sK16),bool),happ(s(fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool)),happ(s(fun(fun(sK15,fun(sK15,bool)),fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool))),happ(s(fun(fun(sK16,sK15),fun(fun(sK15,fun(sK15,bool)),fun('type.BinomialHeap.tree'(sK16),fun('type.BinomialHeap.tree'(sK16),bool)))),sK17),s(fun(sK16,sK15),sK18))),s(fun(sK15,fun(sK15,bool)),sK19))),s('type.BinomialHeap.tree'(sK16),sK20))),s('type.BinomialHeap.tree'(sK16),sK21))))),
  inference(cnf_transformation,[],[f739])).
% SZS output end Proof for thm.BinomialHeap
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1204
% Passive clauses: 21153
% Generated clauses: 72650
% Final active clauses: 1185
% Final passive clauses: 19444
% Input formulas: 516
% Initial clauses: 340
% 
% Selected by SInE selection: 91
% SInE iterations: 1
% 
% Duplicate literals: 1915
% Trivial inequalities: 1619
% Fw subsumption resolutions: 6141
% Fw demodulations: 1349
% Bw demodulations: 3
% 
% Simple tautologies: 2594
% Equational tautologies: 138
% Forward subsumptions: 35593
% 
% Binary resolution: 38776
% Factoring: 162
% Forward superposition: 21262
% Backward superposition: 902
% Equality resolution: 78
% 
% Split clauses: 2829
% Split components: 6355
% SAT solver clauses: 2988
% SAT solver unit clauses: 25
% SAT solver binary clauses: 152
% 
% Sat splits: 2829
% Sat splitting refutations: 27
% 
% Memory used [KB]: 43624
% Time elapsed: 2.770 s
% ------------------------------
% ------------------------------
% Success in time 14.57 s
