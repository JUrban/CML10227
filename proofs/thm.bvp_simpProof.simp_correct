Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.bvp_simpProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvp_simpProof
% SZS output start Proof for thm.bvp_simpProof
fof(f3566,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f3565])).
fof(f3565,plain,(
  s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2))))) != s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2)))))),
  inference(superposition,[],[f31,f2566])).
fof(f2566,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.simp_2'(s('type.bvp.prog',X1),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(X0),X2)))))) )),
  inference(superposition,[],[f41,f40])).
fof(f40,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X1),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X1),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(X0),X2)))))),
  inference(flattening,[],[f18])).
fof(f18,plain,(
  ! [X0] : ! [X1,X2] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X1),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(X0),X2)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X7,X8] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog',X7),s('type.bvpSem.state'(X6),X8))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X7),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(X6),X8)))))),
  file('thm.bvp_simpProof.simp_correct','thm.bvp_simpProof.bvp_simpProof_|48|_prove_ltb')).
fof(f41,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.simp_2'(s('type.bvp.prog',X1),s('type.bvp.prog',X3))),s('type.bvpSem.state'(X0),X2))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X1),s('type.bvp.prog',X3))),s('type.bvpSem.state'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1,X2,X3] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.simp_2'(s('type.bvp.prog',X1),s('type.bvp.prog',X3))),s('type.bvpSem.state'(X0),X2))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X1),s('type.bvp.prog',X3))),s('type.bvpSem.state'(X0),X2)))))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.simp_2'(s('type.bvp.prog',X1),s('type.bvp.prog',X3))),s('type.bvpSem.state'(X0),X2))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X1),s('type.bvp.prog',X3))),s('type.bvpSem.state'(X0),X2)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : ! [X11,X8,X12] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.simp_2'(s('type.bvp.prog',X11),s('type.bvp.prog',X12))),s('type.bvpSem.state'(X6),X8))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X11),s('type.bvp.prog',X12))),s('type.bvpSem.state'(X6),X8)))))),
  file('thm.bvp_simpProof.simp_correct','thm.bvp_simpProof.bvp_simpProof_2_prove_ltb')).
fof(f31,plain,(
  s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2))))) != s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.simp_2'(s('type.bvp.prog',sK1),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(sK0),sK2)))))),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2))))) != s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.simp_2'(s('type.bvp.prog',sK1),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(sK0),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f24])).
fof(f24,plain,(
  ? [X0,X1,X2] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))) != s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.simp_2'(s('type.bvp.prog',X1),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(X0),X2)))))),
  inference(ennf_transformation,[],[f13])).
fof(f13,plain,(
  ~! [X0,X1,X2] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.simp_2'(s('type.bvp.prog',X1),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(X0),X2)))))),
  inference(flattening,[],[f12])).
fof(f12,plain,(
  ~! [X0] : ! [X1,X2] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.simp_2'(s('type.bvp.prog',X1),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(X0),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog',X7),s('type.bvpSem.state'(X6),X8))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.simp_2'(s('type.bvp.prog',X7),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(X6),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog',X7),s('type.bvpSem.state'(X6),X8))))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp_simp.simp_2'(s('type.bvp.prog',X7),s('type.bvp.prog','const.bvp.Skip_0'))),s('type.bvpSem.state'(X6),X8)))))),
  file('thm.bvp_simpProof.simp_correct','thm.bvp_simpProof.simp_correct')).
% SZS output end Proof for thm.bvp_simpProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 32
% Passive clauses: 635
% Generated clauses: 3394
% Final active clauses: 30
% Final passive clauses: 582
% Input formulas: 10
% Initial clauses: 12
% 
% Duplicate literals: 369
% Trivial inequalities: 47
% Fw subsumption resolutions: 305
% Fw demodulations: 1
% 
% Simple tautologies: 123
% Equational tautologies: 80
% Forward subsumptions: 1288
% 
% Binary resolution: 16
% Forward superposition: 1233
% Backward superposition: 948
% Self superposition: 223
% Equality factoring: 202
% Equality resolution: 4
% 
% Split clauses: 194
% Split components: 391
% SAT solver clauses: 565
% SAT solver unit clauses: 241
% SAT solver binary clauses: 165
% 
% Sat splits: 194
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 563
% TWLsolver calls for satisfiability: 22
% 
% Memory used [KB]: 1791
% Time elapsed: 0.135 s
% ------------------------------
% ------------------------------
% Success in time 0.136 s
