Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.conSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.conSem
% SZS output start Proof for thm.conSem
fof(f4978,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4977,f223,f430,f428,f426,f424,f422,f420,f418,f416,f414,f412,f410,f408,f4975,f4974,f4973,f4972,f4971,f4970,f4969,f4968,f4621,f4620,f4976])).
fof(f4976,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f408,f226])).
fof(f226,plain,(
  ( ! [X26] : (s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X26)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  (s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK13))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),sK14))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK15),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK16))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK17),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK18))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK19),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK20),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK21))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK22),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK23),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK24),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK25))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK26),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK27),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK28),s('type.list.list'('type.conSem.v'),sK29))))))))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK30),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),sK31),s('type.list.list'('type.string.char'),sK32))))))))),s('type.list.list'('type.conSem.v'),sK33))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK34),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK35))))))),s('type.list.list'('type.conSem.v'),sK36))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK37),s('type.list.list'('type.string.char'),sK38),s('type.conLang.exp',sK39))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK40),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),sK41),s('type.list.list'('type.string.char'),sK42))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',sK43))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),sK44)))) & ! [X31,X32] : s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X31),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X32))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) & ! [X27,X28,X29,X30] : s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X27),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X28))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X29),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X30),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) & ! [X26] : s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X26))) & ! [X25] : s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),X25))) & ! [X22,X23,X24] : s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X22),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X23))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X24),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) & ! [X16,X17,X18,X19,X20,X21] : s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X16),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X17))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X18),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X19),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X20),s('type.list.list'('type.conSem.v'),X21))))))))) & ! [X12,X13,X14,X15] : s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X12),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X13),s('type.list.list'('type.string.char'),X14))))))))),s('type.list.list'('type.conSem.v'),X15))) & ! [X9,X10,X11] : s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X10))))))),s('type.list.list'('type.conSem.v'),X11))) & ! [X6,X7,X8] : s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X6),s('type.list.list'('type.string.char'),X7),s('type.conLang.exp',X8))) & ! [X3,X4,X5] : s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X4),s('type.list.list'('type.string.char'),X5))) & ! [X2] : s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X2))) & ! [X1] : s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36,sK37,sK38,sK39,sK40,sK41,sK42,sK43,sK44])],[f137])).
fof(f137,plain,(
  ? [X0] : ((? [X64] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X64))) | ? [X63] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),X63))) | ? [X61,X62] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X61),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X62))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) | ? [X58,X59,X60] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X58),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X59))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X60),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) | ? [X54,X55,X56,X57] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X54),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X55))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X56),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X57),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) | ? [X48,X49,X50,X51,X52,X53] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X48),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X49))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X50),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X51),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X52),s('type.list.list'('type.conSem.v'),X53))))))))) | ? [X44,X45,X46,X47] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X44),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X45),s('type.list.list'('type.string.char'),X46))))))))),s('type.list.list'('type.conSem.v'),X47))) | ? [X41,X42,X43] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X41),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X42))))))),s('type.list.list'('type.conSem.v'),X43))) | ? [X38,X39,X40] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X38),s('type.list.list'('type.string.char'),X39),s('type.conLang.exp',X40))) | ? [X35,X36,X37] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X35),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X36),s('type.list.list'('type.string.char'),X37))) | ? [X34] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X34))) | ? [X33] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X33)))) & ! [X31,X32] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X31),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X32))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) & ! [X27,X28,X29,X30] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X27),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X28))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X29),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X30),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) & ! [X26] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X26))) & ! [X25] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),X25))) & ! [X22,X23,X24] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X22),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X23))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X24),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) & ! [X16,X17,X18,X19,X20,X21] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X16),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X17))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X18),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X19),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X20),s('type.list.list'('type.conSem.v'),X21))))))))) & ! [X12,X13,X14,X15] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X12),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X13),s('type.list.list'('type.string.char'),X14))))))))),s('type.list.list'('type.conSem.v'),X15))) & ! [X9,X10,X11] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X10))))))),s('type.list.list'('type.conSem.v'),X11))) & ! [X6,X7,X8] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X6),s('type.list.list'('type.string.char'),X7),s('type.conLang.exp',X8))) & ! [X3,X4,X5] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X4),s('type.list.list'('type.string.char'),X5))) & ! [X2] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X2))) & ! [X1] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X1))))),
  inference(rectify,[],[f97])).
fof(f97,plain,(
  ? [X0] : ((? [X32] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X32))) | ? [X31] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),X31))) | ? [X29,X30] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X29),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X30))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) | ? [X26,X27,X28] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X26),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X27))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X28),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) | ? [X22,X23,X24,X25] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X22),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X23))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X24),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X25),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) | ? [X16,X17,X18,X19,X20,X21] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X16),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X17))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X18),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X19),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X20),s('type.list.list'('type.conSem.v'),X21))))))))) | ? [X12,X13,X14,X15] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X12),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X13),s('type.list.list'('type.string.char'),X14))))))))),s('type.list.list'('type.conSem.v'),X15))) | ? [X9,X10,X11] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X10))))))),s('type.list.list'('type.conSem.v'),X11))) | ? [X6,X7,X8] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X6),s('type.list.list'('type.string.char'),X7),s('type.conLang.exp',X8))) | ? [X3,X4,X5] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X4),s('type.list.list'('type.string.char'),X5))) | ? [X2] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X2))) | ? [X1] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X1)))) & ! [X63,X64] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X63),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X64))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) & ! [X59,X60,X61,X62] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X59),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X60))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X61),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X62),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) & ! [X58] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X58))) & ! [X57] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),X57))) & ! [X54,X55,X56] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X54),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X55))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X56),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) & ! [X48,X49,X50,X51,X52,X53] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X48),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X49))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X50),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X51),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X52),s('type.list.list'('type.conSem.v'),X53))))))))) & ! [X44,X45,X46,X47] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X44),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X45),s('type.list.list'('type.string.char'),X46))))))))),s('type.list.list'('type.conSem.v'),X47))) & ! [X41,X42,X43] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X41),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X42))))))),s('type.list.list'('type.conSem.v'),X43))) & ! [X38,X39,X40] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X38),s('type.list.list'('type.string.char'),X39),s('type.conLang.exp',X40))) & ! [X35,X36,X37] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X35),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X36),s('type.list.list'('type.string.char'),X37))) & ! [X34] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X34))) & ! [X33] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X33))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ? [X0] : ((? [X32] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X32))) | ? [X31] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),X31))) | ? [X29,X30] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X29),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X30))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) | ? [X26,X27,X28] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X26),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X27))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X28),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) | ? [X22,X23,X24,X25] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X22),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X23))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X24),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X25),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) | ? [X16,X17,X18,X19,X20,X21] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X16),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X17))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X18),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X19),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X20),s('type.list.list'('type.conSem.v'),X21))))))))) | ? [X12,X13,X14,X15] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X12),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X13),s('type.list.list'('type.string.char'),X14))))))))),s('type.list.list'('type.conSem.v'),X15))) | ? [X9,X10,X11] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X10))))))),s('type.list.list'('type.conSem.v'),X11))) | ? [X6,X7,X8] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X6),s('type.list.list'('type.string.char'),X7),s('type.conLang.exp',X8))) | ? [X3,X4,X5] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X4),s('type.list.list'('type.string.char'),X5))) | ? [X2] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X2))) | ? [X1] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X1)))) & (! [X63,X64] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X63),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X64))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) & ! [X59,X60,X61,X62] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X59),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X60))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X61),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X62),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) & ! [X58] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X58))) & ! [X57] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),X57))) & ! [X54,X55,X56] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X54),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X55))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X56),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) & ! [X48,X49,X50,X51,X52,X53] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X48),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X49))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X50),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X51),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X52),s('type.list.list'('type.conSem.v'),X53))))))))) & ! [X44,X45,X46,X47] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X44),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X45),s('type.list.list'('type.string.char'),X46))))))))),s('type.list.list'('type.conSem.v'),X47))) & ! [X41,X42,X43] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X41),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X42))))))),s('type.list.list'('type.conSem.v'),X43))) & ! [X38,X39,X40] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X38),s('type.list.list'('type.string.char'),X39),s('type.conLang.exp',X40))) & ! [X35,X36,X37] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X35),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X36),s('type.list.list'('type.string.char'),X37))) & ! [X34] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X34))) & ! [X33] : s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X33)))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ((? [X32] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X32))) | ? [X31] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),X31))) | ? [X29,X30] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X29),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X30))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) | ? [X26,X27,X28] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X26),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X27))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X28),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) | ? [X22,X23,X24,X25] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X22),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X23))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X24),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X25),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) | ? [X16,X17,X18,X19,X20,X21] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X16),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X17))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X18),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X19),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X20),s('type.list.list'('type.conSem.v'),X21))))))))) | ? [X12,X13,X14,X15] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X12),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X13),s('type.list.list'('type.string.char'),X14))))))))),s('type.list.list'('type.conSem.v'),X15))) | ? [X9,X10,X11] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X10))))))),s('type.list.list'('type.conSem.v'),X11))) | ? [X6,X7,X8] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X6),s('type.list.list'('type.string.char'),X7),s('type.conLang.exp',X8))) | ? [X3,X4,X5] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X4),s('type.list.list'('type.string.char'),X5))) | ? [X2] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X2))) | ? [X1] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X1)))) => (? [X63,X64] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X63),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X64))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) | ? [X59,X60,X61,X62] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X59),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X60))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X61),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X62),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) | ? [X58] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X58))) | ? [X57] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),X57))) | ? [X54,X55,X56] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X54),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X55))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X56),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) | ? [X48,X49,X50,X51,X52,X53] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X48),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X49))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X50),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X51),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X52),s('type.list.list'('type.conSem.v'),X53))))))))) | ? [X44,X45,X46,X47] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X44),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X45),s('type.list.list'('type.string.char'),X46))))))))),s('type.list.list'('type.conSem.v'),X47))) | ? [X41,X42,X43] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X41),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X42))))))),s('type.list.list'('type.conSem.v'),X43))) | ? [X38,X39,X40] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X38),s('type.list.list'('type.string.char'),X39),s('type.conLang.exp',X40))) | ? [X35,X36,X37] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X35),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X36),s('type.list.list'('type.string.char'),X37))) | ? [X34] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X34))) | ? [X33] : s('type.conSem.v',X0) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X33)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((? [X7] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7))) | ? [X8] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),X8))) | ? [X9,X10] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) | ? [X11,X12,X13] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X13),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) | ? [X9,X10,X14,X15] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X14),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X15),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) | ? [X11,X12,X13,X16,X17,X18] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X13),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X16),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X18))))))))) | ? [X11,X19,X20,X8] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X19),s('type.list.list'('type.string.char'),X20))))))))),s('type.list.list'('type.conSem.v'),X8))) | ? [X11,X21,X8] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X21))))))),s('type.list.list'('type.conSem.v'),X8))) | ? [X22,X23,X24] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X22),s('type.list.list'('type.string.char'),X23),s('type.conLang.exp',X24))) | ? [X25,X26,X27] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X25),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X26),s('type.list.list'('type.string.char'),X27))) | ? [X28] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X28))) | ? [X29] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X29)))) => (? [X9,X10] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) | ? [X9,X10,X14,X15] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X14),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X15),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) | ? [X7] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7))) | ? [X8] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),X8))) | ? [X11,X12,X13] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X13),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) | ? [X11,X12,X13,X16,X17,X18] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X13),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X16),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X18))))))))) | ? [X11,X19,X20,X8] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X19),s('type.list.list'('type.string.char'),X20))))))))),s('type.list.list'('type.conSem.v'),X8))) | ? [X11,X21,X8] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X21))))))),s('type.list.list'('type.conSem.v'),X8))) | ? [X22,X23,X24] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X22),s('type.list.list'('type.string.char'),X23),s('type.conLang.exp',X24))) | ? [X25,X26,X27] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X25),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X26),s('type.list.list'('type.string.char'),X27))) | ? [X28] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X28))) | ? [X29] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X29)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((? [X7] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7))) | ? [X8] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),X8))) | ? [X9,X10] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) | ? [X11,X12,X13] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X13),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) | ? [X9,X10,X14,X15] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X14),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X15),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) | ? [X11,X12,X13,X16,X17,X18] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X13),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X16),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X18))))))))) | ? [X11,X19,X20,X8] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X19),s('type.list.list'('type.string.char'),X20))))))))),s('type.list.list'('type.conSem.v'),X8))) | ? [X11,X21,X8] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X21))))))),s('type.list.list'('type.conSem.v'),X8))) | ? [X22,X23,X24] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X22),s('type.list.list'('type.string.char'),X23),s('type.conLang.exp',X24))) | ? [X25,X26,X27] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X25),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X26),s('type.list.list'('type.string.char'),X27))) | ? [X28] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X28))) | ? [X29] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X29)))) => (? [X9,X10] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) | ? [X9,X10,X14,X15] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X10))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X14),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X15),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) | ? [X7] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7))) | ? [X8] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),X8))) | ? [X11,X12,X13] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X13),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) | ? [X11,X12,X13,X16,X17,X18] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X12))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X13),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X16),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X18))))))))) | ? [X11,X19,X20,X8] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X19),s('type.list.list'('type.string.char'),X20))))))))),s('type.list.list'('type.conSem.v'),X8))) | ? [X11,X21,X8] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X11),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X21))))))),s('type.list.list'('type.conSem.v'),X8))) | ? [X22,X23,X24] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X22),s('type.list.list'('type.string.char'),X23),s('type.conLang.exp',X24))) | ? [X25,X26,X27] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X25),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X26),s('type.list.list'('type.string.char'),X27))) | ? [X28] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X28))) | ? [X29] : s('type.conSem.v',X6) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X29)))))),
  file('thm.conSem.conSem_|49|6|48|_prove_ltb','thm.conSem.conSem_|49|6|48|_prove_ltb')).
fof(f4620,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f420,f230])).
fof(f230,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X12),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),X13),s('type.list.list'('type.string.char'),X14))))))))),s('type.list.list'('type.conSem.v'),X15)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4621,plain,(
  $false | $spl20),
  inference(subsumption_resolution,[],[f428,f234])).
fof(f234,plain,(
  ( ! [X2] : (s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4968,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f418,f229])).
fof(f229,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X16),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X17))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X18),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X19),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X20),s('type.list.list'('type.conSem.v'),X21)))))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4969,plain,(
  $false | $spl22),
  inference(subsumption_resolution,[],[f430,f235])).
fof(f235,plain,(
  ( ! [X1] : (s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X1)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4970,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f416,f225])).
fof(f225,plain,(
  ( ! [X30,X28,X29,X27] : (s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X27),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X28))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X29),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X30),s('type.list.list'('type.conSem.v'),'const.list.NIL_0')))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4971,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f422,f231])).
fof(f231,plain,(
  ( ! [X10,X11,X9] : (s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X9),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),X10))))))),s('type.list.list'('type.conSem.v'),X11)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4972,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f410,f227])).
fof(f227,plain,(
  ( ! [X25] : (s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),X25)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4973,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f426,f233])).
fof(f233,plain,(
  ( ! [X4,X5,X3] : (s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X4),s('type.list.list'('type.string.char'),X5)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4974,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f424,f232])).
fof(f232,plain,(
  ( ! [X6,X8,X7] : (s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X6),s('type.list.list'('type.string.char'),X7),s('type.conLang.exp',X8)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4975,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f412,f224])).
fof(f224,plain,(
  ( ! [X31,X32] : (s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X31),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X32))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f408,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK13))) | $spl0),
  inference(cnf_transformation,[],[f408_D])).
fof(f408_D,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK13))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f410,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),sK14))) | $spl2),
  inference(cnf_transformation,[],[f410_D])).
fof(f410_D,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),sK14))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f412,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK15),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK16))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) | $spl4),
  inference(cnf_transformation,[],[f412_D])).
fof(f412_D,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK15),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK16))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f414,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK17),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK18))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK19),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) | $spl6),
  inference(cnf_transformation,[],[f414_D])).
fof(f414_D,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK17),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK18))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK19),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f416,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK20),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK21))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK22),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK23),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) | $spl8),
  inference(cnf_transformation,[],[f416_D])).
fof(f416_D,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK20),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK21))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK22),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK23),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f418,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK24),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK25))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK26),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK27),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK28),s('type.list.list'('type.conSem.v'),sK29))))))))) | $spl10),
  inference(cnf_transformation,[],[f418_D])).
fof(f418_D,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK24),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK25))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK26),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK27),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK28),s('type.list.list'('type.conSem.v'),sK29))))))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f420,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK30),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),sK31),s('type.list.list'('type.string.char'),sK32))))))))),s('type.list.list'('type.conSem.v'),sK33))) | $spl12),
  inference(cnf_transformation,[],[f420_D])).
fof(f420_D,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK30),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),sK31),s('type.list.list'('type.string.char'),sK32))))))))),s('type.list.list'('type.conSem.v'),sK33))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f422,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK34),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK35))))))),s('type.list.list'('type.conSem.v'),sK36))) | $spl14),
  inference(cnf_transformation,[],[f422_D])).
fof(f422_D,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK34),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK35))))))),s('type.list.list'('type.conSem.v'),sK36))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f424,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK37),s('type.list.list'('type.string.char'),sK38),s('type.conLang.exp',sK39))) | $spl16),
  inference(cnf_transformation,[],[f424_D])).
fof(f424_D,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK37),s('type.list.list'('type.string.char'),sK38),s('type.conLang.exp',sK39))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f426,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK40),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),sK41),s('type.list.list'('type.string.char'),sK42))) | $spl18),
  inference(cnf_transformation,[],[f426_D])).
fof(f426_D,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK40),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),sK41),s('type.list.list'('type.string.char'),sK42))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f428,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',sK43))) | $spl20),
  inference(cnf_transformation,[],[f428_D])).
fof(f428_D,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',sK43))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f430,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),sK44))) | $spl22),
  inference(cnf_transformation,[],[f430_D])).
fof(f430_D,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),sK44))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f223,plain,(
  s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),sK44))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',sK43))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK40),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),sK41),s('type.list.list'('type.string.char'),sK42))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK37),s('type.list.list'('type.string.char'),sK38),s('type.conLang.exp',sK39))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK34),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeExn_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK35))))))),s('type.list.list'('type.conSem.v'),sK36))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK30),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Long_2'(s('type.list.list'('type.string.char'),sK31),s('type.list.list'('type.string.char'),sK32))))))))),s('type.list.list'('type.conSem.v'),sK33))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK24),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK25))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK26),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK27),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK28),s('type.list.list'('type.conSem.v'),sK29))))))))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK20),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK21))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK22),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK23),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK17),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK18))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',sK19),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',sK15),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),sK16))))))))),s('type.list.list'('type.conSem.v'),'const.list.NIL_0'))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0'),s('type.list.list'('type.conSem.v'),sK14))) | s('type.conSem.v',sK12) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK13)))),
  inference(cnf_transformation,[],[f138])).
fof(f4977,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f414,f228])).
fof(f228,plain,(
  ( ! [X24,X23,X22] : (s('type.conSem.v',sK12) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.num.num',X22),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),X23))))))))),s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X24),s('type.list.list'('type.conSem.v'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f138])).
% SZS output end Proof for thm.conSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 405
% Passive clauses: 1565
% Generated clauses: 4748
% Final active clauses: 405
% Final passive clauses: 963
% Input formulas: 37
% Initial clauses: 180
% 
% Duplicate literals: 155
% Trivial inequalities: 29
% Fw subsumption resolutions: 323
% 
% Simple tautologies: 145
% Equational tautologies: 37
% Forward subsumptions: 2464
% 
% Binary resolution: 2929
% Factoring: 812
% Forward superposition: 174
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 114
% Split components: 239
% SAT solver clauses: 237
% SAT solver unit clauses: 18
% SAT solver binary clauses: 45
% SAT solver learnt clauses: 1
% 
% Sat splits: 114
% Sat splitting refutations: 12
% 
% TWLsolver clauses: 236
% TWLsolver calls for satisfiability: 196
% 
% Memory used [KB]: 2686
% Time elapsed: 0.148 s
% ------------------------------
% ------------------------------
% Success in time 0.16 s
