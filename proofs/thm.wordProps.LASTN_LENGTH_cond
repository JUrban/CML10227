Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordProps
% SZS output start Proof for thm.wordProps
fof(f681,plain,(
  $false),
  inference(subsumption_resolution,[],[f679,f161])).
fof(f161,plain,(
  s('type.list.list'(sK7),sK9) != s('type.list.list'(sK7),'const.rich_list.LASTN_2'(s('type.num.num',sK8),s('type.list.list'(sK7),sK9)))),
  inference(cnf_transformation,[],[f114])).
fof(f114,plain,(
  s('type.num.num',sK8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK7),sK9))) & s('type.list.list'(sK7),sK9) != s('type.list.list'(sK7),'const.rich_list.LASTN_2'(s('type.num.num',sK8),s('type.list.list'(sK7),sK9)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7,sK8,sK9])],[f79])).
fof(f79,plain,(
  ? [X0,X1,X2] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) & s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))),
  inference(ennf_transformation,[],[f34])).
fof(f34,plain,(
  ~! [X0,X1,X2] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) => s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ~! [X0] : ! [X1,X2] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) => s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) => s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) => s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))))),
  file('thm.wordProps.LASTN_LENGTH_cond','thm.wordProps.LASTN_LENGTH_cond')).
fof(f679,plain,(
  s('type.list.list'(sK7),sK9) = s('type.list.list'(sK7),'const.rich_list.LASTN_2'(s('type.num.num',sK8),s('type.list.list'(sK7),sK9)))),
  inference(superposition,[],[f203,f160])).
fof(f160,plain,(
  s('type.num.num',sK8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK7),sK9)))),
  inference(cnf_transformation,[],[f114])).
fof(f203,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : ! [X10] : s('type.list.list'(X6),X10) = s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X10))),s('type.list.list'(X6),X10)))),
  file('thm.wordProps.LASTN_LENGTH_cond','thm.rich_list.LASTN_LENGTH_ID')).
% SZS output end Proof for thm.wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 94
% Passive clauses: 216
% Generated clauses: 516
% Final active clauses: 94
% Final passive clauses: 102
% Input formulas: 31
% Initial clauses: 104
% 
% Duplicate literals: 17
% Trivial inequalities: 1
% Fw subsumption resolutions: 19
% 
% Simple tautologies: 58
% Equational tautologies: 9
% Forward subsumptions: 181
% 
% Binary resolution: 300
% Factoring: 6
% Forward superposition: 31
% Backward superposition: 23
% Self superposition: 3
% Equality factoring: 2
% Equality resolution: 1
% 
% Split clauses: 24
% Split components: 49
% SAT solver clauses: 33
% SAT solver unit clauses: 4
% SAT solver binary clauses: 19
% 
% Sat splits: 24
% 
% TWLsolver clauses: 33
% TWLsolver calls for satisfiability: 16
% 
% Memory used [KB]: 895
% Time elapsed: 0.021 s
% ------------------------------
% ------------------------------
% Success in time 0.03 s
