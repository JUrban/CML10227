Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvpSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvpSem
% SZS output start Proof for thm.bvpSem
fof(f12713,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f12699,f350,f236,f349,f351])).
fof(f351,plain,(
  $false | ($spl5 | $spl6)),
  inference(resolution,[],[f350,f349])).
fof(f349,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f349_D])).
fof(f349_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f236,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.bvpSem.state_induction',aHL_FALSITY)).
fof(f350,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl6),
  inference(cnf_transformation,[],[f350_D])).
fof(f350_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f12699,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl5),
  inference(subsumption_resolution,[],[f12681,f241])).
fof(f241,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f198])).
fof(f198,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X20] : (s(bool,'T_0') = s(bool,X20) <=> p(s(bool,X20)))),
  file('thm.bvpSem.state_induction','thm.bool.EQ_CLAUSES|split|1')).
fof(f12681,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f12372,f639])).
fof(f639,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,happ(s(fun('type.bvpSem.state'(sK0),bool),sK1),s('type.bvpSem.state'(sK0),sK2))) | s(bool,'T_0') = s(bool,X4)) ) | $spl5),
  inference(subsumption_resolution,[],[f631,f349])).
fof(f631,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,X4) = s(bool,happ(s(fun('type.bvpSem.state'(sK0),bool),sK1),s('type.bvpSem.state'(sK0),sK2))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f396,f358])).
fof(f358,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.bvpSem.state'(sK0),bool),sK1),s('type.bvpSem.state'(sK0),sK2)))),
  inference(resolution,[],[f233,f246])).
fof(f246,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f200])).
fof(f200,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f79])).
fof(f79,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X20] : (s(bool,'F_0') = s(bool,X20) <=> ~p(s(bool,X20)))),
  file('thm.bvpSem.state_induction','thm.bool.EQ_CLAUSES|split|2')).
fof(f233,plain,(
  ~p(s(bool,happ(s(fun('type.bvpSem.state'(sK0),bool),sK1),s('type.bvpSem.state'(sK0),sK2))))),
  inference(cnf_transformation,[],[f197])).
fof(f197,plain,(
  ! [X3,X4,X5,X6,X7,X8,X9,X10,X11] : p(s(bool,happ(s(fun('type.bvpSem.state'(sK0),bool),sK1),s('type.bvpSem.state'(sK0),'const.bvpSem.recordtype|46|state_9'(s('type.sptree.spt'('type.bvlSem.v'),X3),s('type.list.list'('type.bvpSem.stack'),X4),s('type.option.option'('type.num.num'),X5),s('type.num.num',X6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7),s('type.num.num',X8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvp.prog')),X9),s('type.ffi.ffi_state'(sK0),X10),s('type.num.num',X11)))))) & ~p(s(bool,happ(s(fun('type.bvpSem.state'(sK0),bool),sK1),s('type.bvpSem.state'(sK0),sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f196])).
fof(f196,plain,(
  ? [X0,X1] : (! [X3,X4,X5,X6,X7,X8,X9,X10,X11] : p(s(bool,happ(s(fun('type.bvpSem.state'(X0),bool),X1),s('type.bvpSem.state'(X0),'const.bvpSem.recordtype|46|state_9'(s('type.sptree.spt'('type.bvlSem.v'),X3),s('type.list.list'('type.bvpSem.stack'),X4),s('type.option.option'('type.num.num'),X5),s('type.num.num',X6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7),s('type.num.num',X8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvp.prog')),X9),s('type.ffi.ffi_state'(X0),X10),s('type.num.num',X11)))))) & ? [X2] : ~p(s(bool,happ(s(fun('type.bvpSem.state'(X0),bool),X1),s('type.bvpSem.state'(X0),X2)))))),
  inference(rectify,[],[f189])).
fof(f189,plain,(
  ? [X0,X1] : (! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : p(s(bool,happ(s(fun('type.bvpSem.state'(X0),bool),X1),s('type.bvpSem.state'(X0),'const.bvpSem.recordtype|46|state_9'(s('type.sptree.spt'('type.bvlSem.v'),X2),s('type.list.list'('type.bvpSem.stack'),X3),s('type.option.option'('type.num.num'),X4),s('type.num.num',X5),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X6),s('type.num.num',X7),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvp.prog')),X8),s('type.ffi.ffi_state'(X0),X9),s('type.num.num',X10)))))) & ? [X11] : ~p(s(bool,happ(s(fun('type.bvpSem.state'(X0),bool),X1),s('type.bvpSem.state'(X0),X11)))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1] : (! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : p(s(bool,happ(s(fun('type.bvpSem.state'(X0),bool),X1),s('type.bvpSem.state'(X0),'const.bvpSem.recordtype|46|state_9'(s('type.sptree.spt'('type.bvlSem.v'),X2),s('type.list.list'('type.bvpSem.stack'),X3),s('type.option.option'('type.num.num'),X4),s('type.num.num',X5),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X6),s('type.num.num',X7),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvp.prog')),X8),s('type.ffi.ffi_state'(X0),X9),s('type.num.num',X10)))))) => ! [X11] : p(s(bool,happ(s(fun('type.bvpSem.state'(X0),bool),X1),s('type.bvpSem.state'(X0),X11)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1] : (! [X2,X3,X4,X5,X6,X7,X8,X9,X10] : p(s(bool,happ(s(fun('type.bvpSem.state'(X0),bool),X1),s('type.bvpSem.state'(X0),'const.bvpSem.recordtype|46|state_9'(s('type.sptree.spt'('type.bvlSem.v'),X2),s('type.list.list'('type.bvpSem.stack'),X3),s('type.option.option'('type.num.num'),X4),s('type.num.num',X5),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X6),s('type.num.num',X7),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvp.prog')),X8),s('type.ffi.ffi_state'(X0),X9),s('type.num.num',X10)))))) => ! [X11] : p(s(bool,happ(s(fun('type.bvpSem.state'(X0),bool),X1),s('type.bvpSem.state'(X0),X11)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (! [X8,X9,X10,X11,X12,X13,X14,X15,X16] : p(s(bool,happ(s(fun('type.bvpSem.state'(X6),bool),X7),s('type.bvpSem.state'(X6),'const.bvpSem.recordtype|46|state_9'(s('type.sptree.spt'('type.bvlSem.v'),X8),s('type.list.list'('type.bvpSem.stack'),X9),s('type.option.option'('type.num.num'),X10),s('type.num.num',X11),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X12),s('type.num.num',X13),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvp.prog')),X14),s('type.ffi.ffi_state'(X6),X15),s('type.num.num',X16)))))) => ! [X8] : p(s(bool,happ(s(fun('type.bvpSem.state'(X6),bool),X7),s('type.bvpSem.state'(X6),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (! [X8,X9,X10,X11,X12,X13,X14,X15,X16] : p(s(bool,happ(s(fun('type.bvpSem.state'(X6),bool),X7),s('type.bvpSem.state'(X6),'const.bvpSem.recordtype|46|state_9'(s('type.sptree.spt'('type.bvlSem.v'),X8),s('type.list.list'('type.bvpSem.stack'),X9),s('type.option.option'('type.num.num'),X10),s('type.num.num',X11),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X12),s('type.num.num',X13),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvp.prog')),X14),s('type.ffi.ffi_state'(X6),X15),s('type.num.num',X16)))))) => ! [X8] : p(s(bool,happ(s(fun('type.bvpSem.state'(X6),bool),X7),s('type.bvpSem.state'(X6),X8)))))),
  file('thm.bvpSem.state_induction','thm.bvpSem.state_induction')).
fof(f396,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(resolution,[],[f311,f242])).
fof(f242,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f198])).
fof(f311,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f192])).
fof(f192,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f191])).
fof(f191,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f156])).
fof(f156,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X17,X18] : ((p(s(bool,X17)) => p(s(bool,X18))) => ((p(s(bool,X18)) => p(s(bool,X17))) => s(bool,X17) = s(bool,X18)))),
  file('thm.bvpSem.state_induction','thm.bool.IMP_ANTISYM_AX')).
fof(f12372,plain,(
  ( ! [X18] : (p(s(bool,happ(s(fun('type.bvpSem.state'(sK0),bool),sK1),s('type.bvpSem.state'(sK0),X18))))) )),
  inference(superposition,[],[f232,f269])).
fof(f269,plain,(
  ( ! [X0,X1] : (s('type.bvpSem.state'(X0),X1) = s('type.bvpSem.state'(X0),'const.bvpSem.recordtype|46|state_9'(s('type.sptree.spt'('type.bvlSem.v'),sK3(X1,X0)),s('type.list.list'('type.bvpSem.stack'),sK4(X1,X0)),s('type.option.option'('type.num.num'),sK5(X1,X0)),s('type.num.num',sK6(X1,X0)),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7(X1,X0)),s('type.num.num',sK8(X1,X0)),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvp.prog')),sK9(X1,X0)),s('type.ffi.ffi_state'(X0),sK10(X1,X0)),s('type.num.num',sK11(X1,X0))))) )),
  inference(cnf_transformation,[],[f215])).
fof(f215,plain,(
  ! [X0,X1] : s('type.bvpSem.state'(X0),X1) = s('type.bvpSem.state'(X0),'const.bvpSem.recordtype|46|state_9'(s('type.sptree.spt'('type.bvlSem.v'),sK3(X1,X0)),s('type.list.list'('type.bvpSem.stack'),sK4(X1,X0)),s('type.option.option'('type.num.num'),sK5(X1,X0)),s('type.num.num',sK6(X1,X0)),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7(X1,X0)),s('type.num.num',sK8(X1,X0)),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvp.prog')),sK9(X1,X0)),s('type.ffi.ffi_state'(X0),sK10(X1,X0)),s('type.num.num',sK11(X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11])],[f94])).
fof(f94,plain,(
  ! [X0,X1] : ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.bvpSem.state'(X0),X1) = s('type.bvpSem.state'(X0),'const.bvpSem.recordtype|46|state_9'(s('type.sptree.spt'('type.bvlSem.v'),X2),s('type.list.list'('type.bvpSem.stack'),X3),s('type.option.option'('type.num.num'),X4),s('type.num.num',X5),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X6),s('type.num.num',X7),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvp.prog')),X8),s('type.ffi.ffi_state'(X0),X9),s('type.num.num',X10)))),
  inference(flattening,[],[f93])).
fof(f93,plain,(
  ! [X0] : ! [X1] : ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.bvpSem.state'(X0),X1) = s('type.bvpSem.state'(X0),'const.bvpSem.recordtype|46|state_9'(s('type.sptree.spt'('type.bvlSem.v'),X2),s('type.list.list'('type.bvpSem.stack'),X3),s('type.option.option'('type.num.num'),X4),s('type.num.num',X5),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X6),s('type.num.num',X7),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvp.prog')),X8),s('type.ffi.ffi_state'(X0),X9),s('type.num.num',X10)))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X6] : ! [X54] : ? [X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.bvpSem.state'(X6),X54) = s('type.bvpSem.state'(X6),'const.bvpSem.recordtype|46|state_9'(s('type.sptree.spt'('type.bvlSem.v'),X8),s('type.list.list'('type.bvpSem.stack'),X9),s('type.option.option'('type.num.num'),X10),s('type.num.num',X11),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X12),s('type.num.num',X13),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvp.prog')),X14),s('type.ffi.ffi_state'(X6),X15),s('type.num.num',X16)))),
  file('thm.bvpSem.state_induction','thm.bvpSem.state_nchotomy')).
fof(f232,plain,(
  ( ! [X6,X4,X10,X8,X7,X5,X3,X11,X9] : (p(s(bool,happ(s(fun('type.bvpSem.state'(sK0),bool),sK1),s('type.bvpSem.state'(sK0),'const.bvpSem.recordtype|46|state_9'(s('type.sptree.spt'('type.bvlSem.v'),X3),s('type.list.list'('type.bvpSem.stack'),X4),s('type.option.option'('type.num.num'),X5),s('type.num.num',X6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7),s('type.num.num',X8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvp.prog')),X9),s('type.ffi.ffi_state'(sK0),X10),s('type.num.num',X11))))))) )),
  inference(cnf_transformation,[],[f197])).
% SZS output end Proof for thm.bvpSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 131
% Passive clauses: 1741
% Generated clauses: 12323
% Final active clauses: 122
% Final passive clauses: 1477
% Input formulas: 69
% Initial clauses: 111
% 
% Duplicate literals: 437
% Trivial inequalities: 258
% Fw subsumption resolutions: 859
% Fw demodulations: 1086
% Bw demodulations: 6
% 
% Simple tautologies: 236
% Equational tautologies: 35
% Forward subsumptions: 7583
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 202
% Factoring: 1
% Forward superposition: 5668
% Backward superposition: 3453
% Self superposition: 123
% Equality factoring: 62
% Equality resolution: 22
% 
% Split clauses: 105
% Split components: 220
% SAT solver clauses: 213
% SAT solver unit clauses: 14
% SAT solver binary clauses: 77
% SAT solver learnt clauses: 1
% 
% Sat splits: 105
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 207
% TWLsolver calls for satisfiability: 72
% 
% Memory used [KB]: 10746
% Time elapsed: 0.535 s
% ------------------------------
% ------------------------------
% Success in time 0.522 s
