Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.con_to_decProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.con_to_decProof
% SZS output start Proof for thm.con_to_decProof
fof(f12763,plain,(
  $false),
  inference(equality_resolution,[],[f3608])).
fof(f3608,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),sK1) != s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),X0)) )),
  inference(superposition,[],[f3246,f108])).
fof(f108,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X2)))))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0,X1] : ! [X2] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X2)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X11,X16] : ! [X8] : s('type.pair.prod'(X11,X16),X8) = s('type.pair.prod'(X11,X16),'const.pair.,_2'(s(X11,'const.pair.FST_1'(s('type.pair.prod'(X11,X16),X8))),s(X16,'const.pair.SND_1'(s('type.pair.prod'(X11,X16),X8)))))),
  file('thm.con_to_decProof.con_to_decProof_22_prove_ltb','thm.pair.PAIR')).
fof(f3246,plain,(
  ( ! [X2] : (s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),sK1) != s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),'const.pair.,_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))),s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2)))))) )),
  inference(forward_demodulation,[],[f3245,f108])).
fof(f3245,plain,(
  ( ! [X2] : (s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),sK1) != s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),'const.pair.,_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))),s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))))),s('type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2)))))))))) )),
  inference(forward_demodulation,[],[f82,f108])).
fof(f82,plain,(
  ( ! [X2] : (s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),sK1) != s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),'const.pair.,_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))),s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))))),s('type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.,_2'(s('type.ffi.ffi_state'(sK0),'const.pair.FST_1'(s('type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))))))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.pair.SND_1'(s('type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2)))))))))))))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X2] : s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),sK1) != s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),'const.pair.,_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))),s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))))),s('type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.,_2'(s('type.ffi.ffi_state'(sK0),'const.pair.FST_1'(s('type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))))))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.pair.SND_1'(s('type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(sK0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2)))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f57])).
fof(f57,plain,(
  ? [X0,X1] : ! [X2] : s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),X1) != s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),'const.pair.,_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))),s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))))),s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.,_2'(s('type.ffi.ffi_state'(X0),'const.pair.FST_1'(s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))))))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.pair.SND_1'(s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2)))))))))))))),
  inference(ennf_transformation,[],[f25])).
fof(f25,plain,(
  ~! [X0,X1] : ? [X2] : s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),X1) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),'const.pair.,_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))),s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))))),s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.,_2'(s('type.ffi.ffi_state'(X0),'const.pair.FST_1'(s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))))))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.pair.SND_1'(s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2)))))))))))))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ~! [X0] : ! [X1] : ? [X2] : s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),X1) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),'const.pair.,_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))),s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))))),s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.,_2'(s('type.ffi.ffi_state'(X0),'const.pair.FST_1'(s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2))))))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.pair.SND_1'(s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.option.option'('type.conSem.v'))))),X2)))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ? [X8] : s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))))),X7) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))))),'const.pair.,_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))))),X8))),s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))))),X8))))),s('type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.,_2'(s('type.ffi.ffi_state'(X6),'const.pair.FST_1'(s('type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))))),X8))))))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.pair.SND_1'(s('type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))))),X8)))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ? [X8] : s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))))),X7) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))))),'const.pair.,_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))))),X8))),s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.,_2'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))))),X8))))),s('type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.,_2'(s('type.ffi.ffi_state'(X6),'const.pair.FST_1'(s('type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))))),X8))))))),s('type.list.list'('type.option.option'('type.conSem.v')),'const.pair.SND_1'(s('type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v')))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.pair.prod'('type.ffi.ffi_state'(X6),'type.list.list'('type.option.option'('type.conSem.v'))))),X8)))))))))))))),
  file('thm.con_to_decProof.con_to_decProof_22_prove_ltb','thm.con_to_decProof.con_to_decProof_22_prove_ltb')).
% SZS output end Proof for thm.con_to_decProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 129
% Passive clauses: 2084
% Generated clauses: 12598
% Final active clauses: 120
% Final passive clauses: 1812
% Input formulas: 22
% Initial clauses: 37
% 
% Duplicate literals: 268
% Trivial inequalities: 492
% Fw subsumption resolutions: 1045
% Fw demodulations: 3015
% Bw demodulations: 7
% 
% Simple tautologies: 195
% Equational tautologies: 26
% Forward subsumptions: 5558
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 169
% Factoring: 1
% Forward superposition: 3185
% Backward superposition: 4231
% Self superposition: 81
% Equality factoring: 44
% Equality resolution: 17
% 
% Split clauses: 15
% Split components: 30
% SAT solver clauses: 49
% SAT solver unit clauses: 6
% SAT solver binary clauses: 41
% 
% Sat splits: 15
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 49
% TWLsolver calls for satisfiability: 19
% 
% Memory used [KB]: 7675
% Time elapsed: 0.252 s
% ------------------------------
% ------------------------------
% Success in time 0.26 s
