Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_knownProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_knownProof
% SZS output start Proof for thm.clos_knownProof
fof(f992,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f985,f126,f197])).
fof(f197,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f197_D])).
fof(f197_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f126,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.clos_knownProof.subapprox_Impossible|split|1',aHL_FALSITY)).
fof(f985,plain,(
  $false | $spl5),
  inference(subsumption_resolution,[],[f984,f127])).
fof(f127,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X20] : s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X20)))),
  file('thm.clos_knownProof.subapprox_Impossible|split|1','thm.clos_known.merge_def|split|0')).
fof(f984,plain,(
  s('type.clos_known.val_approx',sK0) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK0))) | $spl5),
  inference(subsumption_resolution,[],[f945,f197])).
fof(f945,plain,(
  p(s(bool,'F_0')) | s('type.clos_known.val_approx',sK0) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK0)))),
  inference(superposition,[],[f168,f203])).
fof(f203,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK0)))),
  inference(resolution,[],[f141,f121])).
fof(f121,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK0))))),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f87])).
fof(f87,plain,(
  ? [X0] : ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0))))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ~! [X0] : p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X6))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X6))))),
  file('thm.clos_knownProof.subapprox_Impossible|split|1','thm.clos_knownProof.subapprox_Impossible|split|1')).
fof(f141,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f57])).
fof(f57,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X7] : (s(bool,'F_0') = s(bool,X7) <=> ~p(s(bool,X7)))),
  file('thm.clos_knownProof.subapprox_Impossible|split|1','thm.bool.EQ_CLAUSES|split|2')).
fof(f168,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) | s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) )),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) & (s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))))))),
  inference(nnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) <=> s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X11,X49] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X11),s('type.clos_known.val_approx',X49)))) <=> s('type.clos_known.val_approx',X49) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X11),s('type.clos_known.val_approx',X49))))),
  file('thm.clos_knownProof.subapprox_Impossible|split|1','thm.clos_knownProof.subapprox_def')).
% SZS output end Proof for thm.clos_knownProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 55
% Passive clauses: 147
% Generated clauses: 835
% Final active clauses: 47
% Final passive clauses: 61
% Input formulas: 43
% Initial clauses: 70
% 
% Duplicate literals: 66
% Trivial inequalities: 21
% Fw subsumption resolutions: 70
% Fw demodulations: 85
% Bw demodulations: 7
% 
% Simple tautologies: 37
% Equational tautologies: 23
% Forward subsumptions: 384
% 
% Binary resolution: 32
% Forward superposition: 206
% Backward superposition: 210
% Self superposition: 27
% Equality factoring: 28
% Equality resolution: 8
% 
% Split clauses: 11
% Split components: 22
% SAT solver clauses: 26
% SAT solver unit clauses: 7
% SAT solver binary clauses: 15
% SAT solver learnt clauses: 1
% 
% Sat splits: 11
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 22
% TWLsolver calls for satisfiability: 10
% 
% Memory used [KB]: 1023
% Time elapsed: 0.029 s
% ------------------------------
% ------------------------------
% Success in time 0.06 s
