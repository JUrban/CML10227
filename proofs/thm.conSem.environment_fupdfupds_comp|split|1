Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.conSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.conSem
% SZS output start Proof for thm.conSem
fof(f2585,plain,(
  $false),
  inference(subsumption_resolution,[],[f2584,f86])).
fof(f86,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X13,X6,X19,X14] : ! [X9,X8,X7] : s(fun(X19,X13),'const.combin.o_2'(s(fun(X6,X13),X9),s(fun(X19,X6),'const.combin.o_2'(s(fun(X14,X6),X8),s(fun(X19,X14),X7))))) = s(fun(X19,X13),'const.combin.o_2'(s(fun(X14,X13),'const.combin.o_2'(s(fun(X6,X13),X9),s(fun(X14,X6),X8))),s(fun(X19,X14),X7)))),
  file('thm.conSem.environment_fupdfupds_comp|split|1','thm.combin.o_ASSOC')).
fof(f2584,plain,(
  s(fun(sK0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),sK3))),s(fun(sK0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),sK2))),s(fun(sK0,'type.conSem.environment'),sK1))))) != s(fun(sK0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),sK3))),s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),sK2))))),s(fun(sK0,'type.conSem.environment'),sK1)))),
  inference(forward_demodulation,[],[f61,f73])).
fof(f73,plain,(
  ( ! [X0,X1] : (s(fun('type.conSem.environment','type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X1))),s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0))))) = s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X1),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0)))))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1] : s(fun('type.conSem.environment','type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X1))),s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0))))) = s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X1),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X8,X9] : s(fun('type.conSem.environment','type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X9))),s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X8))))) = s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X9),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X8)))))),
  file('thm.conSem.environment_fupdfupds_comp|split|1','thm.conSem.environment_fupdfupds_comp|split|0')).
fof(f61,plain,(
  s(fun(sK0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),sK3))),s(fun(sK0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),sK2))),s(fun(sK0,'type.conSem.environment'),sK1))))) != s(fun(sK0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),sK3),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),sK2))))),s(fun(sK0,'type.conSem.environment'),sK1)))),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  s(fun(sK0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),sK3))),s(fun(sK0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),sK2))),s(fun(sK0,'type.conSem.environment'),sK1))))) != s(fun(sK0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),sK3),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),sK2))))),s(fun(sK0,'type.conSem.environment'),sK1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f50])).
fof(f50,plain,(
  ? [X0,X1,X2,X3] : s(fun(X0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X3))),s(fun(X0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X2))),s(fun(X0,'type.conSem.environment'),X1))))) != s(fun(X0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X3),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X2))))),s(fun(X0,'type.conSem.environment'),X1)))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3] : s(fun(X0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X3))),s(fun(X0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X2))),s(fun(X0,'type.conSem.environment'),X1))))) = s(fun(X0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X3),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X2))))),s(fun(X0,'type.conSem.environment'),X1)))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2,X3] : s(fun(X0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X3))),s(fun(X0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X2))),s(fun(X0,'type.conSem.environment'),X1))))) = s(fun(X0,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X3),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X2))))),s(fun(X0,'type.conSem.environment'),X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : s(fun(X6,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X9))),s(fun(X6,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X8))),s(fun(X6,'type.conSem.environment'),X7))))) = s(fun(X6,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X9),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X8))))),s(fun(X6,'type.conSem.environment'),X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : s(fun(X6,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X9))),s(fun(X6,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X8))),s(fun(X6,'type.conSem.environment'),X7))))) = s(fun(X6,'type.conSem.environment'),'const.combin.o_2'(s(fun('type.conSem.environment','type.conSem.environment'),'const.conSem.environment_v_fupd_1'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.o_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X9),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X8))))),s(fun(X6,'type.conSem.environment'),X7)))),
  file('thm.conSem.environment_fupdfupds_comp|split|1','thm.conSem.environment_fupdfupds_comp|split|1')).
% SZS output end Proof for thm.conSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 45
% Passive clauses: 549
% Generated clauses: 2441
% Final active clauses: 41
% Final passive clauses: 430
% Input formulas: 21
% Initial clauses: 27
% 
% Duplicate literals: 189
% Trivial inequalities: 34
% Fw subsumption resolutions: 319
% Fw demodulations: 43
% Bw demodulations: 1
% 
% Simple tautologies: 72
% Equational tautologies: 40
% Forward subsumptions: 1099
% 
% Binary resolution: 84
% Factoring: 1
% Forward superposition: 796
% Backward superposition: 695
% Self superposition: 122
% Equality factoring: 94
% Equality resolution: 6
% 
% Split clauses: 66
% Split components: 132
% SAT solver clauses: 164
% SAT solver unit clauses: 8
% SAT solver binary clauses: 32
% 
% Sat splits: 66
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 164
% TWLsolver calls for satisfiability: 71
% 
% Memory used [KB]: 3070
% Time elapsed: 0.088 s
% ------------------------------
% ------------------------------
% Success in time 0.11 s
