Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.clos_mtiProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_mtiProof
% SZS output start Proof for thm.clos_mtiProof
fof(f16291,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f16230,f719,f194,f721,f201,f121,f193,f5123,f5127,f119,f197,f14278,f12761,f5125])).
fof(f5125,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK5) | $spl150),
  inference(cnf_transformation,[],[f5125_D])).
fof(f5125_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK5) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f12761,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK5) | ($spl6 | $spl16 | $spl152)),
  inference(subsumption_resolution,[],[f12760,f163])).
fof(f163,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ! [X0] : ! [X1] : ~s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6] : ! [X15] : ~s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X15)))),
  file('thm.clos_mtiProof.check_loc_NONE_increases','thm.option.NOT_NONE_SOME')).
fof(f12760,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK6(sK5,sK0)))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK5) | ($spl6 | $spl16 | $spl152)),
  inference(subsumption_resolution,[],[f12623,f197])).
fof(f12623,plain,(
  ~p(s(bool,'T_0')) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK6(sK5,sK0)))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK5) | ($spl16 | $spl152)),
  inference(superposition,[],[f1862,f5142])).
fof(f5142,plain,(
  s(bool,'T_0') = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK5),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK3),s('type.num.num',sK3),s('type.num.num',sK1))) | ($spl16 | $spl152)),
  inference(backward_demodulation,[],[f5127,f721])).
fof(f1862,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X1),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) | s('type.option.option'(X0),X2) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK6(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(superposition,[],[f169,f162])).
fof(f162,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK6(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK6(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6])],[f53])).
fof(f53,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6] : ! [X24] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X24) | ? [X15] : s('type.option.option'(X6),X24) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X15))))),
  file('thm.clos_mtiProof.check_loc_NONE_increases','thm.option.option_nchotomy')).
fof(f169,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) | s('type.option.option'(X0),X2) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) | (s('type.num.num',X3) = s('type.num.num',X4) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X5) & s('type.option.option'(X0),X2) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))))) & (s('type.num.num',X3) != s('type.num.num',X4) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X5) | s('type.option.option'(X0),X2) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) | p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5))))))),
  inference(flattening,[],[f109])).
fof(f109,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) | (s('type.num.num',X3) = s('type.num.num',X4) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X5) & s('type.option.option'(X0),X2) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))))) & ((s('type.num.num',X3) != s('type.num.num',X4) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X5) | s('type.option.option'(X0),X2) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))) | p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5))))))),
  inference(nnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) <=> (s('type.num.num',X3) = s('type.num.num',X4) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X5) & s('type.option.option'(X0),X2) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : (p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) <=> (s('type.num.num',X3) = s('type.num.num',X4) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X5) & s('type.option.option'(X0),X2) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : ! [X7,X20,X21,X22,X23] : (p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X7))),s('type.option.option'(X6),X20),s('type.num.num',X21),s('type.num.num',X22),s('type.num.num',X23)))) <=> (s('type.num.num',X21) = s('type.num.num',X22) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X23) & s('type.option.option'(X6),X20) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X7)))))),
  file('thm.clos_mtiProof.check_loc_NONE_increases','thm.closSem.check_loc_def|split|1')).
fof(f14278,plain,(
  $false | ($spl16 | $spl150 | $spl152)),
  inference(subsumption_resolution,[],[f14124,f13134])).
fof(f13134,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.closLang.max_app_0'))) | ($spl150 | $spl152)),
  inference(superposition,[],[f12802,f166])).
fof(f166,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.closLang.max_app_0'))) = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X0),X1),s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4)))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2,X3,X4] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.closLang.max_app_0'))) = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X0),X1),s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4)))),
  inference(flattening,[],[f58])).
fof(f58,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.closLang.max_app_0'))) = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X0),X1),s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X6] : ! [X20,X21,X22,X23] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num','const.closLang.max_app_0'))) = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X6),'const.option.NONE_0'),s('type.option.option'(X6),X20),s('type.num.num',X21),s('type.num.num',X22),s('type.num.num',X23)))),
  file('thm.clos_mtiProof.check_loc_NONE_increases','thm.closSem.check_loc_def|split|0')).
fof(f12802,plain,(
  s(bool,'T_0') != s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1))) | ($spl150 | $spl152)),
  inference(backward_demodulation,[],[f5125,f5143])).
fof(f5143,plain,(
  s(bool,'T_0') != s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK5),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1))) | $spl152),
  inference(backward_demodulation,[],[f5127,f427])).
fof(f427,plain,(
  s(bool,'T_0') != s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK5),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK4),s('type.num.num',sK1)))),
  inference(resolution,[],[f118,f124])).
fof(f124,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X14] : (s(bool,'T_0') = s(bool,X14) <=> p(s(bool,X14)))),
  file('thm.clos_mtiProof.check_loc_NONE_increases','thm.bool.EQ_CLAUSES|split|1')).
fof(f118,plain,(
  ~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK5),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK4),s('type.num.num',sK1))))),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK5),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK3),s('type.num.num',sK4),s('type.num.num',sK1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num',sK2)))) & ~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK5),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK4),s('type.num.num',sK1))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f68])).
fof(f68,plain,(
  ? [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X5),s('type.option.option'(X0),'const.option.NONE_0'),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num',X2)))) & ~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X5),s('type.option.option'(X0),'const.option.NONE_0'),s('type.num.num',X2),s('type.num.num',X4),s('type.num.num',X1)))))),
  inference(flattening,[],[f67])).
fof(f67,plain,(
  ? [X0,X1,X2,X3,X4,X5] : ((p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X5),s('type.option.option'(X0),'const.option.NONE_0'),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num',X2))))) & ~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X5),s('type.option.option'(X0),'const.option.NONE_0'),s('type.num.num',X2),s('type.num.num',X4),s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f32])).
fof(f32,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : ((p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X5),s('type.option.option'(X0),'const.option.NONE_0'),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num',X2))))) => p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X5),s('type.option.option'(X0),'const.option.NONE_0'),s('type.num.num',X2),s('type.num.num',X4),s('type.num.num',X1)))))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ~! [X0] : ! [X1,X2,X3,X4,X5] : ((p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X5),s('type.option.option'(X0),'const.option.NONE_0'),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num',X2))))) => p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X5),s('type.option.option'(X0),'const.option.NONE_0'),s('type.num.num',X2),s('type.num.num',X4),s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10,X11] : ((p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X6),X11),s('type.option.option'(X6),'const.option.NONE_0'),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X7)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X8))))) => p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X6),X11),s('type.option.option'(X6),'const.option.NONE_0'),s('type.num.num',X8),s('type.num.num',X10),s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10,X11] : ((p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X6),X11),s('type.option.option'(X6),'const.option.NONE_0'),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X7)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X8))))) => p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X6),X11),s('type.option.option'(X6),'const.option.NONE_0'),s('type.num.num',X8),s('type.num.num',X10),s('type.num.num',X7)))))),
  file('thm.clos_mtiProof.check_loc_NONE_increases','thm.clos_mtiProof.check_loc_NONE_increases')).
fof(f14124,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.closLang.max_app_0'))) | ($spl16 | $spl150 | $spl152)),
  inference(superposition,[],[f12801,f166])).
fof(f12801,plain,(
  s(bool,'T_0') = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK3),s('type.num.num',sK3),s('type.num.num',sK1))) | ($spl16 | $spl150 | $spl152)),
  inference(backward_demodulation,[],[f5125,f5142])).
fof(f197,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f197_D])).
fof(f197_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f119,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.clos_mtiProof.check_loc_NONE_increases',aHL_TRUTH)).
fof(f5127,plain,(
  s('type.num.num',sK3) = s('type.num.num',sK4) | $spl152),
  inference(cnf_transformation,[],[f5127_D])).
fof(f5127_D,plain,(
  s('type.num.num',sK3) = s('type.num.num',sK4) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f5123,plain,(
  s('type.num.num',sK3) = s('type.num.num',sK4) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK5) | ($spl6 | $spl16)),
  inference(subsumption_resolution,[],[f5105,f197])).
fof(f5105,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK3) = s('type.num.num',sK4) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK5) | $spl16),
  inference(superposition,[],[f1333,f721])).
fof(f1333,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X1),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) | s('type.num.num',X3) = s('type.num.num',X4) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(superposition,[],[f167,f162])).
fof(f167,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) | s('type.num.num',X3) = s('type.num.num',X4)) )),
  inference(cnf_transformation,[],[f110])).
fof(f193,plain,(
  ~p(s(bool,'F_0')) | $spl1),
  inference(cnf_transformation,[],[f193_D])).
fof(f193_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f121,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.clos_mtiProof.check_loc_NONE_increases',aHL_FALSITY)).
fof(f201,plain,(
  $false | ($spl1 | $spl2)),
  inference(resolution,[],[f194,f193])).
fof(f721,plain,(
  s(bool,'T_0') = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK5),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK3),s('type.num.num',sK4),s('type.num.num',sK1))) | $spl16),
  inference(cnf_transformation,[],[f721_D])).
fof(f721_D,plain,(
  s(bool,'T_0') = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK5),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK3),s('type.num.num',sK4),s('type.num.num',sK1))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f194,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl2),
  inference(cnf_transformation,[],[f194_D])).
fof(f194_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f719,plain,(
  ( ! [X58] : (p(s(bool,X58)) | s(bool,'T_0') = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK5),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK3),s('type.num.num',sK4),s('type.num.num',sK1)))) )),
  inference(subsumption_resolution,[],[f502,f124])).
fof(f502,plain,(
  ( ! [X58] : (p(s(bool,X58)) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK5),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK3),s('type.num.num',sK4),s('type.num.num',sK1)))) )),
  inference(superposition,[],[f116,f218])).
fof(f218,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f122,f122])).
fof(f122,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.clos_mtiProof.check_loc_NONE_increases',aHL_BOOL_CASES)).
fof(f116,plain,(
  p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK5),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK3),s('type.num.num',sK4),s('type.num.num',sK1))))),
  inference(cnf_transformation,[],[f82])).
fof(f16230,plain,(
  $false | ($spl16 | $spl150)),
  inference(subsumption_resolution,[],[f16074,f15052])).
fof(f15052,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK4),s('type.num.num','const.closLang.max_app_0'))) | $spl150),
  inference(superposition,[],[f14361,f166])).
fof(f14361,plain,(
  s(bool,'T_0') != s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK4),s('type.num.num',sK1))) | $spl150),
  inference(forward_demodulation,[],[f427,f5125])).
fof(f16074,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK4),s('type.num.num','const.closLang.max_app_0'))) | ($spl16 | $spl150)),
  inference(superposition,[],[f14362,f166])).
fof(f14362,plain,(
  s(bool,'T_0') = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK3),s('type.num.num',sK4),s('type.num.num',sK1))) | ($spl16 | $spl150)),
  inference(forward_demodulation,[],[f721,f5125])).
% SZS output end Proof for thm.clos_mtiProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 163
% Passive clauses: 2690
% Generated clauses: 15927
% Final active clauses: 142
% Final passive clauses: 2258
% Input formulas: 29
% Initial clauses: 74
% 
% Duplicate literals: 627
% Trivial inequalities: 276
% Fw subsumption resolutions: 2573
% Fw demodulations: 2115
% Bw demodulations: 11
% 
% Simple tautologies: 356
% Equational tautologies: 42
% Forward subsumptions: 6462
% 
% Binary resolution: 1190
% Factoring: 4
% Forward superposition: 4907
% Backward superposition: 3796
% Self superposition: 89
% Equality factoring: 86
% Equality resolution: 29
% 
% Split clauses: 476
% Split components: 987
% SAT solver clauses: 999
% SAT solver unit clauses: 25
% SAT solver binary clauses: 202
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 476
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 986
% TWLsolver calls for satisfiability: 237
% 
% Memory used [KB]: 6268
% Time elapsed: 0.458 s
% ------------------------------
% ------------------------------
% Success in time 0.47 s
