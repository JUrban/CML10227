Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_relation
% (101099)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 113
% Passive clauses: 4844
% Generated clauses: 16460
% Final active clauses: 101
% Final passive clauses: 4575
% Input formulas: 21
% Initial clauses: 35
% 
% Duplicate literals: 563
% Trivial inequalities: 66
% Fw subsumption resolutions: 2046
% Fw demodulations: 964
% Bw demodulations: 9
% 
% Simple tautologies: 154
% Equational tautologies: 75
% Forward subsumptions: 6830
% 
% Binary resolution: 940
% Factoring: 5
% Forward superposition: 6938
% Backward superposition: 4372
% Self superposition: 254
% Equality factoring: 166
% Equality resolution: 9
% 
% Split clauses: 438
% Split components: 877
% SAT solver clauses: 1071
% SAT solver unit clauses: 6
% SAT solver binary clauses: 188
% 
% Sat splits: 438
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1071
% TWLsolver calls for satisfiability: 193
% 
% Memory used [KB]: 13432
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.clos_relation
% (101193)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 107
% Passive clauses: 1240
% Generated clauses: 12815
% Final active clauses: 96
% Final passive clauses: 1098
% Input formulas: 21
% Initial clauses: 35
% 
% Duplicate literals: 450
% Trivial inequalities: 26
% Fw subsumption resolutions: 873
% Fw demodulations: 1893
% Bw demodulations: 43
% Condensations: 678
% Global subsumptions: 1
% 
% Simple tautologies: 132
% Equational tautologies: 33
% Forward subsumptions: 5528
% 
% Binary resolution: 512
% Factoring: 4
% Forward superposition: 3748
% Backward superposition: 3184
% Self superposition: 112
% Equality factoring: 42
% Equality resolution: 8
% 
% Split clauses: 78
% Split components: 157
% SAT solver clauses: 1886
% SAT solver unit clauses: 38
% SAT solver binary clauses: 38
% SAT solver learnt clauses: 2
% 
% Sat splits: 78
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1882
% TWLsolver calls for satisfiability: 251
% 
% Memory used [KB]: 16630
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.clos_relation
% (101272)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 663
% Passive clauses: 12667
% Generated clauses: 168890
% Final active clauses: 83
% Final passive clauses: 972
% Input formulas: 21
% Initial clauses: 35
% Discarded non-redundant clauses: 2415
% 
% Duplicate literals: 5685
% Trivial inequalities: 633
% Fw subsumption resolutions: 9608
% Fw demodulations: 39498
% Bw demodulations: 7930
% Condensations: 8807
% Global subsumptions: 1241
% 
% Simple tautologies: 993
% Equational tautologies: 1076
% Forward subsumptions: 86111
% Fw demodulations to eq. taut.: 146
% Bw demodulations to eq. taut.: 271
% 
% Unit resulting resolution: 10694
% Factoring: 4
% Forward superposition: 39819
% Backward superposition: 28684
% Self superposition: 738
% Equality factoring: 373
% Equality resolution: 56
% 
% Split clauses: 393
% Split components: 797
% SAT solver clauses: 16594
% SAT solver unit clauses: 990
% SAT solver binary clauses: 3894
% 
% Sat splits: 393
% Sat splitting refutations: 1898
% 
% Memory used [KB]: 101064
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.clos_relation
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_relation
% SZS output start Proof for thm.clos_relation
fof(f1636,plain,(
  $false),
  inference(subsumption_resolution,[],[f1635,f63])).
fof(f63,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.clos_relation.val_rel_rw|split|2',aHL_TRUTH)).
fof(f1635,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f1634,f112])).
fof(f112,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.list.list'('type.closSem.v'),sK2),s('type.list.list'('type.closSem.v'),sK1)))),
  inference(subsumption_resolution,[],[f105,f61])).
fof(f61,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.clos_relation.val_rel_rw|split|2',aHL_FALSITY)).
fof(f105,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.list.list'('type.closSem.v'),sK2),s('type.list.list'('type.closSem.v'),sK1)))),
  inference(superposition,[],[f66,f55])).
fof(f55,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.clos_relation.val_rel_rw|split|2',aHL_BOOL_CASES)).
fof(f66,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.list.list'('type.closSem.v'),sK2),s('type.list.list'('type.closSem.v'),sK1))))),
  inference(subsumption_resolution,[],[f46,f49])).
fof(f49,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1)))))) | (s('type.num.num',X3) = s('type.num.num',X4) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1)))))) & (s('type.num.num',X3) != s('type.num.num',X4) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1)))) | p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1))))))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1)))))) | (s('type.num.num',X3) = s('type.num.num',X4) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1)))))) & ((s('type.num.num',X3) != s('type.num.num',X4) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1))))) | p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1))))))))),
  inference(nnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1)))))) <=> (s('type.num.num',X3) = s('type.num.num',X4) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1))))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1)))))) <=> (s('type.num.num',X3) = s('type.num.num',X4) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X8,X9,X10,X11] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X11))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X10),s('type.list.list'('type.closSem.v'),X8))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X9),s('type.list.list'('type.closSem.v'),X7)))))) <=> (s('type.num.num',X9) = s('type.num.num',X10) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X11))),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.closSem.v'),X7))))))),
  file('thm.clos_relation.val_rel_rw|split|2','thm.clos_relation.val_rel_def|split|2')).
fof(f46,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.list.list'('type.closSem.v'),sK2),s('type.list.list'('type.closSem.v'),sK1)))) | p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK4),s('type.list.list'('type.closSem.v'),sK2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK3),s('type.list.list'('type.closSem.v'),sK1))))))),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK4),s('type.list.list'('type.closSem.v'),sK2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK3),s('type.list.list'('type.closSem.v'),sK1)))))) | (s('type.num.num',sK3) = s('type.num.num',sK4) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.list.list'('type.closSem.v'),sK2),s('type.list.list'('type.closSem.v'),sK1)))))) & (~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK4),s('type.list.list'('type.closSem.v'),sK2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK3),s('type.list.list'('type.closSem.v'),sK1)))))) | s('type.num.num',sK3) != s('type.num.num',sK4) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.list.list'('type.closSem.v'),sK2),s('type.list.list'('type.closSem.v'),sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f38])).
fof(f38,plain,(
  ? [X0,X1,X2,X3,X4,X5] : ((p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1)))))) | (s('type.num.num',X3) = s('type.num.num',X4) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1)))))) & (~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1)))))) | s('type.num.num',X3) != s('type.num.num',X4) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1))))))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ? [X0,X1,X2,X3,X4,X5] : ((p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1)))))) | (s('type.num.num',X3) = s('type.num.num',X4) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1)))))) & (~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1)))))) | (s('type.num.num',X3) != s('type.num.num',X4) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1)))))))),
  inference(nnf_transformation,[],[f33])).
fof(f33,plain,(
  ? [X0,X1,X2,X3,X4,X5] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1)))))) <~> (s('type.num.num',X3) = s('type.num.num',X4) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1)))))) <=> (s('type.num.num',X3) = s('type.num.num',X4) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2,X3,X4,X5] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1)))))) <=> (s('type.num.num',X3) = s('type.num.num',X4) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10,X11] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X11))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X10),s('type.list.list'('type.closSem.v'),X8))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X9),s('type.list.list'('type.closSem.v'),X7)))))) <=> (s('type.num.num',X9) = s('type.num.num',X10) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X11))),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.closSem.v'),X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10,X11] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X11))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X10),s('type.list.list'('type.closSem.v'),X8))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X9),s('type.list.list'('type.closSem.v'),X7)))))) <=> (s('type.num.num',X9) = s('type.num.num',X10) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X11))),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.closSem.v'),X7))))))),
  file('thm.clos_relation.val_rel_rw|split|2','thm.clos_relation.val_rel_rw|split|2')).
fof(f1634,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.list.list'('type.closSem.v'),sK2),s('type.list.list'('type.closSem.v'),sK1))))),
  inference(trivial_inequality_removal,[],[f1568])).
fof(f1568,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.list.list'('type.closSem.v'),sK2),s('type.list.list'('type.closSem.v'),sK1)))) | s('type.num.num',sK3) != s('type.num.num',sK3)),
  inference(resolution,[],[f50,f208])).
fof(f208,plain,(
  ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK3),s('type.list.list'('type.closSem.v'),sK2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK3),s('type.list.list'('type.closSem.v'),sK1))))))),
  inference(forward_demodulation,[],[f65,f67])).
fof(f67,plain,(
  s('type.num.num',sK3) = s('type.num.num',sK4)),
  inference(subsumption_resolution,[],[f45,f48])).
fof(f48,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num',X3) = s('type.num.num',X4) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f45,plain,(
  s('type.num.num',sK3) = s('type.num.num',sK4) | p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK4),s('type.list.list'('type.closSem.v'),sK2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK3),s('type.list.list'('type.closSem.v'),sK1))))))),
  inference(cnf_transformation,[],[f39])).
fof(f65,plain,(
  ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK4),s('type.list.list'('type.closSem.v'),sK2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK3),s('type.list.list'('type.closSem.v'),sK1))))))),
  inference(subsumption_resolution,[],[f64,f49])).
fof(f64,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.list.list'('type.closSem.v'),sK2),s('type.list.list'('type.closSem.v'),sK1)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK4),s('type.list.list'('type.closSem.v'),sK2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK3),s('type.list.list'('type.closSem.v'),sK1))))))),
  inference(subsumption_resolution,[],[f47,f48])).
fof(f47,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.list.list'('type.closSem.v'),sK2),s('type.list.list'('type.closSem.v'),sK1)))) | s('type.num.num',sK3) != s('type.num.num',sK4) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK0),'const.bool.the_value_0'),s('type.num.num',sK5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK4),s('type.list.list'('type.closSem.v'),sK2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK3),s('type.list.list'('type.closSem.v'),sK1))))))),
  inference(cnf_transformation,[],[f39])).
fof(f50,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X4),s('type.list.list'('type.closSem.v'),X2))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X1)))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X5))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X1)))) | s('type.num.num',X3) != s('type.num.num',X4)) )),
  inference(cnf_transformation,[],[f41])).
% SZS output end Proof for thm.clos_relation
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 37
% Passive clauses: 224
% Generated clauses: 1517
% Final active clauses: 21
% Final passive clauses: 170
% Input formulas: 21
% Initial clauses: 19
% 
% Selected by SInE selection: 10
% SInE iterations: 1
% 
% Duplicate literals: 169
% Trivial inequalities: 6
% Fw subsumption resolutions: 143
% Fw demodulations: 41
% Bw demodulations: 12
% 
% Simple tautologies: 87
% Equational tautologies: 30
% Forward subsumptions: 710
% 
% Binary resolution: 118
% Forward superposition: 517
% Backward superposition: 380
% Self superposition: 54
% Equality factoring: 48
% Equality resolution: 1
% 
% Split clauses: 46
% Split components: 92
% SAT solver clauses: 51
% SAT solver unit clauses: 4
% SAT solver binary clauses: 42
% 
% Sat splits: 46
% Sat splitting refutations: 4
% 
% Memory used [KB]: 1279
% Time elapsed: 0.025 s
% ------------------------------
% ------------------------------
% Success in time 11.771 s
