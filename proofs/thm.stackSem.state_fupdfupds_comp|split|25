Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.stackSem
% (99269)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 145
% Passive clauses: 2661
% Generated clauses: 16548
% Final active clauses: 115
% Final passive clauses: 2315
% Input formulas: 132
% Initial clauses: 143
% 
% Duplicate literals: 593
% Trivial inequalities: 43
% Fw subsumption resolutions: 1216
% Fw demodulations: 2412
% Bw demodulations: 24
% 
% Simple tautologies: 48
% Equational tautologies: 44
% Forward subsumptions: 9150
% 
% Binary resolution: 445
% Factoring: 2
% Forward superposition: 5363
% Backward superposition: 5938
% Self superposition: 215
% Equality factoring: 76
% Equality resolution: 1
% 
% Split clauses: 168
% Split components: 336
% SAT solver clauses: 507
% SAT solver unit clauses: 21
% SAT solver binary clauses: 112
% 
% Sat splits: 168
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 507
% TWLsolver calls for satisfiability: 129
% 
% Memory used [KB]: 18549
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.stackSem
% (99294)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 122
% Passive clauses: 1143
% Generated clauses: 12113
% Final active clauses: 87
% Final passive clauses: 783
% Input formulas: 132
% Initial clauses: 143
% 
% Duplicate literals: 321
% Trivial inequalities: 16
% Fw subsumption resolutions: 612
% Fw demodulations: 1343
% Bw demodulations: 267
% Condensations: 769
% 
% Simple tautologies: 47
% Equational tautologies: 33
% Forward subsumptions: 6067
% 
% Binary resolution: 349
% Factoring: 1
% Forward superposition: 3762
% Backward superposition: 3089
% Self superposition: 161
% Equality factoring: 56
% Equality resolution: 1
% 
% Split clauses: 37
% Split components: 74
% SAT solver clauses: 1836
% SAT solver unit clauses: 259
% SAT solver binary clauses: 46
% 
% Sat splits: 37
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 1836
% TWLsolver calls for satisfiability: 335
% 
% Memory used [KB]: 19189
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.stackSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.stackSem
% SZS output start Proof for thm.stackSem
fof(f35326,plain,(
  $false),
  inference(subsumption_resolution,[],[f35325,f407])).
fof(f407,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.stackSem.state_fupdfupds_comp|split|25',aHL_TRUTH)).
fof(f35325,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f35323,f4532])).
fof(f4532,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X1)))) )),
  inference(condensation,[],[f4531])).
fof(f4531,plain,(
  ( ! [X10,X8,X9] : (s(bool,'T_0') = s(bool,happ(s(fun(X8,bool),happ(s(fun(X8,fun(X8,bool)),'=_0'),s(X8,X9))),s(X8,X9))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(subsumption_resolution,[],[f4459,f555])).
fof(f555,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f409,f410])).
fof(f410,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.stackSem.state_fupdfupds_comp|split|25',aHL_BOOL_CASES)).
fof(f409,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f136])).
fof(f136,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.stackSem.state_fupdfupds_comp|split|25',aHL_FALSITY)).
fof(f4459,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X10)) | s(bool,'T_0') = s(bool,happ(s(fun(X8,bool),happ(s(fun(X8,fun(X8,bool)),'=_0'),s(X8,X9))),s(X8,X9))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f3508,f553])).
fof(f553,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f410,f410])).
fof(f3508,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X1))))) )),
  inference(backward_demodulation,[],[f3413,f1572])).
fof(f1572,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),'const.combin.o_3'(s(fun(X0,fun(X0,bool)),'=_0'),s(fun(X0,X0),'_i_0_0'),s(X0,X1))),s(X0,X1))))) )),
  inference(forward_demodulation,[],[f1525,f474])).
fof(f474,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))) )),
  inference(cnf_transformation,[],[f236])).
fof(f236,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(flattening,[],[f235])).
fof(f235,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X7,X15] : ! [X11,X10,X16] : s(X6,'const.combin.o_3'(s(fun(X7,X6),X11),s(fun(X15,X7),X10),s(X15,X16))) = s(X6,happ(s(fun(X7,X6),X11),s(X7,happ(s(fun(X15,X7),X10),s(X15,X16)))))),
  file('thm.stackSem.state_fupdfupds_comp|split|25','thm.combin.o_THM')).
fof(f1525,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1))))),s(X0,X1))))) )),
  inference(unit_resulting_resolution,[],[f411,f472])).
fof(f472,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f405])).
fof(f405,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2))))))),
  inference(nnf_transformation,[],[f232])).
fof(f232,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f70])).
fof(f70,axiom,(
  ! [X65,X66,X67] : (p(s(bool,happ(s(fun(X65,bool),happ(s(fun(X65,fun(X65,bool)),'=_0'),s(X65,X66))),s(X65,X67)))) <=> s(X65,X66) = s(X65,X67))),
  file('thm.stackSem.state_fupdfupds_comp|split|25',arity_0_HL_EQ)).
fof(f411,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(flattening,[],[f137])).
fof(f137,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(rectify,[],[f127])).
fof(f127,axiom,(
  ! [X45] : ! [X47] : s(X45,X47) = s(X45,happ(s(fun(X45,X45),'_i_0_0'),s(X45,X47)))),
  file('thm.stackSem.state_fupdfupds_comp|split|25','_i0_ax')).
fof(f3413,plain,(
  ( ! [X76,X74,X75,X73] : (s(X75,happ(s(fun(X73,X75),X76),s(X73,X74))) = s(X75,'const.combin.o_3'(s(fun(X73,X75),X76),s(fun(X73,X73),'_i_0_0'),s(X73,X74)))) )),
  inference(superposition,[],[f474,f411])).
fof(f35323,plain,(
  ~p(s(bool,happ(s(fun(fun(sK0,'type.stackSem.state'(sK1,sK2)),bool),happ(s(fun(fun(sK0,'type.stackSem.state'(sK1,sK2)),fun(fun(sK0,'type.stackSem.state'(sK1,sK2)),bool)),'=_0'),s(fun(sK0,'type.stackSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.stackSem.state'(sK1,sK2),'type.stackSem.state'(sK1,sK2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK5),s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK4))))),s(fun(sK0,'type.stackSem.state'(sK1,sK2)),sK3))))),s(fun(sK0,'type.stackSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.stackSem.state'(sK1,sK2),'type.stackSem.state'(sK1,sK2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK5),s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK4))))),s(fun(sK0,'type.stackSem.state'(sK1,sK2)),sK3))))))),
  inference(backward_demodulation,[],[f35256,f13371])).
fof(f13371,plain,(
  ~p(s(bool,happ(s(fun(fun(sK0,'type.stackSem.state'(sK1,sK2)),bool),happ(s(fun(fun(sK0,'type.stackSem.state'(sK1,sK2)),fun(fun(sK0,'type.stackSem.state'(sK1,sK2)),bool)),'=_0'),s(fun(sK0,'type.stackSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.stackSem.state'(sK1,sK2),'type.stackSem.state'(sK1,sK2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK5),s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK4))))),s(fun(sK0,'type.stackSem.state'(sK1,sK2)),sK3))))),s(fun(sK0,'type.stackSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.stackSem.state'(sK1,sK2),'type.stackSem.state'(sK1,sK2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK5))),s(fun(sK0,'type.stackSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.stackSem.state'(sK1,sK2),'type.stackSem.state'(sK1,sK2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK4))),s(fun(sK0,'type.stackSem.state'(sK1,sK2)),sK3))))))))),
  inference(unit_resulting_resolution,[],[f406,f471])).
fof(f471,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f405])).
fof(f406,plain,(
  s(fun(sK0,'type.stackSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.stackSem.state'(sK1,sK2),'type.stackSem.state'(sK1,sK2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK5),s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK4))))),s(fun(sK0,'type.stackSem.state'(sK1,sK2)),sK3))) != s(fun(sK0,'type.stackSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.stackSem.state'(sK1,sK2),'type.stackSem.state'(sK1,sK2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK5))),s(fun(sK0,'type.stackSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.stackSem.state'(sK1,sK2),'type.stackSem.state'(sK1,sK2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK4))),s(fun(sK0,'type.stackSem.state'(sK1,sK2)),sK3)))))),
  inference(cnf_transformation,[],[f391])).
fof(f391,plain,(
  s(fun(sK0,'type.stackSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.stackSem.state'(sK1,sK2),'type.stackSem.state'(sK1,sK2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK5),s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK4))))),s(fun(sK0,'type.stackSem.state'(sK1,sK2)),sK3))) != s(fun(sK0,'type.stackSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.stackSem.state'(sK1,sK2),'type.stackSem.state'(sK1,sK2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK5))),s(fun(sK0,'type.stackSem.state'(sK1,sK2)),'const.combin.o_2'(s(fun('type.stackSem.state'(sK1,sK2),'type.stackSem.state'(sK1,sK2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),sK4))),s(fun(sK0,'type.stackSem.state'(sK1,sK2)),sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f385])).
fof(f385,plain,(
  ? [X0,X1,X2,X3,X4,X5] : s(fun(X0,'type.stackSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.stackSem.state'(X1,X2),'type.stackSem.state'(X1,X2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X5),s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X4))))),s(fun(X0,'type.stackSem.state'(X1,X2)),X3))) != s(fun(X0,'type.stackSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.stackSem.state'(X1,X2),'type.stackSem.state'(X1,X2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X5))),s(fun(X0,'type.stackSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.stackSem.state'(X1,X2),'type.stackSem.state'(X1,X2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X4))),s(fun(X0,'type.stackSem.state'(X1,X2)),X3)))))),
  inference(ennf_transformation,[],[f135])).
fof(f135,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : s(fun(X0,'type.stackSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.stackSem.state'(X1,X2),'type.stackSem.state'(X1,X2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X5),s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X4))))),s(fun(X0,'type.stackSem.state'(X1,X2)),X3))) = s(fun(X0,'type.stackSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.stackSem.state'(X1,X2),'type.stackSem.state'(X1,X2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X5))),s(fun(X0,'type.stackSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.stackSem.state'(X1,X2),'type.stackSem.state'(X1,X2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X4))),s(fun(X0,'type.stackSem.state'(X1,X2)),X3)))))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5] : s(fun(X0,'type.stackSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.stackSem.state'(X1,X2),'type.stackSem.state'(X1,X2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X5),s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X4))))),s(fun(X0,'type.stackSem.state'(X1,X2)),X3))) = s(fun(X0,'type.stackSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.stackSem.state'(X1,X2),'type.stackSem.state'(X1,X2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X5))),s(fun(X0,'type.stackSem.state'(X1,X2)),'const.combin.o_2'(s(fun('type.stackSem.state'(X1,X2),'type.stackSem.state'(X1,X2)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X4))),s(fun(X0,'type.stackSem.state'(X1,X2)),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11] : s(fun(X6,'type.stackSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.stackSem.state'(X7,X8),'type.stackSem.state'(X7,X8)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),X11),s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),X10))))),s(fun(X6,'type.stackSem.state'(X7,X8)),X9))) = s(fun(X6,'type.stackSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.stackSem.state'(X7,X8),'type.stackSem.state'(X7,X8)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),X11))),s(fun(X6,'type.stackSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.stackSem.state'(X7,X8),'type.stackSem.state'(X7,X8)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),X10))),s(fun(X6,'type.stackSem.state'(X7,X8)),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11] : s(fun(X6,'type.stackSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.stackSem.state'(X7,X8),'type.stackSem.state'(X7,X8)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),X11),s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),X10))))),s(fun(X6,'type.stackSem.state'(X7,X8)),X9))) = s(fun(X6,'type.stackSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.stackSem.state'(X7,X8),'type.stackSem.state'(X7,X8)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),X11))),s(fun(X6,'type.stackSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.stackSem.state'(X7,X8),'type.stackSem.state'(X7,X8)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),X10))),s(fun(X6,'type.stackSem.state'(X7,X8)),X9)))))),
  file('thm.stackSem.state_fupdfupds_comp|split|25','thm.stackSem.state_fupdfupds_comp|split|25')).
fof(f35256,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(fun(X4,'type.stackSem.state'(X0,X1)),'const.combin.o_2'(s(fun('type.stackSem.state'(X0,X1),'type.stackSem.state'(X0,X1)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X0)),'type.sptree.spt'('type.stackLang.prog'(X0))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X0)),'type.sptree.spt'('type.stackLang.prog'(X0))),X2),s(fun('type.sptree.spt'('type.stackLang.prog'(X0)),'type.sptree.spt'('type.stackLang.prog'(X0))),X3))))),s(fun(X4,'type.stackSem.state'(X0,X1)),X5))) = s(fun(X4,'type.stackSem.state'(X0,X1)),'const.combin.o_2'(s(fun('type.stackSem.state'(X0,X1),'type.stackSem.state'(X0,X1)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X0)),'type.sptree.spt'('type.stackLang.prog'(X0))),X2))),s(fun(X4,'type.stackSem.state'(X0,X1)),'const.combin.o_2'(s(fun('type.stackSem.state'(X0,X1),'type.stackSem.state'(X0,X1)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X0)),'type.sptree.spt'('type.stackLang.prog'(X0))),X3))),s(fun(X4,'type.stackSem.state'(X0,X1)),X5)))))) )),
  inference(superposition,[],[f483,f437])).
fof(f437,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun('type.stackSem.state'(X1,X0),'type.stackSem.state'(X1,X0)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X3),s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X2))))) = s(fun('type.stackSem.state'(X1,X0),'type.stackSem.state'(X1,X0)),'const.combin.o_2'(s(fun('type.stackSem.state'(X1,X0),'type.stackSem.state'(X1,X0)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X3))),s(fun('type.stackSem.state'(X1,X0),'type.stackSem.state'(X1,X0)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X2)))))) )),
  inference(cnf_transformation,[],[f166])).
fof(f166,plain,(
  ! [X0,X1,X2,X3] : s(fun('type.stackSem.state'(X1,X0),'type.stackSem.state'(X1,X0)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X3),s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X2))))) = s(fun('type.stackSem.state'(X1,X0),'type.stackSem.state'(X1,X0)),'const.combin.o_2'(s(fun('type.stackSem.state'(X1,X0),'type.stackSem.state'(X1,X0)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X3))),s(fun('type.stackSem.state'(X1,X0),'type.stackSem.state'(X1,X0)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X2)))))),
  inference(flattening,[],[f165])).
fof(f165,plain,(
  ! [X0,X1] : ! [X2,X3] : s(fun('type.stackSem.state'(X1,X0),'type.stackSem.state'(X1,X0)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X3),s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X2))))) = s(fun('type.stackSem.state'(X1,X0),'type.stackSem.state'(X1,X0)),'const.combin.o_2'(s(fun('type.stackSem.state'(X1,X0),'type.stackSem.state'(X1,X0)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X3))),s(fun('type.stackSem.state'(X1,X0),'type.stackSem.state'(X1,X0)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),X2)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X8,X7] : ! [X10,X11] : s(fun('type.stackSem.state'(X7,X8),'type.stackSem.state'(X7,X8)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),'const.combin.o_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),X11),s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),X10))))) = s(fun('type.stackSem.state'(X7,X8),'type.stackSem.state'(X7,X8)),'const.combin.o_2'(s(fun('type.stackSem.state'(X7,X8),'type.stackSem.state'(X7,X8)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),X11))),s(fun('type.stackSem.state'(X7,X8),'type.stackSem.state'(X7,X8)),'const.stackSem.state_code_fupd_1'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),X10)))))),
  file('thm.stackSem.state_fupdfupds_comp|split|25','thm.stackSem.state_fupdfupds_comp|split|24')).
fof(f483,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))) )),
  inference(cnf_transformation,[],[f254])).
fof(f254,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(flattening,[],[f253])).
fof(f253,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6] : s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X2,X1),'const.combin.o_2'(s(fun(X3,X1),X5),s(fun(X2,X3),X6))))) = s(fun(X2,X0),'const.combin.o_2'(s(fun(X3,X0),'const.combin.o_2'(s(fun(X1,X0),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6,X7,X22,X15] : ! [X11,X10,X9] : s(fun(X22,X6),'const.combin.o_2'(s(fun(X7,X6),X11),s(fun(X22,X7),'const.combin.o_2'(s(fun(X15,X7),X10),s(fun(X22,X15),X9))))) = s(fun(X22,X6),'const.combin.o_2'(s(fun(X15,X6),'const.combin.o_2'(s(fun(X7,X6),X11),s(fun(X15,X7),X10))),s(fun(X22,X15),X9)))),
  file('thm.stackSem.state_fupdfupds_comp|split|25','thm.combin.o_ASSOC')).
% SZS output end Proof for thm.stackSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 242
% Passive clauses: 3943
% Generated clauses: 38438
% Final active clauses: 106
% Final passive clauses: 1450
% Input formulas: 132
% Initial clauses: 143
% 
% Duplicate literals: 985
% Trivial inequalities: 86
% Fw subsumption resolutions: 1090
% Fw demodulations: 5614
% Bw demodulations: 2021
% Condensations: 1535
% Global subsumptions: 363
% 
% Simple tautologies: 133
% Equational tautologies: 199
% Forward subsumptions: 23945
% Fw demodulations to eq. taut.: 1
% Bw demodulations to eq. taut.: 82
% 
% Unit resulting resolution: 1115
% Factoring: 1
% Forward superposition: 11203
% Backward superposition: 10046
% Self superposition: 360
% Equality factoring: 116
% Equality resolution: 3
% 
% Split clauses: 42
% Split components: 84
% SAT solver clauses: 4830
% SAT solver unit clauses: 1299
% SAT solver binary clauses: 2115
% 
% Sat splits: 42
% Sat splitting refutations: 438
% 
% Memory used [KB]: 47973
% Time elapsed: 2.039 s
% ------------------------------
% ------------------------------
% Success in time 3.39 s
