Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordSem
% (78547)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 132
% Passive clauses: 2036
% Generated clauses: 16542
% Final active clauses: 123
% Final passive clauses: 1753
% Input formulas: 69
% Initial clauses: 82
% 
% Duplicate literals: 576
% Trivial inequalities: 290
% Fw subsumption resolutions: 1089
% Fw demodulations: 1423
% Bw demodulations: 6
% 
% Simple tautologies: 310
% Equational tautologies: 37
% Forward subsumptions: 10644
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 196
% Factoring: 1
% Forward superposition: 8197
% Backward superposition: 4401
% Self superposition: 149
% Equality factoring: 68
% Equality resolution: 28
% 
% Split clauses: 98
% Split components: 196
% SAT solver clauses: 216
% SAT solver unit clauses: 35
% SAT solver binary clauses: 83
% 
% Sat splits: 98
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 215
% TWLsolver calls for satisfiability: 76
% 
% Memory used [KB]: 20212
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.wordSem
% (78578)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 92
% Passive clauses: 752
% Generated clauses: 9480
% Final active clauses: 70
% Final passive clauses: 560
% Input formulas: 69
% Initial clauses: 82
% 
% Duplicate literals: 329
% Trivial inequalities: 183
% Fw subsumption resolutions: 463
% Fw demodulations: 851
% Bw demodulations: 120
% Condensations: 719
% 
% Simple tautologies: 119
% Equational tautologies: 20
% Forward subsumptions: 5041
% 
% Binary resolution: 71
% Factoring: 1
% Forward superposition: 3322
% Backward superposition: 2551
% Self superposition: 155
% Equality factoring: 67
% Equality resolution: 24
% 
% Split clauses: 68
% Split components: 136
% SAT solver clauses: 1076
% SAT solver unit clauses: 136
% SAT solver binary clauses: 35
% 
% Sat splits: 68
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1076
% TWLsolver calls for satisfiability: 248
% 
% Memory used [KB]: 18166
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.wordSem
% (78602)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 372
% Passive clauses: 4821
% Generated clauses: 96176
% Final active clauses: 134
% Final passive clauses: 482
% Input formulas: 69
% Initial clauses: 82
% Discarded non-redundant clauses: 6583
% 
% Duplicate literals: 2187
% Trivial inequalities: 874
% Fw subsumption resolutions: 7106
% Fw demodulations: 13680
% Bw demodulations: 2281
% Condensations: 7019
% Global subsumptions: 170
% 
% Simple tautologies: 656
% Equational tautologies: 241
% Forward subsumptions: 56728
% Fw demodulations to eq. taut.: 1
% Bw demodulations to eq. taut.: 154
% 
% Unit resulting resolution: 1587
% Factoring: 1
% Forward superposition: 31984
% Backward superposition: 26032
% Self superposition: 587
% Equality factoring: 258
% Equality resolution: 49
% 
% Split clauses: 105
% Split components: 223
% SAT solver clauses: 5450
% SAT solver unit clauses: 687
% SAT solver binary clauses: 1542
% 
% Sat splits: 105
% Sat splitting refutations: 246
% 
% Memory used [KB]: 183451
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.wordSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordSem
% SZS output start Proof for thm.wordSem
fof(f194,plain,(
  $false),
  inference(resolution,[],[f183,f110])).
fof(f110,plain,(
  ~p(s(bool,happ(s(fun('type.wordSem.state'(sK0,sK1),bool),sK2),s('type.wordSem.state'(sK0,sK1),sK3))))),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : p(s(bool,happ(s(fun('type.wordSem.state'(sK0,sK1),bool),sK2),s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),X5),s('type.list.list'('type.wordSem.stack_frame'(sK0)),X6),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),X7),s(fun('type.fcp.cart'(bool,sK0),bool),X8),s(fun('type.num.num',fun('type.num.num','type.num.num')),X9),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),X10),s('type.num.num',X11),s('type.num.num',X12),s('type.num.num',X13),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),X14),s(bool,X15),s('type.ffi.ffi_state'(sK1),X16)))))) & ~p(s(bool,happ(s(fun('type.wordSem.state'(sK0,sK1),bool),sK2),s('type.wordSem.state'(sK0,sK1),sK3))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f93])).
fof(f93,plain,(
  ? [X0,X1,X2] : (! [X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : p(s(bool,happ(s(fun('type.wordSem.state'(X0,X1),bool),X2),s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.stack_frame'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X7),s(fun('type.fcp.cart'(bool,X0),bool),X8),s(fun('type.num.num',fun('type.num.num','type.num.num')),X9),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X10),s('type.num.num',X11),s('type.num.num',X12),s('type.num.num',X13),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X14),s(bool,X15),s('type.ffi.ffi_state'(X1),X16)))))) & ? [X3] : ~p(s(bool,happ(s(fun('type.wordSem.state'(X0,X1),bool),X2),s('type.wordSem.state'(X0,X1),X3)))))),
  inference(rectify,[],[f90])).
fof(f90,plain,(
  ? [X0,X1,X2] : (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : p(s(bool,happ(s(fun('type.wordSem.state'(X0,X1),bool),X2),s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X3),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X4),s('type.list.list'('type.wordSem.stack_frame'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X7),s(fun('type.num.num',fun('type.num.num','type.num.num')),X8),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X9),s('type.num.num',X10),s('type.num.num',X11),s('type.num.num',X12),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X13),s(bool,X14),s('type.ffi.ffi_state'(X1),X15)))))) & ? [X16] : ~p(s(bool,happ(s(fun('type.wordSem.state'(X0,X1),bool),X2),s('type.wordSem.state'(X0,X1),X16)))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2] : (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : p(s(bool,happ(s(fun('type.wordSem.state'(X0,X1),bool),X2),s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X3),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X4),s('type.list.list'('type.wordSem.stack_frame'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X7),s(fun('type.num.num',fun('type.num.num','type.num.num')),X8),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X9),s('type.num.num',X10),s('type.num.num',X11),s('type.num.num',X12),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X13),s(bool,X14),s('type.ffi.ffi_state'(X1),X15)))))) => ! [X16] : p(s(bool,happ(s(fun('type.wordSem.state'(X0,X1),bool),X2),s('type.wordSem.state'(X0,X1),X16)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1] : ! [X2] : (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : p(s(bool,happ(s(fun('type.wordSem.state'(X0,X1),bool),X2),s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X3),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X4),s('type.list.list'('type.wordSem.stack_frame'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X7),s(fun('type.num.num',fun('type.num.num','type.num.num')),X8),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X9),s('type.num.num',X10),s('type.num.num',X11),s('type.num.num',X12),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X13),s(bool,X14),s('type.ffi.ffi_state'(X1),X15)))))) => ! [X16] : p(s(bool,happ(s(fun('type.wordSem.state'(X0,X1),bool),X2),s('type.wordSem.state'(X0,X1),X16)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : (! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : p(s(bool,happ(s(fun('type.wordSem.state'(X6,X7),bool),X8),s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X9),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X10),s('type.list.list'('type.wordSem.stack_frame'(X6)),X11),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X12),s(fun('type.fcp.cart'(bool,X6),bool),X13),s(fun('type.num.num',fun('type.num.num','type.num.num')),X14),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X15),s('type.num.num',X16),s('type.num.num',X17),s('type.num.num',X18),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X19),s(bool,X20),s('type.ffi.ffi_state'(X7),X21)))))) => ! [X9] : p(s(bool,happ(s(fun('type.wordSem.state'(X6,X7),bool),X8),s('type.wordSem.state'(X6,X7),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : (! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : p(s(bool,happ(s(fun('type.wordSem.state'(X6,X7),bool),X8),s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X9),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X10),s('type.list.list'('type.wordSem.stack_frame'(X6)),X11),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X12),s(fun('type.fcp.cart'(bool,X6),bool),X13),s(fun('type.num.num',fun('type.num.num','type.num.num')),X14),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X15),s('type.num.num',X16),s('type.num.num',X17),s('type.num.num',X18),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X19),s(bool,X20),s('type.ffi.ffi_state'(X7),X21)))))) => ! [X9] : p(s(bool,happ(s(fun('type.wordSem.state'(X6,X7),bool),X8),s('type.wordSem.state'(X6,X7),X9)))))),
  file('thm.wordSem.state_induction','thm.wordSem.state_induction')).
fof(f183,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.wordSem.state'(sK0,sK1),bool),sK2),s('type.wordSem.state'(sK0,sK1),X0))))) )),
  inference(superposition,[],[f109,f133])).
fof(f133,plain,(
  ( ! [X2,X0,X1] : (s('type.wordSem.state'(X0,X1),X2) = s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),sK33(X2,X1,X0)),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),sK34(X2,X1,X0)),s('type.list.list'('type.wordSem.stack_frame'(X0)),sK35(X2,X1,X0)),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),sK36(X2,X1,X0)),s(fun('type.fcp.cart'(bool,X0),bool),sK37(X2,X1,X0)),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK38(X2,X1,X0)),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),sK39(X2,X1,X0)),s('type.num.num',sK40(X2,X1,X0)),s('type.num.num',sK41(X2,X1,X0)),s('type.num.num',sK42(X2,X1,X0)),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),sK43(X2,X1,X0)),s(bool,sK44(X2,X1,X0)),s('type.ffi.ffi_state'(X1),sK45(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0,X1,X2] : s('type.wordSem.state'(X0,X1),X2) = s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),sK33(X2,X1,X0)),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),sK34(X2,X1,X0)),s('type.list.list'('type.wordSem.stack_frame'(X0)),sK35(X2,X1,X0)),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),sK36(X2,X1,X0)),s(fun('type.fcp.cart'(bool,X0),bool),sK37(X2,X1,X0)),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK38(X2,X1,X0)),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),sK39(X2,X1,X0)),s('type.num.num',sK40(X2,X1,X0)),s('type.num.num',sK41(X2,X1,X0)),s('type.num.num',sK42(X2,X1,X0)),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),sK43(X2,X1,X0)),s(bool,sK44(X2,X1,X0)),s('type.ffi.ffi_state'(X1),sK45(X2,X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK33,sK34,sK35,sK36,sK37,sK38,sK39,sK40,sK41,sK42,sK43,sK44,sK45])],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2] : ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.wordSem.state'(X0,X1),X2) = s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X3),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X4),s('type.list.list'('type.wordSem.stack_frame'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X7),s(fun('type.num.num',fun('type.num.num','type.num.num')),X8),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X9),s('type.num.num',X10),s('type.num.num',X11),s('type.num.num',X12),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X13),s(bool,X14),s('type.ffi.ffi_state'(X1),X15)))),
  inference(flattening,[],[f88])).
fof(f88,plain,(
  ! [X0,X1] : ! [X2] : ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15] : s('type.wordSem.state'(X0,X1),X2) = s('type.wordSem.state'(X0,X1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X0)),X3),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X4),s('type.list.list'('type.wordSem.stack_frame'(X0)),X5),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X6),s(fun('type.fcp.cart'(bool,X0),bool),X7),s(fun('type.num.num',fun('type.num.num','type.num.num')),X8),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X9),s('type.num.num',X10),s('type.num.num',X11),s('type.num.num',X12),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X0))),X13),s(bool,X14),s('type.ffi.ffi_state'(X1),X15)))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X6,X7] : ! [X62] : ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21] : s('type.wordSem.state'(X6,X7),X62) = s('type.wordSem.state'(X6,X7),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X6)),X9),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X10),s('type.list.list'('type.wordSem.stack_frame'(X6)),X11),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X12),s(fun('type.fcp.cart'(bool,X6),bool),X13),s(fun('type.num.num',fun('type.num.num','type.num.num')),X14),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X15),s('type.num.num',X16),s('type.num.num',X17),s('type.num.num',X18),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X6))),X19),s(bool,X20),s('type.ffi.ffi_state'(X7),X21)))),
  file('thm.wordSem.state_induction','thm.wordSem.state_nchotomy')).
fof(f109,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X7,X5,X15,X13,X11,X9,X16] : (p(s(bool,happ(s(fun('type.wordSem.state'(sK0,sK1),bool),sK2),s('type.wordSem.state'(sK0,sK1),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),X5),s('type.list.list'('type.wordSem.stack_frame'(sK0)),X6),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),X7),s(fun('type.fcp.cart'(bool,sK0),bool),X8),s(fun('type.num.num',fun('type.num.num','type.num.num')),X9),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),X10),s('type.num.num',X11),s('type.num.num',X12),s('type.num.num',X13),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK0))),X14),s(bool,X15),s('type.ffi.ffi_state'(sK1),X16))))))) )),
  inference(cnf_transformation,[],[f94])).
% SZS output end Proof for thm.wordSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 22
% Passive clauses: 17
% Generated clauses: 85
% Final active clauses: 22
% Final passive clauses: 14
% Input formulas: 69
% Initial clauses: 25
% 
% Selected by SInE selection: 14
% SInE iterations: 1
% 
% Duplicate literals: 6
% 
% Simple tautologies: 10
% Forward subsumptions: 37
% 
% Binary resolution: 25
% Forward superposition: 52
% 
% SAT solver clauses: 1
% 
% Memory used [KB]: 2302
% Time elapsed: 0.027 s
% ------------------------------
% ------------------------------
% Success in time 11.781 s
