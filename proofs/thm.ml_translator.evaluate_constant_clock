Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.ml_translator
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ml_translator
% SZS output start Proof for thm.ml_translator
fof(f1788,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1765,f121,f123,f122,f126,f124])).
fof(f124,plain,(
  ~p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.ast.exp',sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3)))))) | $spl1),
  inference(cnf_transformation,[],[f124_D])).
fof(f124_D,plain,(
  ~p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.ast.exp',sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f126,plain,(
  s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK1))) != s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK2))) | $spl3),
  inference(cnf_transformation,[],[f126_D])).
fof(f126_D,plain,(
  s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK1))) != s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK2))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f122,plain,(
  s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK1))) != s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK2))) | ~p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.ast.exp',sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3))))))),
  inference(duplicate_literal_removal,[],[f81])).
fof(f81,plain,(
  s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK1))) != s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK2))) | ~p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.ast.exp',sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3)))))) | ~p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.ast.exp',sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3))))))),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  (p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.ast.exp',sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3)))))) | (p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.ast.exp',sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3)))))) & s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK1))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK2))))) & (~p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.ast.exp',sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3)))))) | ~p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.ast.exp',sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3)))))) | s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK1))) != s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f63])).
fof(f63,plain,(
  ? [X0,X1,X2,X3,X4,X5] : ((p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X3)))))) | (p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X3)))))) & s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X1))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X2))))) & (~p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X3)))))) | ~p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X3)))))) | s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X1))) != s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X2)))))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ? [X0,X1,X2,X3,X4,X5] : ((p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X3)))))) | (p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X3)))))) & s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X1))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X2))))) & (~p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X3)))))) | (~p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X3)))))) | s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X1))) != s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X2))))))),
  inference(nnf_transformation,[],[f50])).
fof(f50,plain,(
  ? [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X3)))))) <~> (p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X3)))))) & s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X1))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X2)))))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X3)))))) <=> (p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X3)))))) & s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X1))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X2)))))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ~! [X0] : ! [X1,X2,X3,X4,X5] : (p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X3)))))) <=> (p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X5),s('type.semanticPrimitives.state'(X0),X2),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X0),X1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X3)))))) & s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X1))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10,X11] : (p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X11),s('type.semanticPrimitives.state'(X6),X8),s('type.ast.exp',X10),s('type.pair.prod'('type.semanticPrimitives.state'(X6),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X6),X7),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X9)))))) <=> (p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X11),s('type.semanticPrimitives.state'(X6),X8),s('type.ast.exp',X10),s('type.pair.prod'('type.semanticPrimitives.state'(X6),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X6),X7),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X9)))))) & s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X6),X7))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X6),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10,X11] : (p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X11),s('type.semanticPrimitives.state'(X6),X8),s('type.ast.exp',X10),s('type.pair.prod'('type.semanticPrimitives.state'(X6),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X6),X7),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X9)))))) <=> (p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X11),s('type.semanticPrimitives.state'(X6),X8),s('type.ast.exp',X10),s('type.pair.prod'('type.semanticPrimitives.state'(X6),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(X6),X7),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),X9)))))) & s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X6),X7))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X6),X8)))))),
  file('thm.ml_translator.evaluate_constant_clock','thm.ml_translator.evaluate_constant_clock')).
fof(f123,plain,(
  p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.ast.exp',sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3)))))) | $spl0),
  inference(cnf_transformation,[],[f123_D])).
fof(f123_D,plain,(
  p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.ast.exp',sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f121,plain,(
  p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.ast.exp',sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3))))))),
  inference(duplicate_literal_removal,[],[f79])).
fof(f79,plain,(
  p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.ast.exp',sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3)))))) | p(s(bool,'const.bigStep.evaluate_5'(s(bool,'F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK5),s('type.semanticPrimitives.state'(sK0),sK2),s('type.ast.exp',sK4),s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3))))))),
  inference(cnf_transformation,[],[f64])).
fof(f1765,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f1764,f126])).
fof(f1764,plain,(
  s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK1))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK2))) | $spl0),
  inference(forward_demodulation,[],[f1763,f113])).
fof(f113,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X15,X6] : ! [X19,X28] : s(X6,X19) = s(X6,'const.pair.FST_1'(s('type.pair.prod'(X6,X15),'const.pair.,_2'(s(X6,X19),s(X15,X28)))))),
  file('thm.ml_translator.evaluate_constant_clock','thm.pair.FST')).
fof(f1763,plain,(
  s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK2))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3))))))) | $spl0),
  inference(subsumption_resolution,[],[f1718,f84])).
fof(f84,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.ml_translator.evaluate_constant_clock',aHL_FALSITY)).
fof(f1718,plain,(
  p(s(bool,'F_0')) | s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK2))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(sK0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(sK0),sK1),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),sK3))))))) | $spl0),
  inference(resolution,[],[f97,f123])).
fof(f97,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.bigStep.evaluate_5'(s(bool,X1),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X2),s('type.semanticPrimitives.state'(X0),X3),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),X5)))) | p(s(bool,X1)) | s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X3))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),X5)))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (~p(s(bool,'const.bigStep.evaluate_5'(s(bool,X1),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X2),s('type.semanticPrimitives.state'(X0),X3),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),X5)))) | p(s(bool,X1)) | s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X3))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),X5))))))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (~p(s(bool,'const.bigStep.evaluate_5'(s(bool,X1),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X2),s('type.semanticPrimitives.state'(X0),X3),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),X5)))) | (p(s(bool,X1)) | s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X3))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),X5)))))))),
  inference(ennf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.bigStep.evaluate_5'(s(bool,X1),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X2),s('type.semanticPrimitives.state'(X0),X3),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),X5)))) => (~p(s(bool,X1)) => s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X3))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),X5)))))))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : (p(s(bool,'const.bigStep.evaluate_5'(s(bool,X1),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X2),s('type.semanticPrimitives.state'(X0),X3),s('type.ast.exp',X4),s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),X5)))) => (~p(s(bool,X1)) => s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X3))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(X0),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),X5)))))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X20] : ! [X21,X11,X22,X23,X24] : (p(s(bool,'const.bigStep.evaluate_5'(s(bool,X21),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X11),s('type.semanticPrimitives.state'(X20),X22),s('type.ast.exp',X23),s('type.pair.prod'('type.semanticPrimitives.state'(X20),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),X24)))) => (~p(s(bool,X21)) => s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X20),X22))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X20),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'(X20),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),X24)))))))),
  file('thm.ml_translator.evaluate_constant_clock','thm.ml_translator.ml_translator_4|49|5_prove_ltb|split|0')).
% SZS output end Proof for thm.ml_translator
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 42
% Passive clauses: 492
% Generated clauses: 1650
% Final active clauses: 42
% Final passive clauses: 418
% Input formulas: 20
% Initial clauses: 42
% 
% Duplicate literals: 105
% Trivial inequalities: 26
% Fw subsumption resolutions: 221
% Fw demodulations: 66
% 
% Simple tautologies: 72
% Equational tautologies: 28
% Forward subsumptions: 600
% 
% Binary resolution: 171
% Factoring: 1
% Forward superposition: 512
% Backward superposition: 385
% Self superposition: 48
% Equality factoring: 50
% Equality resolution: 5
% 
% Split clauses: 48
% Split components: 96
% SAT solver clauses: 73
% SAT solver unit clauses: 19
% SAT solver binary clauses: 47
% SAT solver learnt clauses: 1
% 
% Sat splits: 48
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 64
% TWLsolver calls for satisfiability: 32
% 
% Memory used [KB]: 1663
% Time elapsed: 0.102 s
% ------------------------------
% ------------------------------
% Success in time 0.12 s
