Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.stackProps
% (128216)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 728
% Passive clauses: 5300
% Generated clauses: 21567
% Final active clauses: 660
% Final passive clauses: 4264
% Input formulas: 133
% Initial clauses: 313
% 
% Duplicate literals: 170
% Trivial inequalities: 31
% Fw subsumption resolutions: 1077
% Fw demodulations: 2445
% Bw demodulations: 56
% 
% Simple tautologies: 211
% Equational tautologies: 26
% Forward subsumptions: 11736
% Fw demodulations to eq. taut.: 10
% 
% Binary resolution: 5009
% Factoring: 721
% Forward superposition: 4618
% Backward superposition: 6952
% Self superposition: 40
% Equality factoring: 2
% Equality resolution: 9
% 
% Split clauses: 608
% Split components: 1217
% SAT solver clauses: 778
% SAT solver unit clauses: 19
% SAT solver binary clauses: 65
% 
% Sat splits: 608
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 775
% TWLsolver calls for satisfiability: 288
% 
% Memory used [KB]: 12153
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.stackProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.stackProps
% SZS output start Proof for thm.stackProps
fof(f5319,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f5318,f5283,f5300,f506,f838,f683,f939])).
fof(f939,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK20(X2,X1,X0)),s(X1,sK21(X2,X1,X0))))) ) | $spl154),
  inference(cnf_transformation,[],[f939_D])).
fof(f939_D,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK20(X2,X1,X0)),s(X1,sK21(X2,X1,X0))))) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f683,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK20(X2,X1,X0)),s(X1,sK21(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f459])).
fof(f459,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK20(X2,X1,X0)),s(X1,sK21(X2,X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK20,sK21])],[f248])).
fof(f248,plain,(
  ! [X0,X1,X2] : ? [X3,X4] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))),
  inference(flattening,[],[f247])).
fof(f247,plain,(
  ! [X0,X1] : ! [X2] : ? [X3,X4] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X6,X7] : ! [X25] : ? [X48,X13] : s('type.pair.prod'(X6,X7),X25) = s('type.pair.prod'(X6,X7),'const.pair.,_2'(s(X6,X48),s(X7,X13)))),
  file('thm.stackProps.stackProps_|49|8_prove_ltb','thm.pair.ABS_PAIR_THM')).
fof(f838,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.option.option'('type.stackSem.result'(sK10)),'type.stackSem.state'(sK10,sK11)),'const.pair.,_2'(s('type.option.option'('type.stackSem.result'(sK10)),X4),s('type.stackSem.state'(sK10,sK11),X5))) != s('type.pair.prod'('type.option.option'('type.stackSem.result'(sK10)),'type.stackSem.state'(sK10,sK11)),'const.stackSem.evaluate_1'(s('type.pair.prod'('type.stackLang.prog'(sK10),'type.stackSem.state'(sK10,sK11)),'const.pair.,_2'(s('type.stackLang.prog'(sK10),sK13),s('type.stackSem.state'(sK10,sK11),sK12)))))) ) | $spl0),
  inference(cnf_transformation,[],[f838_D])).
fof(f838_D,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.option.option'('type.stackSem.result'(sK10)),'type.stackSem.state'(sK10,sK11)),'const.pair.,_2'(s('type.option.option'('type.stackSem.result'(sK10)),X4),s('type.stackSem.state'(sK10,sK11),X5))) != s('type.pair.prod'('type.option.option'('type.stackSem.result'(sK10)),'type.stackSem.state'(sK10,sK11)),'const.stackSem.evaluate_1'(s('type.pair.prod'('type.stackLang.prog'(sK10),'type.stackSem.state'(sK10,sK11)),'const.pair.,_2'(s('type.stackLang.prog'(sK10),sK13),s('type.stackSem.state'(sK10,sK11),sK12)))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f506,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.option.option'('type.stackSem.result'(sK10)),'type.stackSem.state'(sK10,sK11)),'const.pair.,_2'(s('type.option.option'('type.stackSem.result'(sK10)),X4),s('type.stackSem.state'(sK10,sK11),X5))) != s('type.pair.prod'('type.option.option'('type.stackSem.result'(sK10)),'type.stackSem.state'(sK10,sK11)),'const.stackSem.evaluate_1'(s('type.pair.prod'('type.stackLang.prog'(sK10),'type.stackSem.state'(sK10,sK11)),'const.pair.,_2'(s('type.stackLang.prog'(sK10),sK13),s('type.stackSem.state'(sK10,sK11),sK12)))))) )),
  inference(cnf_transformation,[],[f388])).
fof(f388,plain,(
  ! [X4,X5] : s('type.pair.prod'('type.option.option'('type.stackSem.result'(sK10)),'type.stackSem.state'(sK10,sK11)),'const.pair.,_2'(s('type.option.option'('type.stackSem.result'(sK10)),X4),s('type.stackSem.state'(sK10,sK11),X5))) != s('type.pair.prod'('type.option.option'('type.stackSem.result'(sK10)),'type.stackSem.state'(sK10,sK11)),'const.stackSem.evaluate_1'(s('type.pair.prod'('type.stackLang.prog'(sK10),'type.stackSem.state'(sK10,sK11)),'const.pair.,_2'(s('type.stackLang.prog'(sK10),sK13),s('type.stackSem.state'(sK10,sK11),sK12)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12,sK13])],[f333])).
fof(f333,plain,(
  ? [X0,X1,X2,X3] : ! [X4,X5] : s('type.pair.prod'('type.option.option'('type.stackSem.result'(X0)),'type.stackSem.state'(X0,X1)),'const.pair.,_2'(s('type.option.option'('type.stackSem.result'(X0)),X4),s('type.stackSem.state'(X0,X1),X5))) != s('type.pair.prod'('type.option.option'('type.stackSem.result'(X0)),'type.stackSem.state'(X0,X1)),'const.stackSem.evaluate_1'(s('type.pair.prod'('type.stackLang.prog'(X0),'type.stackSem.state'(X0,X1)),'const.pair.,_2'(s('type.stackLang.prog'(X0),X3),s('type.stackSem.state'(X0,X1),X2)))))),
  inference(ennf_transformation,[],[f136])).
fof(f136,plain,(
  ~! [X0,X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.option.option'('type.stackSem.result'(X0)),'type.stackSem.state'(X0,X1)),'const.pair.,_2'(s('type.option.option'('type.stackSem.result'(X0)),X4),s('type.stackSem.state'(X0,X1),X5))) = s('type.pair.prod'('type.option.option'('type.stackSem.result'(X0)),'type.stackSem.state'(X0,X1)),'const.stackSem.evaluate_1'(s('type.pair.prod'('type.stackLang.prog'(X0),'type.stackSem.state'(X0,X1)),'const.pair.,_2'(s('type.stackLang.prog'(X0),X3),s('type.stackSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ~! [X0,X1] : ! [X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.option.option'('type.stackSem.result'(X0)),'type.stackSem.state'(X0,X1)),'const.pair.,_2'(s('type.option.option'('type.stackSem.result'(X0)),X4),s('type.stackSem.state'(X0,X1),X5))) = s('type.pair.prod'('type.option.option'('type.stackSem.result'(X0)),'type.stackSem.state'(X0,X1)),'const.stackSem.evaluate_1'(s('type.pair.prod'('type.stackLang.prog'(X0),'type.stackSem.state'(X0,X1)),'const.pair.,_2'(s('type.stackLang.prog'(X0),X3),s('type.stackSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.option.option'('type.stackSem.result'(X6)),'type.stackSem.state'(X6,X7)),'const.pair.,_2'(s('type.option.option'('type.stackSem.result'(X6)),X10),s('type.stackSem.state'(X6,X7),X11))) = s('type.pair.prod'('type.option.option'('type.stackSem.result'(X6)),'type.stackSem.state'(X6,X7)),'const.stackSem.evaluate_1'(s('type.pair.prod'('type.stackLang.prog'(X6),'type.stackSem.state'(X6,X7)),'const.pair.,_2'(s('type.stackLang.prog'(X6),X9),s('type.stackSem.state'(X6,X7),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.option.option'('type.stackSem.result'(X6)),'type.stackSem.state'(X6,X7)),'const.pair.,_2'(s('type.option.option'('type.stackSem.result'(X6)),X10),s('type.stackSem.state'(X6,X7),X11))) = s('type.pair.prod'('type.option.option'('type.stackSem.result'(X6)),'type.stackSem.state'(X6,X7)),'const.stackSem.evaluate_1'(s('type.pair.prod'('type.stackLang.prog'(X6),'type.stackSem.state'(X6,X7)),'const.pair.,_2'(s('type.stackLang.prog'(X6),X9),s('type.stackSem.state'(X6,X7),X8)))))),
  file('thm.stackProps.stackProps_|49|8_prove_ltb','thm.stackProps.stackProps_|49|8_prove_ltb')).
fof(f5300,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.option.option'('type.stackSem.result'(sK10)),'type.stackSem.state'(sK10,sK11)),X0) != s('type.pair.prod'('type.option.option'('type.stackSem.result'(sK10)),'type.stackSem.state'(sK10,sK11)),'const.stackSem.evaluate_1'(s('type.pair.prod'('type.stackLang.prog'(sK10),'type.stackSem.state'(sK10,sK11)),'const.pair.,_2'(s('type.stackLang.prog'(sK10),sK13),s('type.stackSem.state'(sK10,sK11),sK12)))))) ) | $spl1926),
  inference(cnf_transformation,[],[f5300_D])).
fof(f5300_D,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.option.option'('type.stackSem.result'(sK10)),'type.stackSem.state'(sK10,sK11)),X0) != s('type.pair.prod'('type.option.option'('type.stackSem.result'(sK10)),'type.stackSem.state'(sK10,sK11)),'const.stackSem.evaluate_1'(s('type.pair.prod'('type.stackLang.prog'(sK10),'type.stackSem.state'(sK10,sK11)),'const.pair.,_2'(s('type.stackLang.prog'(sK10),sK13),s('type.stackSem.state'(sK10,sK11),sK12)))))) ) <=> ~$spl1926),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1926])])).
fof(f5283,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.option.option'('type.stackSem.result'(sK10)),'type.stackSem.state'(sK10,sK11)),X0) != s('type.pair.prod'('type.option.option'('type.stackSem.result'(sK10)),'type.stackSem.state'(sK10,sK11)),'const.stackSem.evaluate_1'(s('type.pair.prod'('type.stackLang.prog'(sK10),'type.stackSem.state'(sK10,sK11)),'const.pair.,_2'(s('type.stackLang.prog'(sK10),sK13),s('type.stackSem.state'(sK10,sK11),sK12)))))) ) | ($spl0 | $spl154)),
  inference(superposition,[],[f838,f939])).
fof(f5318,plain,(
  $false | $spl1926),
  inference(equality_resolution,[],[f5300])).
% SZS output end Proof for thm.stackProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 240
% Passive clauses: 960
% Generated clauses: 4797
% Final active clauses: 234
% Final passive clauses: 707
% Input formulas: 133
% Initial clauses: 313
% 
% Duplicate literals: 70
% Trivial inequalities: 5
% Fw subsumption resolutions: 218
% Fw demodulations: 355
% Bw demodulations: 19
% Condensations: 58
% Global subsumptions: 20
% 
% Simple tautologies: 187
% Equational tautologies: 5
% Forward subsumptions: 1838
% 
% Binary resolution: 1165
% Factoring: 134
% Forward superposition: 780
% Backward superposition: 662
% Self superposition: 29
% Equality factoring: 2
% Equality resolution: 3
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 1419
% SAT solver unit clauses: 364
% SAT solver binary clauses: 88
% SAT solver learnt clauses: 41
% SAT solver learnt literals: 12
% 
% Sat splits: 5
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1338
% TWLsolver calls for satisfiability: 2026
% 
% Memory used [KB]: 5245
% Time elapsed: 0.130 s
% ------------------------------
% ------------------------------
% Success in time 0.78 s
