Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.stackSem
% (59411)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 57
% Passive clauses: 1083
% Generated clauses: 12123
% Final active clauses: 54
% Final passive clauses: 958
% Input formulas: 21
% Initial clauses: 21
% 
% Duplicate literals: 698
% Trivial inequalities: 142
% Fw subsumption resolutions: 1507
% Fw demodulations: 74
% Bw demodulations: 1
% 
% Simple tautologies: 225
% Equational tautologies: 105
% Forward subsumptions: 6840
% 
% Binary resolution: 25
% Forward superposition: 6141
% Backward superposition: 3036
% Self superposition: 359
% Equality factoring: 312
% Equality resolution: 16
% 
% Split clauses: 517
% Split components: 1039
% SAT solver clauses: 1518
% SAT solver unit clauses: 252
% SAT solver binary clauses: 509
% 
% Sat splits: 517
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1514
% TWLsolver calls for satisfiability: 66
% 
% Memory used [KB]: 12537
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.stackSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.stackSem
% SZS output start Proof for thm.stackSem
fof(f110,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f109,f64,f86,f84,f108])).
fof(f108,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X19,X17,X7,X5,X3,X1,X15,X13,X11,X9,X18,X16] : (s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X1),happ(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.ffi.ffi_state'(X2),X17))),s(fun('type.num.num',bool),X18),s(bool,X19))) = s('type.stackSem.state'(X0,X1),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.stackSem.state'(X0,X2),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X2),X17),s(fun('type.num.num',bool),X18),s(bool,X19)))))) ) | $spl40),
  inference(cnf_transformation,[],[f108_D])).
fof(f108_D,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X19,X17,X7,X5,X3,X1,X15,X13,X11,X9,X18,X16] : (s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X1),happ(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.ffi.ffi_state'(X2),X17))),s(fun('type.num.num',bool),X18),s(bool,X19))) = s('type.stackSem.state'(X0,X1),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.stackSem.state'(X0,X2),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X2),X17),s(fun('type.num.num',bool),X18),s(bool,X19)))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f84,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X19,X17,X7,X5,X3,X1,X15,X13,X11,X9,X18,X16] : (s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X1),happ(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.ffi.ffi_state'(X2),X17))),s(fun('type.num.num',bool),X18),s(bool,X19))) = s('type.stackSem.state'(X0,X1),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.stackSem.state'(X0,X2),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X2),X17),s(fun('type.num.num',bool),X18),s(bool,X19)))))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X1),happ(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.ffi.ffi_state'(X2),X17))),s(fun('type.num.num',bool),X18),s(bool,X19))) = s('type.stackSem.state'(X0,X1),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.stackSem.state'(X0,X2),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X2),X17),s(fun('type.num.num',bool),X18),s(bool,X19)))))),
  inference(flattening,[],[f58])).
fof(f58,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X1),happ(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.ffi.ffi_state'(X2),X17))),s(fun('type.num.num',bool),X18),s(bool,X19))) = s('type.stackSem.state'(X0,X1),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.stackSem.state'(X0,X2),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X2),X17),s(fun('type.num.num',bool),X18),s(bool,X19)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6,X7,X8] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25] : s('type.stackSem.state'(X6,X7),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X6)),X10),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X11),s('type.list.list'('type.wordSem.word_loc'(X6)),X12),s('type.num.num',X13),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X14),s(fun('type.fcp.cart'(bool,X6),bool),X15),s('type.list.list'('type.fcp.cart'(bool,X6)),X16),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X17),s(bool,X18),s(bool,X19),s(bool,X20),s('type.num.num',X21),s('type.sptree.spt'('type.stackLang.prog'(X6)),X22),s('type.ffi.ffi_state'(X7),happ(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X7)),X9),s('type.ffi.ffi_state'(X8),X23))),s(fun('type.num.num',bool),X24),s(bool,X25))) = s('type.stackSem.state'(X6,X7),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X7)),X9),s('type.stackSem.state'(X6,X8),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X6)),X10),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X11),s('type.list.list'('type.wordSem.word_loc'(X6)),X12),s('type.num.num',X13),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X14),s(fun('type.fcp.cart'(bool,X6),bool),X15),s('type.list.list'('type.fcp.cart'(bool,X6)),X16),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X17),s(bool,X18),s(bool,X19),s(bool,X20),s('type.num.num',X21),s('type.sptree.spt'('type.stackLang.prog'(X6)),X22),s('type.ffi.ffi_state'(X8),X23),s(fun('type.num.num',bool),X24),s(bool,X25)))))),
  file('thm.stackSem.state_fn_updates|split|13','thm.stackSem.state_ffi_fupd')).
fof(f86,plain,(
  s('type.stackSem.state'(sK0,sK1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),sK4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK5),s('type.list.list'('type.wordSem.word_loc'(sK0)),sK6),s('type.num.num',sK7),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK8),s(fun('type.fcp.cart'(bool,sK0),bool),sK9),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK11),s(bool,sK12),s(bool,sK13),s(bool,sK14),s('type.num.num',sK15),s('type.sptree.spt'('type.stackLang.prog'(sK0)),sK16),s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK1)),sK3),s('type.ffi.ffi_state'(sK2),sK17))),s(fun('type.num.num',bool),sK18),s(bool,sK19))) != s('type.stackSem.state'(sK0,sK1),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK1)),sK3),s('type.stackSem.state'(sK0,sK2),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),sK4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK5),s('type.list.list'('type.wordSem.word_loc'(sK0)),sK6),s('type.num.num',sK7),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK8),s(fun('type.fcp.cart'(bool,sK0),bool),sK9),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK11),s(bool,sK12),s(bool,sK13),s(bool,sK14),s('type.num.num',sK15),s('type.sptree.spt'('type.stackLang.prog'(sK0)),sK16),s('type.ffi.ffi_state'(sK2),sK17),s(fun('type.num.num',bool),sK18),s(bool,sK19))))) | $spl1),
  inference(cnf_transformation,[],[f86_D])).
fof(f86_D,plain,(
  s('type.stackSem.state'(sK0,sK1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),sK4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK5),s('type.list.list'('type.wordSem.word_loc'(sK0)),sK6),s('type.num.num',sK7),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK8),s(fun('type.fcp.cart'(bool,sK0),bool),sK9),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK11),s(bool,sK12),s(bool,sK13),s(bool,sK14),s('type.num.num',sK15),s('type.sptree.spt'('type.stackLang.prog'(sK0)),sK16),s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK1)),sK3),s('type.ffi.ffi_state'(sK2),sK17))),s(fun('type.num.num',bool),sK18),s(bool,sK19))) != s('type.stackSem.state'(sK0,sK1),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK1)),sK3),s('type.stackSem.state'(sK0,sK2),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),sK4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK5),s('type.list.list'('type.wordSem.word_loc'(sK0)),sK6),s('type.num.num',sK7),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK8),s(fun('type.fcp.cart'(bool,sK0),bool),sK9),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK11),s(bool,sK12),s(bool,sK13),s(bool,sK14),s('type.num.num',sK15),s('type.sptree.spt'('type.stackLang.prog'(sK0)),sK16),s('type.ffi.ffi_state'(sK2),sK17),s(fun('type.num.num',bool),sK18),s(bool,sK19))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f64,plain,(
  s('type.stackSem.state'(sK0,sK1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),sK4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK5),s('type.list.list'('type.wordSem.word_loc'(sK0)),sK6),s('type.num.num',sK7),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK8),s(fun('type.fcp.cart'(bool,sK0),bool),sK9),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK11),s(bool,sK12),s(bool,sK13),s(bool,sK14),s('type.num.num',sK15),s('type.sptree.spt'('type.stackLang.prog'(sK0)),sK16),s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK1)),sK3),s('type.ffi.ffi_state'(sK2),sK17))),s(fun('type.num.num',bool),sK18),s(bool,sK19))) != s('type.stackSem.state'(sK0,sK1),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK1)),sK3),s('type.stackSem.state'(sK0,sK2),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),sK4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK5),s('type.list.list'('type.wordSem.word_loc'(sK0)),sK6),s('type.num.num',sK7),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK8),s(fun('type.fcp.cart'(bool,sK0),bool),sK9),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK11),s(bool,sK12),s(bool,sK13),s(bool,sK14),s('type.num.num',sK15),s('type.sptree.spt'('type.stackLang.prog'(sK0)),sK16),s('type.ffi.ffi_state'(sK2),sK17),s(fun('type.num.num',bool),sK18),s(bool,sK19)))))),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  s('type.stackSem.state'(sK0,sK1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),sK4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK5),s('type.list.list'('type.wordSem.word_loc'(sK0)),sK6),s('type.num.num',sK7),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK8),s(fun('type.fcp.cart'(bool,sK0),bool),sK9),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK11),s(bool,sK12),s(bool,sK13),s(bool,sK14),s('type.num.num',sK15),s('type.sptree.spt'('type.stackLang.prog'(sK0)),sK16),s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK1)),sK3),s('type.ffi.ffi_state'(sK2),sK17))),s(fun('type.num.num',bool),sK18),s(bool,sK19))) != s('type.stackSem.state'(sK0,sK1),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK1)),sK3),s('type.stackSem.state'(sK0,sK2),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),sK4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK5),s('type.list.list'('type.wordSem.word_loc'(sK0)),sK6),s('type.num.num',sK7),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK8),s(fun('type.fcp.cart'(bool,sK0),bool),sK9),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK11),s(bool,sK12),s(bool,sK13),s(bool,sK14),s('type.num.num',sK15),s('type.sptree.spt'('type.stackLang.prog'(sK0)),sK16),s('type.ffi.ffi_state'(sK2),sK17),s(fun('type.num.num',bool),sK18),s(bool,sK19)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19])],[f60])).
fof(f60,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X1),happ(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.ffi.ffi_state'(X2),X17))),s(fun('type.num.num',bool),X18),s(bool,X19))) != s('type.stackSem.state'(X0,X1),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.stackSem.state'(X0,X2),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X2),X17),s(fun('type.num.num',bool),X18),s(bool,X19)))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X1),happ(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.ffi.ffi_state'(X2),X17))),s(fun('type.num.num',bool),X18),s(bool,X19))) = s('type.stackSem.state'(X0,X1),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.stackSem.state'(X0,X2),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X2),X17),s(fun('type.num.num',bool),X18),s(bool,X19)))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X1),happ(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.ffi.ffi_state'(X2),X17))),s(fun('type.num.num',bool),X18),s(bool,X19))) = s('type.stackSem.state'(X0,X1),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X1)),X3),s('type.stackSem.state'(X0,X2),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X2),X17),s(fun('type.num.num',bool),X18),s(bool,X19)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25] : s('type.stackSem.state'(X6,X7),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X6)),X10),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X11),s('type.list.list'('type.wordSem.word_loc'(X6)),X12),s('type.num.num',X13),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X14),s(fun('type.fcp.cart'(bool,X6),bool),X15),s('type.list.list'('type.fcp.cart'(bool,X6)),X16),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X17),s(bool,X18),s(bool,X19),s(bool,X20),s('type.num.num',X21),s('type.sptree.spt'('type.stackLang.prog'(X6)),X22),s('type.ffi.ffi_state'(X7),happ(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X7)),X9),s('type.ffi.ffi_state'(X8),X23))),s(fun('type.num.num',bool),X24),s(bool,X25))) = s('type.stackSem.state'(X6,X7),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X7)),X9),s('type.stackSem.state'(X6,X8),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X6)),X10),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X11),s('type.list.list'('type.wordSem.word_loc'(X6)),X12),s('type.num.num',X13),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X14),s(fun('type.fcp.cart'(bool,X6),bool),X15),s('type.list.list'('type.fcp.cart'(bool,X6)),X16),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X17),s(bool,X18),s(bool,X19),s(bool,X20),s('type.num.num',X21),s('type.sptree.spt'('type.stackLang.prog'(X6)),X22),s('type.ffi.ffi_state'(X8),X23),s(fun('type.num.num',bool),X24),s(bool,X25)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25] : s('type.stackSem.state'(X6,X7),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X6)),X10),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X11),s('type.list.list'('type.wordSem.word_loc'(X6)),X12),s('type.num.num',X13),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X14),s(fun('type.fcp.cart'(bool,X6),bool),X15),s('type.list.list'('type.fcp.cart'(bool,X6)),X16),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X17),s(bool,X18),s(bool,X19),s(bool,X20),s('type.num.num',X21),s('type.sptree.spt'('type.stackLang.prog'(X6)),X22),s('type.ffi.ffi_state'(X7),happ(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X7)),X9),s('type.ffi.ffi_state'(X8),X23))),s(fun('type.num.num',bool),X24),s(bool,X25))) = s('type.stackSem.state'(X6,X7),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X7)),X9),s('type.stackSem.state'(X6,X8),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X6)),X10),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X11),s('type.list.list'('type.wordSem.word_loc'(X6)),X12),s('type.num.num',X13),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X14),s(fun('type.fcp.cart'(bool,X6),bool),X15),s('type.list.list'('type.fcp.cart'(bool,X6)),X16),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X17),s(bool,X18),s(bool,X19),s(bool,X20),s('type.num.num',X21),s('type.sptree.spt'('type.stackLang.prog'(X6)),X22),s('type.ffi.ffi_state'(X8),X23),s(fun('type.num.num',bool),X24),s(bool,X25)))))),
  file('thm.stackSem.state_fn_updates|split|13','thm.stackSem.state_fn_updates|split|13')).
fof(f109,plain,(
  $false | ($spl1 | $spl40)),
  inference(subsumption_resolution,[],[f86,f108])).
% SZS output end Proof for thm.stackSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Passive clauses: 20
% Generated clauses: 43
% Final passive clauses: 20
% Input formulas: 21
% Initial clauses: 21
% 
% Fw subsumption resolutions: 1
% 
% SAT solver clauses: 44
% SAT solver unit clauses: 40
% SAT solver binary clauses: 3
% SAT solver learnt clauses: 1
% 
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 43
% TWLsolver calls for satisfiability: 30
% 
% Memory used [KB]: 1279
% Time elapsed: 0.009 s
% ------------------------------
% ------------------------------
% Success in time 0.636 s
