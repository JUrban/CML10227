Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.ml_translator
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ml_translator
% SZS output start Proof for thm.ml_translator
fof(f4879,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4878,f223,f412,f410,f408,f406,f404,f402,f4876,f4762,f4761,f4560,f4877])).
fof(f4877,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f410,f228])).
fof(f228,plain,(
  ( ! [X6,X8,X7,X5,X9] : (s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),X5),s('type.list.list'('type.string.char'),X6),s('type.ast.t',X7))),s('type.list.list'('type.ast.dec'),X8))),s('type.list.list'('type.list.list'('type.string.char')),X9)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  (s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),sK13))) | s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',sK14),s('type.ast.exp',sK15))),s('type.list.list'('type.ast.dec'),sK16))),s('type.list.list'('type.list.list'('type.string.char')),sK17))) | s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK18))),s('type.list.list'('type.ast.dec'),sK19))),s('type.list.list'('type.list.list'('type.string.char')),sK20))) | s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),sK21))),s('type.list.list'('type.ast.dec'),sK22))),s('type.list.list'('type.list.list'('type.string.char')),sK23))) | s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),sK24),s('type.list.list'('type.string.char'),sK25),s('type.ast.t',sK26))),s('type.list.list'('type.ast.dec'),sK27))),s('type.list.list'('type.list.list'('type.string.char')),sK28))) | s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),sK29),s('type.list.list'('type.ast.t'),sK30))),s('type.list.list'('type.ast.dec'),sK31))),s('type.list.list'('type.list.list'('type.string.char')),sK32)))) & ! [X20] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),X20))) & ! [X17,X18,X19] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),X17))),s('type.list.list'('type.ast.dec'),X18))),s('type.list.list'('type.list.list'('type.string.char')),X19))) & ! [X13,X14,X15,X16] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',X13),s('type.ast.exp',X14))),s('type.list.list'('type.ast.dec'),X15))),s('type.list.list'('type.list.list'('type.string.char')),X16))) & ! [X10,X11,X12] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X10))),s('type.list.list'('type.ast.dec'),X11))),s('type.list.list'('type.list.list'('type.string.char')),X12))) & ! [X5,X6,X7,X8,X9] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),X5),s('type.list.list'('type.string.char'),X6),s('type.ast.t',X7))),s('type.list.list'('type.ast.dec'),X8))),s('type.list.list'('type.list.list'('type.string.char')),X9))) & ! [X1,X2,X3,X4] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),X1),s('type.list.list'('type.ast.t'),X2))),s('type.list.list'('type.ast.dec'),X3))),s('type.list.list'('type.list.list'('type.string.char')),X4)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32])],[f137])).
fof(f137,plain,(
  ? [X0] : ((? [X40] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),X40))) | ? [X36,X37,X38,X39] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',X36),s('type.ast.exp',X37))),s('type.list.list'('type.ast.dec'),X38))),s('type.list.list'('type.list.list'('type.string.char')),X39))) | ? [X33,X34,X35] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X33))),s('type.list.list'('type.ast.dec'),X34))),s('type.list.list'('type.list.list'('type.string.char')),X35))) | ? [X30,X31,X32] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),X30))),s('type.list.list'('type.ast.dec'),X31))),s('type.list.list'('type.list.list'('type.string.char')),X32))) | ? [X25,X26,X27,X28,X29] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),X25),s('type.list.list'('type.string.char'),X26),s('type.ast.t',X27))),s('type.list.list'('type.ast.dec'),X28))),s('type.list.list'('type.list.list'('type.string.char')),X29))) | ? [X21,X22,X23,X24] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),X21),s('type.list.list'('type.ast.t'),X22))),s('type.list.list'('type.ast.dec'),X23))),s('type.list.list'('type.list.list'('type.string.char')),X24)))) & ! [X20] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),X20))) & ! [X17,X18,X19] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),X17))),s('type.list.list'('type.ast.dec'),X18))),s('type.list.list'('type.list.list'('type.string.char')),X19))) & ! [X13,X14,X15,X16] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',X13),s('type.ast.exp',X14))),s('type.list.list'('type.ast.dec'),X15))),s('type.list.list'('type.list.list'('type.string.char')),X16))) & ! [X10,X11,X12] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X10))),s('type.list.list'('type.ast.dec'),X11))),s('type.list.list'('type.list.list'('type.string.char')),X12))) & ! [X5,X6,X7,X8,X9] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),X5),s('type.list.list'('type.string.char'),X6),s('type.ast.t',X7))),s('type.list.list'('type.ast.dec'),X8))),s('type.list.list'('type.list.list'('type.string.char')),X9))) & ! [X1,X2,X3,X4] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),X1),s('type.list.list'('type.ast.t'),X2))),s('type.list.list'('type.ast.dec'),X3))),s('type.list.list'('type.list.list'('type.string.char')),X4))))),
  inference(rectify,[],[f97])).
fof(f97,plain,(
  ? [X0] : ((? [X20] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),X20))) | ? [X16,X17,X18,X19] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',X16),s('type.ast.exp',X17))),s('type.list.list'('type.ast.dec'),X18))),s('type.list.list'('type.list.list'('type.string.char')),X19))) | ? [X13,X14,X15] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X13))),s('type.list.list'('type.ast.dec'),X14))),s('type.list.list'('type.list.list'('type.string.char')),X15))) | ? [X10,X11,X12] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),X10))),s('type.list.list'('type.ast.dec'),X11))),s('type.list.list'('type.list.list'('type.string.char')),X12))) | ? [X5,X6,X7,X8,X9] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),X5),s('type.list.list'('type.string.char'),X6),s('type.ast.t',X7))),s('type.list.list'('type.ast.dec'),X8))),s('type.list.list'('type.list.list'('type.string.char')),X9))) | ? [X1,X2,X3,X4] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),X1),s('type.list.list'('type.ast.t'),X2))),s('type.list.list'('type.ast.dec'),X3))),s('type.list.list'('type.list.list'('type.string.char')),X4)))) & ! [X40] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),X40))) & ! [X37,X38,X39] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),X37))),s('type.list.list'('type.ast.dec'),X38))),s('type.list.list'('type.list.list'('type.string.char')),X39))) & ! [X33,X34,X35,X36] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',X33),s('type.ast.exp',X34))),s('type.list.list'('type.ast.dec'),X35))),s('type.list.list'('type.list.list'('type.string.char')),X36))) & ! [X30,X31,X32] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X30))),s('type.list.list'('type.ast.dec'),X31))),s('type.list.list'('type.list.list'('type.string.char')),X32))) & ! [X25,X26,X27,X28,X29] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),X25),s('type.list.list'('type.string.char'),X26),s('type.ast.t',X27))),s('type.list.list'('type.ast.dec'),X28))),s('type.list.list'('type.list.list'('type.string.char')),X29))) & ! [X21,X22,X23,X24] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),X21),s('type.list.list'('type.ast.t'),X22))),s('type.list.list'('type.ast.dec'),X23))),s('type.list.list'('type.list.list'('type.string.char')),X24))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ? [X0] : ((? [X20] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),X20))) | ? [X16,X17,X18,X19] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',X16),s('type.ast.exp',X17))),s('type.list.list'('type.ast.dec'),X18))),s('type.list.list'('type.list.list'('type.string.char')),X19))) | ? [X13,X14,X15] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X13))),s('type.list.list'('type.ast.dec'),X14))),s('type.list.list'('type.list.list'('type.string.char')),X15))) | ? [X10,X11,X12] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),X10))),s('type.list.list'('type.ast.dec'),X11))),s('type.list.list'('type.list.list'('type.string.char')),X12))) | ? [X5,X6,X7,X8,X9] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),X5),s('type.list.list'('type.string.char'),X6),s('type.ast.t',X7))),s('type.list.list'('type.ast.dec'),X8))),s('type.list.list'('type.list.list'('type.string.char')),X9))) | ? [X1,X2,X3,X4] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),X1),s('type.list.list'('type.ast.t'),X2))),s('type.list.list'('type.ast.dec'),X3))),s('type.list.list'('type.list.list'('type.string.char')),X4)))) & (! [X40] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),X40))) & ! [X37,X38,X39] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),X37))),s('type.list.list'('type.ast.dec'),X38))),s('type.list.list'('type.list.list'('type.string.char')),X39))) & ! [X33,X34,X35,X36] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',X33),s('type.ast.exp',X34))),s('type.list.list'('type.ast.dec'),X35))),s('type.list.list'('type.list.list'('type.string.char')),X36))) & ! [X30,X31,X32] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X30))),s('type.list.list'('type.ast.dec'),X31))),s('type.list.list'('type.list.list'('type.string.char')),X32))) & ! [X25,X26,X27,X28,X29] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),X25),s('type.list.list'('type.string.char'),X26),s('type.ast.t',X27))),s('type.list.list'('type.ast.dec'),X28))),s('type.list.list'('type.list.list'('type.string.char')),X29))) & ! [X21,X22,X23,X24] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),X21),s('type.list.list'('type.ast.t'),X22))),s('type.list.list'('type.ast.dec'),X23))),s('type.list.list'('type.list.list'('type.string.char')),X24)))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ((? [X20] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),X20))) | ? [X16,X17,X18,X19] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',X16),s('type.ast.exp',X17))),s('type.list.list'('type.ast.dec'),X18))),s('type.list.list'('type.list.list'('type.string.char')),X19))) | ? [X13,X14,X15] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X13))),s('type.list.list'('type.ast.dec'),X14))),s('type.list.list'('type.list.list'('type.string.char')),X15))) | ? [X10,X11,X12] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),X10))),s('type.list.list'('type.ast.dec'),X11))),s('type.list.list'('type.list.list'('type.string.char')),X12))) | ? [X5,X6,X7,X8,X9] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),X5),s('type.list.list'('type.string.char'),X6),s('type.ast.t',X7))),s('type.list.list'('type.ast.dec'),X8))),s('type.list.list'('type.list.list'('type.string.char')),X9))) | ? [X1,X2,X3,X4] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),X1),s('type.list.list'('type.ast.t'),X2))),s('type.list.list'('type.ast.dec'),X3))),s('type.list.list'('type.list.list'('type.string.char')),X4)))) => (? [X40] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),X40))) | ? [X37,X38,X39] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),X37))),s('type.list.list'('type.ast.dec'),X38))),s('type.list.list'('type.list.list'('type.string.char')),X39))) | ? [X33,X34,X35,X36] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',X33),s('type.ast.exp',X34))),s('type.list.list'('type.ast.dec'),X35))),s('type.list.list'('type.list.list'('type.string.char')),X36))) | ? [X30,X31,X32] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X30))),s('type.list.list'('type.ast.dec'),X31))),s('type.list.list'('type.list.list'('type.string.char')),X32))) | ? [X25,X26,X27,X28,X29] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),X25),s('type.list.list'('type.string.char'),X26),s('type.ast.t',X27))),s('type.list.list'('type.ast.dec'),X28))),s('type.list.list'('type.list.list'('type.string.char')),X29))) | ? [X21,X22,X23,X24] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X0) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),X21),s('type.list.list'('type.ast.t'),X22))),s('type.list.list'('type.ast.dec'),X23))),s('type.list.list'('type.list.list'('type.string.char')),X24)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((? [X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X8,X9,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',X8),s('type.ast.exp',X9))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X11,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X11))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X12,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),X12))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X13,X14,X15,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),X13),s('type.list.list'('type.string.char'),X14),s('type.ast.t',X15))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X16,X17,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),X16),s('type.list.list'('type.ast.t'),X17))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7)))) => (? [X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X12,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),X12))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X8,X9,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',X8),s('type.ast.exp',X9))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X11,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X11))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X13,X14,X15,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),X13),s('type.list.list'('type.string.char'),X14),s('type.ast.t',X15))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X16,X17,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),X16),s('type.list.list'('type.ast.t'),X17))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((? [X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X8,X9,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',X8),s('type.ast.exp',X9))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X11,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X11))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X12,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),X12))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X13,X14,X15,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),X13),s('type.list.list'('type.string.char'),X14),s('type.ast.t',X15))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X16,X17,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),X16),s('type.list.list'('type.ast.t'),X17))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7)))) => (? [X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X12,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),X12))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X8,X9,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',X8),s('type.ast.exp',X9))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X11,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X11))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X13,X14,X15,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),X13),s('type.list.list'('type.string.char'),X14),s('type.ast.t',X15))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7))) | ? [X16,X17,X10,X7] : s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),X6) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),X16),s('type.list.list'('type.ast.t'),X17))),s('type.list.list'('type.ast.dec'),X10))),s('type.list.list'('type.list.list'('type.string.char')),X7)))))),
  file('thm.ml_translator.ml_translator_5|48|6_prove_ltb','thm.ml_translator.ml_translator_5|48|6_prove_ltb')).
fof(f4560,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f404,f226])).
fof(f226,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',X13),s('type.ast.exp',X14))),s('type.list.list'('type.ast.dec'),X15))),s('type.list.list'('type.list.list'('type.string.char')),X16)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4761,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f406,f227])).
fof(f227,plain,(
  ( ! [X12,X10,X11] : (s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X10))),s('type.list.list'('type.ast.dec'),X11))),s('type.list.list'('type.list.list'('type.string.char')),X12)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4762,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f402,f224])).
fof(f224,plain,(
  ( ! [X20] : (s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),X20)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4876,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f408,f225])).
fof(f225,plain,(
  ( ! [X19,X17,X18] : (s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),X17))),s('type.list.list'('type.ast.dec'),X18))),s('type.list.list'('type.list.list'('type.string.char')),X19)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f402,plain,(
  s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),sK13))) | $spl0),
  inference(cnf_transformation,[],[f402_D])).
fof(f402_D,plain,(
  s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),sK13))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f404,plain,(
  s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',sK14),s('type.ast.exp',sK15))),s('type.list.list'('type.ast.dec'),sK16))),s('type.list.list'('type.list.list'('type.string.char')),sK17))) | $spl2),
  inference(cnf_transformation,[],[f404_D])).
fof(f404_D,plain,(
  s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',sK14),s('type.ast.exp',sK15))),s('type.list.list'('type.ast.dec'),sK16))),s('type.list.list'('type.list.list'('type.string.char')),sK17))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f406,plain,(
  s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK18))),s('type.list.list'('type.ast.dec'),sK19))),s('type.list.list'('type.list.list'('type.string.char')),sK20))) | $spl4),
  inference(cnf_transformation,[],[f406_D])).
fof(f406_D,plain,(
  s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK18))),s('type.list.list'('type.ast.dec'),sK19))),s('type.list.list'('type.list.list'('type.string.char')),sK20))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f408,plain,(
  s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),sK21))),s('type.list.list'('type.ast.dec'),sK22))),s('type.list.list'('type.list.list'('type.string.char')),sK23))) | $spl6),
  inference(cnf_transformation,[],[f408_D])).
fof(f408_D,plain,(
  s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),sK21))),s('type.list.list'('type.ast.dec'),sK22))),s('type.list.list'('type.list.list'('type.string.char')),sK23))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f410,plain,(
  s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),sK24),s('type.list.list'('type.string.char'),sK25),s('type.ast.t',sK26))),s('type.list.list'('type.ast.dec'),sK27))),s('type.list.list'('type.list.list'('type.string.char')),sK28))) | $spl8),
  inference(cnf_transformation,[],[f410_D])).
fof(f410_D,plain,(
  s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),sK24),s('type.list.list'('type.string.char'),sK25),s('type.ast.t',sK26))),s('type.list.list'('type.ast.dec'),sK27))),s('type.list.list'('type.list.list'('type.string.char')),sK28))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f412,plain,(
  s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),sK29),s('type.list.list'('type.ast.t'),sK30))),s('type.list.list'('type.ast.dec'),sK31))),s('type.list.list'('type.list.list'('type.string.char')),sK32))) | $spl10),
  inference(cnf_transformation,[],[f412_D])).
fof(f412_D,plain,(
  s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),sK29),s('type.list.list'('type.ast.t'),sK30))),s('type.list.list'('type.ast.dec'),sK31))),s('type.list.list'('type.list.list'('type.string.char')),sK32))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f223,plain,(
  s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),sK29),s('type.list.list'('type.ast.t'),sK30))),s('type.list.list'('type.ast.dec'),sK31))),s('type.list.list'('type.list.list'('type.string.char')),sK32))) | s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtabbrev_3'(s('type.list.list'('type.list.list'('type.string.char')),sK24),s('type.list.list'('type.string.char'),sK25),s('type.ast.t',sK26))),s('type.list.list'('type.ast.dec'),sK27))),s('type.list.list'('type.list.list'('type.string.char')),sK28))) | s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dtype_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),sK21))),s('type.list.list'('type.ast.dec'),sK22))),s('type.list.list'('type.list.list'('type.string.char')),sK23))) | s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dletrec_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK18))),s('type.list.list'('type.ast.dec'),sK19))),s('type.list.list'('type.list.list'('type.string.char')),sK20))) | s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dlet_2'(s('type.ast.pat',sK14),s('type.ast.exp',sK15))),s('type.list.list'('type.ast.dec'),sK16))),s('type.list.list'('type.list.list'('type.string.char')),sK17))) | s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) = s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),sK13)))),
  inference(cnf_transformation,[],[f138])).
fof(f4878,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f412,f229])).
fof(f229,plain,(
  ( ! [X4,X2,X3,X1] : (s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),sK12) != s('type.pair.prod'('type.list.list'('type.ast.dec'),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.,_2'(s('type.list.list'('type.ast.dec'),'const.list.CONS_2'(s('type.ast.dec','const.ast.Dexn_2'(s('type.list.list'('type.string.char'),X1),s('type.list.list'('type.ast.t'),X2))),s('type.list.list'('type.ast.dec'),X3))),s('type.list.list'('type.list.list'('type.string.char')),X4)))) )),
  inference(cnf_transformation,[],[f138])).
% SZS output end Proof for thm.ml_translator
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 391
% Passive clauses: 1558
% Generated clauses: 4649
% Final active clauses: 391
% Final passive clauses: 972
% Input formulas: 37
% Initial clauses: 174
% 
% Duplicate literals: 154
% Trivial inequalities: 29
% Fw subsumption resolutions: 308
% 
% Simple tautologies: 145
% Equational tautologies: 32
% Forward subsumptions: 2409
% 
% Binary resolution: 2884
% Factoring: 794
% Forward superposition: 174
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 111
% Split components: 227
% SAT solver clauses: 219
% SAT solver unit clauses: 12
% SAT solver binary clauses: 45
% SAT solver learnt clauses: 1
% 
% Sat splits: 111
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 218
% TWLsolver calls for satisfiability: 182
% 
% Memory used [KB]: 2558
% Time elapsed: 0.193 s
% ------------------------------
% ------------------------------
% Success in time 0.201 s
