Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordProps
% (30843)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 183
% Passive clauses: 3424
% Generated clauses: 12756
% Final active clauses: 160
% Final passive clauses: 3021
% Input formulas: 19
% Initial clauses: 31
% 
% Duplicate literals: 341
% Trivial inequalities: 86
% Fw subsumption resolutions: 632
% Fw demodulations: 851
% Bw demodulations: 19
% 
% Simple tautologies: 183
% Equational tautologies: 22
% Forward subsumptions: 7153
% Fw demodulations to eq. taut.: 4
% 
% Binary resolution: 111
% Forward superposition: 6020
% Backward superposition: 4272
% Self superposition: 248
% Equality factoring: 37
% Equality resolution: 24
% 
% Split clauses: 151
% Split components: 307
% SAT solver clauses: 255
% SAT solver unit clauses: 24
% SAT solver binary clauses: 80
% 
% Sat splits: 151
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 255
% TWLsolver calls for satisfiability: 75
% 
% Memory used [KB]: 20596
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.wordProps
% (30866)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 100
% Passive clauses: 615
% Generated clauses: 6176
% Final active clauses: 90
% Final passive clauses: 495
% Input formulas: 19
% Initial clauses: 31
% 
% Duplicate literals: 525
% Trivial inequalities: 66
% Fw subsumption resolutions: 304
% Fw demodulations: 459
% Bw demodulations: 27
% Condensations: 482
% 
% Simple tautologies: 96
% Equational tautologies: 21
% Forward subsumptions: 2686
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 54
% Forward superposition: 2094
% Backward superposition: 1406
% Self superposition: 65
% Equality factoring: 36
% Equality resolution: 13
% 
% Split clauses: 48
% Split components: 109
% SAT solver clauses: 964
% SAT solver unit clauses: 45
% SAT solver binary clauses: 32
% 
% Sat splits: 48
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 964
% TWLsolver calls for satisfiability: 343
% 
% Memory used [KB]: 10234
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.wordProps
% (30896)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 365
% Passive clauses: 4925
% Generated clauses: 101298
% Final active clauses: 128
% Final passive clauses: 740
% Input formulas: 19
% Initial clauses: 31
% Discarded non-redundant clauses: 2659
% 
% Duplicate literals: 5592
% Trivial inequalities: 880
% Fw subsumption resolutions: 8188
% Fw demodulations: 16335
% Bw demodulations: 2094
% Condensations: 9106
% Global subsumptions: 79
% 
% Simple tautologies: 1277
% Equational tautologies: 615
% Forward subsumptions: 53043
% Fw demodulations to eq. taut.: 35
% Bw demodulations to eq. taut.: 292
% 
% Unit resulting resolution: 2522
% Forward superposition: 28130
% Backward superposition: 20566
% Self superposition: 471
% Equality factoring: 273
% Equality resolution: 101
% 
% Split clauses: 401
% Split components: 809
% SAT solver clauses: 5864
% SAT solver unit clauses: 59
% SAT solver binary clauses: 496
% 
% Sat splits: 401
% Sat splitting refutations: 56
% 
% Memory used [KB]: 79060
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordProps
% SZS output start Proof for thm.wordProps
fof(f4298,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f93,f130,f229,f106,f379,f392,f107,f380,f394,f393,f1393,f1418,f1417,f1877,f1881,f1879,f1962,f1963,f1965,f1966,f1979,f1980,f1981,f1982,f1983,f1984,f1985,f1986,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2001,f2002,f2088,f2089,f2091,f2092,f2105,f2106,f2107,f2108,f2109,f2110,f2111,f2112,f2113,f2114,f2115,f2116,f2117,f2118,f2119,f2120,f2121,f2122,f2123,f2124,f2125,f2126,f2127,f2128,f2213,f2214,f2216,f2217,f2010,f2230,f2231,f2232,f2233,f2234,f2235,f2236,f2237,f2238,f2239,f2240,f2241,f2242,f2243,f2028,f2244,f2029,f2245,f2246,f2247,f2248,f2249,f2250,f2251,f2027,f2252,f2253,f2016,f2502,f2503,f2017,f2504,f2018,f2505,f2506,f2507,f2508,f2509,f2510,f2511,f2512,f2513,f2514,f2515,f2516,f2517,f2518,f2519,f2031,f2520,f2011,f2521,f2033,f2522,f2035,f2523,f2012,f2524,f2525,f2918,f3022,f3014,f2161,f3013,f2160,f3012,f3011,f3010,f3009,f3008,f3007,f3006,f3005,f2153,f3004,f2152,f2151,f3003,f2149,f3002,f2148,f3001,f3000,f2147,f2999,f2146,f2998,f2145,f2997,f2996,f2144,f2995,f2143,f2994,f2993,f2142,f2992,f2141,f2991,f2140,f3160,f3270,f2019,f3271,f2020,f3272,f3273,f2021,f3274,f2022,f3275,f2023,f3276,f3277,f2024,f3278,f2025,f3279,f2536,f3280,f2537,f3281,f2013,f3282,f2014,f2535,f3288,f2036,f3289,f2037,f2533,f3487,f3597,f3601,f3602,f2137,f3603,f2138,f3604,f2155,f3605,f2135,f3606,f2157,f3607,f2159,f3608,f3599,f2136,f3954,f4164,f4285])).
fof(f4285,plain,(
  $false | ($spl14 | $spl16)),
  inference(subsumption_resolution,[],[f4225,f96])).
fof(f96,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK3)))),
  inference(resolution,[],[f68,f82])).
fof(f82,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X18] : (s(bool,'T_0') = s(bool,X18) <=> p(s(bool,X18)))),
  file('thm.wordProps.s_frame_val_eq_ind','thm.bool.EQ_CLAUSES|split|0')).
fof(f68,plain,(
  ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK3))))),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X14,X15] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X14),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X15),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X10,X11,X12,X13] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X10),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X11))))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X13)))))))) & ! [X7,X8,X9] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X7),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X8))))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X4,X5,X6] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X4),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X6)))))))) & ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK3))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f51])).
fof(f51,plain,(
  ? [X0,X1] : (! [X14,X15] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X14),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X15),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X10,X11,X12,X13] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X10),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X11))))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X13)))))))) & ! [X7,X8,X9] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X7),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X8))))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X4,X5,X6] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X4),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X6)))))))) & ? [X2,X3] : ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),X2))),s('type.wordSem.stack_frame'(X0),X3)))))),
  inference(rectify,[],[f47])).
fof(f47,plain,(
  ? [X0,X1] : (! [X12,X13] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X8,X9,X10,X11] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X9))))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X10),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X11)))))))) & ! [X5,X6,X7] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X6))))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X7),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X2,X3,X4] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4)))))))) & ? [X14,X15] : ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),X14))),s('type.wordSem.stack_frame'(X0),X15)))))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ? [X0,X1] : ((! [X12,X13] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X8,X9,X10,X11] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X9))))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X10),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X11)))))))) & ! [X5,X6,X7] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X6))))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X7),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X2,X3,X4] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4))))))))) & ? [X14,X15] : ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),X14))),s('type.wordSem.stack_frame'(X0),X15)))))),
  inference(ennf_transformation,[],[f22])).
fof(f22,plain,(
  ~! [X0,X1] : ((! [X12,X13] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X8,X9,X10,X11] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X9))))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X10),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X11)))))))) & ! [X5,X6,X7] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X6))))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X7),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X2,X3,X4] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4))))))))) => ! [X14,X15] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),X14))),s('type.wordSem.stack_frame'(X0),X15)))))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ~! [X0] : ! [X1] : ((! [X12,X13] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X8,X9,X10,X11] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X9))))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X10),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X11)))))))) & ! [X5,X6,X7] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X6))))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X7),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X2,X3,X4] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4))))))))) => ! [X14,X15] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X0),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X0),bool)),X1),s('type.wordSem.stack_frame'(X0),X14))),s('type.wordSem.stack_frame'(X0),X15)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((! [X8,X9] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X6),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X6),bool)),X7),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X8,X10,X9,X11] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X6),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X6),bool)),X7),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X10))))))),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X11)))))))) & ! [X12,X13,X14] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X6),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X6),bool)),X7),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X13))))))),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X14),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X12,X14,X15] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X6),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X6),bool)),X7),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X14),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X15))))))))) => ! [X16,X17] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X6),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X6),bool)),X7),s('type.wordSem.stack_frame'(X6),X16))),s('type.wordSem.stack_frame'(X6),X17)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((! [X8,X9] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X6),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X6),bool)),X7),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X8,X10,X9,X11] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X6),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X6),bool)),X7),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X10))))))),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X11)))))))) & ! [X12,X13,X14] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X6),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X6),bool)),X7),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X13))))))),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X14),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X12,X14,X15] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X6),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X6),bool)),X7),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X14),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X15))))))))) => ! [X16,X17] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X6),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X6),bool)),X7),s('type.wordSem.stack_frame'(X6),X16))),s('type.wordSem.stack_frame'(X6),X17)))))),
  file('thm.wordProps.s_frame_val_eq_ind','thm.wordProps.s_frame_val_eq_ind')).
fof(f4225,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK3))) | ($spl14 | $spl16)),
  inference(superposition,[],[f3525,f4173])).
fof(f4173,plain,(
  s('type.wordSem.stack_frame'(sK0),sK3) = s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | $spl14),
  inference(superposition,[],[f90,f1879])).
fof(f90,plain,(
  ( ! [X0,X1] : (s('type.wordSem.stack_frame'(X0),X1) = s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),sK18(X1,X0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X1,X0))))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1] : s('type.wordSem.stack_frame'(X0),X1) = s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),sK18(X1,X0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK18,sK19])],[f43])).
fof(f43,plain,(
  ! [X0,X1] : ? [X2,X3] : s('type.wordSem.stack_frame'(X0),X1) = s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X3)))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ! [X0] : ! [X1] : ? [X2,X3] : s('type.wordSem.stack_frame'(X0),X1) = s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X3)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X28] : ? [X29,X30] : s('type.wordSem.stack_frame'(X6),X28) = s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X29),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X30)))),
  file('thm.wordProps.s_frame_val_eq_ind','thm.wordSem.stack_frame_nchotomy')).
fof(f3525,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X0),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) ) | $spl16),
  inference(superposition,[],[f109,f3495])).
fof(f3495,plain,(
  s('type.wordSem.stack_frame'(sK0),sK2) = s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | $spl16),
  inference(superposition,[],[f90,f1881])).
fof(f109,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X0),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) )),
  inference(resolution,[],[f64,f83])).
fof(f83,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f61])).
fof(f64,plain,(
  ( ! [X14,X15] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X14),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X15),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f4164,plain,(
  $false | ($spl15 | $spl16)),
  inference(subsumption_resolution,[],[f4163,f1878])).
fof(f1878,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK3,sK0)) | $spl15),
  inference(cnf_transformation,[],[f1878_D])).
fof(f1878_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK3,sK0)) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f4163,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK3,sK0)) | $spl16),
  inference(subsumption_resolution,[],[f4149,f84])).
fof(f84,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.wordProps.s_frame_val_eq_ind',aHL_FALSITY)).
fof(f4149,plain,(
  p(s(bool,'F_0')) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK3,sK0)) | $spl16),
  inference(superposition,[],[f3538,f98])).
fof(f98,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK3)))),
  inference(resolution,[],[f68,f79])).
fof(f79,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X18] : (s(bool,'F_0') = s(bool,X18) <=> ~p(s(bool,X18)))),
  file('thm.wordProps.s_frame_val_eq_ind','thm.bool.EQ_CLAUSES|split|2')).
fof(f3538,plain,(
  ( ! [X21] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),X21)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X21,sK0))) ) | $spl16),
  inference(superposition,[],[f728,f3495])).
fof(f728,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),X0)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0))) )),
  inference(superposition,[],[f256,f90])).
fof(f256,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)) )),
  inference(superposition,[],[f67,f73])).
fof(f73,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK16(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK16(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16])],[f26])).
fof(f26,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X19] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X19) | ? [X20] : s('type.option.option'(X6),X19) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X20))))),
  file('thm.wordProps.s_frame_val_eq_ind','thm.option.option_nchotomy')).
fof(f67,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X4),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X6))))))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f3954,plain,(
  $false | ($spl16 | $spl36)),
  inference(subsumption_resolution,[],[f3953,f84])).
fof(f3953,plain,(
  p(s(bool,'F_0')) | ($spl16 | $spl36)),
  inference(forward_demodulation,[],[f3945,f98])).
fof(f3945,plain,(
  p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK3)))) | ($spl16 | $spl36)),
  inference(superposition,[],[f3318,f3495])).
fof(f3318,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X7),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3))))) ) | $spl36),
  inference(trivial_inequality_removal,[],[f3317])).
fof(f3317,plain,(
  ( ! [X7] : (s(bool,'F_0') != s(bool,'F_0') | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X7),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3))))) ) | $spl36),
  inference(superposition,[],[f2020,f77])).
fof(f77,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X18] : (s(bool,'F_0') = s(bool,X18) <=> ~p(s(bool,X18)))),
  file('thm.wordProps.s_frame_val_eq_ind','thm.bool.EQ_CLAUSES|split|3')).
fof(f2136,plain,(
  ( ! [X27] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X27),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2))))) ) | $spl66),
  inference(cnf_transformation,[],[f2136_D])).
fof(f2136_D,plain,(
  ( ! [X27] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X27),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2))))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f3599,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl116),
  inference(cnf_transformation,[],[f3599_D])).
fof(f3599_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f3608,plain,(
  ( ! [X88] : (s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X88),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2))))) ) | ($spl16 | $spl72)),
  inference(forward_demodulation,[],[f3586,f2140])).
fof(f3586,plain,(
  ( ! [X88] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X88),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1696,f3495])).
fof(f1696,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),X0)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(duplicate_literal_removal,[],[f1681])).
fof(f1681,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),X0)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f1274,f73])).
fof(f1274,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0)))))),s('type.wordSem.stack_frame'(sK0),X0)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f119,f90])).
fof(f119,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(X0,'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f64,f73])).
fof(f2159,plain,(
  s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2))) | $spl103),
  inference(cnf_transformation,[],[f2159_D])).
fof(f2159_D,plain,(
  s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2))) <=> ~$spl103),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl103])])).
fof(f3607,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2))) | ($spl16 | $spl72)),
  inference(forward_demodulation,[],[f3585,f2140])).
fof(f3585,plain,(
  s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl16),
  inference(superposition,[],[f1569,f3495])).
fof(f1569,plain,(
  ( ! [X4] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X4))),s('type.wordSem.stack_frame'(sK0),X4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X4,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19(X4,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(resolution,[],[f1554,f78])).
fof(f78,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f59])).
fof(f1554,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK0),X0)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f1264,f90])).
fof(f1264,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f119,f90])).
fof(f2157,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2))) | $spl100),
  inference(cnf_transformation,[],[f2157_D])).
fof(f2157_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2))) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f3606,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2))) | ($spl16 | $spl72)),
  inference(forward_demodulation,[],[f3584,f2140])).
fof(f3584,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl16),
  inference(superposition,[],[f1567,f3495])).
fof(f1567,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X2))),s('type.wordSem.stack_frame'(sK0),X2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X2,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19(X2,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(resolution,[],[f1554,f83])).
fof(f2135,plain,(
  ( ! [X26] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X26),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))))) ) | $spl64),
  inference(cnf_transformation,[],[f2135_D])).
fof(f2135_D,plain,(
  ( ! [X26] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X26),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f3605,plain,(
  ( ! [X87] : (s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X87),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))))) ) | ($spl16 | $spl72)),
  inference(forward_demodulation,[],[f3583,f2140])).
fof(f3583,plain,(
  ( ! [X87] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X87),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1564,f3495])).
fof(f1564,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(duplicate_literal_removal,[],[f1553])).
fof(f1553,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f1264,f73])).
fof(f2155,plain,(
  p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2)))) | $spl98),
  inference(cnf_transformation,[],[f2155_D])).
fof(f2155_D,plain,(
  p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2)))) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f3604,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2)))) | ($spl16 | $spl72)),
  inference(forward_demodulation,[],[f3582,f2140])).
fof(f3582,plain,(
  p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl16),
  inference(superposition,[],[f1554,f3495])).
fof(f2138,plain,(
  ( ! [X31,X32] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X31),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X32))))))))) ) | $spl70),
  inference(cnf_transformation,[],[f2138_D])).
fof(f2138_D,plain,(
  ( ! [X31,X32] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X31),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X32))))))))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f3603,plain,(
  ( ! [X85,X86] : (s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X85),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X86))))))))) ) | ($spl16 | $spl72)),
  inference(forward_demodulation,[],[f3581,f2140])).
fof(f3581,plain,(
  ( ! [X85,X86] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X85),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X86)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1481,f3495])).
fof(f1481,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X2)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f247,f90])).
fof(f247,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X3)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(X0,'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f67,f73])).
fof(f2137,plain,(
  ( ! [X30,X29] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X29),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X30))))))),s('type.wordSem.stack_frame'(sK0),sK2))))) ) | $spl68),
  inference(cnf_transformation,[],[f2137_D])).
fof(f2137_D,plain,(
  ( ! [X30,X29] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X29),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X30))))))),s('type.wordSem.stack_frame'(sK0),sK2))))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f3602,plain,(
  ( ! [X83,X84] : (s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X83),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X84))))))),s('type.wordSem.stack_frame'(sK0),sK2))))) ) | ($spl16 | $spl72)),
  inference(forward_demodulation,[],[f3580,f2140])).
fof(f3580,plain,(
  ( ! [X83,X84] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X83),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X84))))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1403,f3495])).
fof(f1403,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X2))))))),s('type.wordSem.stack_frame'(sK0),X0)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f185,f90])).
fof(f185,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X2))))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(X0,'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f66,f73])).
fof(f66,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X7),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X8))))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f3601,plain,(
  ( ! [X82] : (s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X82),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2))))) ) | ($spl16 | $spl72)),
  inference(forward_demodulation,[],[f3600,f2140])).
fof(f3600,plain,(
  ( ! [X82] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X82),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl16 | $spl72)),
  inference(forward_demodulation,[],[f3579,f2140])).
fof(f3579,plain,(
  ( ! [X82] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X82),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1274,f3495])).
fof(f3597,plain,(
  ( ! [X81] : (s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X81),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))))) ) | ($spl16 | $spl72)),
  inference(forward_demodulation,[],[f3596,f2140])).
fof(f3596,plain,(
  ( ! [X81] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X81),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl16 | $spl72)),
  inference(forward_demodulation,[],[f3578,f2140])).
fof(f3578,plain,(
  ( ! [X81] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X81),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1264,f3495])).
fof(f3487,plain,(
  $false | ($spl14 | $spl17)),
  inference(subsumption_resolution,[],[f3486,f1880])).
fof(f1880,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK2,sK0)) | $spl17),
  inference(cnf_transformation,[],[f1880_D])).
fof(f1880_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK2,sK0)) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f3486,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK2,sK0)) | $spl14),
  inference(subsumption_resolution,[],[f3477,f84])).
fof(f3477,plain,(
  p(s(bool,'F_0')) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK2,sK0)) | $spl14),
  inference(superposition,[],[f2204,f98])).
fof(f2204,plain,(
  ( ! [X16] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X16))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X16,sK0))) ) | $spl14),
  inference(superposition,[],[f607,f2166])).
fof(f2166,plain,(
  s('type.wordSem.stack_frame'(sK0),sK3) = s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | $spl14),
  inference(superposition,[],[f90,f1879])).
fof(f607,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0))) )),
  inference(superposition,[],[f180,f90])).
fof(f180,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)) )),
  inference(superposition,[],[f66,f73])).
fof(f2533,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | $spl108),
  inference(cnf_transformation,[],[f2533_D])).
fof(f2533_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f2037,plain,(
  ( ! [X82] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),X82)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X82,sK0))) ) | $spl62),
  inference(cnf_transformation,[],[f2037_D])).
fof(f2037_D,plain,(
  ( ! [X82] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),X82)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X82,sK0))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f3289,plain,(
  ( ! [X88] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),X88)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X88,sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1816,f3102])).
fof(f3102,plain,(
  s('type.wordSem.stack_frame'(sK0),sK3) = s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | ($spl14 | $spl28)),
  inference(forward_demodulation,[],[f3080,f2166])).
fof(f3080,plain,(
  s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) = s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | $spl28),
  inference(superposition,[],[f90,f2016])).
fof(f1816,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X1))),s('type.wordSem.stack_frame'(sK0),X0)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X1,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0))) )),
  inference(superposition,[],[f1010,f90])).
fof(f1010,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X1))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X1,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)) )),
  inference(superposition,[],[f974,f73])).
fof(f974,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X2)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0))) )),
  inference(superposition,[],[f359,f90])).
fof(f359,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X3)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)) )),
  inference(superposition,[],[f65,f73])).
fof(f65,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X10),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X11))))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X13))))))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f2036,plain,(
  ( ! [X81] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X81))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X81,sK0))) ) | $spl60),
  inference(cnf_transformation,[],[f2036_D])).
fof(f2036_D,plain,(
  ( ! [X81] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X81))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X81,sK0))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f3288,plain,(
  ( ! [X87] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X87))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X87,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1816,f3102])).
fof(f2535,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl110),
  inference(cnf_transformation,[],[f2535_D])).
fof(f2535_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f2014,plain,(
  ( ! [X31,X32] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X31),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X32))))))))) ) | $spl26),
  inference(cnf_transformation,[],[f2014_D])).
fof(f2014_D,plain,(
  ( ! [X31,X32] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X31),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X32))))))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f3282,plain,(
  ( ! [X83,X84] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X83),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X84)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1481,f3102])).
fof(f2013,plain,(
  ( ! [X30,X29] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X29),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X30))))))),s('type.wordSem.stack_frame'(sK0),sK3))))) ) | $spl24),
  inference(cnf_transformation,[],[f2013_D])).
fof(f2013_D,plain,(
  ( ! [X30,X29] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X29),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X30))))))),s('type.wordSem.stack_frame'(sK0),sK3))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f3281,plain,(
  ( ! [X81,X82] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X81),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X82))))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1403,f3102])).
fof(f2537,plain,(
  ( ! [X76] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X76),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))),s('type.wordSem.stack_frame'(sK0),sK3))))) ) | $spl114),
  inference(cnf_transformation,[],[f2537_D])).
fof(f2537_D,plain,(
  ( ! [X76] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X76),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))),s('type.wordSem.stack_frame'(sK0),sK3))))) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f3280,plain,(
  ( ! [X80] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X80),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1274,f3102])).
fof(f2536,plain,(
  ( ! [X75] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X75),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))))) ) | $spl112),
  inference(cnf_transformation,[],[f2536_D])).
fof(f2536_D,plain,(
  ( ! [X75] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X75),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))))) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f3279,plain,(
  ( ! [X79] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X79),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1264,f3102])).
fof(f2025,plain,(
  ( ! [X72,X71] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X71),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X72))))))),s('type.wordSem.stack_frame'(sK0),sK3)))) ) | $spl46),
  inference(cnf_transformation,[],[f2025_D])).
fof(f2025_D,plain,(
  ( ! [X72,X71] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X71),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X72))))))),s('type.wordSem.stack_frame'(sK0),sK3)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f3278,plain,(
  ( ! [X78,X77] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X77),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X78))))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1139,f3102])).
fof(f1139,plain,(
  ( ! [X14,X15,X16] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X15),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X16))))))),s('type.wordSem.stack_frame'(sK0),X14))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X14,sK0))) )),
  inference(resolution,[],[f1121,f78])).
fof(f1121,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X2))))))),s('type.wordSem.stack_frame'(sK0),X0)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0))) )),
  inference(superposition,[],[f368,f90])).
fof(f368,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X2))))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)) )),
  inference(superposition,[],[f65,f73])).
fof(f2024,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X69),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X70))))))),s('type.wordSem.stack_frame'(sK0),sK3)))) ) | $spl44),
  inference(cnf_transformation,[],[f2024_D])).
fof(f2024_D,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X69),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X70))))))),s('type.wordSem.stack_frame'(sK0),sK3)))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f3277,plain,(
  ( ! [X76,X75] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X75),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X76))))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1137,f3102])).
fof(f1137,plain,(
  ( ! [X10,X8,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X10))))))),s('type.wordSem.stack_frame'(sK0),X8))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X8,sK0))) )),
  inference(resolution,[],[f1121,f83])).
fof(f3276,plain,(
  ( ! [X74,X73] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X73),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X74))))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1121,f3102])).
fof(f2023,plain,(
  ( ! [X66,X65] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X65),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X66)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X66)) ) | $spl42),
  inference(cnf_transformation,[],[f2023_D])).
fof(f2023_D,plain,(
  ( ! [X66,X65] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X65),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X66)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X66)) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f3275,plain,(
  ( ! [X72,X71] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X71),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X72)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X72)) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1010,f3102])).
fof(f2022,plain,(
  ( ! [X64,X63] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X63),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X64)))))))) ) | $spl40),
  inference(cnf_transformation,[],[f2022_D])).
fof(f2022_D,plain,(
  ( ! [X64,X63] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X63),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X64)))))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f3274,plain,(
  ( ! [X70,X69] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X69),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X70))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f997,f3102])).
fof(f997,plain,(
  ( ! [X6,X8,X7] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X6))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X7),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X8))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X6,sK0))) )),
  inference(resolution,[],[f974,f78])).
fof(f2021,plain,(
  ( ! [X61,X62] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X61),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X62)))))))) ) | $spl38),
  inference(cnf_transformation,[],[f2021_D])).
fof(f2021_D,plain,(
  ( ! [X61,X62] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X61),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X62)))))))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f3273,plain,(
  ( ! [X68,X67] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X67),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X68))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f995,f3102])).
fof(f995,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X2))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0))) )),
  inference(resolution,[],[f974,f83])).
fof(f3272,plain,(
  ( ! [X66,X65] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X65),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X66)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f974,f3102])).
fof(f2020,plain,(
  ( ! [X58] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X58),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3)))) ) | $spl36),
  inference(cnf_transformation,[],[f2020_D])).
fof(f2020_D,plain,(
  ( ! [X58] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X58),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3)))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f3271,plain,(
  ( ! [X64] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X64),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f744,f3102])).
fof(f744,plain,(
  ( ! [X10,X11] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X11),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),X10))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X10,sK0))) )),
  inference(resolution,[],[f728,f78])).
fof(f2019,plain,(
  ( ! [X57] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X57),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3)))) ) | $spl34),
  inference(cnf_transformation,[],[f2019_D])).
fof(f2019_D,plain,(
  ( ! [X57] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X57),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3)))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f3270,plain,(
  ( ! [X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X63),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f742,f3102])).
fof(f742,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X7),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),X6))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X6,sK0))) )),
  inference(resolution,[],[f728,f83])).
fof(f3160,plain,(
  $false | ($spl16 | $spl22)),
  inference(subsumption_resolution,[],[f3159,f84])).
fof(f3159,plain,(
  p(s(bool,'F_0')) | ($spl16 | $spl22)),
  inference(forward_demodulation,[],[f3150,f98])).
fof(f3150,plain,(
  p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK3)))) | ($spl16 | $spl22)),
  inference(superposition,[],[f2012,f2922])).
fof(f2922,plain,(
  s('type.wordSem.stack_frame'(sK0),sK2) = s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | $spl16),
  inference(superposition,[],[f90,f1881])).
fof(f2140,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | $spl72),
  inference(cnf_transformation,[],[f2140_D])).
fof(f2140_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f2991,plain,(
  ( ! [X59] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X59),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f607,f2922])).
fof(f2141,plain,(
  ( ! [X54] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X54),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) ) | $spl74),
  inference(cnf_transformation,[],[f2141_D])).
fof(f2141_D,plain,(
  ( ! [X54] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X54),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f2992,plain,(
  ( ! [X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X60),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f623,f2922])).
fof(f623,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X0,sK0))) )),
  inference(resolution,[],[f607,f83])).
fof(f2142,plain,(
  ( ! [X55] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X55),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) ) | $spl76),
  inference(cnf_transformation,[],[f2142_D])).
fof(f2142_D,plain,(
  ( ! [X55] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X55),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f2993,plain,(
  ( ! [X61] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X61),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f625,f2922])).
fof(f625,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X4))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X4,sK0))) )),
  inference(resolution,[],[f607,f78])).
fof(f2994,plain,(
  ( ! [X62] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X62),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f728,f2922])).
fof(f2143,plain,(
  ( ! [X57] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X57),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2)))) ) | $spl78),
  inference(cnf_transformation,[],[f2143_D])).
fof(f2143_D,plain,(
  ( ! [X57] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X57),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2)))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f2995,plain,(
  ( ! [X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X63),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f742,f2922])).
fof(f2144,plain,(
  ( ! [X58] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X58),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2)))) ) | $spl80),
  inference(cnf_transformation,[],[f2144_D])).
fof(f2144_D,plain,(
  ( ! [X58] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X58),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2)))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f2996,plain,(
  ( ! [X64] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X64),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f744,f2922])).
fof(f2997,plain,(
  ( ! [X66,X65] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X65),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X66)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f974,f2922])).
fof(f2145,plain,(
  ( ! [X61,X62] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X61),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X62)))))))) ) | $spl82),
  inference(cnf_transformation,[],[f2145_D])).
fof(f2145_D,plain,(
  ( ! [X61,X62] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X61),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X62)))))))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f2998,plain,(
  ( ! [X68,X67] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X67),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X68))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f995,f2922])).
fof(f2146,plain,(
  ( ! [X64,X63] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X63),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X64)))))))) ) | $spl84),
  inference(cnf_transformation,[],[f2146_D])).
fof(f2146_D,plain,(
  ( ! [X64,X63] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X63),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X64)))))))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f2999,plain,(
  ( ! [X70,X69] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X69),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X70))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f997,f2922])).
fof(f2147,plain,(
  ( ! [X66,X65] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X65),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X66)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X66)) ) | $spl86),
  inference(cnf_transformation,[],[f2147_D])).
fof(f2147_D,plain,(
  ( ! [X66,X65] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X65),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X66)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X66)) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f3000,plain,(
  ( ! [X72,X71] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X71),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X72)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X72)) ) | $spl16),
  inference(superposition,[],[f1010,f2922])).
fof(f3001,plain,(
  ( ! [X74,X73] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X73),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X74))))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f1121,f2922])).
fof(f2148,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X69),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X70))))))),s('type.wordSem.stack_frame'(sK0),sK2)))) ) | $spl88),
  inference(cnf_transformation,[],[f2148_D])).
fof(f2148_D,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X69),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X70))))))),s('type.wordSem.stack_frame'(sK0),sK2)))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f3002,plain,(
  ( ! [X76,X75] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X75),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X76))))))),s('type.wordSem.stack_frame'(sK0),sK2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f1137,f2922])).
fof(f2149,plain,(
  ( ! [X72,X71] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X71),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X72))))))),s('type.wordSem.stack_frame'(sK0),sK2)))) ) | $spl90),
  inference(cnf_transformation,[],[f2149_D])).
fof(f2149_D,plain,(
  ( ! [X72,X71] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X71),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X72))))))),s('type.wordSem.stack_frame'(sK0),sK2)))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f3003,plain,(
  ( ! [X78,X77] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X77),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X78))))))),s('type.wordSem.stack_frame'(sK0),sK2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f1139,f2922])).
fof(f2151,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl92),
  inference(cnf_transformation,[],[f2151_D])).
fof(f2151_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f2152,plain,(
  ( ! [X73] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X73),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))))) ) | $spl94),
  inference(cnf_transformation,[],[f2152_D])).
fof(f2152_D,plain,(
  ( ! [X73] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X73),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f3004,plain,(
  ( ! [X79] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X79),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1264,f2922])).
fof(f2153,plain,(
  ( ! [X74] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X74),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))),s('type.wordSem.stack_frame'(sK0),sK2))))) ) | $spl96),
  inference(cnf_transformation,[],[f2153_D])).
fof(f2153_D,plain,(
  ( ! [X74] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X74),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))),s('type.wordSem.stack_frame'(sK0),sK2))))) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f3005,plain,(
  ( ! [X80] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X80),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1274,f2922])).
fof(f3006,plain,(
  ( ! [X81,X82] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X81),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X82))))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1403,f2922])).
fof(f3007,plain,(
  ( ! [X83,X84] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X83),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X84)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1481,f2922])).
fof(f3008,plain,(
  p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl16),
  inference(superposition,[],[f1554,f2922])).
fof(f3009,plain,(
  ( ! [X85] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X85),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1564,f2922])).
fof(f3010,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl16),
  inference(superposition,[],[f1567,f2922])).
fof(f3011,plain,(
  s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl16),
  inference(superposition,[],[f1569,f2922])).
fof(f3012,plain,(
  ( ! [X86] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X86),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1696,f2922])).
fof(f2160,plain,(
  ( ! [X81] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X81))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X81,sK0))) ) | $spl104),
  inference(cnf_transformation,[],[f2160_D])).
fof(f2160_D,plain,(
  ( ! [X81] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X81))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X81,sK0))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f3013,plain,(
  ( ! [X87] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X87))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X87,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f1816,f2922])).
fof(f2161,plain,(
  ( ! [X82] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),X82)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X82,sK0))) ) | $spl106),
  inference(cnf_transformation,[],[f2161_D])).
fof(f2161_D,plain,(
  ( ! [X82] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),X82)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X82,sK0))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f3014,plain,(
  ( ! [X88] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),X88)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X88,sK0))) ) | $spl16),
  inference(superposition,[],[f1816,f2922])).
fof(f3022,plain,(
  $false | ($spl16 | $spl34)),
  inference(subsumption_resolution,[],[f2970,f96])).
fof(f2970,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK3))) | ($spl16 | $spl34)),
  inference(superposition,[],[f2019,f2922])).
fof(f2918,plain,(
  $false | ($spl17 | $spl60)),
  inference(subsumption_resolution,[],[f2917,f1880])).
fof(f2917,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK2,sK0)) | $spl60),
  inference(subsumption_resolution,[],[f2907,f84])).
fof(f2907,plain,(
  p(s(bool,'F_0')) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK2,sK0)) | $spl60),
  inference(superposition,[],[f2036,f98])).
fof(f2525,plain,(
  ( ! [X84] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),X84)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X84,sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1816,f2376])).
fof(f2376,plain,(
  s('type.wordSem.stack_frame'(sK0),sK3) = s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | ($spl14 | $spl28)),
  inference(forward_demodulation,[],[f2357,f2166])).
fof(f2357,plain,(
  s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) = s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | $spl28),
  inference(superposition,[],[f90,f2016])).
fof(f2524,plain,(
  ( ! [X83] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X83))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X83,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1816,f2376])).
fof(f2012,plain,(
  ( ! [X27] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X27),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3))))) ) | $spl22),
  inference(cnf_transformation,[],[f2012_D])).
fof(f2012_D,plain,(
  ( ! [X27] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X27),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f2523,plain,(
  ( ! [X82] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X82),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1696,f2376])).
fof(f2035,plain,(
  s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK3))) | $spl59),
  inference(cnf_transformation,[],[f2035_D])).
fof(f2035_D,plain,(
  s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK3))) <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f2522,plain,(
  s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | ($spl14 | $spl28)),
  inference(superposition,[],[f1569,f2376])).
fof(f2033,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK3))) | $spl56),
  inference(cnf_transformation,[],[f2033_D])).
fof(f2033_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK3))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f2521,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | ($spl14 | $spl28)),
  inference(superposition,[],[f1567,f2376])).
fof(f2011,plain,(
  ( ! [X26] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X26),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))))) ) | $spl20),
  inference(cnf_transformation,[],[f2011_D])).
fof(f2011_D,plain,(
  ( ! [X26] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X26),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f2520,plain,(
  ( ! [X81] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X81),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1564,f2376])).
fof(f2031,plain,(
  p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK3)))) | $spl54),
  inference(cnf_transformation,[],[f2031_D])).
fof(f2031_D,plain,(
  p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK3)))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f2519,plain,(
  p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | ($spl14 | $spl28)),
  inference(superposition,[],[f1554,f2376])).
fof(f2518,plain,(
  ( ! [X80,X79] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X79),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X80)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1481,f2376])).
fof(f2517,plain,(
  ( ! [X78,X77] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X77),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X78))))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1403,f2376])).
fof(f2516,plain,(
  ( ! [X76] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X76),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1274,f2376])).
fof(f2515,plain,(
  ( ! [X75] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X75),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1264,f2376])).
fof(f2514,plain,(
  ( ! [X74,X73] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X73),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X74))))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1139,f2376])).
fof(f2513,plain,(
  ( ! [X72,X71] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X71),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X72))))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1137,f2376])).
fof(f2512,plain,(
  ( ! [X70,X69] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X69),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X70))))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1121,f2376])).
fof(f2511,plain,(
  ( ! [X68,X67] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X67),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X68)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X68)) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f1010,f2376])).
fof(f2510,plain,(
  ( ! [X66,X65] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X65),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X66))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f997,f2376])).
fof(f2509,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X63),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X64))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f995,f2376])).
fof(f2508,plain,(
  ( ! [X61,X62] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X61),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X62)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f974,f2376])).
fof(f2507,plain,(
  ( ! [X60] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X60),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f744,f2376])).
fof(f2506,plain,(
  ( ! [X59] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X59),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f742,f2376])).
fof(f2505,plain,(
  ( ! [X58] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X58),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f728,f2376])).
fof(f2018,plain,(
  ( ! [X55] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X55),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) ) | $spl32),
  inference(cnf_transformation,[],[f2018_D])).
fof(f2018_D,plain,(
  ( ! [X55] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X55),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f2504,plain,(
  ( ! [X57] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X57),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f625,f2376])).
fof(f2017,plain,(
  ( ! [X54] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X54),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) ) | $spl30),
  inference(cnf_transformation,[],[f2017_D])).
fof(f2017_D,plain,(
  ( ! [X54] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X54),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f2503,plain,(
  ( ! [X56] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X56),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f623,f2376])).
fof(f2502,plain,(
  ( ! [X55] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X55),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | ($spl14 | $spl28)),
  inference(superposition,[],[f607,f2376])).
fof(f2016,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | $spl28),
  inference(cnf_transformation,[],[f2016_D])).
fof(f2016_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f2253,plain,(
  ( ! [X82] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),X82)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X82,sK0))) ) | $spl14),
  inference(superposition,[],[f1816,f2166])).
fof(f2252,plain,(
  ( ! [X81] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X81))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X81,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f1816,f2166])).
fof(f2027,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl48),
  inference(cnf_transformation,[],[f2027_D])).
fof(f2027_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f2251,plain,(
  ( ! [X80] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X80),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1696,f2166])).
fof(f2250,plain,(
  s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl14),
  inference(superposition,[],[f1569,f2166])).
fof(f2249,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl14),
  inference(superposition,[],[f1567,f2166])).
fof(f2248,plain,(
  ( ! [X79] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X79),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1564,f2166])).
fof(f2247,plain,(
  p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl14),
  inference(superposition,[],[f1554,f2166])).
fof(f2246,plain,(
  ( ! [X78,X77] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X77),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X78)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1481,f2166])).
fof(f2245,plain,(
  ( ! [X76,X75] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X75),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X76))))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1403,f2166])).
fof(f2029,plain,(
  ( ! [X74] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X74),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))),s('type.wordSem.stack_frame'(sK0),sK3))))) ) | $spl52),
  inference(cnf_transformation,[],[f2029_D])).
fof(f2029_D,plain,(
  ( ! [X74] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X74),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))),s('type.wordSem.stack_frame'(sK0),sK3))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f2244,plain,(
  ( ! [X74] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X74),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1274,f2166])).
fof(f2028,plain,(
  ( ! [X73] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X73),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))))) ) | $spl50),
  inference(cnf_transformation,[],[f2028_D])).
fof(f2028_D,plain,(
  ( ! [X73] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X73),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f2243,plain,(
  ( ! [X73] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X73),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1264,f2166])).
fof(f2242,plain,(
  ( ! [X72,X71] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X71),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X72))))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f1139,f2166])).
fof(f2241,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X69),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X70))))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f1137,f2166])).
fof(f2240,plain,(
  ( ! [X68,X67] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X67),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X68))))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f1121,f2166])).
fof(f2239,plain,(
  ( ! [X66,X65] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X65),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X66)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X66)) ) | $spl14),
  inference(superposition,[],[f1010,f2166])).
fof(f2238,plain,(
  ( ! [X64,X63] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X63),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X64))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f997,f2166])).
fof(f2237,plain,(
  ( ! [X61,X62] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X61),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X62))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f995,f2166])).
fof(f2236,plain,(
  ( ! [X59,X60] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X59),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X60)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f974,f2166])).
fof(f2235,plain,(
  ( ! [X58] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X58),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f744,f2166])).
fof(f2234,plain,(
  ( ! [X57] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X57),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f742,f2166])).
fof(f2233,plain,(
  ( ! [X56] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X56),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f728,f2166])).
fof(f2232,plain,(
  ( ! [X55] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X55),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f625,f2166])).
fof(f2231,plain,(
  ( ! [X54] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X54),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f623,f2166])).
fof(f2230,plain,(
  ( ! [X53] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X53),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f607,f2166])).
fof(f2010,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl18),
  inference(cnf_transformation,[],[f2010_D])).
fof(f2010_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f2217,plain,(
  ( ! [X31,X32] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X31),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X32)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f247,f2166])).
fof(f2216,plain,(
  ( ! [X30,X29] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X29),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X30))))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f185,f2166])).
fof(f2214,plain,(
  ( ! [X27] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X27),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f119,f2166])).
fof(f2213,plain,(
  ( ! [X26] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X26),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f119,f2166])).
fof(f2128,plain,(
  ( ! [X82] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),X82)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X82,sK0))) ) | $spl16),
  inference(superposition,[],[f1816,f2044])).
fof(f2044,plain,(
  s('type.wordSem.stack_frame'(sK0),sK2) = s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | $spl16),
  inference(superposition,[],[f90,f1881])).
fof(f2127,plain,(
  ( ! [X81] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X81))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X81,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f1816,f2044])).
fof(f2126,plain,(
  ( ! [X80] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X80),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1696,f2044])).
fof(f2125,plain,(
  s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl16),
  inference(superposition,[],[f1569,f2044])).
fof(f2124,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl16),
  inference(superposition,[],[f1567,f2044])).
fof(f2123,plain,(
  ( ! [X79] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X79),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1564,f2044])).
fof(f2122,plain,(
  p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl16),
  inference(superposition,[],[f1554,f2044])).
fof(f2121,plain,(
  ( ! [X78,X77] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X77),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X78)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1481,f2044])).
fof(f2120,plain,(
  ( ! [X76,X75] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X75),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X76))))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1403,f2044])).
fof(f2119,plain,(
  ( ! [X74] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X74),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1274,f2044])).
fof(f2118,plain,(
  ( ! [X73] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X73),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1264,f2044])).
fof(f2117,plain,(
  ( ! [X72,X71] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X71),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X72))))))),s('type.wordSem.stack_frame'(sK0),sK2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f1139,f2044])).
fof(f2116,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X69),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X70))))))),s('type.wordSem.stack_frame'(sK0),sK2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f1137,f2044])).
fof(f2115,plain,(
  ( ! [X68,X67] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X67),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X68))))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f1121,f2044])).
fof(f2114,plain,(
  ( ! [X66,X65] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X65),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X66)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X66)) ) | $spl16),
  inference(superposition,[],[f1010,f2044])).
fof(f2113,plain,(
  ( ! [X64,X63] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X63),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X64))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f997,f2044])).
fof(f2112,plain,(
  ( ! [X61,X62] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X61),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X62))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f995,f2044])).
fof(f2111,plain,(
  ( ! [X59,X60] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X59),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X60)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f974,f2044])).
fof(f2110,plain,(
  ( ! [X58] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X58),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f744,f2044])).
fof(f2109,plain,(
  ( ! [X57] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X57),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f742,f2044])).
fof(f2108,plain,(
  ( ! [X56] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X56),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f728,f2044])).
fof(f2107,plain,(
  ( ! [X55] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X55),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f625,f2044])).
fof(f2106,plain,(
  ( ! [X54] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X54),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f623,f2044])).
fof(f2105,plain,(
  ( ! [X53] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X53),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK2,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f607,f2044])).
fof(f2092,plain,(
  ( ! [X31,X32] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X31),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X32)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f247,f2044])).
fof(f2091,plain,(
  ( ! [X30,X29] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X29),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X30))))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f185,f2044])).
fof(f2089,plain,(
  ( ! [X27] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X27),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK2)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f119,f2044])).
fof(f2088,plain,(
  ( ! [X26] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X26),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f119,f2044])).
fof(f2002,plain,(
  ( ! [X82] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),X82)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X82,sK0))) ) | $spl14),
  inference(superposition,[],[f1816,f1885])).
fof(f1885,plain,(
  s('type.wordSem.stack_frame'(sK0),sK3) = s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | $spl14),
  inference(superposition,[],[f90,f1879])).
fof(f2001,plain,(
  ( ! [X81] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),X81))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(X81,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f1816,f1885])).
fof(f2000,plain,(
  ( ! [X80] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X80),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1696,f1885])).
fof(f1999,plain,(
  s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl14),
  inference(superposition,[],[f1569,f1885])).
fof(f1998,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl14),
  inference(superposition,[],[f1567,f1885])).
fof(f1997,plain,(
  ( ! [X79] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X79),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1564,f1885])).
fof(f1996,plain,(
  p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl14),
  inference(superposition,[],[f1554,f1885])).
fof(f1995,plain,(
  ( ! [X78,X77] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X77),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X78)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1481,f1885])).
fof(f1994,plain,(
  ( ! [X76,X75] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X75),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X76))))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1403,f1885])).
fof(f1993,plain,(
  ( ! [X74] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X74),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1274,f1885])).
fof(f1992,plain,(
  ( ! [X73] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X73),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1264,f1885])).
fof(f1991,plain,(
  ( ! [X72,X71] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X71),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X72))))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f1139,f1885])).
fof(f1990,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X69),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X70))))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f1137,f1885])).
fof(f1989,plain,(
  ( ! [X68,X67] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X67),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X68))))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f1121,f1885])).
fof(f1988,plain,(
  ( ! [X66,X65] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X65),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X66)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X66)) ) | $spl14),
  inference(superposition,[],[f1010,f1885])).
fof(f1987,plain,(
  ( ! [X64,X63] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X63),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X64))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f997,f1885])).
fof(f1986,plain,(
  ( ! [X61,X62] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X61),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X62))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f995,f1885])).
fof(f1985,plain,(
  ( ! [X59,X60] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X59),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X60)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f974,f1885])).
fof(f1984,plain,(
  ( ! [X58] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X58),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f744,f1885])).
fof(f1983,plain,(
  ( ! [X57] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X57),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f742,f1885])).
fof(f1982,plain,(
  ( ! [X56] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X56),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f728,f1885])).
fof(f1981,plain,(
  ( ! [X55] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X55),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f625,f1885])).
fof(f1980,plain,(
  ( ! [X54] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X54),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f623,f1885])).
fof(f1979,plain,(
  ( ! [X53] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X53),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK18(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl14),
  inference(superposition,[],[f607,f1885])).
fof(f1966,plain,(
  ( ! [X31,X32] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X31),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X32)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f247,f1885])).
fof(f1965,plain,(
  ( ! [X30,X29] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X29),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X30))))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f185,f1885])).
fof(f1963,plain,(
  ( ! [X27] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X27),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),sK3)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f119,f1885])).
fof(f1962,plain,(
  ( ! [X26] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X26),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f119,f1885])).
fof(f1879,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK3,sK0)) | $spl14),
  inference(cnf_transformation,[],[f1879_D])).
fof(f1879_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK3,sK0)) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f1881,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK2,sK0)) | $spl16),
  inference(cnf_transformation,[],[f1881_D])).
fof(f1881_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK2,sK0)) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f1877,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK2,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK3,sK0))),
  inference(subsumption_resolution,[],[f1852,f84])).
fof(f1852,plain,(
  p(s(bool,'F_0')) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK2,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK19(sK3,sK0))),
  inference(superposition,[],[f1816,f98])).
fof(f1417,plain,(
  ( ! [X4] : (s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4))) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4)),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl10),
  inference(cnf_transformation,[],[f1417_D])).
fof(f1417_D,plain,(
  ( ! [X4] : (s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4))) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4)),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f1418,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(X7,'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl12),
  inference(cnf_transformation,[],[f1418_D])).
fof(f1418_D,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(X7,'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f1393,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16(X7,'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4))) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK16('const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4)),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f185,f73])).
fof(f393,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),X4)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X5)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X5),s('type.wordSem.stack_frame'(sK0),X4))),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X5,'type.wordSem.stack_frame'(sK0))))))) ) | $spl6),
  inference(cnf_transformation,[],[f393_D])).
fof(f393_D,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),X4)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X5)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X5),s('type.wordSem.stack_frame'(sK0),X4))),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X5,'type.wordSem.stack_frame'(sK0))))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f394,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X3)))) ) | $spl8),
  inference(cnf_transformation,[],[f394_D])).
fof(f394_D,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X3)))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f380,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X3))) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),X4)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X5),s('type.wordSem.stack_frame'(sK0),X4))),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X5,'type.wordSem.stack_frame'(sK0)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X5))))) )),
  inference(resolution,[],[f265,f74])).
fof(f74,plain,(
  ( ! [X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,sK17(X2,X1,X0))))) | ~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : ((! [X5] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,sK17(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK17(X2,X1,X0)))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK17])],[f56])).
fof(f56,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : (? [X4] : (! [X5] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(rectify,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : (? [X3] : (! [X4] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(ennf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) => ! [X2] : (! [X3] : (! [X4] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) => ! [X2] : (! [X3] : (! [X4] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X26] : (p(s(bool,'const.relation.WF_1'(s(fun(X6,fun(X6,bool)),X26)))) => ! [X7] : (! [X20] : (! [X10] : (p(s(bool,happ(s(fun(X6,bool),happ(s(fun(X6,fun(X6,bool)),X26),s(X6,X10))),s(X6,X20)))) => p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X10))))) => p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X20))))) => ! [X20] : p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X20))))))),
  file('thm.wordProps.s_frame_val_eq_ind','thm.relation.WF_INDUCTION_THM')).
fof(f265,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X0,'type.wordSem.stack_frame'(sK0)))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X0)))) )),
  inference(resolution,[],[f95,f82])).
fof(f95,plain,(
  ( ! [X4] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X4)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X4,'type.wordSem.stack_frame'(sK0))))))) )),
  inference(resolution,[],[f68,f75])).
fof(f75,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK17(X2,X1,X0))))) | ~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f57])).
fof(f107,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),X0))))) ) | $spl2),
  inference(cnf_transformation,[],[f107_D])).
fof(f107_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),X0))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f392,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X2)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X2),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X0,'type.wordSem.stack_frame'(sK0))))),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X2,'type.wordSem.stack_frame'(sK0))))))) ) | $spl4),
  inference(cnf_transformation,[],[f392_D])).
fof(f392_D,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X2)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X2),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X0,'type.wordSem.stack_frame'(sK0))))),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X2,'type.wordSem.stack_frame'(sK0))))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f379,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X0))) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),X1)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X2),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X0,'type.wordSem.stack_frame'(sK0))))),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X2,'type.wordSem.stack_frame'(sK0)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X2))))) )),
  inference(resolution,[],[f265,f74])).
fof(f106,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X1)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X1,'type.wordSem.stack_frame'(sK0))))))) ) | $spl0),
  inference(cnf_transformation,[],[f106_D])).
fof(f106_D,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X1)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X1,'type.wordSem.stack_frame'(sK0))))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f229,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),X0)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X1,'type.wordSem.stack_frame'(sK0)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X1))))) )),
  inference(subsumption_resolution,[],[f199,f84])).
fof(f199,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),X0)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X1,'type.wordSem.stack_frame'(sK0)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X1))))) )),
  inference(superposition,[],[f74,f98])).
fof(f130,plain,(
  $false | $spl2),
  inference(resolution,[],[f107,f68])).
fof(f93,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2))),s('type.wordSem.stack_frame'(sK0),X0)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK0),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X1),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK0),sK17(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),sK1),s('type.wordSem.stack_frame'(sK0),sK2)),X1,'type.wordSem.stack_frame'(sK0)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK0),bool)),X1))))) )),
  inference(resolution,[],[f68,f74])).
% SZS output end Proof for thm.wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 133
% Passive clauses: 837
% Generated clauses: 4075
% Final active clauses: 90
% Final passive clauses: 352
% Input formulas: 19
% Initial clauses: 29
% 
% Selected by SInE selection: 17
% SInE iterations: 1
% 
% Duplicate literals: 45
% Trivial inequalities: 102
% Fw subsumption resolutions: 180
% Fw demodulations: 385
% Bw demodulations: 16
% 
% Simple tautologies: 2
% Forward subsumptions: 2443
% 
% Binary resolution: 193
% Forward superposition: 1406
% Backward superposition: 1635
% 
% Split clauses: 162
% Split components: 324
% SAT solver clauses: 171
% SAT solver unit clauses: 1
% SAT solver binary clauses: 13
% 
% Sat splits: 162
% Sat splitting refutations: 8
% 
% Memory used [KB]: 4861
% Time elapsed: 0.171 s
% ------------------------------
% ------------------------------
% Success in time 11.932 s
