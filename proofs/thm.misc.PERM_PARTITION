Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.misc
% (35529)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 662
% Passive clauses: 5137
% Generated clauses: 15512
% Final active clauses: 657
% Final passive clauses: 4167
% Input formulas: 38
% Initial clauses: 142
% 
% Duplicate literals: 547
% Trivial inequalities: 76
% Fw subsumption resolutions: 1683
% Fw demodulations: 507
% Bw demodulations: 5
% 
% Simple tautologies: 179
% Equational tautologies: 56
% Forward subsumptions: 6651
% 
% Binary resolution: 6838
% Factoring: 1312
% Forward superposition: 2878
% Backward superposition: 1517
% Self superposition: 112
% Equality factoring: 30
% Equality resolution: 19
% 
% Split clauses: 580
% Split components: 1182
% SAT solver clauses: 991
% SAT solver unit clauses: 10
% SAT solver binary clauses: 110
% 
% Sat splits: 580
% 
% TWLsolver clauses: 991
% TWLsolver calls for satisfiability: 441
% 
% Memory used [KB]: 6908
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.misc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.misc
% SZS output start Proof for thm.misc
fof(f7109,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f7108,f362,f364,f462,f465,f208,f357,f228,f371,f5333,f5340,f207,f359,f1697,f1698,f251,f378,f252,f379,f261,f384])).
fof(f384,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))) != s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) | p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))))))) ) | $spl32),
  inference(cnf_transformation,[],[f384_D])).
fof(f384_D,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))) != s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) | p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f261,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6)))))) | s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))) != s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))) != s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) | p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6)))))))),
  inference(ennf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) => p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6)))))))),
  inference(flattening,[],[f77])).
fof(f77,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) => p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6)))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X7,X8,X14,X15,X16,X17] : (s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(X6),X16),s('type.list.list'(X6),X17))) = s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X6)),'const.sorting.PART_4'(s(fun(X6,bool),X7),s('type.list.list'(X6),X8),s('type.list.list'(X6),X14),s('type.list.list'(X6),X15))) => p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X14),s('type.list.list'(X6),X15))))),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X16),s('type.list.list'(X6),X17)))))))),
  file('thm.misc.PERM_PARTITION','thm.misc.PERM_PART')).
fof(f379,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PARTITION_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))) ) | $spl22),
  inference(cnf_transformation,[],[f379_D])).
fof(f379_D,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PARTITION_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f252,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PARTITION_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PARTITION_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ! [X0] : ! [X1,X2] : s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PARTITION_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X6] : ! [X7,X18] : s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X6)),'const.sorting.PARTITION_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),X18))) = s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X6)),'const.sorting.PART_4'(s(fun(X6,bool),X7),s('type.list.list'(X6),X18),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.misc.PERM_PARTITION','thm.sorting.PARTITION_DEF')).
fof(f378,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))) ) | $spl20),
  inference(cnf_transformation,[],[f378_D])).
fof(f378_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f251,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f69])).
fof(f69,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6] : ! [X18] : s('type.list.list'(X6),X18) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X18),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.misc.PERM_PARTITION','thm.list.APPEND_NIL')).
fof(f1698,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) != s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PARTITION_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) | p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))))) ) | $spl628),
  inference(cnf_transformation,[],[f1698_D])).
fof(f1698_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) != s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PARTITION_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) | p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))))) ) <=> ~$spl628),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl628])])).
fof(f1697,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))))) | s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) != s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PARTITION_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))) ) | ($spl20 | $spl22 | $spl32)),
  inference(forward_demodulation,[],[f1696,f378])).
fof(f1696,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))))) | s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) != s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PARTITION_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2)))) ) | ($spl20 | $spl22 | $spl32)),
  inference(forward_demodulation,[],[f1685,f378])).
fof(f1685,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) != s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PARTITION_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) | p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0'))))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))))) ) | ($spl22 | $spl32)),
  inference(superposition,[],[f384,f379])).
fof(f359,plain,(
  s('type.pair.prod'('type.list.list'(sK10),'type.list.list'(sK10)),'const.pair.,_2'(s('type.list.list'(sK10),sK13),s('type.list.list'(sK10),sK14))) = s('type.pair.prod'('type.list.list'(sK10),'type.list.list'(sK10)),'const.sorting.PARTITION_2'(s(fun(sK10,bool),sK11),s('type.list.list'(sK10),sK12))) | $spl2),
  inference(cnf_transformation,[],[f359_D])).
fof(f359_D,plain,(
  s('type.pair.prod'('type.list.list'(sK10),'type.list.list'(sK10)),'const.pair.,_2'(s('type.list.list'(sK10),sK13),s('type.list.list'(sK10),sK14))) = s('type.pair.prod'('type.list.list'(sK10),'type.list.list'(sK10)),'const.sorting.PARTITION_2'(s(fun(sK10,bool),sK11),s('type.list.list'(sK10),sK12))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f207,plain,(
  s('type.pair.prod'('type.list.list'(sK10),'type.list.list'(sK10)),'const.pair.,_2'(s('type.list.list'(sK10),sK13),s('type.list.list'(sK10),sK14))) = s('type.pair.prod'('type.list.list'(sK10),'type.list.list'(sK10)),'const.sorting.PARTITION_2'(s(fun(sK10,bool),sK11),s('type.list.list'(sK10),sK12)))),
  inference(cnf_transformation,[],[f141])).
fof(f141,plain,(
  s('type.pair.prod'('type.list.list'(sK10),'type.list.list'(sK10)),'const.pair.,_2'(s('type.list.list'(sK10),sK13),s('type.list.list'(sK10),sK14))) = s('type.pair.prod'('type.list.list'(sK10),'type.list.list'(sK10)),'const.sorting.PARTITION_2'(s(fun(sK10,bool),sK11),s('type.list.list'(sK10),sK12))) & ~p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(sK10),sK12),s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),sK13),s('type.list.list'(sK10),sK14))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12,sK13,sK14])],[f100])).
fof(f100,plain,(
  ? [X0,X1,X2,X3,X4] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PARTITION_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) & ~p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))))))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ~! [X0,X1,X2,X3,X4] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PARTITION_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) => p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ~! [X0] : ! [X1,X2,X3,X4] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PARTITION_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2))) => p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10] : (s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),X10))) = s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X6)),'const.sorting.PARTITION_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),X8))) => p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),X10)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10] : (s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),X10))) = s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X6)),'const.sorting.PARTITION_2'(s(fun(X6,bool),X7),s('type.list.list'(X6),X8))) => p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),X10)))))))),
  file('thm.misc.PERM_PARTITION','thm.misc.PERM_PARTITION')).
fof(f5340,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.list.list'(sK10),'type.list.list'(sK10)),'const.pair.,_2'(s('type.list.list'(sK10),sK13),s('type.list.list'(sK10),sK14))) != s('type.pair.prod'('type.list.list'(sK10),'type.list.list'(sK10)),'const.pair.,_2'(s('type.list.list'(sK10),X0),s('type.list.list'(sK10),X1))) | p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(sK10),sK12),s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),X0),s('type.list.list'(sK10),X1))))))) ) | $spl2062),
  inference(cnf_transformation,[],[f5340_D])).
fof(f5340_D,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.list.list'(sK10),'type.list.list'(sK10)),'const.pair.,_2'(s('type.list.list'(sK10),sK13),s('type.list.list'(sK10),sK14))) != s('type.pair.prod'('type.list.list'(sK10),'type.list.list'(sK10)),'const.pair.,_2'(s('type.list.list'(sK10),X0),s('type.list.list'(sK10),X1))) | p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(sK10),sK12),s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),X0),s('type.list.list'(sK10),X1))))))) ) <=> ~$spl2062),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2062])])).
fof(f5333,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.list.list'(sK10),'type.list.list'(sK10)),'const.pair.,_2'(s('type.list.list'(sK10),sK13),s('type.list.list'(sK10),sK14))) != s('type.pair.prod'('type.list.list'(sK10),'type.list.list'(sK10)),'const.pair.,_2'(s('type.list.list'(sK10),X0),s('type.list.list'(sK10),X1))) | p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(sK10),sK12),s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),X0),s('type.list.list'(sK10),X1))))))) ) | ($spl2 | $spl628)),
  inference(superposition,[],[f1698,f359])).
fof(f371,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl14),
  inference(cnf_transformation,[],[f371_D])).
fof(f371_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f228,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.misc.PERM_PARTITION','thm.bool.EQ_CLAUSES|split|3')).
fof(f357,plain,(
  ~p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(sK10),sK12),s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),sK13),s('type.list.list'(sK10),sK14)))))) | $spl1),
  inference(cnf_transformation,[],[f357_D])).
fof(f357_D,plain,(
  ~p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(sK10),sK12),s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),sK13),s('type.list.list'(sK10),sK14)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f208,plain,(
  ~p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(sK10),sK12),s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),sK13),s('type.list.list'(sK10),sK14))))))),
  inference(cnf_transformation,[],[f141])).
fof(f465,plain,(
  s(bool,'F_0') = s(bool,'const.sorting.PERM_2'(s('type.list.list'(sK10),sK12),s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),sK13),s('type.list.list'(sK10),sK14))))) | $spl162),
  inference(cnf_transformation,[],[f465_D])).
fof(f465_D,plain,(
  s(bool,'F_0') = s(bool,'const.sorting.PERM_2'(s('type.list.list'(sK10),sK12),s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),sK13),s('type.list.list'(sK10),sK14))))) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f462,plain,(
  s(bool,'F_0') = s(bool,'const.sorting.PERM_2'(s('type.list.list'(sK10),sK12),s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),sK13),s('type.list.list'(sK10),sK14))))) | ($spl1 | $spl14)),
  inference(resolution,[],[f371,f357])).
fof(f364,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f364_D])).
fof(f364_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f362,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f212,f209])).
fof(f209,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.misc.PERM_PARTITION','thm.bool.TRUTH')).
fof(f212,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f42])).
fof(f42,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f15])).
fof(f15,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.misc.PERM_PARTITION','thm.bool.NOT_CLAUSES|split|2')).
fof(f7108,plain,(
  $false | ($spl7 | $spl162 | $spl2062)),
  inference(subsumption_resolution,[],[f7107,f364])).
fof(f7107,plain,(
  p(s(bool,'F_0')) | ($spl162 | $spl2062)),
  inference(forward_demodulation,[],[f7102,f465])).
fof(f7102,plain,(
  p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(sK10),sK12),s('type.list.list'(sK10),'const.list.APPEND_2'(s('type.list.list'(sK10),sK13),s('type.list.list'(sK10),sK14)))))) | $spl2062),
  inference(equality_resolution,[],[f5340])).
% SZS output end Proof for thm.misc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 311
% Passive clauses: 1240
% Generated clauses: 6787
% Final active clauses: 302
% Final passive clauses: 929
% Input formulas: 38
% Initial clauses: 142
% 
% Duplicate literals: 154
% Trivial inequalities: 23
% Fw subsumption resolutions: 624
% Fw demodulations: 275
% Bw demodulations: 4
% Condensations: 324
% Global subsumptions: 13
% 
% Simple tautologies: 186
% Equational tautologies: 17
% Forward subsumptions: 2347
% 
% Binary resolution: 2120
% Factoring: 190
% Forward superposition: 750
% Backward superposition: 862
% Self superposition: 28
% Equality factoring: 28
% Equality resolution: 6
% 
% Split clauses: 92
% Split components: 189
% SAT solver clauses: 1745
% SAT solver unit clauses: 159
% SAT solver binary clauses: 66
% SAT solver learnt clauses: 27
% SAT solver learnt literals: 10
% 
% Sat splits: 92
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1692
% TWLsolver calls for satisfiability: 1362
% 
% Memory used [KB]: 7164
% Time elapsed: 0.467 s
% ------------------------------
% ------------------------------
% Success in time 1.11 s
