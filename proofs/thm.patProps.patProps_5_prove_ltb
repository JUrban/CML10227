Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.patProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.patProps
% SZS output start Proof for thm.patProps
fof(f1600,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1599,f132,f241,f239,f237,f235,f233,f231,f1597,f616,f615,f614,f1598])).
fof(f1598,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f231,f133])).
fof(f133,plain,(
  ( ! [X10] : (s('type.patSem.v',sK6) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X10)))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  (s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',sK7))) | s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',sK8),s('type.list.list'('type.patSem.v'),sK9))) | s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),sK10),s('type.patLang.exp',sK11))) | s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),sK12),s('type.list.list'('type.patLang.exp'),sK13),s('type.num.num',sK14))) | s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',sK15))) | s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),sK16)))) & ! [X10] : s('type.patSem.v',sK6) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X10))) & ! [X8,X9] : s('type.patSem.v',sK6) != s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.patSem.v'),X9))) & ! [X6,X7] : s('type.patSem.v',sK6) != s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X6),s('type.patLang.exp',X7))) & ! [X3,X4,X5] : s('type.patSem.v',sK6) != s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X3),s('type.list.list'('type.patLang.exp'),X4),s('type.num.num',X5))) & ! [X2] : s('type.patSem.v',sK6) != s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X2))) & ! [X1] : s('type.patSem.v',sK6) != s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16])],[f89])).
fof(f89,plain,(
  ? [X0] : ((? [X20] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X20))) | ? [X18,X19] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X18),s('type.list.list'('type.patSem.v'),X19))) | ? [X16,X17] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X16),s('type.patLang.exp',X17))) | ? [X13,X14,X15] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X13),s('type.list.list'('type.patLang.exp'),X14),s('type.num.num',X15))) | ? [X12] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X12))) | ? [X11] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X11)))) & ! [X10] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X10))) & ! [X8,X9] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.patSem.v'),X9))) & ! [X6,X7] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X6),s('type.patLang.exp',X7))) & ! [X3,X4,X5] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X3),s('type.list.list'('type.patLang.exp'),X4),s('type.num.num',X5))) & ! [X2] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X2))) & ! [X1] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X1))))),
  inference(rectify,[],[f64])).
fof(f64,plain,(
  ? [X0] : ((? [X10] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X10))) | ? [X8,X9] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.patSem.v'),X9))) | ? [X6,X7] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X6),s('type.patLang.exp',X7))) | ? [X3,X4,X5] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X3),s('type.list.list'('type.patLang.exp'),X4),s('type.num.num',X5))) | ? [X2] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X2))) | ? [X1] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X1)))) & ! [X20] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X20))) & ! [X18,X19] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X18),s('type.list.list'('type.patSem.v'),X19))) & ! [X16,X17] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X16),s('type.patLang.exp',X17))) & ! [X13,X14,X15] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X13),s('type.list.list'('type.patLang.exp'),X14),s('type.num.num',X15))) & ! [X12] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X12))) & ! [X11] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X11))))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ? [X0] : ((? [X10] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X10))) | ? [X8,X9] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.patSem.v'),X9))) | ? [X6,X7] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X6),s('type.patLang.exp',X7))) | ? [X3,X4,X5] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X3),s('type.list.list'('type.patLang.exp'),X4),s('type.num.num',X5))) | ? [X2] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X2))) | ? [X1] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X1)))) & (! [X20] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X20))) & ! [X18,X19] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X18),s('type.list.list'('type.patSem.v'),X19))) & ! [X16,X17] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X16),s('type.patLang.exp',X17))) & ! [X13,X14,X15] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X13),s('type.list.list'('type.patLang.exp'),X14),s('type.num.num',X15))) & ! [X12] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X12))) & ! [X11] : s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X11)))))),
  inference(ennf_transformation,[],[f28])).
fof(f28,plain,(
  ~! [X0] : ((? [X10] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X10))) | ? [X8,X9] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.patSem.v'),X9))) | ? [X6,X7] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X6),s('type.patLang.exp',X7))) | ? [X3,X4,X5] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X3),s('type.list.list'('type.patLang.exp'),X4),s('type.num.num',X5))) | ? [X2] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X2))) | ? [X1] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X1)))) => (? [X20] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X20))) | ? [X18,X19] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X18),s('type.list.list'('type.patSem.v'),X19))) | ? [X16,X17] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X16),s('type.patLang.exp',X17))) | ? [X13,X14,X15] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X13),s('type.list.list'('type.patLang.exp'),X14),s('type.num.num',X15))) | ? [X12] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X12))) | ? [X11] : s('type.patSem.v',X0) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X11)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((? [X7] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X7))) | ? [X8,X9] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.patSem.v'),X9))) | ? [X10,X11] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X10),s('type.patLang.exp',X11))) | ? [X12,X13,X14] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X12),s('type.list.list'('type.patLang.exp'),X13),s('type.num.num',X14))) | ? [X15] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X15))) | ? [X9] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X9)))) => (? [X7] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X7))) | ? [X8,X9] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.patSem.v'),X9))) | ? [X10,X11] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X10),s('type.patLang.exp',X11))) | ? [X12,X13,X14] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X12),s('type.list.list'('type.patLang.exp'),X13),s('type.num.num',X14))) | ? [X15] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X15))) | ? [X9] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((? [X7] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X7))) | ? [X8,X9] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.patSem.v'),X9))) | ? [X10,X11] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X10),s('type.patLang.exp',X11))) | ? [X12,X13,X14] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X12),s('type.list.list'('type.patLang.exp'),X13),s('type.num.num',X14))) | ? [X15] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X15))) | ? [X9] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X9)))) => (? [X7] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X7))) | ? [X8,X9] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.patSem.v'),X9))) | ? [X10,X11] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X10),s('type.patLang.exp',X11))) | ? [X12,X13,X14] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X12),s('type.list.list'('type.patLang.exp'),X13),s('type.num.num',X14))) | ? [X15] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X15))) | ? [X9] : s('type.patSem.v',X6) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X9)))))),
  file('thm.patProps.patProps_5_prove_ltb','thm.patProps.patProps_5_prove_ltb')).
fof(f614,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f233,f134])).
fof(f134,plain,(
  ( ! [X8,X9] : (s('type.patSem.v',sK6) != s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X8),s('type.list.list'('type.patSem.v'),X9)))) )),
  inference(cnf_transformation,[],[f90])).
fof(f615,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f235,f135])).
fof(f135,plain,(
  ( ! [X6,X7] : (s('type.patSem.v',sK6) != s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X6),s('type.patLang.exp',X7)))) )),
  inference(cnf_transformation,[],[f90])).
fof(f616,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f241,f138])).
fof(f138,plain,(
  ( ! [X1] : (s('type.patSem.v',sK6) != s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X1)))) )),
  inference(cnf_transformation,[],[f90])).
fof(f1597,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f237,f136])).
fof(f136,plain,(
  ( ! [X4,X5,X3] : (s('type.patSem.v',sK6) != s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X3),s('type.list.list'('type.patLang.exp'),X4),s('type.num.num',X5)))) )),
  inference(cnf_transformation,[],[f90])).
fof(f231,plain,(
  s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',sK7))) | $spl0),
  inference(cnf_transformation,[],[f231_D])).
fof(f231_D,plain,(
  s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',sK7))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f233,plain,(
  s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',sK8),s('type.list.list'('type.patSem.v'),sK9))) | $spl2),
  inference(cnf_transformation,[],[f233_D])).
fof(f233_D,plain,(
  s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',sK8),s('type.list.list'('type.patSem.v'),sK9))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f235,plain,(
  s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),sK10),s('type.patLang.exp',sK11))) | $spl4),
  inference(cnf_transformation,[],[f235_D])).
fof(f235_D,plain,(
  s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),sK10),s('type.patLang.exp',sK11))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f237,plain,(
  s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),sK12),s('type.list.list'('type.patLang.exp'),sK13),s('type.num.num',sK14))) | $spl6),
  inference(cnf_transformation,[],[f237_D])).
fof(f237_D,plain,(
  s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),sK12),s('type.list.list'('type.patLang.exp'),sK13),s('type.num.num',sK14))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f239,plain,(
  s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',sK15))) | $spl8),
  inference(cnf_transformation,[],[f239_D])).
fof(f239_D,plain,(
  s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',sK15))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f241,plain,(
  s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),sK16))) | $spl10),
  inference(cnf_transformation,[],[f241_D])).
fof(f241_D,plain,(
  s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),sK16))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f132,plain,(
  s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),sK16))) | s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',sK15))) | s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),sK12),s('type.list.list'('type.patLang.exp'),sK13),s('type.num.num',sK14))) | s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),sK10),s('type.patLang.exp',sK11))) | s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',sK8),s('type.list.list'('type.patSem.v'),sK9))) | s('type.patSem.v',sK6) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',sK7)))),
  inference(cnf_transformation,[],[f90])).
fof(f1599,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f239,f137])).
fof(f137,plain,(
  ( ! [X2] : (s('type.patSem.v',sK6) != s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f90])).
% SZS output end Proof for thm.patProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 154
% Passive clauses: 432
% Generated clauses: 1461
% Final active clauses: 154
% Final passive clauses: 238
% Input formulas: 26
% Initial clauses: 97
% 
% Duplicate literals: 37
% Trivial inequalities: 13
% Fw subsumption resolutions: 125
% 
% Simple tautologies: 55
% Equational tautologies: 7
% Forward subsumptions: 755
% 
% Binary resolution: 851
% Factoring: 196
% Forward superposition: 44
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 7
% 
% Split clauses: 43
% Split components: 91
% SAT solver clauses: 78
% SAT solver unit clauses: 10
% SAT solver binary clauses: 29
% SAT solver learnt clauses: 1
% 
% Sat splits: 43
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 77
% TWLsolver calls for satisfiability: 57
% 
% Memory used [KB]: 1151
% Time elapsed: 0.036 s
% ------------------------------
% ------------------------------
% Success in time 0.04 s
