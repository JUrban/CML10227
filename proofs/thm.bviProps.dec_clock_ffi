Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bviProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bviProps
% SZS output start Proof for thm.bviProps
fof(f2643,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f2642])).
fof(f2642,plain,(
  s('type.ffi.ffi_state'(sK0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(sK0),sK1))) != s('type.ffi.ffi_state'(sK0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(sK0),sK1)))),
  inference(superposition,[],[f99,f2608])).
fof(f2608,plain,(
  ( ! [X14,X12,X13] : (s('type.ffi.ffi_state'(X12),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X12),X13))) = s('type.ffi.ffi_state'(X12),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X12),'const.bviSem.dec_clock_2'(s('type.num.num',X14),s('type.bviSem.state'(X12),X13)))))) )),
  inference(superposition,[],[f106,f123])).
fof(f123,plain,(
  ( ! [X2,X0,X1] : (s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num',X1),s('type.bviSem.state'(X0),X2))) = s('type.bviSem.state'(X0),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))),s('type.num.num',X1))))),s('type.bviSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1,X2] : s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num',X1),s('type.bviSem.state'(X0),X2))) = s('type.bviSem.state'(X0),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))),s('type.num.num',X1))))),s('type.bviSem.state'(X0),X2)))),
  inference(flattening,[],[f74])).
fof(f74,plain,(
  ! [X0] : ! [X1,X2] : s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num',X1),s('type.bviSem.state'(X0),X2))) = s('type.bviSem.state'(X0),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))),s('type.num.num',X1))))),s('type.bviSem.state'(X0),X2)))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6] : ! [X9,X7] : s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num',X9),s('type.bviSem.state'(X6),X7))) = s('type.bviSem.state'(X6),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X6),X7))),s('type.num.num',X9))))),s('type.bviSem.state'(X6),X7)))),
  file('thm.bviProps.dec_clock_ffi','thm.bviSem.dec_clock_def')).
fof(f106,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.bviSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.bviSem.state'(X0),X1)))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0] : ! [X1,X2] : s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.bviSem.state'(X0),X1)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X10] : ! [X7,X11] : s('type.ffi.ffi_state'(X10),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X10),X7))) = s('type.ffi.ffi_state'(X10),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X10),'const.bviSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X11),s('type.bviSem.state'(X10),X7)))))),
  file('thm.bviProps.dec_clock_ffi','thm.bviSem.bviSem_35_prove_ltb')).
fof(f99,plain,(
  s('type.ffi.ffi_state'(sK0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(sK0),sK1))) != s('type.ffi.ffi_state'(sK0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(sK0),'const.bviSem.dec_clock_2'(s('type.num.num',sK2),s('type.bviSem.state'(sK0),sK1)))))),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  s('type.ffi.ffi_state'(sK0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(sK0),sK1))) != s('type.ffi.ffi_state'(sK0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(sK0),'const.bviSem.dec_clock_2'(s('type.num.num',sK2),s('type.bviSem.state'(sK0),sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f94])).
fof(f94,plain,(
  ? [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),X1)))))),
  inference(ennf_transformation,[],[f36])).
fof(f36,plain,(
  ~! [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),X1)))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ~! [X0] : ! [X1,X2] : s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.ffi.ffi_state'(X6),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X6),X7))) = s('type.ffi.ffi_state'(X6),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num',X8),s('type.bviSem.state'(X6),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.ffi.ffi_state'(X6),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X6),X7))) = s('type.ffi.ffi_state'(X6),'const.bviSem.state_ffi_1'(s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num',X8),s('type.bviSem.state'(X6),X7)))))),
  file('thm.bviProps.dec_clock_ffi','thm.bviProps.dec_clock_ffi')).
% SZS output end Proof for thm.bviProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 44
% Passive clauses: 493
% Generated clauses: 2437
% Final active clauses: 42
% Final passive clauses: 438
% Input formulas: 33
% Initial clauses: 34
% 
% Duplicate literals: 291
% Trivial inequalities: 32
% Fw subsumption resolutions: 100
% 
% Simple tautologies: 91
% Equational tautologies: 80
% Forward subsumptions: 990
% 
% Binary resolution: 12
% Forward superposition: 722
% Backward superposition: 812
% Self superposition: 223
% Equality factoring: 202
% Equality resolution: 1
% 
% Split clauses: 114
% Split components: 228
% SAT solver clauses: 367
% SAT solver unit clauses: 217
% SAT solver binary clauses: 82
% 
% Sat splits: 114
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 367
% TWLsolver calls for satisfiability: 11
% 
% Memory used [KB]: 1663
% Time elapsed: 0.077 s
% ------------------------------
% ------------------------------
% Success in time 0.081 s
