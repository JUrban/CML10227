Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.benchmark
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.benchmark
% SZS output start Proof for thm.benchmark
fof(f4880,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4879,f224,f413,f411,f409,f407,f405,f403,f4599,f4598,f4597,f4026,f4878])).
fof(f4878,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f413,f230])).
fof(f230,plain,(
  ( ! [X6,X4,X2,X5,X3] : (s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) != s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),X2),s('type.benchmark.queue'(sK12),X3),s('type.benchmark.digit'(sK12),'const.benchmark.Two_2'(s('type.benchmark.times'(sK12),X4),s('type.benchmark.times'(sK12),X5))))),s('type.benchmark.times'(sK12),X6)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  (s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.Zero_0'))),s('type.benchmark.times'(sK12),sK14))) | s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.One_1'(s('type.benchmark.times'(sK12),sK15))))),s('type.benchmark.times'(sK12),sK16))) | s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.Two_2'(s('type.benchmark.times'(sK12),sK17),s('type.benchmark.times'(sK12),sK18))))),s('type.benchmark.times'(sK12),sK19))) | s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),sK20),s('type.benchmark.queue'(sK12),sK21),s('type.benchmark.digit'(sK12),'const.benchmark.Zero_0'))),s('type.benchmark.times'(sK12),sK22))) | s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),sK23),s('type.benchmark.queue'(sK12),sK24),s('type.benchmark.digit'(sK12),'const.benchmark.One_1'(s('type.benchmark.times'(sK12),sK25))))),s('type.benchmark.times'(sK12),sK26))) | s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),sK27),s('type.benchmark.queue'(sK12),sK28),s('type.benchmark.digit'(sK12),'const.benchmark.Two_2'(s('type.benchmark.times'(sK12),sK29),s('type.benchmark.times'(sK12),sK30))))),s('type.benchmark.times'(sK12),sK31)))) & ! [X19] : s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) != s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.Zero_0'))),s('type.benchmark.times'(sK12),X19))) & ! [X17,X18] : s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) != s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.One_1'(s('type.benchmark.times'(sK12),X17))))),s('type.benchmark.times'(sK12),X18))) & ! [X14,X15,X16] : s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) != s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),X14),s('type.benchmark.queue'(sK12),X15),s('type.benchmark.digit'(sK12),'const.benchmark.Zero_0'))),s('type.benchmark.times'(sK12),X16))) & ! [X10,X11,X12,X13] : s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) != s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),X10),s('type.benchmark.queue'(sK12),X11),s('type.benchmark.digit'(sK12),'const.benchmark.One_1'(s('type.benchmark.times'(sK12),X12))))),s('type.benchmark.times'(sK12),X13))) & ! [X7,X8,X9] : s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) != s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.Two_2'(s('type.benchmark.times'(sK12),X7),s('type.benchmark.times'(sK12),X8))))),s('type.benchmark.times'(sK12),X9))) & ! [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) != s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),X2),s('type.benchmark.queue'(sK12),X3),s('type.benchmark.digit'(sK12),'const.benchmark.Two_2'(s('type.benchmark.times'(sK12),X4),s('type.benchmark.times'(sK12),X5))))),s('type.benchmark.times'(sK12),X6)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31])],[f138])).
fof(f138,plain,(
  ? [X0,X1] : ((? [X37] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X37))) | ? [X35,X36] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X35))))),s('type.benchmark.times'(X0),X36))) | ? [X32,X33,X34] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X32),s('type.benchmark.times'(X0),X33))))),s('type.benchmark.times'(X0),X34))) | ? [X29,X30,X31] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X29),s('type.benchmark.queue'(X0),X30),s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X31))) | ? [X25,X26,X27,X28] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X25),s('type.benchmark.queue'(X0),X26),s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X27))))),s('type.benchmark.times'(X0),X28))) | ? [X20,X21,X22,X23,X24] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X20),s('type.benchmark.queue'(X0),X21),s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X22),s('type.benchmark.times'(X0),X23))))),s('type.benchmark.times'(X0),X24)))) & ! [X19] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X19))) & ! [X17,X18] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X17))))),s('type.benchmark.times'(X0),X18))) & ! [X14,X15,X16] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X14),s('type.benchmark.queue'(X0),X15),s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X16))) & ! [X10,X11,X12,X13] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X10),s('type.benchmark.queue'(X0),X11),s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X12))))),s('type.benchmark.times'(X0),X13))) & ! [X7,X8,X9] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X7),s('type.benchmark.times'(X0),X8))))),s('type.benchmark.times'(X0),X9))) & ! [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X2),s('type.benchmark.queue'(X0),X3),s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X4),s('type.benchmark.times'(X0),X5))))),s('type.benchmark.times'(X0),X6))))),
  inference(rectify,[],[f98])).
fof(f98,plain,(
  ? [X0,X1] : ((? [X19] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X19))) | ? [X17,X18] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X17))))),s('type.benchmark.times'(X0),X18))) | ? [X14,X15,X16] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X14),s('type.benchmark.times'(X0),X15))))),s('type.benchmark.times'(X0),X16))) | ? [X11,X12,X13] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X11),s('type.benchmark.queue'(X0),X12),s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X13))) | ? [X7,X8,X9,X10] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X7),s('type.benchmark.queue'(X0),X8),s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X9))))),s('type.benchmark.times'(X0),X10))) | ? [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X2),s('type.benchmark.queue'(X0),X3),s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X4),s('type.benchmark.times'(X0),X5))))),s('type.benchmark.times'(X0),X6)))) & ! [X37] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X37))) & ! [X35,X36] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X35))))),s('type.benchmark.times'(X0),X36))) & ! [X32,X33,X34] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X32),s('type.benchmark.queue'(X0),X33),s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X34))) & ! [X28,X29,X30,X31] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X28),s('type.benchmark.queue'(X0),X29),s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X30))))),s('type.benchmark.times'(X0),X31))) & ! [X25,X26,X27] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X25),s('type.benchmark.times'(X0),X26))))),s('type.benchmark.times'(X0),X27))) & ! [X20,X21,X22,X23,X24] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X20),s('type.benchmark.queue'(X0),X21),s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X22),s('type.benchmark.times'(X0),X23))))),s('type.benchmark.times'(X0),X24))))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ? [X0,X1] : ((? [X19] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X19))) | ? [X17,X18] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X17))))),s('type.benchmark.times'(X0),X18))) | ? [X14,X15,X16] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X14),s('type.benchmark.times'(X0),X15))))),s('type.benchmark.times'(X0),X16))) | ? [X11,X12,X13] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X11),s('type.benchmark.queue'(X0),X12),s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X13))) | ? [X7,X8,X9,X10] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X7),s('type.benchmark.queue'(X0),X8),s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X9))))),s('type.benchmark.times'(X0),X10))) | ? [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X2),s('type.benchmark.queue'(X0),X3),s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X4),s('type.benchmark.times'(X0),X5))))),s('type.benchmark.times'(X0),X6)))) & (! [X37] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X37))) & ! [X35,X36] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X35))))),s('type.benchmark.times'(X0),X36))) & ! [X32,X33,X34] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X32),s('type.benchmark.queue'(X0),X33),s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X34))) & ! [X28,X29,X30,X31] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X28),s('type.benchmark.queue'(X0),X29),s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X30))))),s('type.benchmark.times'(X0),X31))) & ! [X25,X26,X27] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X25),s('type.benchmark.times'(X0),X26))))),s('type.benchmark.times'(X0),X27))) & ! [X20,X21,X22,X23,X24] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) != s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X20),s('type.benchmark.queue'(X0),X21),s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X22),s('type.benchmark.times'(X0),X23))))),s('type.benchmark.times'(X0),X24)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : ((? [X19] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X19))) | ? [X17,X18] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X17))))),s('type.benchmark.times'(X0),X18))) | ? [X14,X15,X16] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X14),s('type.benchmark.times'(X0),X15))))),s('type.benchmark.times'(X0),X16))) | ? [X11,X12,X13] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X11),s('type.benchmark.queue'(X0),X12),s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X13))) | ? [X7,X8,X9,X10] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X7),s('type.benchmark.queue'(X0),X8),s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X9))))),s('type.benchmark.times'(X0),X10))) | ? [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X2),s('type.benchmark.queue'(X0),X3),s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X4),s('type.benchmark.times'(X0),X5))))),s('type.benchmark.times'(X0),X6)))) => (? [X37] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X37))) | ? [X35,X36] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X35))))),s('type.benchmark.times'(X0),X36))) | ? [X32,X33,X34] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X32),s('type.benchmark.queue'(X0),X33),s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X34))) | ? [X28,X29,X30,X31] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X28),s('type.benchmark.queue'(X0),X29),s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X30))))),s('type.benchmark.times'(X0),X31))) | ? [X25,X26,X27] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X25),s('type.benchmark.times'(X0),X26))))),s('type.benchmark.times'(X0),X27))) | ? [X20,X21,X22,X23,X24] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X20),s('type.benchmark.queue'(X0),X21),s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X22),s('type.benchmark.times'(X0),X23))))),s('type.benchmark.times'(X0),X24)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1] : ((? [X19] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X19))) | ? [X17,X18] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X17))))),s('type.benchmark.times'(X0),X18))) | ? [X14,X15,X16] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X14),s('type.benchmark.times'(X0),X15))))),s('type.benchmark.times'(X0),X16))) | ? [X11,X12,X13] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X11),s('type.benchmark.queue'(X0),X12),s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X13))) | ? [X7,X8,X9,X10] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X7),s('type.benchmark.queue'(X0),X8),s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X9))))),s('type.benchmark.times'(X0),X10))) | ? [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X2),s('type.benchmark.queue'(X0),X3),s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X4),s('type.benchmark.times'(X0),X5))))),s('type.benchmark.times'(X0),X6)))) => (? [X37] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X37))) | ? [X35,X36] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X35))))),s('type.benchmark.times'(X0),X36))) | ? [X32,X33,X34] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X32),s('type.benchmark.queue'(X0),X33),s('type.benchmark.digit'(X0),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X0),X34))) | ? [X28,X29,X30,X31] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X28),s('type.benchmark.queue'(X0),X29),s('type.benchmark.digit'(X0),'const.benchmark.One_1'(s('type.benchmark.times'(X0),X30))))),s('type.benchmark.times'(X0),X31))) | ? [X25,X26,X27] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X25),s('type.benchmark.times'(X0),X26))))),s('type.benchmark.times'(X0),X27))) | ? [X20,X21,X22,X23,X24] : s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),X1) = s('type.pair.prod'('type.benchmark.queue'(X0),'type.benchmark.times'(X0)),'const.pair.,_2'(s('type.benchmark.queue'(X0),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X0),X20),s('type.benchmark.queue'(X0),X21),s('type.benchmark.digit'(X0),'const.benchmark.Two_2'(s('type.benchmark.times'(X0),X22),s('type.benchmark.times'(X0),X23))))),s('type.benchmark.times'(X0),X24)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((? [X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X6),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X6),X8))) | ? [X9,X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X6),'const.benchmark.One_1'(s('type.benchmark.times'(X6),X9))))),s('type.benchmark.times'(X6),X8))) | ? [X10,X11,X12] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X6),'const.benchmark.Two_2'(s('type.benchmark.times'(X6),X10),s('type.benchmark.times'(X6),X11))))),s('type.benchmark.times'(X6),X12))) | ? [X13,X14,X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X6),X13),s('type.benchmark.queue'(X6),X14),s('type.benchmark.digit'(X6),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X6),X8))) | ? [X13,X14,X9,X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X6),X13),s('type.benchmark.queue'(X6),X14),s('type.benchmark.digit'(X6),'const.benchmark.One_1'(s('type.benchmark.times'(X6),X9))))),s('type.benchmark.times'(X6),X8))) | ? [X15,X16,X17,X18,X19] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X6),X15),s('type.benchmark.queue'(X6),X16),s('type.benchmark.digit'(X6),'const.benchmark.Two_2'(s('type.benchmark.times'(X6),X17),s('type.benchmark.times'(X6),X18))))),s('type.benchmark.times'(X6),X19)))) => (? [X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X6),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X6),X8))) | ? [X9,X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X6),'const.benchmark.One_1'(s('type.benchmark.times'(X6),X9))))),s('type.benchmark.times'(X6),X8))) | ? [X13,X14,X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X6),X13),s('type.benchmark.queue'(X6),X14),s('type.benchmark.digit'(X6),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X6),X8))) | ? [X13,X14,X9,X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X6),X13),s('type.benchmark.queue'(X6),X14),s('type.benchmark.digit'(X6),'const.benchmark.One_1'(s('type.benchmark.times'(X6),X9))))),s('type.benchmark.times'(X6),X8))) | ? [X10,X11,X12] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X6),'const.benchmark.Two_2'(s('type.benchmark.times'(X6),X10),s('type.benchmark.times'(X6),X11))))),s('type.benchmark.times'(X6),X12))) | ? [X15,X16,X17,X18,X19] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X6),X15),s('type.benchmark.queue'(X6),X16),s('type.benchmark.digit'(X6),'const.benchmark.Two_2'(s('type.benchmark.times'(X6),X17),s('type.benchmark.times'(X6),X18))))),s('type.benchmark.times'(X6),X19)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((? [X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X6),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X6),X8))) | ? [X9,X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X6),'const.benchmark.One_1'(s('type.benchmark.times'(X6),X9))))),s('type.benchmark.times'(X6),X8))) | ? [X10,X11,X12] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X6),'const.benchmark.Two_2'(s('type.benchmark.times'(X6),X10),s('type.benchmark.times'(X6),X11))))),s('type.benchmark.times'(X6),X12))) | ? [X13,X14,X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X6),X13),s('type.benchmark.queue'(X6),X14),s('type.benchmark.digit'(X6),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X6),X8))) | ? [X13,X14,X9,X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X6),X13),s('type.benchmark.queue'(X6),X14),s('type.benchmark.digit'(X6),'const.benchmark.One_1'(s('type.benchmark.times'(X6),X9))))),s('type.benchmark.times'(X6),X8))) | ? [X15,X16,X17,X18,X19] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X6),X15),s('type.benchmark.queue'(X6),X16),s('type.benchmark.digit'(X6),'const.benchmark.Two_2'(s('type.benchmark.times'(X6),X17),s('type.benchmark.times'(X6),X18))))),s('type.benchmark.times'(X6),X19)))) => (? [X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X6),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X6),X8))) | ? [X9,X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X6),'const.benchmark.One_1'(s('type.benchmark.times'(X6),X9))))),s('type.benchmark.times'(X6),X8))) | ? [X13,X14,X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X6),X13),s('type.benchmark.queue'(X6),X14),s('type.benchmark.digit'(X6),'const.benchmark.Zero_0'))),s('type.benchmark.times'(X6),X8))) | ? [X13,X14,X9,X8] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X6),X13),s('type.benchmark.queue'(X6),X14),s('type.benchmark.digit'(X6),'const.benchmark.One_1'(s('type.benchmark.times'(X6),X9))))),s('type.benchmark.times'(X6),X8))) | ? [X10,X11,X12] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(X6),'const.benchmark.Two_2'(s('type.benchmark.times'(X6),X10),s('type.benchmark.times'(X6),X11))))),s('type.benchmark.times'(X6),X12))) | ? [X15,X16,X17,X18,X19] : s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),X7) = s('type.pair.prod'('type.benchmark.queue'(X6),'type.benchmark.times'(X6)),'const.pair.,_2'(s('type.benchmark.queue'(X6),'const.benchmark.Deep_3'(s('type.benchmark.digit'(X6),X15),s('type.benchmark.queue'(X6),X16),s('type.benchmark.digit'(X6),'const.benchmark.Two_2'(s('type.benchmark.times'(X6),X17),s('type.benchmark.times'(X6),X18))))),s('type.benchmark.times'(X6),X19)))))),
  file('thm.benchmark.benchmark_66_prove_ltb','thm.benchmark.benchmark_66_prove_ltb')).
fof(f4026,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f405,f226])).
fof(f226,plain,(
  ( ! [X17,X18] : (s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) != s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.One_1'(s('type.benchmark.times'(sK12),X17))))),s('type.benchmark.times'(sK12),X18)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4597,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f407,f229])).
fof(f229,plain,(
  ( ! [X8,X7,X9] : (s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) != s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.Two_2'(s('type.benchmark.times'(sK12),X7),s('type.benchmark.times'(sK12),X8))))),s('type.benchmark.times'(sK12),X9)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4598,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f409,f227])).
fof(f227,plain,(
  ( ! [X14,X15,X16] : (s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) != s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),X14),s('type.benchmark.queue'(sK12),X15),s('type.benchmark.digit'(sK12),'const.benchmark.Zero_0'))),s('type.benchmark.times'(sK12),X16)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4599,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f403,f225])).
fof(f225,plain,(
  ( ! [X19] : (s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) != s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.Zero_0'))),s('type.benchmark.times'(sK12),X19)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f403,plain,(
  s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.Zero_0'))),s('type.benchmark.times'(sK12),sK14))) | $spl0),
  inference(cnf_transformation,[],[f403_D])).
fof(f403_D,plain,(
  s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.Zero_0'))),s('type.benchmark.times'(sK12),sK14))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f405,plain,(
  s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.One_1'(s('type.benchmark.times'(sK12),sK15))))),s('type.benchmark.times'(sK12),sK16))) | $spl2),
  inference(cnf_transformation,[],[f405_D])).
fof(f405_D,plain,(
  s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.One_1'(s('type.benchmark.times'(sK12),sK15))))),s('type.benchmark.times'(sK12),sK16))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f407,plain,(
  s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.Two_2'(s('type.benchmark.times'(sK12),sK17),s('type.benchmark.times'(sK12),sK18))))),s('type.benchmark.times'(sK12),sK19))) | $spl4),
  inference(cnf_transformation,[],[f407_D])).
fof(f407_D,plain,(
  s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.Two_2'(s('type.benchmark.times'(sK12),sK17),s('type.benchmark.times'(sK12),sK18))))),s('type.benchmark.times'(sK12),sK19))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f409,plain,(
  s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),sK20),s('type.benchmark.queue'(sK12),sK21),s('type.benchmark.digit'(sK12),'const.benchmark.Zero_0'))),s('type.benchmark.times'(sK12),sK22))) | $spl6),
  inference(cnf_transformation,[],[f409_D])).
fof(f409_D,plain,(
  s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),sK20),s('type.benchmark.queue'(sK12),sK21),s('type.benchmark.digit'(sK12),'const.benchmark.Zero_0'))),s('type.benchmark.times'(sK12),sK22))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f411,plain,(
  s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),sK23),s('type.benchmark.queue'(sK12),sK24),s('type.benchmark.digit'(sK12),'const.benchmark.One_1'(s('type.benchmark.times'(sK12),sK25))))),s('type.benchmark.times'(sK12),sK26))) | $spl8),
  inference(cnf_transformation,[],[f411_D])).
fof(f411_D,plain,(
  s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),sK23),s('type.benchmark.queue'(sK12),sK24),s('type.benchmark.digit'(sK12),'const.benchmark.One_1'(s('type.benchmark.times'(sK12),sK25))))),s('type.benchmark.times'(sK12),sK26))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f413,plain,(
  s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),sK27),s('type.benchmark.queue'(sK12),sK28),s('type.benchmark.digit'(sK12),'const.benchmark.Two_2'(s('type.benchmark.times'(sK12),sK29),s('type.benchmark.times'(sK12),sK30))))),s('type.benchmark.times'(sK12),sK31))) | $spl10),
  inference(cnf_transformation,[],[f413_D])).
fof(f413_D,plain,(
  s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),sK27),s('type.benchmark.queue'(sK12),sK28),s('type.benchmark.digit'(sK12),'const.benchmark.Two_2'(s('type.benchmark.times'(sK12),sK29),s('type.benchmark.times'(sK12),sK30))))),s('type.benchmark.times'(sK12),sK31))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f224,plain,(
  s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),sK27),s('type.benchmark.queue'(sK12),sK28),s('type.benchmark.digit'(sK12),'const.benchmark.Two_2'(s('type.benchmark.times'(sK12),sK29),s('type.benchmark.times'(sK12),sK30))))),s('type.benchmark.times'(sK12),sK31))) | s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),sK23),s('type.benchmark.queue'(sK12),sK24),s('type.benchmark.digit'(sK12),'const.benchmark.One_1'(s('type.benchmark.times'(sK12),sK25))))),s('type.benchmark.times'(sK12),sK26))) | s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),sK20),s('type.benchmark.queue'(sK12),sK21),s('type.benchmark.digit'(sK12),'const.benchmark.Zero_0'))),s('type.benchmark.times'(sK12),sK22))) | s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.Two_2'(s('type.benchmark.times'(sK12),sK17),s('type.benchmark.times'(sK12),sK18))))),s('type.benchmark.times'(sK12),sK19))) | s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.One_1'(s('type.benchmark.times'(sK12),sK15))))),s('type.benchmark.times'(sK12),sK16))) | s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) = s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Shallow_1'(s('type.benchmark.digit'(sK12),'const.benchmark.Zero_0'))),s('type.benchmark.times'(sK12),sK14)))),
  inference(cnf_transformation,[],[f139])).
fof(f4879,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f411,f228])).
fof(f228,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),sK13) != s('type.pair.prod'('type.benchmark.queue'(sK12),'type.benchmark.times'(sK12)),'const.pair.,_2'(s('type.benchmark.queue'(sK12),'const.benchmark.Deep_3'(s('type.benchmark.digit'(sK12),X10),s('type.benchmark.queue'(sK12),X11),s('type.benchmark.digit'(sK12),'const.benchmark.One_1'(s('type.benchmark.times'(sK12),X12))))),s('type.benchmark.times'(sK12),X13)))) )),
  inference(cnf_transformation,[],[f139])).
% SZS output end Proof for thm.benchmark
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 391
% Passive clauses: 1558
% Generated clauses: 4649
% Final active clauses: 391
% Final passive clauses: 972
% Input formulas: 37
% Initial clauses: 174
% 
% Duplicate literals: 154
% Trivial inequalities: 29
% Fw subsumption resolutions: 308
% 
% Simple tautologies: 145
% Equational tautologies: 32
% Forward subsumptions: 2409
% 
% Binary resolution: 2884
% Factoring: 794
% Forward superposition: 174
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 111
% Split components: 227
% SAT solver clauses: 219
% SAT solver unit clauses: 12
% SAT solver binary clauses: 45
% SAT solver learnt clauses: 1
% 
% Sat splits: 111
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 218
% TWLsolver calls for satisfiability: 182
% 
% Memory used [KB]: 2558
% Time elapsed: 0.170 s
% ------------------------------
% ------------------------------
% Success in time 0.19 s
