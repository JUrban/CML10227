Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.conProps
% (46148)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 147
% Passive clauses: 1720
% Generated clauses: 24723
% Final active clauses: 127
% Final passive clauses: 1331
% Input formulas: 23
% Initial clauses: 40
% 
% Duplicate literals: 1296
% Trivial inequalities: 331
% Fw subsumption resolutions: 3279
% Fw demodulations: 2767
% Bw demodulations: 11
% 
% Simple tautologies: 455
% Equational tautologies: 32
% Forward subsumptions: 13225
% 
% Binary resolution: 120
% Forward superposition: 8658
% Backward superposition: 8785
% Self superposition: 283
% Equality factoring: 92
% Equality resolution: 31
% 
% Split clauses: 1076
% Split components: 2169
% SAT solver clauses: 1793
% SAT solver unit clauses: 48
% SAT solver binary clauses: 309
% 
% Sat splits: 1076
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 1789
% TWLsolver calls for satisfiability: 167
% 
% Memory used [KB]: 16247
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.conProps
% (46179)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 89
% Passive clauses: 402
% Generated clauses: 12420
% Final active clauses: 80
% Final passive clauses: 299
% Input formulas: 23
% Initial clauses: 40
% 
% Duplicate literals: 931
% Trivial inequalities: 163
% Fw subsumption resolutions: 967
% Fw demodulations: 775
% Bw demodulations: 15
% Condensations: 2006
% Global subsumptions: 4
% 
% Simple tautologies: 241
% Equational tautologies: 50
% Forward subsumptions: 5807
% 
% Binary resolution: 33
% Forward superposition: 3632
% Backward superposition: 4784
% Self superposition: 258
% Equality factoring: 163
% Equality resolution: 20
% 
% Split clauses: 189
% Split components: 386
% SAT solver clauses: 865
% SAT solver unit clauses: 51
% SAT solver binary clauses: 46
% SAT solver learnt clauses: 8
% 
% Sat splits: 189
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 849
% TWLsolver calls for satisfiability: 181
% 
% Memory used [KB]: 10874
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.conProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.conProps
% SZS output start Proof for thm.conProps
fof(f2606,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f2587])).
fof(f2587,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',sK0))) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',sK0)))),
  inference(superposition,[],[f1497,f1599])).
fof(f1599,plain,(
  ( ! [X2,X3] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2))),s('type.conSem.environment',X3)))))) )),
  inference(superposition,[],[f104,f114])).
fof(f114,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(forward_demodulation,[],[f110,f109])).
fof(f109,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X10,X8] : ! [X9,X11] : s(X8,X9) = s(X8,'const.combin.K_2'(s(X8,X9),s(X10,X11)))),
  file('thm.conProps.with_same_v','thm.combin.K_THM')).
fof(f110,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X8,X10] : ! [X16,X17] : s(X8,'const.combin.K_2'(s(X8,X16),s(X10,X17))) = s(X8,happ(s(fun(X10,X8),'const.combin.K_1'(s(X8,X16))),s(X10,X17)))),
  file('thm.conProps.with_same_v','ARITY_1_2_const.combin.K')).
fof(f104,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.conSem.environment',X1))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1)))))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1] : s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.conSem.environment',X1))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X12,X13] : s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X12),s('type.conSem.environment',X13))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X12),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X13)))))),
  file('thm.conProps.with_same_v','thm.conSem.conSem_53_prove_ltb')).
fof(f1497,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',sK0))) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',sK0))))),s('type.conSem.environment',sK0)))))),
  inference(unit_resulting_resolution,[],[f72,f102,f108])).
fof(f108,plain,(
  ( ! [X0,X1] : (s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0))) != s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1))) | s('type.conSem.environment',X0) = s('type.conSem.environment',X1) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1)))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1] : ((s('type.conSem.environment',X0) != s('type.conSem.environment',X1) | (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1))) & s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1))))) & (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1))) | s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0))) != s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1))) | s('type.conSem.environment',X0) = s('type.conSem.environment',X1)))),
  inference(flattening,[],[f69])).
fof(f69,plain,(
  ! [X0,X1] : ((s('type.conSem.environment',X0) != s('type.conSem.environment',X1) | (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1))) & s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1))))) & ((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1))) | s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0))) != s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1)))) | s('type.conSem.environment',X0) = s('type.conSem.environment',X1)))),
  inference(nnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : (s('type.conSem.environment',X0) = s('type.conSem.environment',X1) <=> (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X1))) & s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X0))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1)))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X14,X15] : (s('type.conSem.environment',X14) = s('type.conSem.environment',X15) <=> (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X15))) & s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X14))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X15)))))),
  file('thm.conProps.with_same_v','thm.conSem.environment_component_equality')).
fof(f102,plain,(
  ( ! [X0,X1] : (s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.conSem.environment',X1)))))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1] : s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X1))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.conSem.environment',X1)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X12,X13] : s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment',X13))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.conSem.environment_exh_1'(s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X12),s('type.conSem.environment',X13)))))),
  file('thm.conProps.with_same_v','thm.conSem.conSem_52_prove_ltb')).
fof(f72,plain,(
  s('type.conSem.environment',sK0) != s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',sK0))))),s('type.conSem.environment',sK0)))),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  s('type.conSem.environment',sK0) != s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',sK0))))),s('type.conSem.environment',sK0)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f51])).
fof(f51,plain,(
  ? [X0] : s('type.conSem.environment',X0) != s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))))),s('type.conSem.environment',X0)))),
  inference(ennf_transformation,[],[f25])).
fof(f25,plain,(
  ~! [X0] : s('type.conSem.environment',X0) = s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X0))))),s('type.conSem.environment',X0)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.conSem.environment',X6) = s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X6))))),s('type.conSem.environment',X6)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.conSem.environment',X6) = s('type.conSem.environment','const.conSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.conSem.environment_v_1'(s('type.conSem.environment',X6))))),s('type.conSem.environment',X6)))),
  file('thm.conProps.with_same_v','thm.conProps.with_same_v')).
% SZS output end Proof for thm.conProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 44
% Passive clauses: 120
% Generated clauses: 2483
% Final active clauses: 41
% Final passive clauses: 55
% Input formulas: 23
% Initial clauses: 40
% 
% Duplicate literals: 143
% Trivial inequalities: 42
% Fw subsumption resolutions: 109
% Fw demodulations: 200
% Bw demodulations: 15
% Condensations: 297
% Global subsumptions: 2
% 
% Simple tautologies: 56
% Equational tautologies: 43
% Forward subsumptions: 1418
% Fw demodulations to eq. taut.: 8
% 
% Unit resulting resolution: 133
% Forward superposition: 767
% Backward superposition: 613
% Self superposition: 77
% Equality factoring: 31
% Equality resolution: 6
% 
% Split clauses: 21
% Split components: 47
% SAT solver clauses: 171
% SAT solver unit clauses: 21
% SAT solver binary clauses: 58
% 
% Sat splits: 21
% Sat splitting refutations: 5
% 
% Memory used [KB]: 2174
% Time elapsed: 0.150 s
% ------------------------------
% ------------------------------
% Success in time 1.481 s
