Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvp_to_wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvp_to_wordProps
% SZS output start Proof for thm.bvp_to_wordProps
fof(f4799,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4798,f224,f410,f408,f406,f404,f402,f4796,f4731,f4730,f4797])).
fof(f4797,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f406,f229])).
fof(f229,plain,(
  ( ! [X6,X4,X2,X5,X3] : (s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X3))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),X4),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X5),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),X6)))))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  (s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK14))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK15),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK16),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK17))))))) | s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK19),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK20),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK21))))))) | s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',sK22),s('type.list.list'('type.bvlSem.v'),sK23))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK24),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK25),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK26))))))) | s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',sK27))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK28),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK29),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK30))))))) | s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',sK31))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK32),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK33),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK34)))))))) & ! [X19,X20,X21,X22] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X19))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),X20),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X21),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),X22))))))) & ! [X15,X16,X17,X18] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X15))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),X16),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X17),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),X18))))))) & ! [X11,X12,X13,X14] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X11))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),X12),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X13),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),X14))))))) & ! [X7,X8,X9,X10] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X7))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X9),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),X10))))))) & ! [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X3))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),X4),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X5),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),X6)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34])],[f138])).
fof(f138,plain,(
  ? [X0,X1] : ((? [X40,X41,X42,X43] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X40))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X41),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X42),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X43))))))) | ? [X36,X37,X38,X39] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X36))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X37),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X38),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X39))))))) | ? [X31,X32,X33,X34,X35] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X31),s('type.list.list'('type.bvlSem.v'),X32))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X33),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X34),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X35))))))) | ? [X27,X28,X29,X30] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X27))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X28),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X29),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X30))))))) | ? [X23,X24,X25,X26] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X23))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X24),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X25),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X26)))))))) & ! [X19,X20,X21,X22] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X19))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X20),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X21),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X22))))))) & ! [X15,X16,X17,X18] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X15))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X16),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X17),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X18))))))) & ! [X11,X12,X13,X14] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X11))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X12),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X13),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X14))))))) & ! [X7,X8,X9,X10] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X7))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X9),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X10))))))) & ! [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.bvlSem.v'),X3))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X4),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X5),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X6))))))))),
  inference(rectify,[],[f98])).
fof(f98,plain,(
  ? [X0,X1] : ((? [X19,X20,X21,X22] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X19))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X20),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X21),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X22))))))) | ? [X15,X16,X17,X18] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X15))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X16),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X17),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X18))))))) | ? [X10,X11,X12,X13,X14] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X10),s('type.list.list'('type.bvlSem.v'),X11))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X12),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X13),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X14))))))) | ? [X6,X7,X8,X9] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X6))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X7),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X8),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X9))))))) | ? [X2,X3,X4,X5] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X2))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X3),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X4),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X5)))))))) & ! [X40,X41,X42,X43] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X40))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X41),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X42),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X43))))))) & ! [X36,X37,X38,X39] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X36))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X37),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X38),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X39))))))) & ! [X32,X33,X34,X35] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X32))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X33),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X34),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X35))))))) & ! [X28,X29,X30,X31] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X28))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X29),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X30),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X31))))))) & ! [X23,X24,X25,X26,X27] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X23),s('type.list.list'('type.bvlSem.v'),X24))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X25),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X26),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X27))))))))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ? [X0,X1] : ((? [X19,X20,X21,X22] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X19))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X20),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X21),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X22))))))) | ? [X15,X16,X17,X18] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X15))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X16),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X17),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X18))))))) | ? [X10,X11,X12,X13,X14] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X10),s('type.list.list'('type.bvlSem.v'),X11))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X12),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X13),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X14))))))) | ? [X6,X7,X8,X9] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X6))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X7),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X8),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X9))))))) | ? [X2,X3,X4,X5] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X2))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X3),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X4),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X5)))))))) & (! [X40,X41,X42,X43] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X40))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X41),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X42),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X43))))))) & ! [X36,X37,X38,X39] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X36))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X37),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X38),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X39))))))) & ! [X32,X33,X34,X35] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X32))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X33),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X34),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X35))))))) & ! [X28,X29,X30,X31] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X28))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X29),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X30),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X31))))))) & ! [X23,X24,X25,X26,X27] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X23),s('type.list.list'('type.bvlSem.v'),X24))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X25),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X26),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X27)))))))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : ((? [X19,X20,X21,X22] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X19))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X20),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X21),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X22))))))) | ? [X15,X16,X17,X18] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X15))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X16),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X17),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X18))))))) | ? [X10,X11,X12,X13,X14] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X10),s('type.list.list'('type.bvlSem.v'),X11))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X12),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X13),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X14))))))) | ? [X6,X7,X8,X9] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X6))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X7),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X8),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X9))))))) | ? [X2,X3,X4,X5] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X2))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X3),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X4),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X5)))))))) => (? [X40,X41,X42,X43] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X40))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X41),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X42),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X43))))))) | ? [X36,X37,X38,X39] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X36))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X37),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X38),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X39))))))) | ? [X32,X33,X34,X35] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X32))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X33),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X34),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X35))))))) | ? [X28,X29,X30,X31] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X28))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X29),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X30),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X31))))))) | ? [X23,X24,X25,X26,X27] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X23),s('type.list.list'('type.bvlSem.v'),X24))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X25),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X26),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X27)))))))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1] : ((? [X19,X20,X21,X22] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X19))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X20),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X21),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X22))))))) | ? [X15,X16,X17,X18] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X15))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X16),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X17),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X18))))))) | ? [X10,X11,X12,X13,X14] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X10),s('type.list.list'('type.bvlSem.v'),X11))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X12),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X13),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X14))))))) | ? [X6,X7,X8,X9] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X6))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X7),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X8),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X9))))))) | ? [X2,X3,X4,X5] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X2))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X3),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X4),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X5)))))))) => (? [X40,X41,X42,X43] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X40))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X41),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X42),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X43))))))) | ? [X36,X37,X38,X39] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X36))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X37),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X38),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X39))))))) | ? [X32,X33,X34,X35] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X32))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X33),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X34),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X35))))))) | ? [X28,X29,X30,X31] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X28))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X29),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X30),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X31))))))) | ? [X23,X24,X25,X26,X27] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),X1) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X23),s('type.list.list'('type.bvlSem.v'),X24))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X0)),X25),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X26),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X0),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X0))))),X27)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((? [X8,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X8))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X12,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X12))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X13,X14,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X13),s('type.list.list'('type.bvlSem.v'),X14))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X13,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X13))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X13,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X13))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11)))))))) => (? [X8,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X8))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X12,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X12))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X13,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X13))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X13,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X13))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X13,X14,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X13),s('type.list.list'('type.bvlSem.v'),X14))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((? [X8,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X8))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X12,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X12))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X13,X14,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X13),s('type.list.list'('type.bvlSem.v'),X14))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X13,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X13))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X13,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X13))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11)))))))) => (? [X8,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X8))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X12,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X12))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X13,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X13))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X13,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X13))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11))))))) | ? [X13,X14,X9,X10,X11] : s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),X7) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',X13),s('type.list.list'('type.bvlSem.v'),X14))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(X6)),X9),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X10),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(X6))))),X11)))))))))),
  file('thm.bvp_to_wordProps.bvp_to_wordProps_55_prove_ltb','thm.bvp_to_wordProps.bvp_to_wordProps_55_prove_ltb')).
fof(f4730,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f402,f225])).
fof(f225,plain,(
  ( ! [X21,X19,X22,X20] : (s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',X19))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),X20),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X21),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),X22)))))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4731,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f410,f228])).
fof(f228,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',X7))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X9),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),X10)))))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4796,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f404,f226])).
fof(f226,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X15))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),X16),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X17),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),X18)))))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f402,plain,(
  s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK14))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK15),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK16),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK17))))))) | $spl0),
  inference(cnf_transformation,[],[f402_D])).
fof(f402_D,plain,(
  s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK14))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK15),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK16),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK17))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f404,plain,(
  s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK19),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK20),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK21))))))) | $spl2),
  inference(cnf_transformation,[],[f404_D])).
fof(f404_D,plain,(
  s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK19),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK20),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK21))))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f406,plain,(
  s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',sK22),s('type.list.list'('type.bvlSem.v'),sK23))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK24),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK25),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK26))))))) | $spl4),
  inference(cnf_transformation,[],[f406_D])).
fof(f406_D,plain,(
  s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',sK22),s('type.list.list'('type.bvlSem.v'),sK23))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK24),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK25),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK26))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f408,plain,(
  s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',sK27))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK28),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK29),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK30))))))) | $spl6),
  inference(cnf_transformation,[],[f408_D])).
fof(f408_D,plain,(
  s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',sK27))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK28),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK29),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK30))))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f410,plain,(
  s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',sK31))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK32),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK33),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK34))))))) | $spl8),
  inference(cnf_transformation,[],[f410_D])).
fof(f410_D,plain,(
  s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',sK31))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK32),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK33),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK34))))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f224,plain,(
  s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.RefPtr_1'(s('type.num.num',sK31))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK32),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK33),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK34))))))) | s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',sK27))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK28),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK29),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK30))))))) | s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Block_2'(s('type.num.num',sK22),s('type.list.list'('type.bvlSem.v'),sK23))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK24),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK25),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK26))))))) | s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK19),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK20),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK21))))))) | s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) = s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.Number_1'(s('type.integer.int',sK14))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),sK15),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),sK16),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),sK17)))))))),
  inference(cnf_transformation,[],[f139])).
fof(f4798,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f408,f227])).
fof(f227,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),sK13) != s('type.pair.prod'('type.bvlSem.v','type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))))),'const.pair.,_2'(s('type.bvlSem.v','const.bvlSem.CodePtr_1'(s('type.num.num',X11))),s('type.pair.prod'('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))))),'const.pair.,_2'(s('type.copying_gc.heap_address'('type.wordSem.word_loc'(sK12)),X12),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.num.num'),'type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12)))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.num.num'),X13),s('type.list.list'('type.copying_gc.heap_element'('type.wordSem.word_loc'(sK12),'type.pair.prod'('type.bvp_to_wordProps.tag','type.list.list'('type.wordSem.word_loc'(sK12))))),X14)))))))) )),
  inference(cnf_transformation,[],[f139])).
% SZS output end Proof for thm.bvp_to_wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 381
% Passive clauses: 1555
% Generated clauses: 4568
% Final active clauses: 381
% Final passive clauses: 985
% Input formulas: 37
% Initial clauses: 173
% 
% Duplicate literals: 153
% Trivial inequalities: 29
% Fw subsumption resolutions: 298
% 
% Simple tautologies: 145
% Equational tautologies: 30
% Forward subsumptions: 2353
% 
% Binary resolution: 2835
% Factoring: 777
% Forward superposition: 174
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 106
% Split components: 216
% SAT solver clauses: 204
% SAT solver unit clauses: 11
% SAT solver binary clauses: 45
% SAT solver learnt clauses: 1
% 
% Sat splits: 106
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 203
% TWLsolver calls for satisfiability: 172
% 
% Memory used [KB]: 2686
% Time elapsed: 0.226 s
% ------------------------------
% ------------------------------
% Success in time 0.25 s
